#pragma once

#include "processors/tools/windowComparator.h"
#include "util/math.hh"

using namespace MathTools;

class Envelope {
private:
	float expoCurve[2048] = {
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
		0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000001, 0.000001,
		0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001,
		0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001,
		0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001,
		0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001,
		0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000001, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002,
		0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002,
		0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002, 0.000002,
		0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003,
		0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000003, 0.000004, 0.000004, 0.000004,
		0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004, 0.000004,
		0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005, 0.000005,
		0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000006, 0.000007,
		0.000007, 0.000007, 0.000007, 0.000007, 0.000007, 0.000007, 0.000007, 0.000007, 0.000008, 0.000008, 0.000008,
		0.000008, 0.000008, 0.000008, 0.000008, 0.000008, 0.000009, 0.000009, 0.000009, 0.000009, 0.000009, 0.000009,
		0.000009, 0.000010, 0.000010, 0.000010, 0.000010, 0.000010, 0.000010, 0.000011, 0.000011, 0.000011, 0.000011,
		0.000011, 0.000011, 0.000012, 0.000012, 0.000012, 0.000012, 0.000012, 0.000013, 0.000013, 0.000013, 0.000013,
		0.000013, 0.000014, 0.000014, 0.000014, 0.000014, 0.000014, 0.000015, 0.000015, 0.000015, 0.000015, 0.000016,
		0.000016, 0.000016, 0.000016, 0.000017, 0.000017, 0.000017, 0.000017, 0.000018, 0.000018, 0.000018, 0.000018,
		0.000019, 0.000019, 0.000019, 0.000020, 0.000020, 0.000020, 0.000020, 0.000021, 0.000021, 0.000021, 0.000022,
		0.000022, 0.000022, 0.000023, 0.000023, 0.000023, 0.000024, 0.000024, 0.000024, 0.000025, 0.000025, 0.000025,
		0.000026, 0.000026, 0.000026, 0.000027, 0.000027, 0.000028, 0.000028, 0.000028, 0.000029, 0.000029, 0.000030,
		0.000030, 0.000030, 0.000031, 0.000031, 0.000032, 0.000032, 0.000033, 0.000033, 0.000034, 0.000034, 0.000035,
		0.000035, 0.000036, 0.000036, 0.000037, 0.000037, 0.000038, 0.000038, 0.000039, 0.000039, 0.000040, 0.000040,
		0.000041, 0.000041, 0.000042, 0.000042, 0.000043, 0.000044, 0.000044, 0.000045, 0.000045, 0.000046, 0.000047,
		0.000047, 0.000048, 0.000048, 0.000049, 0.000050, 0.000050, 0.000051, 0.000052, 0.000053, 0.000053, 0.000054,
		0.000055, 0.000055, 0.000056, 0.000057, 0.000058, 0.000058, 0.000059, 0.000060, 0.000061, 0.000061, 0.000062,
		0.000063, 0.000064, 0.000065, 0.000065, 0.000066, 0.000067, 0.000068, 0.000069, 0.000070, 0.000071, 0.000072,
		0.000073, 0.000073, 0.000074, 0.000075, 0.000076, 0.000077, 0.000078, 0.000079, 0.000080, 0.000081, 0.000082,
		0.000083, 0.000084, 0.000085, 0.000087, 0.000088, 0.000089, 0.000090, 0.000091, 0.000092, 0.000093, 0.000094,
		0.000096, 0.000097, 0.000098, 0.000099, 0.000100, 0.000102, 0.000103, 0.000104, 0.000105, 0.000107, 0.000108,
		0.000109, 0.000111, 0.000112, 0.000113, 0.000115, 0.000116, 0.000117, 0.000119, 0.000120, 0.000122, 0.000123,
		0.000125, 0.000126, 0.000128, 0.000129, 0.000131, 0.000132, 0.000134, 0.000136, 0.000137, 0.000139, 0.000140,
		0.000142, 0.000144, 0.000145, 0.000147, 0.000149, 0.000151, 0.000152, 0.000154, 0.000156, 0.000158, 0.000160,
		0.000162, 0.000163, 0.000165, 0.000167, 0.000169, 0.000171, 0.000173, 0.000175, 0.000177, 0.000179, 0.000181,
		0.000183, 0.000185, 0.000188, 0.000190, 0.000192, 0.000194, 0.000196, 0.000199, 0.000201, 0.000203, 0.000205,
		0.000208, 0.000210, 0.000212, 0.000215, 0.000217, 0.000220, 0.000222, 0.000225, 0.000227, 0.000230, 0.000232,
		0.000235, 0.000238, 0.000240, 0.000243, 0.000246, 0.000248, 0.000251, 0.000254, 0.000257, 0.000259, 0.000262,
		0.000265, 0.000268, 0.000271, 0.000274, 0.000277, 0.000280, 0.000283, 0.000286, 0.000289, 0.000293, 0.000296,
		0.000299, 0.000302, 0.000306, 0.000309, 0.000312, 0.000316, 0.000319, 0.000322, 0.000326, 0.000329, 0.000333,
		0.000336, 0.000340, 0.000344, 0.000347, 0.000351, 0.000355, 0.000359, 0.000362, 0.000366, 0.000370, 0.000374,
		0.000378, 0.000382, 0.000386, 0.000390, 0.000394, 0.000398, 0.000403, 0.000407, 0.000411, 0.000415, 0.000420,
		0.000424, 0.000429, 0.000433, 0.000438, 0.000442, 0.000447, 0.000451, 0.000456, 0.000461, 0.000466, 0.000470,
		0.000475, 0.000480, 0.000485, 0.000490, 0.000495, 0.000500, 0.000505, 0.000510, 0.000516, 0.000521, 0.000526,
		0.000532, 0.000537, 0.000542, 0.000548, 0.000553, 0.000559, 0.000565, 0.000570, 0.000576, 0.000582, 0.000588,
		0.000594, 0.000600, 0.000606, 0.000612, 0.000618, 0.000624, 0.000630, 0.000637, 0.000643, 0.000649, 0.000656,
		0.000662, 0.000669, 0.000676, 0.000682, 0.000689, 0.000696, 0.000703, 0.000710, 0.000717, 0.000724, 0.000731,
		0.000738, 0.000745, 0.000752, 0.000760, 0.000767, 0.000775, 0.000782, 0.000790, 0.000797, 0.000805, 0.000813,
		0.000821, 0.000829, 0.000837, 0.000845, 0.000853, 0.000861, 0.000870, 0.000878, 0.000886, 0.000895, 0.000904,
		0.000912, 0.000921, 0.000930, 0.000939, 0.000948, 0.000957, 0.000966, 0.000975, 0.000984, 0.000993, 0.001003,
		0.001012, 0.001022, 0.001032, 0.001041, 0.001051, 0.001061, 0.001071, 0.001081, 0.001091, 0.001101, 0.001112,
		0.001122, 0.001133, 0.001143, 0.001154, 0.001164, 0.001175, 0.001186, 0.001197, 0.001208, 0.001220, 0.001231,
		0.001242, 0.001254, 0.001265, 0.001277, 0.001289, 0.001300, 0.001312, 0.001324, 0.001337, 0.001349, 0.001361,
		0.001374, 0.001386, 0.001399, 0.001412, 0.001424, 0.001437, 0.001450, 0.001464, 0.001477, 0.001490, 0.001504,
		0.001517, 0.001531, 0.001545, 0.001559, 0.001573, 0.001587, 0.001601, 0.001615, 0.001630, 0.001644, 0.001659,
		0.001674, 0.001689, 0.001704, 0.001719, 0.001734, 0.001750, 0.001765, 0.001781, 0.001797, 0.001813, 0.001829,
		0.001845, 0.001861, 0.001878, 0.001894, 0.001911, 0.001928, 0.001945, 0.001962, 0.001979, 0.001996, 0.002014,
		0.002031, 0.002049, 0.002067, 0.002085, 0.002103, 0.002121, 0.002140, 0.002158, 0.002177, 0.002196, 0.002215,
		0.002234, 0.002253, 0.002273, 0.002292, 0.002312, 0.002332, 0.002352, 0.002372, 0.002392, 0.002413, 0.002434,
		0.002454, 0.002475, 0.002496, 0.002518, 0.002539, 0.002561, 0.002583, 0.002605, 0.002627, 0.002649, 0.002671,
		0.002694, 0.002717, 0.002740, 0.002763, 0.002786, 0.002809, 0.002833, 0.002857, 0.002881, 0.002905, 0.002929,
		0.002954, 0.002979, 0.003004, 0.003029, 0.003054, 0.003079, 0.003105, 0.003131, 0.003157, 0.003183, 0.003209,
		0.003236, 0.003263, 0.003290, 0.003317, 0.003344, 0.003372, 0.003400, 0.003428, 0.003456, 0.003484, 0.003513,
		0.003542, 0.003571, 0.003600, 0.003629, 0.003659, 0.003689, 0.003719, 0.003749, 0.003780, 0.003811, 0.003841,
		0.003873, 0.003904, 0.003936, 0.003968, 0.004000, 0.004032, 0.004064, 0.004097, 0.004130, 0.004164, 0.004197,
		0.004231, 0.004265, 0.004299, 0.004333, 0.004368, 0.004403, 0.004438, 0.004474, 0.004509, 0.004545, 0.004581,
		0.004618, 0.004655, 0.004692, 0.004729, 0.004766, 0.004804, 0.004842, 0.004880, 0.004919, 0.004958, 0.004997,
		0.005036, 0.005076, 0.005116, 0.005156, 0.005196, 0.005237, 0.005278, 0.005319, 0.005361, 0.005403, 0.005445,
		0.005488, 0.005530, 0.005573, 0.005617, 0.005661, 0.005704, 0.005749, 0.005793, 0.005838, 0.005883, 0.005929,
		0.005975, 0.006021, 0.006067, 0.006114, 0.006161, 0.006208, 0.006256, 0.006304, 0.006352, 0.006401, 0.006450,
		0.006500, 0.006549, 0.006599, 0.006650, 0.006700, 0.006751, 0.006803, 0.006855, 0.006907, 0.006959, 0.007012,
		0.007065, 0.007118, 0.007172, 0.007227, 0.007281, 0.007336, 0.007391, 0.007447, 0.007503, 0.007560, 0.007616,
		0.007674, 0.007731, 0.007789, 0.007847, 0.007906, 0.007965, 0.008025, 0.008085, 0.008145, 0.008206, 0.008267,
		0.008328, 0.008390, 0.008452, 0.008515, 0.008578, 0.008642, 0.008706, 0.008770, 0.008835, 0.008900, 0.008966,
		0.009032, 0.009098, 0.009165, 0.009233, 0.009300, 0.009369, 0.009437, 0.009506, 0.009576, 0.009646, 0.009717,
		0.009788, 0.009859, 0.009931, 0.010003, 0.010076, 0.010149, 0.010223, 0.010297, 0.010372, 0.010447, 0.010523,
		0.010599, 0.010676, 0.010753, 0.010830, 0.010908, 0.010987, 0.011066, 0.011146, 0.011226, 0.011306, 0.011388,
		0.011469, 0.011551, 0.011634, 0.011717, 0.011801, 0.011885, 0.011970, 0.012056, 0.012142, 0.012228, 0.012315,
		0.012402, 0.012491, 0.012579, 0.012668, 0.012758, 0.012848, 0.012939, 0.013031, 0.013123, 0.013215, 0.013309,
		0.013402, 0.013497, 0.013592, 0.013687, 0.013783, 0.013880, 0.013977, 0.014075, 0.014174, 0.014273, 0.014373,
		0.014473, 0.014574, 0.014676, 0.014778, 0.014881, 0.014984, 0.015088, 0.015193, 0.015299, 0.015405, 0.015511,
		0.015619, 0.015727, 0.015836, 0.015945, 0.016055, 0.016166, 0.016277, 0.016389, 0.016502, 0.016615, 0.016730,
		0.016844, 0.016960, 0.017076, 0.017193, 0.017311, 0.017429, 0.017548, 0.017668, 0.017788, 0.017910, 0.018032,
		0.018154, 0.018278, 0.018402, 0.018527, 0.018653, 0.018779, 0.018906, 0.019034, 0.019163, 0.019292, 0.019423,
		0.019554, 0.019686, 0.019818, 0.019952, 0.020086, 0.020221, 0.020357, 0.020493, 0.020631, 0.020769, 0.020908,
		0.021048, 0.021189, 0.021330, 0.021473, 0.021616, 0.021760, 0.021905, 0.022051, 0.022198, 0.022345, 0.022494,
		0.022643, 0.022793, 0.022944, 0.023096, 0.023249, 0.023402, 0.023557, 0.023712, 0.023869, 0.024026, 0.024184,
		0.024344, 0.024504, 0.024665, 0.024827, 0.024990, 0.025153, 0.025318, 0.025484, 0.025651, 0.025818, 0.025987,
		0.026157, 0.026327, 0.026499, 0.026672, 0.026845, 0.027020, 0.027195, 0.027372, 0.027550, 0.027728, 0.027908,
		0.028089, 0.028270, 0.028453, 0.028637, 0.028822, 0.029008, 0.029195, 0.029383, 0.029572, 0.029762, 0.029953,
		0.030146, 0.030339, 0.030534, 0.030730, 0.030926, 0.031124, 0.031323, 0.031523, 0.031725, 0.031927, 0.032131,
		0.032335, 0.032541, 0.032748, 0.032957, 0.033166, 0.033377, 0.033588, 0.033801, 0.034015, 0.034231, 0.034447,
		0.034665, 0.034884, 0.035104, 0.035326, 0.035548, 0.035772, 0.035997, 0.036224, 0.036451, 0.036680, 0.036911,
		0.037142, 0.037375, 0.037609, 0.037844, 0.038081, 0.038319, 0.038558, 0.038799, 0.039041, 0.039284, 0.039529,
		0.039775, 0.040022, 0.040271, 0.040521, 0.040772, 0.041025, 0.041279, 0.041535, 0.041792, 0.042051, 0.042310,
		0.042572, 0.042834, 0.043098, 0.043364, 0.043631, 0.043900, 0.044169, 0.044441, 0.044714, 0.044988, 0.045264,
		0.045541, 0.045820, 0.046101, 0.046383, 0.046666, 0.046951, 0.047237, 0.047525, 0.047815, 0.048106, 0.048399,
		0.048693, 0.048989, 0.049287, 0.049586, 0.049887, 0.050189, 0.050493, 0.050798, 0.051106, 0.051414, 0.051725,
		0.052037, 0.052351, 0.052666, 0.052984, 0.053303, 0.053623, 0.053945, 0.054269, 0.054595, 0.054923, 0.055252,
		0.055583, 0.055916, 0.056250, 0.056586, 0.056924, 0.057264, 0.057606, 0.057949, 0.058294, 0.058642, 0.058990,
		0.059341, 0.059694, 0.060048, 0.060404, 0.060763, 0.061123, 0.061485, 0.061848, 0.062214, 0.062582, 0.062951,
		0.063323, 0.063696, 0.064072, 0.064449, 0.064829, 0.065210, 0.065593, 0.065978, 0.066366, 0.066755, 0.067146,
		0.067540, 0.067935, 0.068333, 0.068732, 0.069134, 0.069537, 0.069943, 0.070351, 0.070761, 0.071173, 0.071587,
		0.072004, 0.072422, 0.072843, 0.073266, 0.073691, 0.074118, 0.074547, 0.074979, 0.075412, 0.075848, 0.076287,
		0.076727, 0.077170, 0.077615, 0.078062, 0.078512, 0.078963, 0.079418, 0.079874, 0.080333, 0.080794, 0.081257,
		0.081723, 0.082191, 0.082662, 0.083135, 0.083610, 0.084088, 0.084568, 0.085051, 0.085536, 0.086023, 0.086513,
		0.087006, 0.087500, 0.087998, 0.088498, 0.089000, 0.089505, 0.090012, 0.090522, 0.091035, 0.091550, 0.092068,
		0.092588, 0.093111, 0.093637, 0.094165, 0.094696, 0.095229, 0.095765, 0.096304, 0.096846, 0.097390, 0.097937,
		0.098486, 0.099039, 0.099594, 0.100152, 0.100712, 0.101276, 0.101842, 0.102411, 0.102982, 0.103557, 0.104135,
		0.104715, 0.105298, 0.105884, 0.106473, 0.107065, 0.107660, 0.108257, 0.108858, 0.109462, 0.110068, 0.110678,
		0.111290, 0.111906, 0.112524, 0.113146, 0.113770, 0.114398, 0.115029, 0.115663, 0.116300, 0.116940, 0.117583,
		0.118229, 0.118878, 0.119531, 0.120187, 0.120846, 0.121508, 0.122173, 0.122842, 0.123513, 0.124188, 0.124867,
		0.125548, 0.126233, 0.126922, 0.127613, 0.128308, 0.129006, 0.129708, 0.130413, 0.131121, 0.131833, 0.132548,
		0.133267, 0.133989, 0.134714, 0.135443, 0.136176, 0.136912, 0.137652, 0.138395, 0.139141, 0.139891, 0.140645,
		0.141403, 0.142164, 0.142928, 0.143697, 0.144469, 0.145244, 0.146024, 0.146807, 0.147593, 0.148384, 0.149178,
		0.149976, 0.150778, 0.151583, 0.152393, 0.153206, 0.154023, 0.154844, 0.155669, 0.156497, 0.157330, 0.158166,
		0.159007, 0.159851, 0.160700, 0.161552, 0.162408, 0.163269, 0.164133, 0.165002, 0.165874, 0.166751, 0.167632,
		0.168516, 0.169405, 0.170299, 0.171196, 0.172097, 0.173003, 0.173913, 0.174827, 0.175746, 0.176668, 0.177595,
		0.178527, 0.179462, 0.180402, 0.181347, 0.182295, 0.183248, 0.184206, 0.185168, 0.186134, 0.187105, 0.188081,
		0.189061, 0.190045, 0.191034, 0.192027, 0.193025, 0.194028, 0.195035, 0.196047, 0.197064, 0.198085, 0.199111,
		0.200142, 0.201177, 0.202217, 0.203262, 0.204312, 0.205366, 0.206425, 0.207489, 0.208558, 0.209632, 0.210711,
		0.211795, 0.212883, 0.213977, 0.215075, 0.216179, 0.217287, 0.218401, 0.219520, 0.220643, 0.221772, 0.222906,
		0.224045, 0.225189, 0.226339, 0.227493, 0.228653, 0.229818, 0.230988, 0.232164, 0.233345, 0.234531, 0.235723,
		0.236920, 0.238122, 0.239330, 0.240543, 0.241761, 0.242985, 0.244215, 0.245450, 0.246690, 0.247936, 0.249188,
		0.250445, 0.251708, 0.252977, 0.254251, 0.255531, 0.256817, 0.258108, 0.259405, 0.260708, 0.262017, 0.263331,
		0.264651, 0.265978, 0.267310, 0.268648, 0.269992, 0.271342, 0.272697, 0.274059, 0.275427, 0.276801, 0.278181,
		0.279567, 0.280959, 0.282358, 0.283762, 0.285173, 0.286590, 0.288013, 0.289443, 0.290878, 0.292320, 0.293769,
		0.295223, 0.296684, 0.298152, 0.299626, 0.301106, 0.302593, 0.304086, 0.305586, 0.307093, 0.308606, 0.310126,
		0.311652, 0.313185, 0.314724, 0.316271, 0.317824, 0.319383, 0.320950, 0.322523, 0.324104, 0.325691, 0.327285,
		0.328885, 0.330493, 0.332108, 0.333730, 0.335358, 0.336994, 0.338637, 0.340287, 0.341944, 0.343608, 0.345280,
		0.346958, 0.348644, 0.350337, 0.352038, 0.353745, 0.355460, 0.357183, 0.358913, 0.360650, 0.362395, 0.364147,
		0.365906, 0.367673, 0.369448, 0.371231, 0.373020, 0.374818, 0.376623, 0.378436, 0.380257, 0.382085, 0.383922,
		0.385766, 0.387618, 0.389477, 0.391345, 0.393221, 0.395104, 0.396996, 0.398896, 0.400803, 0.402719, 0.404643,
		0.406575, 0.408515, 0.410463, 0.412420, 0.414385, 0.416358, 0.418339, 0.420329, 0.422327, 0.424334, 0.426349,
		0.428373, 0.430405, 0.432445, 0.434494, 0.436552, 0.438619, 0.440694, 0.442777, 0.444870, 0.446971, 0.449081,
		0.451200, 0.453328, 0.455464, 0.457610, 0.459764, 0.461928, 0.464100, 0.466282, 0.468473, 0.470672, 0.472881,
		0.475099, 0.477327, 0.479563, 0.481809, 0.484064, 0.486329, 0.488603, 0.490886, 0.493179, 0.495481, 0.497793,
		0.500114, 0.502445, 0.504785, 0.507136, 0.509496, 0.511865, 0.514245, 0.516634, 0.519033, 0.521442, 0.523860,
		0.526289, 0.528728, 0.531177, 0.533635, 0.536104, 0.538583, 0.541072, 0.543571, 0.546081, 0.548601, 0.551131,
		0.553671, 0.556222, 0.558783, 0.561355, 0.563937, 0.566530, 0.569133, 0.571747, 0.574371, 0.577007, 0.579652,
		0.582309, 0.584976, 0.587655, 0.590344, 0.593044, 0.595755, 0.598476, 0.601209, 0.603953, 0.606708, 0.609475,
		0.612252, 0.615040, 0.617840, 0.620651, 0.623474, 0.626308, 0.629153, 0.632010, 0.634878, 0.637757, 0.640649,
		0.643552, 0.646466, 0.649392, 0.652330, 0.655280, 0.658242, 0.661215, 0.664200, 0.667198, 0.670207, 0.673228,
		0.676261, 0.679307, 0.682365, 0.685434, 0.688516, 0.691611, 0.694717, 0.697836, 0.700968, 0.704111, 0.707268,
		0.710437, 0.713618, 0.716812, 0.720019, 0.723238, 0.726470, 0.729715, 0.732973, 0.736244, 0.739528, 0.742824,
		0.746134, 0.749456, 0.752792, 0.756141, 0.759503, 0.762879, 0.766267, 0.769669, 0.773085, 0.776514, 0.779956,
		0.783412, 0.786881, 0.790364, 0.793861, 0.797371, 0.800895, 0.804433, 0.807985, 0.811551, 0.815130, 0.818724,
		0.822331, 0.825953, 0.829589, 0.833239, 0.836903, 0.840582, 0.844274, 0.847982, 0.851703, 0.855439, 0.859190,
		0.862955, 0.866735, 0.870529, 0.874339, 0.878163, 0.882001, 0.885855, 0.889723, 0.893607, 0.897506, 0.901419,
		0.905348, 0.909292, 0.913251, 0.917225, 0.921215, 0.925220, 0.929240, 0.933276, 0.937328, 0.941395, 0.945478,
		0.949576, 0.953690, 0.957820, 0.961966, 0.966128, 0.970305, 0.974499, 0.978709, 0.982935, 0.987177, 0.991435,
		0.995709, 1.000000};
	int stage = 0;
	int sampleRate = 48000;
	uint32_t phaccu = 0;
	uint32_t lastPhaccu = 0;
	uint32_t increment = 0;
	static constexpr uint32_t max_ = 0xFFFFFFFF;
	float envTimes[4] = {1000, 1000, 1000, 1000};
	float sustainLevel = 0.5f;
	float lastSample = 0;
	float envOut = 0;
	float attackCurve = 0;
	float decayCurve = 0;
	float releaseCurve = 0;
	bool holdEnable = true;

	bool lastGate;
	WindowComparator gateInput;

	float calcRise(float curve)
	{
		float rise = 0;
		auto linearCurve = (float)phaccu / (float)max_;
		float interpVal = 0.0f;
		if (curve <= 0.5f) {
			auto expoRise = expoCurve[phaccu >> 21];
			interpVal = curve * 2.0f;
			rise = interpolate(expoRise, linearCurve, interpVal);
		} else {
			interpVal = curve * 2.0f - 1.0f;
			auto logRise = 1.0f - expoCurve[(max_ - phaccu) >> 21];
			rise = interpolate(linearCurve, logRise, interpVal);
		}

		return (rise);
	}

	float calcFall(float fallFrom, float fallTo, float curve)
	{
		float fall = 0;
		auto linearCurve = map_value((float)phaccu / (float)max_, 0.0f, 1.0f, fallFrom, fallTo);

		float interpVal = 0.0f;
		if (curve <= 0.5f) {
			auto expoFall = map_value(expoCurve[(max_ - phaccu) >> 21], 1.0f, 0.0f, fallFrom, fallTo);
			interpVal = curve * 2.0f;
			fall = interpolate(expoFall, linearCurve, interpVal);
		} else {
			interpVal = curve * 2.0f - 1.0f;
			auto logFall = map_value(expoCurve[phaccu >> 21], 0.0f, 1.0f, fallFrom, fallTo);
			fall = interpolate(linearCurve, logFall, interpVal);
		}
		return fall;
	}

public:
	bool sustainEnable = true;
	Envelope() {}
	float update(float input)
	{
		lastGate = gateInput.get_output();
		gateInput.update(input);
		if (gateInput.get_output() > lastGate) {
			phaccu = 0;
			stage = 0;
		}
		if (gateInput.get_output() < lastGate) {
			if (sustainEnable) {
				phaccu = 0;
				stage = 4;
			}
		}
		int stageSelect = 0;
		if (sustainEnable) {
			if (stage < 3)
				stageSelect = stage;
			else {
				stageSelect = 3;
			}
		} else {
			stageSelect = stage;
		}

		increment = 1000.0f / envTimes[stageSelect] * (max_ / sampleRate);

		lastPhaccu = phaccu;
		phaccu += increment;
		if (phaccu < lastPhaccu) // overflow
		{
			if (stage == 0) {
				if (holdEnable) {
					stage = 1;
				} else {
					stage = 2;
				}

			} else {
				if (sustainEnable) {
					if (stage < 3 || stage == 4)
						stage++;
				} else {
					stage++;
				}
			}
		}
		if (stage == 0) { // attack stage
			envOut = calcRise(attackCurve);
		} else if (stage == 1) { // hold stage
			envOut = 1.0f;
		} else if (stage == 2) { // decay stage
			envOut = calcFall(1.0f, sustainLevel, decayCurve);
		}

		if (sustainEnable) {
			if (stage == 3) { // sustain stage
				envOut = sustainLevel;
			} else if (stage == 4) { // release stage
				envOut = calcFall(lastSample, 0.0f, releaseCurve);
			}
		} else { // release
			if (stage == 3) {
				envOut = calcFall(sustainLevel, 0.0f, releaseCurve);
			}
		}

		if (stage < 4)
			lastSample = envOut;
		return envOut;
	}

	void set_envelope_time(int _envStage, float milliseconds)
	{
		envTimes[_envStage] = milliseconds;
		if (_envStage == 1) // hold stage
		{
			if (milliseconds < 0.1f) {
				holdEnable = false;
			} else {
				holdEnable = true;
			}
		}
	}

	void set_samplerate(float sr)
	{
		sampleRate = sr;
	}

	void set_sustain(float _sustainLevel)
	{
		sustainLevel = _sustainLevel;
	}

	void set_attack_curve(float val)
	{
		attackCurve = val;
	}

	void set_decay_curve(float val)
	{
		decayCurve = val;
	}

	void set_release_curve(float val)
	{
		releaseCurve = val;
	}
};