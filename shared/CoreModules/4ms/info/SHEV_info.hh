#pragma once
#include "CoreModules/elements/element_info.hh"
#include <array>

namespace MetaModule
{
struct SHEVInfo : ModuleInfoBase {
    static constexpr std::string_view slug{"SHEV"};
    static constexpr std::string_view description{"Shaped Dual EnvVCA"};
    static constexpr uint32_t width_hp = 20;
    static constexpr bool uses_center_coords = true;
    static constexpr std::string_view svg_filename{"res/modules/SHEV-artwork.svg"};

    static constexpr std::array<Element, 55> Elements{{
		Slider25mmVertLED{to_mm<72>(94.665), to_mm<72>(104.78), "Rise A Slider", "", 0, 0, 1, 0.5f},
		Slider25mmVertLED{to_mm<72>(127.065), to_mm<72>(104.78), "Fall A Slider", "", 0, 0, 1, 0.5f},
		Slider25mmVertLED{to_mm<72>(159.945), to_mm<72>(104.78), "Rise B Slider", "", 0, 0, 1, 0.5f},
		Slider25mmVertLED{to_mm<72>(192.345), to_mm<72>(104.78), "Fall B Slider", "", 0, 0, 1, 0.5f},
		Slider25mmHorizLED{to_mm<72>(93.36), to_mm<72>(168.515), "Shape A Slider", "", 0, 0, 1, 0.5f},
		Slider25mmHorizLED{to_mm<72>(193.65), to_mm<72>(168.515), "Shape B Slider", "", 0, 0, 1, 0.5f},
		Knob9mm{to_mm<72>(23.59), to_mm<72>(86.1), "Level A", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(263.62), to_mm<72>(86.05), "Level B", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(23.67), to_mm<72>(132.68), "Offset A", "", 0, 0, 1, 0.5f},
		Knob9mm{to_mm<72>(263.42), to_mm<72>(132.63), "Offset B", "", 0, 0, 1, 0.5f},
		Knob9mm{to_mm<72>(23.59), to_mm<72>(179.21), "Shape A", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(263.45), to_mm<72>(179.21), "Shape B", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(68.74), to_mm<72>(206.72), "Rise A", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(117.86), to_mm<72>(206.72), "Fall A", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(169.15), to_mm<72>(206.72), "Rise B", "", 0, 0, 1, 1.0f},
		Knob9mm{to_mm<72>(218.26), to_mm<72>(206.72), "Fall B", "", 0, 0, 1, 1.0f},
		GateJackInput4ms{to_mm<72>(59.23), to_mm<72>(41.53), "Trig A", ""},
		GateJackInput4ms{to_mm<72>(227.77), to_mm<72>(41.53), "Trig B", ""},
		AnalogJackInput4ms{to_mm<72>(23.59), to_mm<72>(224.47), "Shape CV A", ""},
		AnalogJackInput4ms{to_mm<72>(263.42), to_mm<72>(224.47), "Shape CV B", ""},
		AnalogJackInput4ms{to_mm<72>(54.71), to_mm<72>(251.52), "Follow A", ""},
		AnalogJackInput4ms{to_mm<72>(101.59), to_mm<72>(249.1), "Time CV A", ""},
		AnalogJackInput4ms{to_mm<72>(185.42), to_mm<72>(249.1), "Time CV B", ""},
		AnalogJackInput4ms{to_mm<72>(232.3), to_mm<72>(251.52), "Follow B", ""},
		AnalogJackInput4ms{to_mm<72>(22.13), to_mm<72>(280.66), "Audio A In", ""},
		AnalogJackInput4ms{to_mm<72>(264.88), to_mm<72>(280.66), "Audio B In", ""},
		AnalogJackInput4ms{to_mm<72>(62.24), to_mm<72>(323.06), "VCA CV A", ""},
		AnalogJackInput4ms{to_mm<72>(224.77), to_mm<72>(323.06), "VCA CV B", ""},
		GateJackOutput4ms{to_mm<72>(77.47), to_mm<72>(286.09), "EOR A", ""},
		AnalogJackOutput4ms{to_mm<72>(121.52), to_mm<72>(286.16), "Env A Out", ""},
		AnalogJackOutput4ms{to_mm<72>(165.48), to_mm<72>(286.16), "Env B Out", ""},
		GateJackOutput4ms{to_mm<72>(209.54), to_mm<72>(286.09), "EOF B", ""},
		AnalogJackOutput4ms{to_mm<72>(22.13), to_mm<72>(323.06), "Out A", ""},
		AnalogJackOutput4ms{to_mm<72>(102.87), to_mm<72>(323.06), "Lin 5V A", ""},
		AnalogJackOutput4ms{to_mm<72>(143.5), to_mm<72>(323.06), "OR", ""},
		AnalogJackOutput4ms{to_mm<72>(184.13), to_mm<72>(323.06), "Lin 5V B", ""},
		AnalogJackOutput4ms{to_mm<72>(264.88), to_mm<72>(323.06), "Out B", ""},
		RedGreenBlueLight{to_mm<72>(53.02), to_mm<72>(150.13), "Shape LED A (RGB)", ""},
		RedGreenBlueLight{to_mm<72>(235.49), to_mm<72>(151.05), "Shape LED B (RGB)", ""},
		RedGreenBlueLight{to_mm<72>(88.86), to_mm<72>(196.34), "Rise LED A", ""},
		RedGreenBlueLight{to_mm<72>(98.07), to_mm<72>(219.09), "Fall LED A", ""},
		RedGreenBlueLight{to_mm<72>(188.93), to_mm<72>(196.34), "Rise LED B", ""},
		RedGreenBlueLight{to_mm<72>(198.15), to_mm<72>(219.09), "Fall LED B", ""},
		RedGreenBlueLight{to_mm<72>(133.59), to_mm<72>(263.06), "Env A LED", ""},
		RedGreenBlueLight{to_mm<72>(153.41), to_mm<72>(263.06), "Env B LED", ""},
		RedGreenBlueLight{to_mm<72>(50.99), to_mm<72>(275.79), "EOR A LED", ""},
		RedGreenBlueLight{to_mm<72>(236.01), to_mm<72>(275.79), "EOF B LED", ""},
		Toggle3pos{to_mm<72>(94.18), to_mm<72>(41.285), "Slow Med Fast Rise A", ""},
		Toggle3pos{to_mm<72>(127.06), to_mm<72>(41.275), "Slow Med Fast Fall A", ""},
		Toggle3pos{to_mm<72>(159.95), to_mm<72>(41.275), "Slow Med Fast Rise B", ""},
		Toggle3pos{to_mm<72>(192.83), to_mm<72>(41.285), "Slow Med Fast Fall B", ""},
		Toggle3pos{to_mm<72>(61.58), to_mm<72>(96.635), "Cycle AR ASR A", ""},
		Toggle3pos{to_mm<72>(225.43), to_mm<72>(96.635), "Cycle AR ASR B", ""},
		LatchingButtonMonoLight{to_mm<72>(21.16), to_mm<72>(41.89), "Cycle A", ""},
		LatchingButtonMonoLight{to_mm<72>(267.89), to_mm<72>(41.55), "Cycle B", ""},
}};

    enum class Elem {
        RiseASliderSlider,
        FallASliderSlider,
        RiseBSliderSlider,
        FallBSliderSlider,
        ShapeASliderSlider,
        ShapeBSliderSlider,
        LevelAKnob,
        LevelBKnob,
        OffsetAKnob,
        OffsetBKnob,
        ShapeAKnob,
        ShapeBKnob,
        RiseAKnob,
        FallAKnob,
        RiseBKnob,
        FallBKnob,
        TrigAIn,
        TrigBIn,
        ShapeCvAIn,
        ShapeCvBIn,
        FollowAIn,
        TimeCvAIn,
        TimeCvBIn,
        FollowBIn,
        AudioAInIn,
        AudioBInIn,
        VcaCvAIn,
        VcaCvBIn,
        EorAOut,
        EnvAOutOut,
        EnvBOutOut,
        EofBOut,
        OutAOut,
        Lin5VAOut,
        OrOut,
        Lin5VBOut,
        OutBOut,
        ShapeLedA_Rgb_Light,
        ShapeLedB_Rgb_Light,
        RiseLedALight,
        FallLedALight,
        RiseLedBLight,
        FallLedBLight,
        EnvALedLight,
        EnvBLedLight,
        EorALedLight,
        EofBLedLight,
        SlowMedFastRiseASwitch,
        SlowMedFastFallASwitch,
        SlowMedFastRiseBSwitch,
        SlowMedFastFallBSwitch,
        CycleArAsrASwitch,
        CycleArAsrBSwitch,
        CycleAButton,
        CycleBButton,
    };

    // Legacy naming (safe to remove once CoreModule is converted
    
    enum {
        KnobRise_A_Slider = 0,
        KnobFall_A_Slider = 1,
        KnobRise_B_Slider = 2,
        KnobFall_B_Slider = 3,
        KnobShape_A_Slider = 4,
        KnobShape_B_Slider = 5,
        KnobLevel_A = 6,
        KnobLevel_B = 7,
        KnobOffset_A = 8,
        KnobOffset_B = 9,
        KnobShape_A = 10,
        KnobShape_B = 11,
        KnobRise_A = 12,
        KnobFall_A = 13,
        KnobRise_B = 14,
        KnobFall_B = 15,
    };
    
    enum {
        SwitchSlow_Med_Fast_Rise_A = 0,
        SwitchSlow_Med_Fast_Fall_A = 1,
        SwitchSlow_Med_Fast_Rise_B = 2,
        SwitchSlow_Med_Fast_Fall_B = 3,
        SwitchCycle_Ar_Asr_A = 4,
        SwitchCycle_Ar_Asr_B = 5,
        SwitchCycle_A = 6,
        SwitchCycle_B = 7,
    };
    
    enum {
        InputTrig_A = 0,
        InputTrig_B = 1,
        InputShape_Cv_A = 2,
        InputShape_Cv_B = 3,
        InputFollow_A = 4,
        InputTime_Cv_A = 5,
        InputTime_Cv_B = 6,
        InputFollow_B = 7,
        InputAudio_A_In = 8,
        InputAudio_B_In = 9,
        InputVca_Cv_A = 10,
        InputVca_Cv_B = 11,
    };
    
    enum {
        OutputEor_A = 0,
        OutputEnv_A_Out = 1,
        OutputEnv_B_Out = 2,
        OutputEof_B = 3,
        OutputOut_A = 4,
        OutputLin_5V_A = 5,
        OutputOr = 6,
        OutputLin_5V_B = 7,
        OutputOut_B = 8,
    };
    
    enum {
        LedShape_Led_A__Rgb_ = 0,
        LedShape_Led_B__Rgb_ = 1,
        LedRise_Led_A = 2,
        LedFall_Led_A = 3,
        LedRise_Led_B = 4,
        LedFall_Led_B = 5,
        LedEnv_A_Led = 6,
        LedEnv_B_Led = 7,
        LedEor_A_Led = 8,
        LedEof_B_Led = 9,
    };
};
} // namespace MetaModule
