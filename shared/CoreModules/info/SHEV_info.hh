#pragma once
#include "CoreModules/coreProcessor.h"
#include "CoreModules/module_info_base.hh"

struct SHEVInfo : ModuleInfoBase {
    static constexpr std::string_view slug{"SHEV"};
    static constexpr std::string_view description{"Shaped Dual EnvVCA"};
    static constexpr uint32_t width_hp = 20;
    static constexpr std::string_view svg_filename{"res/modules/SHEV-artwork.svg"};

    static constexpr int NumKnobs = 16;
    
    enum {
        KnobRise_A_Slider = 0,
        KnobFall_A_Slider = 1,
        KnobRise_B_Slider = 2,
        KnobFall_B_Slider = 3,
        KnobShape_A_Slider = 4,
        KnobShape_B_Slider = 5,
        KnobLevel_A = 6,
        KnobLevel_B = 7,
        KnobOffset_A = 8,
        KnobOffset_B = 9,
        KnobShape_A = 10,
        KnobShape_B = 11,
        KnobRise_A = 12,
        KnobFall_A = 13,
        KnobRise_B = 14,
        KnobFall_B = 15,
    };

    static constexpr std::array<KnobDef, NumKnobs> Knobs{{
        {
            .id = KnobRise_A_Slider,
            .x_mm = px_to_mm<72>(94.665f),
            .y_mm = px_to_mm<72>(104.78f),
            .short_name = "Rise A Slider",
            .long_name = "Rise A Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobFall_A_Slider,
            .x_mm = px_to_mm<72>(127.065f),
            .y_mm = px_to_mm<72>(104.78f),
            .short_name = "Fall A Slider",
            .long_name = "Fall A Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobRise_B_Slider,
            .x_mm = px_to_mm<72>(159.945f),
            .y_mm = px_to_mm<72>(104.78f),
            .short_name = "Rise B Slider",
            .long_name = "Rise B Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobFall_B_Slider,
            .x_mm = px_to_mm<72>(192.345f),
            .y_mm = px_to_mm<72>(104.78f),
            .short_name = "Fall B Slider",
            .long_name = "Fall B Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobShape_A_Slider,
            .x_mm = px_to_mm<72>(93.36f),
            .y_mm = px_to_mm<72>(168.515f),
            .short_name = "Shape A Slider",
            .long_name = "Shape A Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Horizontal,
        },
        {
            .id = KnobShape_B_Slider,
            .x_mm = px_to_mm<72>(193.65f),
            .y_mm = px_to_mm<72>(168.515f),
            .short_name = "Shape B Slider",
            .long_name = "Shape B Slider",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Horizontal,
        },
        {
            .id = KnobLevel_A,
            .x_mm = px_to_mm<72>(23.59f),
            .y_mm = px_to_mm<72>(86.1f),
            .short_name = "Level A",
            .long_name = "Level A",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobLevel_B,
            .x_mm = px_to_mm<72>(263.62f),
            .y_mm = px_to_mm<72>(86.05f),
            .short_name = "Level B",
            .long_name = "Level B",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobOffset_A,
            .x_mm = px_to_mm<72>(23.67f),
            .y_mm = px_to_mm<72>(132.68f),
            .short_name = "Offset A",
            .long_name = "Offset A",
            .default_val = 0.5f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobOffset_B,
            .x_mm = px_to_mm<72>(263.42f),
            .y_mm = px_to_mm<72>(132.63f),
            .short_name = "Offset B",
            .long_name = "Offset B",
            .default_val = 0.5f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobShape_A,
            .x_mm = px_to_mm<72>(23.59f),
            .y_mm = px_to_mm<72>(179.21f),
            .short_name = "Shape A",
            .long_name = "Shape A",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobShape_B,
            .x_mm = px_to_mm<72>(263.45f),
            .y_mm = px_to_mm<72>(179.21f),
            .short_name = "Shape B",
            .long_name = "Shape B",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobRise_A,
            .x_mm = px_to_mm<72>(68.74f),
            .y_mm = px_to_mm<72>(206.72f),
            .short_name = "Rise A",
            .long_name = "Rise A",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobFall_A,
            .x_mm = px_to_mm<72>(117.86f),
            .y_mm = px_to_mm<72>(206.72f),
            .short_name = "Fall A",
            .long_name = "Fall A",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobRise_B,
            .x_mm = px_to_mm<72>(169.15f),
            .y_mm = px_to_mm<72>(206.72f),
            .short_name = "Rise B",
            .long_name = "Rise B",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobFall_B,
            .x_mm = px_to_mm<72>(218.26f),
            .y_mm = px_to_mm<72>(206.72f),
            .short_name = "Fall B",
            .long_name = "Fall B",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
    }};

    static constexpr int NumInJacks = 12;
    
    enum {
        InputTrig_A = 0,
        InputTrig_B = 1,
        InputShape_Cv_A = 2,
        InputShape_Cv_B = 3,
        InputFollow_A = 4,
        InputTime_Cv_A = 5,
        InputTime_Cv_B = 6,
        InputFollow_B = 7,
        InputAudio_A_In = 8,
        InputAudio_B_In = 9,
        InputVca_Cv_A = 10,
        InputVca_Cv_B = 11,
    };

    static constexpr std::array<InJackDef, NumInJacks> InJacks{{
        {
            .id = InputTrig_A,
            .x_mm = px_to_mm<72>(59.23f),
            .y_mm = px_to_mm<72>(41.53f),
            .short_name = "Trig A",
            .long_name = "Trig A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputTrig_B,
            .x_mm = px_to_mm<72>(227.77f),
            .y_mm = px_to_mm<72>(41.53f),
            .short_name = "Trig B",
            .long_name = "Trig B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputShape_Cv_A,
            .x_mm = px_to_mm<72>(23.59f),
            .y_mm = px_to_mm<72>(224.47f),
            .short_name = "Shape CV A",
            .long_name = "Shape CV A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputShape_Cv_B,
            .x_mm = px_to_mm<72>(263.42f),
            .y_mm = px_to_mm<72>(224.47f),
            .short_name = "Shape CV B",
            .long_name = "Shape CV B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputFollow_A,
            .x_mm = px_to_mm<72>(54.71f),
            .y_mm = px_to_mm<72>(251.52f),
            .short_name = "Follow A",
            .long_name = "Follow A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputTime_Cv_A,
            .x_mm = px_to_mm<72>(101.59f),
            .y_mm = px_to_mm<72>(249.1f),
            .short_name = "Time CV A",
            .long_name = "Time CV A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputTime_Cv_B,
            .x_mm = px_to_mm<72>(185.42f),
            .y_mm = px_to_mm<72>(249.1f),
            .short_name = "Time CV B",
            .long_name = "Time CV B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputFollow_B,
            .x_mm = px_to_mm<72>(232.3f),
            .y_mm = px_to_mm<72>(251.52f),
            .short_name = "Follow B",
            .long_name = "Follow B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputAudio_A_In,
            .x_mm = px_to_mm<72>(22.13f),
            .y_mm = px_to_mm<72>(280.66f),
            .short_name = "Audio A In",
            .long_name = "Audio A In",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputAudio_B_In,
            .x_mm = px_to_mm<72>(264.88f),
            .y_mm = px_to_mm<72>(280.66f),
            .short_name = "Audio B In",
            .long_name = "Audio B In",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputVca_Cv_A,
            .x_mm = px_to_mm<72>(62.24f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "VCA CV A",
            .long_name = "VCA CV A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputVca_Cv_B,
            .x_mm = px_to_mm<72>(224.77f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "VCA CV B",
            .long_name = "VCA CV B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
    }};

    static constexpr int NumOutJacks = 9;
    
    enum {
        OutputEor_A = 0,
        OutputEnv_A_Out = 1,
        OutputEnv_B_Out = 2,
        OutputEof_B = 3,
        OutputOut_A = 4,
        OutputLin_5V_A = 5,
        OutputOr = 6,
        OutputLin_5V_B = 7,
        OutputOut_B = 8,
    };

    static constexpr std::array<OutJackDef, NumOutJacks> OutJacks{{
        {
            .id = OutputEor_A,
            .x_mm = px_to_mm<72>(77.47f),
            .y_mm = px_to_mm<72>(286.09f),
            .short_name = "EOR A",
            .long_name = "EOR A",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv_A_Out,
            .x_mm = px_to_mm<72>(121.52f),
            .y_mm = px_to_mm<72>(286.16f),
            .short_name = "Env A Out",
            .long_name = "Env A Out",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv_B_Out,
            .x_mm = px_to_mm<72>(165.48f),
            .y_mm = px_to_mm<72>(286.16f),
            .short_name = "Env B Out",
            .long_name = "Env B Out",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEof_B,
            .x_mm = px_to_mm<72>(209.54f),
            .y_mm = px_to_mm<72>(286.09f),
            .short_name = "EOF B",
            .long_name = "EOF B",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_A,
            .x_mm = px_to_mm<72>(22.13f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "Out A",
            .long_name = "Out A",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputLin_5V_A,
            .x_mm = px_to_mm<72>(102.87f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "Lin 5V A",
            .long_name = "Lin 5V A",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOr,
            .x_mm = px_to_mm<72>(143.5f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "OR",
            .long_name = "OR",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputLin_5V_B,
            .x_mm = px_to_mm<72>(184.13f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "Lin 5V B",
            .long_name = "Lin 5V B",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_B,
            .x_mm = px_to_mm<72>(264.88f),
            .y_mm = px_to_mm<72>(323.06f),
            .short_name = "Out B",
            .long_name = "Out B",
            .signal_type = OutJackDef::Analog,
        },
    }};

    static constexpr int NumSwitches = 8;
    
    enum {
        SwitchSlow_Med_Fast_Rise_A = 0,
        SwitchSlow_Med_Fast_Fall_A = 1,
        SwitchSlow_Med_Fast_Rise_B = 2,
        SwitchSlow_Med_Fast_Fall_B = 3,
        SwitchCycle_Ar_Asr_A = 4,
        SwitchCycle_Ar_Asr_B = 5,
        SwitchCycle_A = 6,
        SwitchCycle_B = 7,
    };

    static constexpr std::array<SwitchDef, NumSwitches> Switches{{
        {
            .id = SwitchSlow_Med_Fast_Rise_A,
            .x_mm = px_to_mm<72>(94.18f),
            .y_mm = px_to_mm<72>(41.285f),
            .short_name = "Slow Med Fast Rise A",
            .long_name = "Slow Med Fast Rise A",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchSlow_Med_Fast_Fall_A,
            .x_mm = px_to_mm<72>(127.06f),
            .y_mm = px_to_mm<72>(41.275f),
            .short_name = "Slow Med Fast Fall A",
            .long_name = "Slow Med Fast Fall A",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchSlow_Med_Fast_Rise_B,
            .x_mm = px_to_mm<72>(159.95f),
            .y_mm = px_to_mm<72>(41.275f),
            .short_name = "Slow Med Fast Rise B",
            .long_name = "Slow Med Fast Rise B",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchSlow_Med_Fast_Fall_B,
            .x_mm = px_to_mm<72>(192.83f),
            .y_mm = px_to_mm<72>(41.285f),
            .short_name = "Slow Med Fast Fall B",
            .long_name = "Slow Med Fast Fall B",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchCycle_Ar_Asr_A,
            .x_mm = px_to_mm<72>(61.58f),
            .y_mm = px_to_mm<72>(96.635f),
            .short_name = "Cycle AR ASR A",
            .long_name = "Cycle AR ASR A",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchCycle_Ar_Asr_B,
            .x_mm = px_to_mm<72>(225.43f),
            .y_mm = px_to_mm<72>(96.635f),
            .short_name = "Cycle AR ASR B",
            .long_name = "Cycle AR ASR B",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchCycle_A,
            .x_mm = px_to_mm<72>(21.16f),
            .y_mm = px_to_mm<72>(41.89f),
            .short_name = "Cycle A",
            .long_name = "Cycle A",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchCycle_B,
            .x_mm = px_to_mm<72>(267.89f),
            .y_mm = px_to_mm<72>(41.55f),
            .short_name = "Cycle B",
            .long_name = "Cycle B",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
    }};

    static constexpr int NumDiscreteLeds = 10;
    
    enum {
        LedShape_Led_A__Rgb_ = 0,
        LedShape_Led_B__Rgb_ = 1,
        LedRise_Led_A = 2,
        LedFall_Led_A = 3,
        LedRise_Led_B = 4,
        LedFall_Led_B = 5,
        LedEnv_A_Led = 6,
        LedEnv_B_Led = 7,
        LedEor_A_Led = 8,
        LedEof_B_Led = 9,
    };

    static constexpr std::array<LedDef, NumDiscreteLeds> Leds{{
        {
            .id = LedShape_Led_A__Rgb_,
            .x_mm = px_to_mm<72>(53.02f),
            .y_mm = px_to_mm<72>(150.13f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedShape_Led_B__Rgb_,
            .x_mm = px_to_mm<72>(235.49f),
            .y_mm = px_to_mm<72>(151.05f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedRise_Led_A,
            .x_mm = px_to_mm<72>(88.86f),
            .y_mm = px_to_mm<72>(196.34f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedFall_Led_A,
            .x_mm = px_to_mm<72>(98.07f),
            .y_mm = px_to_mm<72>(219.09f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedRise_Led_B,
            .x_mm = px_to_mm<72>(188.93f),
            .y_mm = px_to_mm<72>(196.34f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedFall_Led_B,
            .x_mm = px_to_mm<72>(198.15f),
            .y_mm = px_to_mm<72>(219.09f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnv_A_Led,
            .x_mm = px_to_mm<72>(133.59f),
            .y_mm = px_to_mm<72>(263.06f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnv_B_Led,
            .x_mm = px_to_mm<72>(153.41f),
            .y_mm = px_to_mm<72>(263.06f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEor_A_Led,
            .x_mm = px_to_mm<72>(50.99f),
            .y_mm = px_to_mm<72>(275.79f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEof_B_Led,
            .x_mm = px_to_mm<72>(236.01f),
            .y_mm = px_to_mm<72>(275.79f),
            .led_color = LedDef::Red,
        },
    }};

};
