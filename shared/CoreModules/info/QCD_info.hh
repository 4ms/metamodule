#pragma once
#include "CoreModules/coreProcessor.h"
#include "CoreModules/module_info_base.hh"

struct QCDInfo : ModuleInfoBase {
    static constexpr std::string_view slug{"QCD"};
    static constexpr std::string_view description{"Quad Clock Distributor"};
    static constexpr uint32_t width_hp = 22;
    static constexpr std::string_view svg_filename{"res/modules/QCD-artwork.svg"};

    static constexpr int NumKnobs = 16;
    
    enum {
        KnobGate_Pw_Att_1 = 0,
        KnobGate_Pw_1 = 1,
        KnobDiv_Mult_Cv_1 = 2,
        KnobDiv_Mult_1 = 3,
        KnobGate_Pw_Att_2 = 4,
        KnobGate_Pw_2 = 5,
        KnobDiv_Mult_Cv_2 = 6,
        KnobDiv_Mult_2 = 7,
        KnobGate_Pw_Att_3 = 8,
        KnobGate_Pw_3 = 9,
        KnobDiv_Mult_Cv_3 = 10,
        KnobDiv_Mult_3 = 11,
        KnobGate_Pw_Att_4 = 12,
        KnobGate_Pw_4 = 13,
        KnobDiv_Mult_Cv_4 = 14,
        KnobDiv_Mult_4 = 15,
    };

    static constexpr std::array<KnobDef, NumKnobs> Knobs{{
        {
            .id = KnobGate_Pw_Att_1,
            .x_mm = px_to_mm<72>(67.25f),
            .y_mm = px_to_mm<72>(58.66f),
            .short_name = "Gate PW Att 1",
            .long_name = "Gate PW Att 1",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_1,
            .x_mm = px_to_mm<72>(108.76f),
            .y_mm = px_to_mm<72>(60.04f),
            .short_name = "Gate PW 1",
            .long_name = "Gate PW 1",
            .default_val = 0.5f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_Cv_1,
            .x_mm = px_to_mm<72>(153.48f),
            .y_mm = px_to_mm<72>(81.3f),
            .short_name = "Div Mult CV 1",
            .long_name = "Div Mult CV 1",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_1,
            .x_mm = px_to_mm<72>(202.43f),
            .y_mm = px_to_mm<72>(85.05f),
            .short_name = "Div Mult 1",
            .long_name = "Div Mult 1",
            .default_val = 0.0f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_Att_2,
            .x_mm = px_to_mm<72>(67.25f),
            .y_mm = px_to_mm<72>(134.26f),
            .short_name = "Gate PW Att 2",
            .long_name = "Gate PW Att 2",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_2,
            .x_mm = px_to_mm<72>(108.76f),
            .y_mm = px_to_mm<72>(135.64f),
            .short_name = "Gate PW 2",
            .long_name = "Gate PW 2",
            .default_val = 0.5f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_Cv_2,
            .x_mm = px_to_mm<72>(153.48f),
            .y_mm = px_to_mm<72>(150.39f),
            .short_name = "Div Mult CV 2",
            .long_name = "Div Mult CV 2",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_2,
            .x_mm = px_to_mm<72>(202.43f),
            .y_mm = px_to_mm<72>(154.17f),
            .short_name = "Div Mult 2",
            .long_name = "Div Mult 2",
            .default_val = 0.25f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_Att_3,
            .x_mm = px_to_mm<72>(67.25f),
            .y_mm = px_to_mm<72>(209.86f),
            .short_name = "Gate PW Att 3",
            .long_name = "Gate PW Att 3",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_3,
            .x_mm = px_to_mm<72>(108.76f),
            .y_mm = px_to_mm<72>(211.24f),
            .short_name = "Gate PW 3",
            .long_name = "Gate PW 3",
            .default_val = 0.5f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_Cv_3,
            .x_mm = px_to_mm<72>(153.48f),
            .y_mm = px_to_mm<72>(220.06f),
            .short_name = "Div Mult CV 3",
            .long_name = "Div Mult CV 3",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_3,
            .x_mm = px_to_mm<72>(202.43f),
            .y_mm = px_to_mm<72>(223.29f),
            .short_name = "Div Mult 3",
            .long_name = "Div Mult 3",
            .default_val = 0.875f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_Att_4,
            .x_mm = px_to_mm<72>(67.25f),
            .y_mm = px_to_mm<72>(285.46f),
            .short_name = "Gate PW Att 4",
            .long_name = "Gate PW Att 4",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobGate_Pw_4,
            .x_mm = px_to_mm<72>(108.76f),
            .y_mm = px_to_mm<72>(286.84f),
            .short_name = "Gate PW 4",
            .long_name = "Gate PW 4",
            .default_val = 0.5f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_Cv_4,
            .x_mm = px_to_mm<72>(153.48f),
            .y_mm = px_to_mm<72>(288.47f),
            .short_name = "Div Mult CV 4",
            .long_name = "Div Mult CV 4",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobDiv_Mult_4,
            .x_mm = px_to_mm<72>(202.43f),
            .y_mm = px_to_mm<72>(292.41f),
            .short_name = "Div Mult 4",
            .long_name = "Div Mult 4",
            .default_val = 1.0f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
    }};

    static constexpr int NumInJacks = 16;
    
    enum {
        InputGate_Pw_Cv_1 = 0,
        InputDiv_Mult_Cv_1_Jack = 1,
        InputClk_In_1 = 2,
        InputReset_1 = 3,
        InputGate_Pw_Cv_2 = 4,
        InputDiv_Mult_Cv_2_Jack = 5,
        InputClk_In_2 = 6,
        InputReset_2 = 7,
        InputGate_Pw_Cv_3 = 8,
        InputDiv_Mult_Cv_3_Jack = 9,
        InputClk_In_3 = 10,
        InputReset_3 = 11,
        InputGate_Pw_Cv_4 = 12,
        InputDiv_Mult_Cv_4_Jack = 13,
        InputClk_In_4 = 14,
        InputReset_4 = 15,
    };

    static constexpr std::array<InJackDef, NumInJacks> InJacks{{
        {
            .id = InputGate_Pw_Cv_1,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(55.0f),
            .short_name = "Gate PW CV 1",
            .long_name = "Gate PW CV 1",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputDiv_Mult_Cv_1_Jack,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(76.7f),
            .short_name = "Div Mult CV 1 Jack",
            .long_name = "Div Mult CV 1 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputClk_In_1,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(42.31f),
            .short_name = "Clk In 1",
            .long_name = "Clk In 1",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputReset_1,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(111.26f),
            .short_name = "Reset 1",
            .long_name = "Reset 1",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputGate_Pw_Cv_2,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(130.6f),
            .short_name = "Gate PW CV 2",
            .long_name = "Gate PW CV 2",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputDiv_Mult_Cv_2_Jack,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(145.82f),
            .short_name = "Div Mult CV 2 Jack",
            .long_name = "Div Mult CV 2 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputClk_In_2,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(117.91f),
            .short_name = "Clk In 2",
            .long_name = "Clk In 2",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputReset_2,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(180.38f),
            .short_name = "Reset 2",
            .long_name = "Reset 2",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputGate_Pw_Cv_3,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(206.2f),
            .short_name = "Gate PW CV 3",
            .long_name = "Gate PW CV 3",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputDiv_Mult_Cv_3_Jack,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(214.94f),
            .short_name = "Div Mult CV 3 Jack",
            .long_name = "Div Mult CV 3 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputClk_In_3,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(193.51f),
            .short_name = "Clk In 3",
            .long_name = "Clk In 3",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputReset_3,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(249.5f),
            .short_name = "Reset 3",
            .long_name = "Reset 3",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputGate_Pw_Cv_4,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(281.8f),
            .short_name = "Gate PW CV 4",
            .long_name = "Gate PW CV 4",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputDiv_Mult_Cv_4_Jack,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(284.06f),
            .short_name = "Div Mult CV 4 Jack",
            .long_name = "Div Mult CV 4 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputClk_In_4,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(269.11f),
            .short_name = "Clk In 4",
            .long_name = "Clk In 4",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputReset_4,
            .x_mm = px_to_mm<72>(249.58f),
            .y_mm = px_to_mm<72>(318.62f),
            .short_name = "Reset 4",
            .long_name = "Reset 4",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
    }};

    static constexpr int NumOutJacks = 9;
    
    enum {
        OutputTap_Out = 0,
        OutputInv_Out_1 = 1,
        OutputOut_1 = 2,
        OutputInv_Out_2 = 3,
        OutputOut_2 = 4,
        OutputInv_Out_3 = 5,
        OutputOut_3 = 6,
        OutputInv_Out_4 = 7,
        OutputOut_4 = 8,
    };

    static constexpr std::array<OutJackDef, NumOutJacks> OutJacks{{
        {
            .id = OutputTap_Out,
            .x_mm = px_to_mm<72>(245.46f),
            .y_mm = px_to_mm<72>(42.6f),
            .short_name = "Tap Out",
            .long_name = "Tap Out",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputInv_Out_1,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(89.56f),
            .short_name = "Inv Out 1",
            .long_name = "Inv Out 1",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_1,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(76.87f),
            .short_name = "Out 1",
            .long_name = "Out 1",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputInv_Out_2,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(165.16f),
            .short_name = "Inv Out 2",
            .long_name = "Inv Out 2",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_2,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(152.47f),
            .short_name = "Out 2",
            .long_name = "Out 2",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputInv_Out_3,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(240.76f),
            .short_name = "Inv Out 3",
            .long_name = "Inv Out 3",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_3,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(228.07f),
            .short_name = "Out 3",
            .long_name = "Out 3",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputInv_Out_4,
            .x_mm = px_to_mm<72>(23.39f),
            .y_mm = px_to_mm<72>(316.36f),
            .short_name = "Inv Out 4",
            .long_name = "Inv Out 4",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_4,
            .x_mm = px_to_mm<72>(296.32f),
            .y_mm = px_to_mm<72>(303.67f),
            .short_name = "Out 4",
            .long_name = "Out 4",
            .signal_type = OutJackDef::Analog,
        },
    }};

    static constexpr int NumSwitches = 1;
    
    enum {
        SwitchTap_Button = 0,
    };

    static constexpr std::array<SwitchDef, NumSwitches> Switches{{
        {
            .id = SwitchTap_Button,
            .x_mm = px_to_mm<72>(192.73f),
            .y_mm = px_to_mm<72>(42.56f),
            .short_name = "Tap Button",
            .long_name = "Tap Button",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
    }};

    static constexpr int NumDiscreteLeds = 8;
    
    enum {
        LedInv_Led_1 = 0,
        LedLed_1 = 1,
        LedInv_Led_2 = 2,
        LedLed_2 = 3,
        LedInv_Led_3 = 4,
        LedLed_3 = 5,
        LedInv_Led_4 = 6,
        LedLed_4 = 7,
    };

    static constexpr std::array<LedDef, NumDiscreteLeds> Leds{{
        {
            .id = LedInv_Led_1,
            .x_mm = px_to_mm<72>(48.06f),
            .y_mm = px_to_mm<72>(89.91f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed_1,
            .x_mm = px_to_mm<72>(273.46f),
            .y_mm = px_to_mm<72>(77.07f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedInv_Led_2,
            .x_mm = px_to_mm<72>(48.06f),
            .y_mm = px_to_mm<72>(165.51f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed_2,
            .x_mm = px_to_mm<72>(273.46f),
            .y_mm = px_to_mm<72>(152.67f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedInv_Led_3,
            .x_mm = px_to_mm<72>(47.68f),
            .y_mm = px_to_mm<72>(240.97f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed_3,
            .x_mm = px_to_mm<72>(273.46f),
            .y_mm = px_to_mm<72>(228.27f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedInv_Led_4,
            .x_mm = px_to_mm<72>(47.87f),
            .y_mm = px_to_mm<72>(316.71f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed_4,
            .x_mm = px_to_mm<72>(273.46f),
            .y_mm = px_to_mm<72>(303.87f),
            .led_color = LedDef::Red,
        },
    }};

};
