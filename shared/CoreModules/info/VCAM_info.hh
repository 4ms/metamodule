#pragma once
#include "CoreModules/coreProcessor.h"
#include "CoreModules/info/module_info_base.hh"

struct VCAMInfo : ModuleInfoBase {
    static constexpr std::string_view slug{"VCAM"};
    static constexpr std::string_view description{"VCA Matrix"};
    static constexpr uint32_t width_hp = 26;
    static constexpr std::string_view svg_filename{"res/modules/VCAM-artwork.svg"};

    static constexpr int NumKnobs = 16;
    
    enum {
        KnobA1_Level = 0,
        KnobA2_Level = 1,
        KnobA3_Level = 2,
        KnobA4_Level = 3,
        KnobB1_Level = 4,
        KnobB2_Level = 5,
        KnobB3_Level = 6,
        KnobB4_Level = 7,
        KnobC1_Level = 8,
        KnobC2_Level = 9,
        KnobC3_Level = 10,
        KnobC4_Level = 11,
        KnobD1_Level = 12,
        KnobD2_Level = 13,
        KnobD3_Level = 14,
        KnobD4_Level = 15,
    };

    static constexpr std::array<KnobDef, NumKnobs> Knobs{{
        {
            .id = KnobA1_Level,
            .x_mm = px_to_mm<72>(31.64f),
            .y_mm = px_to_mm<72>(195.5f),
            .short_name = "A1 Level",
            .long_name = "A1 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobA2_Level,
            .x_mm = px_to_mm<72>(84.56f),
            .y_mm = px_to_mm<72>(195.5f),
            .short_name = "A2 Level",
            .long_name = "A2 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobA3_Level,
            .x_mm = px_to_mm<72>(137.48f),
            .y_mm = px_to_mm<72>(195.5f),
            .short_name = "A3 Level",
            .long_name = "A3 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobA4_Level,
            .x_mm = px_to_mm<72>(190.4f),
            .y_mm = px_to_mm<72>(195.5f),
            .short_name = "A4 Level",
            .long_name = "A4 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobB1_Level,
            .x_mm = px_to_mm<72>(31.64f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B1 Level",
            .long_name = "B1 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobB2_Level,
            .x_mm = px_to_mm<72>(84.56f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B2 Level",
            .long_name = "B2 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobB3_Level,
            .x_mm = px_to_mm<72>(137.48f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B3 Level",
            .long_name = "B3 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobB4_Level,
            .x_mm = px_to_mm<72>(190.4f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B4 Level",
            .long_name = "B4 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobC1_Level,
            .x_mm = px_to_mm<72>(31.64f),
            .y_mm = px_to_mm<72>(273.9f),
            .short_name = "C1 Level",
            .long_name = "C1 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobC2_Level,
            .x_mm = px_to_mm<72>(84.56f),
            .y_mm = px_to_mm<72>(273.9f),
            .short_name = "C2 Level",
            .long_name = "C2 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobC3_Level,
            .x_mm = px_to_mm<72>(137.48f),
            .y_mm = px_to_mm<72>(273.9f),
            .short_name = "C3 Level",
            .long_name = "C3 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobC4_Level,
            .x_mm = px_to_mm<72>(190.4f),
            .y_mm = px_to_mm<72>(273.9f),
            .short_name = "C4 Level",
            .long_name = "C4 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobD1_Level,
            .x_mm = px_to_mm<72>(31.64f),
            .y_mm = px_to_mm<72>(313.03f),
            .short_name = "D1 Level",
            .long_name = "D1 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobD2_Level,
            .x_mm = px_to_mm<72>(84.56f),
            .y_mm = px_to_mm<72>(313.03f),
            .short_name = "D2 Level",
            .long_name = "D2 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobD3_Level,
            .x_mm = px_to_mm<72>(137.48f),
            .y_mm = px_to_mm<72>(313.03f),
            .short_name = "D3 Level",
            .long_name = "D3 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobD4_Level,
            .x_mm = px_to_mm<72>(190.4f),
            .y_mm = px_to_mm<72>(313.03f),
            .short_name = "D4 Level",
            .long_name = "D4 Level",
            .default_val = 1.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
    }};

    static constexpr int NumInJacks = 20;
    
    enum {
        InputIn_A = 0,
        InputA1_Jack = 1,
        InputA2_Jack = 2,
        InputA3_Jack = 3,
        InputA4_Jack = 4,
        InputIn_B = 5,
        InputB1_Jack = 6,
        InputB2_Jack = 7,
        InputB3_Jack = 8,
        InputB4_Jack = 9,
        InputIn_C = 10,
        InputC1_Jack = 11,
        InputC2_Jack = 12,
        InputC3_Jack = 13,
        InputC4_Jack = 14,
        InputIn_D = 15,
        InputD1_Jack = 16,
        InputD2_Jack = 17,
        InputD3_Jack = 18,
        InputD4_Jack = 19,
    };

    static constexpr std::array<InJackDef, NumInJacks> InJacks{{
        {
            .id = InputIn_A,
            .x_mm = px_to_mm<72>(55.57f),
            .y_mm = px_to_mm<72>(37.91f),
            .short_name = "In A",
            .long_name = "In A",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputA1_Jack,
            .x_mm = px_to_mm<72>(134.24f),
            .y_mm = px_to_mm<72>(67.6f),
            .short_name = "A1 Jack",
            .long_name = "A1 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputA2_Jack,
            .x_mm = px_to_mm<72>(204.9f),
            .y_mm = px_to_mm<72>(67.6f),
            .short_name = "A2 Jack",
            .long_name = "A2 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputA3_Jack,
            .x_mm = px_to_mm<72>(275.43f),
            .y_mm = px_to_mm<72>(67.6f),
            .short_name = "A3 Jack",
            .long_name = "A3 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputA4_Jack,
            .x_mm = px_to_mm<72>(345.99f),
            .y_mm = px_to_mm<72>(67.6f),
            .short_name = "A4 Jack",
            .long_name = "A4 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputIn_B,
            .x_mm = px_to_mm<72>(55.57f),
            .y_mm = px_to_mm<72>(74.29f),
            .short_name = "In B",
            .long_name = "In B",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputB1_Jack,
            .x_mm = px_to_mm<72>(99.08f),
            .y_mm = px_to_mm<72>(97.62f),
            .short_name = "B1 Jack",
            .long_name = "B1 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputB2_Jack,
            .x_mm = px_to_mm<72>(169.75f),
            .y_mm = px_to_mm<72>(97.62f),
            .short_name = "B2 Jack",
            .long_name = "B2 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputB3_Jack,
            .x_mm = px_to_mm<72>(240.27f),
            .y_mm = px_to_mm<72>(97.62f),
            .short_name = "B3 Jack",
            .long_name = "B3 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputB4_Jack,
            .x_mm = px_to_mm<72>(310.84f),
            .y_mm = px_to_mm<72>(97.62f),
            .short_name = "B4 Jack",
            .long_name = "B4 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputIn_C,
            .x_mm = px_to_mm<72>(55.57f),
            .y_mm = px_to_mm<72>(110.46f),
            .short_name = "In C",
            .long_name = "In C",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputC1_Jack,
            .x_mm = px_to_mm<72>(134.24f),
            .y_mm = px_to_mm<72>(127.73f),
            .short_name = "C1 Jack",
            .long_name = "C1 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputC2_Jack,
            .x_mm = px_to_mm<72>(204.9f),
            .y_mm = px_to_mm<72>(127.73f),
            .short_name = "C2 Jack",
            .long_name = "C2 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputC3_Jack,
            .x_mm = px_to_mm<72>(275.43f),
            .y_mm = px_to_mm<72>(127.73f),
            .short_name = "C3 Jack",
            .long_name = "C3 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputC4_Jack,
            .x_mm = px_to_mm<72>(345.99f),
            .y_mm = px_to_mm<72>(127.73f),
            .short_name = "C4 Jack",
            .long_name = "C4 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputIn_D,
            .x_mm = px_to_mm<72>(55.57f),
            .y_mm = px_to_mm<72>(145.77f),
            .short_name = "In D",
            .long_name = "In D",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputD1_Jack,
            .x_mm = px_to_mm<72>(99.08f),
            .y_mm = px_to_mm<72>(157.41f),
            .short_name = "D1 Jack",
            .long_name = "D1 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputD2_Jack,
            .x_mm = px_to_mm<72>(169.75f),
            .y_mm = px_to_mm<72>(157.41f),
            .short_name = "D2 Jack",
            .long_name = "D2 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputD3_Jack,
            .x_mm = px_to_mm<72>(240.27f),
            .y_mm = px_to_mm<72>(157.41f),
            .short_name = "D3 Jack",
            .long_name = "D3 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputD4_Jack,
            .x_mm = px_to_mm<72>(310.84f),
            .y_mm = px_to_mm<72>(157.41f),
            .short_name = "D4 Jack",
            .long_name = "D4 Jack",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
    }};

    static constexpr int NumOutJacks = 4;
    
    enum {
        OutputOut_1 = 0,
        OutputOut_2 = 1,
        OutputOut_3 = 2,
        OutputOut_4 = 3,
    };

    static constexpr std::array<OutJackDef, NumOutJacks> OutJacks{{
        {
            .id = OutputOut_1,
            .x_mm = px_to_mm<72>(99.08f),
            .y_mm = px_to_mm<72>(37.9f),
            .short_name = "Out 1",
            .long_name = "Out 1",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_2,
            .x_mm = px_to_mm<72>(169.64f),
            .y_mm = px_to_mm<72>(37.9f),
            .short_name = "Out 2",
            .long_name = "Out 2",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_3,
            .x_mm = px_to_mm<72>(240.2f),
            .y_mm = px_to_mm<72>(37.9f),
            .short_name = "Out 3",
            .long_name = "Out 3",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOut_4,
            .x_mm = px_to_mm<72>(310.76f),
            .y_mm = px_to_mm<72>(37.9f),
            .short_name = "Out 4",
            .long_name = "Out 4",
            .signal_type = OutJackDef::Analog,
        },
    }};

    static constexpr int NumSwitches = 16;
    
    enum {
        SwitchA1_Button = 0,
        SwitchA2_Button = 1,
        SwitchA3_Button = 2,
        SwitchA4_Button = 3,
        SwitchB1_Button = 4,
        SwitchB2_Button = 5,
        SwitchB3_Button = 6,
        SwitchB4_Button = 7,
        SwitchC1_Button = 8,
        SwitchC2_Button = 9,
        SwitchC3_Button = 10,
        SwitchC4_Button = 11,
        SwitchD1_Button = 12,
        SwitchD2_Button = 13,
        SwitchD3_Button = 14,
        SwitchD4_Button = 15,
    };

    static constexpr std::array<SwitchDef, NumSwitches> Switches{{
        {
            .id = SwitchA1_Button,
            .x_mm = px_to_mm<72>(235.61f),
            .y_mm = px_to_mm<72>(195.69f),
            .short_name = "A1 Button",
            .long_name = "A1 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchA2_Button,
            .x_mm = px_to_mm<72>(274.49f),
            .y_mm = px_to_mm<72>(195.69f),
            .short_name = "A2 Button",
            .long_name = "A2 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchA3_Button,
            .x_mm = px_to_mm<72>(313.37f),
            .y_mm = px_to_mm<72>(195.69f),
            .short_name = "A3 Button",
            .long_name = "A3 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchA4_Button,
            .x_mm = px_to_mm<72>(352.25f),
            .y_mm = px_to_mm<72>(195.69f),
            .short_name = "A4 Button",
            .long_name = "A4 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchB1_Button,
            .x_mm = px_to_mm<72>(235.61f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B1 Button",
            .long_name = "B1 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchB2_Button,
            .x_mm = px_to_mm<72>(274.49f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B2 Button",
            .long_name = "B2 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchB3_Button,
            .x_mm = px_to_mm<72>(313.37f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B3 Button",
            .long_name = "B3 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchB4_Button,
            .x_mm = px_to_mm<72>(352.25f),
            .y_mm = px_to_mm<72>(234.57f),
            .short_name = "B4 Button",
            .long_name = "B4 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchC1_Button,
            .x_mm = px_to_mm<72>(235.61f),
            .y_mm = px_to_mm<72>(273.45f),
            .short_name = "C1 Button",
            .long_name = "C1 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchC2_Button,
            .x_mm = px_to_mm<72>(274.49f),
            .y_mm = px_to_mm<72>(273.45f),
            .short_name = "C2 Button",
            .long_name = "C2 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchC3_Button,
            .x_mm = px_to_mm<72>(313.37f),
            .y_mm = px_to_mm<72>(273.45f),
            .short_name = "C3 Button",
            .long_name = "C3 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchC4_Button,
            .x_mm = px_to_mm<72>(352.25f),
            .y_mm = px_to_mm<72>(273.45f),
            .short_name = "C4 Button",
            .long_name = "C4 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchD1_Button,
            .x_mm = px_to_mm<72>(235.61f),
            .y_mm = px_to_mm<72>(312.33f),
            .short_name = "D1 Button",
            .long_name = "D1 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchD2_Button,
            .x_mm = px_to_mm<72>(274.49f),
            .y_mm = px_to_mm<72>(312.33f),
            .short_name = "D2 Button",
            .long_name = "D2 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchD3_Button,
            .x_mm = px_to_mm<72>(313.37f),
            .y_mm = px_to_mm<72>(312.33f),
            .short_name = "D3 Button",
            .long_name = "D3 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchD4_Button,
            .x_mm = px_to_mm<72>(352.25f),
            .y_mm = px_to_mm<72>(312.33f),
            .short_name = "D4 Button",
            .long_name = "D4 Button",
            .switch_type = SwitchDef::LatchingButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
    }};

    static constexpr int NumDiscreteLeds = 0;
    

    static constexpr std::array<LedDef, NumDiscreteLeds> Leds{{
    }};

};
