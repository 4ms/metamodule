#pragma once
#include "CoreModules/coreProcessor.h"
#include "CoreModules/info/module_info_base.hh"

struct SMRInfo : ModuleInfoBase {
    static constexpr std::string_view slug{"SMR"};
    static constexpr std::string_view description{"Spectral Multiband Resonator"};
    static constexpr uint32_t width_hp = 26;
    static constexpr std::string_view svg_filename{"res/SMR-artwork.svg"};

    static constexpr int NumKnobs = 12;
    
    enum {
        KnobFreq_Nudge_Odds = 0,
        KnobFreq_Nudge_Evens = 1,
        KnobSlider_1 = 2,
        KnobSlider_2 = 3,
        KnobSlider_3 = 4,
        KnobSlider_4 = 5,
        KnobSlider_5 = 6,
        KnobSlider_6 = 7,
        KnobRotate = 8,
        KnobMorph = 9,
        KnobSpread = 10,
        KnobRes__Q_ = 11,
    };

    static constexpr std::array<KnobDef, NumKnobs> Knobs{{
        {
            .id = KnobFreq_Nudge_Odds,
            .x_mm = px_to_mm<72>(22.71f),
            .y_mm = px_to_mm<72>(43.03f),
            .short_name = "Freq Nudge Odds",
            .long_name = "Freq Nudge Odds",
            .default_val = 0.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobFreq_Nudge_Evens,
            .x_mm = px_to_mm<72>(350.57f),
            .y_mm = px_to_mm<72>(43.03f),
            .short_name = "Freq Nudge Evens",
            .long_name = "Freq Nudge Evens",
            .default_val = 0.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobSlider_1,
            .x_mm = px_to_mm<72>(69.725f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 1",
            .long_name = "Slider 1",
            .default_val = 1.0f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobSlider_2,
            .x_mm = px_to_mm<72>(116.355f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 2",
            .long_name = "Slider 2",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobSlider_3,
            .x_mm = px_to_mm<72>(163.225f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 3",
            .long_name = "Slider 3",
            .default_val = 0.0f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobSlider_4,
            .x_mm = px_to_mm<72>(210.025f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 4",
            .long_name = "Slider 4",
            .default_val = 0.0f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobSlider_5,
            .x_mm = px_to_mm<72>(256.825f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 5",
            .long_name = "Slider 5",
            .default_val = 0.5f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobSlider_6,
            .x_mm = px_to_mm<72>(303.625f),
            .y_mm = px_to_mm<72>(100.58f),
            .short_name = "Slider 6",
            .long_name = "Slider 6",
            .default_val = 1.0f,
            .knob_style = KnobDef::Slider25mm,
            .orientation = KnobDef::Vertical,
        },
        {
            .id = KnobRotate,
            .x_mm = px_to_mm<72>(186.43f),
            .y_mm = px_to_mm<72>(284.99f),
            .short_name = "Rotate",
            .long_name = "Rotate",
            .default_val = 0.0f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobMorph,
            .x_mm = px_to_mm<72>(294.11f),
            .y_mm = px_to_mm<72>(315.76f),
            .short_name = "Morph",
            .long_name = "Morph",
            .default_val = 0.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobSpread,
            .x_mm = px_to_mm<72>(350.78f),
            .y_mm = px_to_mm<72>(315.76f),
            .short_name = "Spread",
            .long_name = "Spread",
            .default_val = 0.0f,
            .knob_style = KnobDef::Small,
            .orientation = KnobDef::Round,
        },
        {
            .id = KnobRes__Q_,
            .x_mm = px_to_mm<72>(79.66f),
            .y_mm = px_to_mm<72>(316.03f),
            .short_name = "Res (Q)",
            .long_name = "Res (Q)",
            .default_val = 0.0f,
            .knob_style = KnobDef::Medium,
            .orientation = KnobDef::Round,
        },
    }};

    static constexpr int NumInJacks = 19;
    
    enum {
        InputFreq_Odds_Cv = 0,
        InputFreq_Evens_Cv = 1,
        InputLock_Odds_Gate_Trig = 2,
        InputLock_Evens_Gate_Trig = 3,
        InputLevel_Cv_1 = 4,
        InputLevel_Cv_2 = 5,
        InputLevel_Cv_3 = 6,
        InputLevel_Cv_4 = 7,
        InputLevel_Cv_5 = 8,
        InputLevel_Cv_6 = 9,
        InputRotate_Cv_In = 10,
        InputRotate_Trig_Up = 11,
        InputRotate_Trig_Down = 12,
        InputIn_Odds = 13,
        InputIn_Evens = 14,
        InputScale_Cv = 15,
        InputRes__Q__Cv = 16,
        InputMorph_Cv = 17,
        InputSpread_Cv = 18,
    };

    static constexpr std::array<InJackDef, NumInJacks> InJacks{{
        {
            .id = InputFreq_Odds_Cv,
            .x_mm = px_to_mm<72>(22.71f),
            .y_mm = px_to_mm<72>(82.89f),
            .short_name = "Freq Odds CV",
            .long_name = "Freq Odds CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputFreq_Evens_Cv,
            .x_mm = px_to_mm<72>(350.89f),
            .y_mm = px_to_mm<72>(82.89f),
            .short_name = "Freq Evens CV",
            .long_name = "Freq Evens CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLock_Odds_Gate_Trig,
            .x_mm = px_to_mm<72>(22.71f),
            .y_mm = px_to_mm<72>(122.19f),
            .short_name = "Lock Odds Gate/Trig",
            .long_name = "Lock Odds Gate/Trig",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLock_Evens_Gate_Trig,
            .x_mm = px_to_mm<72>(350.89f),
            .y_mm = px_to_mm<72>(122.19f),
            .short_name = "Lock Evens Gate/Trig",
            .long_name = "Lock Evens Gate/Trig",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_1,
            .x_mm = px_to_mm<72>(61.05f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 1",
            .long_name = "Level CV 1",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_2,
            .x_mm = px_to_mm<72>(108.29f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 2",
            .long_name = "Level CV 2",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_3,
            .x_mm = px_to_mm<72>(155.21f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 3",
            .long_name = "Level CV 3",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_4,
            .x_mm = px_to_mm<72>(217.34f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 4",
            .long_name = "Level CV 4",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_5,
            .x_mm = px_to_mm<72>(264.24f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 5",
            .long_name = "Level CV 5",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputLevel_Cv_6,
            .x_mm = px_to_mm<72>(311.44f),
            .y_mm = px_to_mm<72>(166.25f),
            .short_name = "Level CV 6",
            .long_name = "Level CV 6",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputRotate_Cv_In,
            .x_mm = px_to_mm<72>(186.72f),
            .y_mm = px_to_mm<72>(209.63f),
            .short_name = "Rotate CV In",
            .long_name = "Rotate CV In",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputRotate_Trig_Up,
            .x_mm = px_to_mm<72>(116.35f),
            .y_mm = px_to_mm<72>(243.84f),
            .short_name = "Rotate Trig Up",
            .long_name = "Rotate Trig Up",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputRotate_Trig_Down,
            .x_mm = px_to_mm<72>(257.0f),
            .y_mm = px_to_mm<72>(244.85f),
            .short_name = "Rotate Trig Down",
            .long_name = "Rotate Trig Down",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputIn_Odds,
            .x_mm = px_to_mm<72>(25.44f),
            .y_mm = px_to_mm<72>(247.06f),
            .short_name = "IN odds",
            .long_name = "IN odds",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputIn_Evens,
            .x_mm = px_to_mm<72>(66.79f),
            .y_mm = px_to_mm<72>(247.28f),
            .short_name = "IN evens",
            .long_name = "IN evens",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputScale_Cv,
            .x_mm = px_to_mm<72>(47.62f),
            .y_mm = px_to_mm<72>(283.22f),
            .short_name = "Scale CV",
            .long_name = "Scale CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputRes__Q__Cv,
            .x_mm = px_to_mm<72>(105.72f),
            .y_mm = px_to_mm<72>(283.22f),
            .short_name = "Res (Q) CV",
            .long_name = "Res (Q) CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputMorph_Cv,
            .x_mm = px_to_mm<72>(267.54f),
            .y_mm = px_to_mm<72>(283.22f),
            .short_name = "Morph CV",
            .long_name = "Morph CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
        {
            .id = InputSpread_Cv,
            .x_mm = px_to_mm<72>(325.7f),
            .y_mm = px_to_mm<72>(283.22f),
            .short_name = "Spread CV",
            .long_name = "Spread CV",
            .unpatched_val = 0.f,
            .signal_type = InJackDef::Analog,
        },
    }};

    static constexpr int NumOutJacks = 8;
    
    enum {
        OutputEnv__Out_4 = 0,
        OutputEnv__Out_5 = 1,
        OutputEnv__Out_6 = 2,
        OutputEnv__Out_1 = 3,
        OutputEnv__Out_2 = 4,
        OutputEnv__Out_3 = 5,
        OutputOdds = 6,
        OutputEvens = 7,
    };

    static constexpr std::array<OutJackDef, NumOutJacks> OutJacks{{
        {
            .id = OutputEnv__Out_4,
            .x_mm = px_to_mm<72>(229.96f),
            .y_mm = px_to_mm<72>(206.48f),
            .short_name = "Env. Out 4",
            .long_name = "Env. Out 4",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv__Out_5,
            .x_mm = px_to_mm<72>(273.19f),
            .y_mm = px_to_mm<72>(206.48f),
            .short_name = "Env. Out 5",
            .long_name = "Env. Out 5",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv__Out_6,
            .x_mm = px_to_mm<72>(316.41f),
            .y_mm = px_to_mm<72>(206.48f),
            .short_name = "Env. Out 6",
            .long_name = "Env. Out 6",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv__Out_1,
            .x_mm = px_to_mm<72>(57.15f),
            .y_mm = px_to_mm<72>(206.62f),
            .short_name = "Env. Out 1",
            .long_name = "Env. Out 1",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv__Out_2,
            .x_mm = px_to_mm<72>(100.38f),
            .y_mm = px_to_mm<72>(206.62f),
            .short_name = "Env. Out 2",
            .long_name = "Env. Out 2",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEnv__Out_3,
            .x_mm = px_to_mm<72>(143.61f),
            .y_mm = px_to_mm<72>(206.62f),
            .short_name = "Env. Out 3",
            .long_name = "Env. Out 3",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputOdds,
            .x_mm = px_to_mm<72>(302.39f),
            .y_mm = px_to_mm<72>(246.94f),
            .short_name = "odds",
            .long_name = "odds",
            .signal_type = OutJackDef::Analog,
        },
        {
            .id = OutputEvens,
            .x_mm = px_to_mm<72>(344.06f),
            .y_mm = px_to_mm<72>(247.16f),
            .short_name = "evens",
            .long_name = "evens",
            .signal_type = OutJackDef::Analog,
        },
    }};

    static constexpr int NumSwitches = 12;
    
    enum {
        SwitchLock_Button_1 = 0,
        SwitchLock_Button_2 = 1,
        SwitchLock_Button_3 = 2,
        SwitchLock_Button_4 = 3,
        SwitchLock_Button_5 = 4,
        SwitchLock_Button_6 = 5,
        Switch_135_1 = 6,
        Switch_6_246 = 7,
        SwitchCv_Slew = 8,
        SwitchPost_Pre = 9,
        SwitchFast___Slow = 10,
        SwitchScale_Rotation = 11,
    };

    static constexpr std::array<SwitchDef, NumSwitches> Switches{{
        {
            .id = SwitchLock_Button_1,
            .x_mm = px_to_mm<72>(62.21f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 1",
            .long_name = "Lock Button 1",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchLock_Button_2,
            .x_mm = px_to_mm<72>(109.23f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 2",
            .long_name = "Lock Button 2",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchLock_Button_3,
            .x_mm = px_to_mm<72>(156.03f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 3",
            .long_name = "Lock Button 3",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchLock_Button_4,
            .x_mm = px_to_mm<72>(217.34f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 4",
            .long_name = "Lock Button 4",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchLock_Button_5,
            .x_mm = px_to_mm<72>(264.24f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 5",
            .long_name = "Lock Button 5",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchLock_Button_6,
            .x_mm = px_to_mm<72>(310.67f),
            .y_mm = px_to_mm<72>(37.83f),
            .short_name = "Lock Button 6",
            .long_name = "Lock Button 6",
            .switch_type = SwitchDef::MomentaryButton,
            .orientation = SwitchDef::Round,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = Switch_135_1,
            .x_mm = px_to_mm<72>(22.71f),
            .y_mm = px_to_mm<72>(153.925f),
            .short_name = "135 1",
            .long_name = "135 1",
            .switch_type = SwitchDef::Toggle2pos,
            .orientation = SwitchDef::Horizontal,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = Switch_6_246,
            .x_mm = px_to_mm<72>(350.89f),
            .y_mm = px_to_mm<72>(153.925f),
            .short_name = "6 246",
            .long_name = "6 246",
            .switch_type = SwitchDef::Toggle2pos,
            .orientation = SwitchDef::Horizontal,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchCv_Slew,
            .x_mm = px_to_mm<72>(20.98f),
            .y_mm = px_to_mm<72>(186.985f),
            .short_name = "CV Slew",
            .long_name = "CV Slew",
            .switch_type = SwitchDef::Toggle2pos,
            .orientation = SwitchDef::Horizontal,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchPost_Pre,
            .x_mm = px_to_mm<72>(355.26f),
            .y_mm = px_to_mm<72>(187.245f),
            .short_name = "Post Pre",
            .long_name = "Post Pre",
            .switch_type = SwitchDef::Toggle2pos,
            .orientation = SwitchDef::Horizontal,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchFast___Slow,
            .x_mm = px_to_mm<72>(355.26f),
            .y_mm = px_to_mm<72>(211.615f),
            .short_name = "Fast | Slow",
            .long_name = "Fast | Slow",
            .switch_type = SwitchDef::Toggle3pos,
            .orientation = SwitchDef::Horizontal,
            .encoder_knob_style = SwitchDef::None,
        },
        {
            .id = SwitchScale_Rotation,
            .x_mm = px_to_mm<72>(21.99f),
            .y_mm = px_to_mm<72>(319.395f),
            .short_name = "Scale Rotation",
            .long_name = "Scale Rotation",
            .switch_type = SwitchDef::Toggle2pos,
            .orientation = SwitchDef::Vertical,
            .encoder_knob_style = SwitchDef::None,
        },
    }};

    static constexpr int NumDiscreteLeds = 27;
    
    enum {
        LedEnvouts_Led1__Rgb_ = 0,
        LedEnvouts_Led2__Rgb_ = 1,
        LedEnvouts_Led3__Rgb_ = 2,
        LedEnvouts_Led4__Rgb_ = 3,
        LedEnvouts_Led5__Rgb_ = 4,
        LedEnvouts_Led6__Rgb_ = 5,
        LedInput_Clip__Redwhite_ = 6,
        LedLed1__Rgb_ = 7,
        LedLed20__Rgb_ = 8,
        LedLed2__Rgb_ = 9,
        LedLed19__Rgb_ = 10,
        LedLed3__Rgb_ = 11,
        LedLed18__Rgb_ = 12,
        LedLed4__Rgb_ = 13,
        LedLed17__Rgb_ = 14,
        LedLed5__Rgb_ = 15,
        LedLed16__Rgb_ = 16,
        LedLed6__Rgb_ = 17,
        LedLed7__Rgb_ = 18,
        LedLed15__Rgb_ = 19,
        LedLed8__Rgb_ = 20,
        LedLed14__Rgb_ = 21,
        LedLed9__Rgb_ = 22,
        LedLed13__Rgb_ = 23,
        LedLed12__Rgb_ = 24,
        LedLed10__Rgb_ = 25,
        LedLed11__Rgb_ = 26,
    };

    static constexpr std::array<LedDef, NumDiscreteLeds> Leds{{
        {
            .id = LedEnvouts_Led1__Rgb_,
            .x_mm = px_to_mm<72>(75.55f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnvouts_Led2__Rgb_,
            .x_mm = px_to_mm<72>(119.29f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnvouts_Led3__Rgb_,
            .x_mm = px_to_mm<72>(162.49f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnvouts_Led4__Rgb_,
            .x_mm = px_to_mm<72>(211.22f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnvouts_Led5__Rgb_,
            .x_mm = px_to_mm<72>(254.42f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedEnvouts_Led6__Rgb_,
            .x_mm = px_to_mm<72>(298.16f),
            .y_mm = px_to_mm<72>(191.74f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedInput_Clip__Redwhite_,
            .x_mm = px_to_mm<72>(45.51f),
            .y_mm = px_to_mm<72>(230.23f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed1__Rgb_,
            .x_mm = px_to_mm<72>(186.84f),
            .y_mm = px_to_mm<72>(237.56f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed20__Rgb_,
            .x_mm = px_to_mm<72>(170.34f),
            .y_mm = px_to_mm<72>(239.58f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed2__Rgb_,
            .x_mm = px_to_mm<72>(201.82f),
            .y_mm = px_to_mm<72>(239.68f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed19__Rgb_,
            .x_mm = px_to_mm<72>(155.79f),
            .y_mm = px_to_mm<72>(246.04f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed3__Rgb_,
            .x_mm = px_to_mm<72>(216.37f),
            .y_mm = px_to_mm<72>(246.14f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed18__Rgb_,
            .x_mm = px_to_mm<72>(143.64f),
            .y_mm = px_to_mm<72>(256.11f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed4__Rgb_,
            .x_mm = px_to_mm<72>(228.52f),
            .y_mm = px_to_mm<72>(256.21f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed17__Rgb_,
            .x_mm = px_to_mm<72>(135.57f),
            .y_mm = px_to_mm<72>(269.44f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed5__Rgb_,
            .x_mm = px_to_mm<72>(236.59f),
            .y_mm = px_to_mm<72>(269.54f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed16__Rgb_,
            .x_mm = px_to_mm<72>(132.48f),
            .y_mm = px_to_mm<72>(284.88f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed6__Rgb_,
            .x_mm = px_to_mm<72>(239.69f),
            .y_mm = px_to_mm<72>(284.88f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed7__Rgb_,
            .x_mm = px_to_mm<72>(237.23f),
            .y_mm = px_to_mm<72>(300.32f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed15__Rgb_,
            .x_mm = px_to_mm<72>(135.57f),
            .y_mm = px_to_mm<72>(300.42f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed8__Rgb_,
            .x_mm = px_to_mm<72>(229.16f),
            .y_mm = px_to_mm<72>(313.65f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed14__Rgb_,
            .x_mm = px_to_mm<72>(143.64f),
            .y_mm = px_to_mm<72>(313.75f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed9__Rgb_,
            .x_mm = px_to_mm<72>(217.01f),
            .y_mm = px_to_mm<72>(323.72f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed13__Rgb_,
            .x_mm = px_to_mm<72>(155.79f),
            .y_mm = px_to_mm<72>(323.82f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed12__Rgb_,
            .x_mm = px_to_mm<72>(170.34f),
            .y_mm = px_to_mm<72>(330.28f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed10__Rgb_,
            .x_mm = px_to_mm<72>(202.74f),
            .y_mm = px_to_mm<72>(330.28f),
            .led_color = LedDef::Red,
        },
        {
            .id = LedLed11__Rgb_,
            .x_mm = px_to_mm<72>(186.84f),
            .y_mm = px_to_mm<72>(332.3f),
            .led_color = LedDef::Red,
        },
    }};

};
