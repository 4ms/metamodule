name: Run VCV unit tests

on: [push]

env:
  rack-sdk-version: 2.3.0

jobs:
  build:
    
    strategy:
      fail-fast: false
      matrix:
        os: 
          - { os: windows, shell: msys2, rack-os-name: win-x64 } 
          - { os: ubuntu,  shell: bash, rack-os-name: lin-x64  }
          # - { os: macos,   shell: bash  }
        exclude:
          - os: { os: windows, shell: msys2 }
            compiler: {cpp: clang++, c: clang}
    runs-on: '${{ matrix.os.os }}-latest'
    defaults:
      run:
        shell: '${{ matrix.os.shell }} {0}'
    env:
      CC: gcc
      CXX: g++

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Usually this is always needed
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Get Rack-SDK
        run: |
          pushd $HOME
          curl -o Rack-SDK.zip https://vcvrack.com/downloads/Rack-SDK-${{ env.rack-sdk-version }}-${{ matrix.os.rack-os-name }}.zip
          unzip Rack-SDK.zip

      - name: Install mac dependencies
        shell: bash
        if: matrix.os.os == 'macos'
        run: brew install ninja sdl2

      - name: Install windows dependencies (MSYS2)
        if: matrix.os.os =='windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            make

      - name: Build and run tests
        run: |
          export RACK_DIR=$HOME/Rack-SDK
          cd vcv
          make tests
