#!/bin/bash

set -x -e

# Path to the mcufont encoder program
MCUFONT=/Volumes/REPOS/esp/3rdparty/mcufont/encoder/mcufont

# Character ranges to include in the fonts.
# Default: ASCII only
# CHARS=32-127
CHARS='32-127 gb2312'

# Number of iterations in optimization
# Higher numbers compress better
ITERS=25

function build {
	infile=`basename $1`
	outfile=$2
	fmt=$3
	size=$4
	bw=$5
	ext="${infile##*.}"
	noext="${infile%.*}"
	if [ $ext = 'ttf' ]; then
		dat=$noext$size$bw.dat
		$MCUFONT import_ttf $1 $size $bw
	else
		dat=$noext.dat
		$MCUFONT import_bdf $1
	fi

	$MCUFONT filter $dat $CHARS

	if [ $outfile = 'LargeNumbers' ]; then
		$MCUFONT filter $dat 0x20-0x39
	fi

	if [ $fmt = 'rlefont' ]; then
		$MCUFONT rlefont_optimize $dat $ITERS
		$MCUFONT rlefont_export $dat $outfile.c
	else
		$MCUFONT bwfont_export $dat $outfile.c
	fi
}

# Commands are of form: build <input_file> <output_file> <output_format> [size] [bw]
# If bw is not given, builds an antialiased font.

#rm -f *.c
#build FangZhengFangSong-GBK.ttf FangZhengFangSong16 rlefont 16 bw
#build FangZhengFangSong-GBK.ttf FangZhengFangSong24 rlefont 24 bw
build YiPinQingYeShouXieTi-2.ttf YiPinQingYeShouXieTi24 rlefont 24 bw

echo '// This file is generated by build_fonts.sh' > fonts.h
for file in *.c; do
	echo >> fonts.h
	noext="${file%.*}"
	upper=${noext^^}
	defname='GDISP_INCLUDE_FONT_'$upper
	echo '#if defined('$defname') && '$defname >> fonts.h
	echo '#define GDISP_FONT_FOUND' >> fonts.h
	echo '#include "'$file'"' >> fonts.h
	echo '#endif' >> fonts.h
done

echo >> fonts.h
echo '#if defined(GDISP_INCLUDE_USER_FONTS) && GDISP_INCLUDE_USER_FONTS' >> fonts.h
echo '#define GDISP_FONT_FOUND' >> fonts.h
echo '#include "userfonts.h"' >> fonts.h
echo '#endif' >> fonts.h
echo >> fonts.h
echo '#ifndef GDISP_FONT_FOUND' >> fonts.h
echo '#error "GDISP: No fonts have been included"' >> fonts.h
echo '#endif' >> fonts.h
