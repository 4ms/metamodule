
build/testbrand.elf:     file format elf32-littlearm


Disassembly of section .hash:

00000094 <.hash>:
  94:	00000083 	andeq	r0, r0, r3, lsl #1
  98:	00000093 	muleq	r0, r3, r0
  9c:	00000064 	andeq	r0, r0, r4, rrx
  a0:	00000000 	andeq	r0, r0, r0
  a4:	00000053 	andeq	r0, r0, r3, asr r0
  a8:	00000072 	andeq	r0, r0, r2, ror r0
  ac:	00000008 	andeq	r0, r0, r8
  b0:	0000008c 	andeq	r0, r0, ip, lsl #1
  b4:	00000074 	andeq	r0, r0, r4, ror r0
  b8:	00000020 	andeq	r0, r0, r0, lsr #32
  bc:	00000026 	andeq	r0, r0, r6, lsr #32
  c0:	00000000 	andeq	r0, r0, r0
  c4:	00000000 	andeq	r0, r0, r0
  c8:	0000007a 	andeq	r0, r0, sl, ror r0
  cc:	0000000d 	andeq	r0, r0, sp
  d0:	0000005b 	andeq	r0, r0, fp, asr r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	00000065 	andeq	r0, r0, r5, rrx
  dc:	00000031 	andeq	r0, r0, r1, lsr r0
  e0:	0000004b 	andeq	r0, r0, fp, asr #32
  e4:	0000000c 	andeq	r0, r0, ip
  e8:	00000000 	andeq	r0, r0, r0
  ec:	00000085 	andeq	r0, r0, r5, lsl #1
  f0:	0000006b 	andeq	r0, r0, fp, rrx
  f4:	00000042 	andeq	r0, r0, r2, asr #32
  f8:	0000007e 	andeq	r0, r0, lr, ror r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	00000066 	andeq	r0, r0, r6, rrx
 104:	0000008b 	andeq	r0, r0, fp, lsl #1
 108:	00000022 	andeq	r0, r0, r2, lsr #32
 10c:	00000087 	andeq	r0, r0, r7, lsl #1
 110:	0000002b 	andeq	r0, r0, fp, lsr #32
 114:	0000003d 	andeq	r0, r0, sp, lsr r0
 118:	00000048 	andeq	r0, r0, r8, asr #32
 11c:	00000091 	muleq	r0, r1, r0
 120:	00000000 	andeq	r0, r0, r0
 124:	0000002e 	andeq	r0, r0, lr, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000077 	andeq	r0, r0, r7, ror r0
 130:	00000000 	andeq	r0, r0, r0
 134:	0000008f 	andeq	r0, r0, pc, lsl #1
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000000 	andeq	r0, r0, r0
 140:	0000008e 	andeq	r0, r0, lr, lsl #1
 144:	00000000 	andeq	r0, r0, r0
 148:	00000078 	andeq	r0, r0, r8, ror r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	00000000 	andeq	r0, r0, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	00000089 	andeq	r0, r0, r9, lsl #1
 15c:	0000001e 	andeq	r0, r0, lr, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000054 	andeq	r0, r0, r4, asr r0
 168:	00000017 	andeq	r0, r0, r7, lsl r0
 16c:	00000000 	andeq	r0, r0, r0
 170:	00000060 	andeq	r0, r0, r0, rrx
 174:	00000000 	andeq	r0, r0, r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000086 	andeq	r0, r0, r6, lsl #1
 180:	00000000 	andeq	r0, r0, r0
 184:	00000000 	andeq	r0, r0, r0
 188:	00000003 	andeq	r0, r0, r3
 18c:	0000007f 	andeq	r0, r0, pc, ror r0
 190:	00000000 	andeq	r0, r0, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	00000000 	andeq	r0, r0, r0
 19c:	0000008d 	andeq	r0, r0, sp, lsl #1
 1a0:	0000006f 	andeq	r0, r0, pc, rrx
 1a4:	00000000 	andeq	r0, r0, r0
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000052 	andeq	r0, r0, r2, asr r0
 1b0:	0000005a 	andeq	r0, r0, sl, asr r0
 1b4:	00000081 	andeq	r0, r0, r1, lsl #1
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000062 	andeq	r0, r0, r2, rrx
 1c0:	00000000 	andeq	r0, r0, r0
 1c4:	0000000a 	andeq	r0, r0, sl
 1c8:	00000000 	andeq	r0, r0, r0
 1cc:	0000006e 	andeq	r0, r0, lr, rrx
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	00000056 	andeq	r0, r0, r6, asr r0
 1dc:	00000075 	andeq	r0, r0, r5, ror r0
 1e0:	00000090 	muleq	r0, r0, r0
 1e4:	00000028 	andeq	r0, r0, r8, lsr #32
 1e8:	00000033 	andeq	r0, r0, r3, lsr r0
 1ec:	00000092 	muleq	r0, r2, r0
 1f0:	00000073 	andeq	r0, r0, r3, ror r0
 1f4:	00000084 	andeq	r0, r0, r4, lsl #1
 1f8:	00000013 	andeq	r0, r0, r3, lsl r0
 1fc:	0000007b 	andeq	r0, r0, fp, ror r0
 200:	00000021 	andeq	r0, r0, r1, lsr #32
 204:	00000000 	andeq	r0, r0, r0
 208:	00000019 	andeq	r0, r0, r9, lsl r0
 20c:	00000000 	andeq	r0, r0, r0
 210:	00000000 	andeq	r0, r0, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	00000000 	andeq	r0, r0, r0
 21c:	0000005c 	andeq	r0, r0, ip, asr r0
 220:	0000006c 	andeq	r0, r0, ip, rrx
 224:	00000000 	andeq	r0, r0, r0
 228:	0000004c 	andeq	r0, r0, ip, asr #32
 22c:	0000001c 	andeq	r0, r0, ip, lsl r0
 230:	00000088 	andeq	r0, r0, r8, lsl #1
 234:	00000057 	andeq	r0, r0, r7, asr r0
 238:	00000061 	andeq	r0, r0, r1, rrx
 23c:	00000000 	andeq	r0, r0, r0
 240:	0000001b 	andeq	r0, r0, fp, lsl r0
 244:	00000000 	andeq	r0, r0, r0
 248:	00000000 	andeq	r0, r0, r0
 24c:	00000070 	andeq	r0, r0, r0, ror r0
 250:	00000000 	andeq	r0, r0, r0
 254:	00000058 	andeq	r0, r0, r8, asr r0
 258:	00000000 	andeq	r0, r0, r0
 25c:	00000083 	andeq	r0, r0, r3, lsl #1
 260:	00000080 	andeq	r0, r0, r0, lsl #1
 264:	00000000 	andeq	r0, r0, r0
 268:	00000068 	andeq	r0, r0, r8, rrx
 26c:	00000000 	andeq	r0, r0, r0
 270:	00000018 	andeq	r0, r0, r8, lsl r0
 274:	00000082 	andeq	r0, r0, r2, lsl #1
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000000 	andeq	r0, r0, r0
 280:	00000071 	andeq	r0, r0, r1, ror r0
 284:	00000000 	andeq	r0, r0, r0
 288:	0000002f 	andeq	r0, r0, pc, lsr #32
 28c:	0000008a 	andeq	r0, r0, sl, lsl #1
 290:	00000076 	andeq	r0, r0, r6, ror r0
 294:	00000000 	andeq	r0, r0, r0
 298:	00000069 	andeq	r0, r0, r9, rrx
 29c:	00000079 	andeq	r0, r0, r9, ror r0
 2a0:	00000035 	andeq	r0, r0, r5, lsr r0
 2a4:	00000000 	andeq	r0, r0, r0
 2a8:	00000000 	andeq	r0, r0, r0
 2ac:	00000000 	andeq	r0, r0, r0
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	00000000 	andeq	r0, r0, r0
 2bc:	00000000 	andeq	r0, r0, r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000000 	andeq	r0, r0, r0
 2c8:	00000000 	andeq	r0, r0, r0
 2cc:	00000000 	andeq	r0, r0, r0
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000004 	andeq	r0, r0, r4
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	00000000 	andeq	r0, r0, r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	00000000 	andeq	r0, r0, r0
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	00000000 	andeq	r0, r0, r0
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000000 	andeq	r0, r0, r0
 300:	00000007 	andeq	r0, r0, r7
 304:	00000000 	andeq	r0, r0, r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000000 	andeq	r0, r0, r0
 310:	00000000 	andeq	r0, r0, r0
 314:	00000000 	andeq	r0, r0, r0
 318:	00000000 	andeq	r0, r0, r0
 31c:	00000000 	andeq	r0, r0, r0
 320:	00000000 	andeq	r0, r0, r0
 324:	00000000 	andeq	r0, r0, r0
 328:	00000000 	andeq	r0, r0, r0
 32c:	00000000 	andeq	r0, r0, r0
 330:	00000000 	andeq	r0, r0, r0
 334:	00000000 	andeq	r0, r0, r0
 338:	00000015 	andeq	r0, r0, r5, lsl r0
 33c:	00000000 	andeq	r0, r0, r0
 340:	00000000 	andeq	r0, r0, r0
 344:	00000000 	andeq	r0, r0, r0
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000000 	andeq	r0, r0, r0
 350:	00000000 	andeq	r0, r0, r0
 354:	00000016 	andeq	r0, r0, r6, lsl r0
 358:	00000000 	andeq	r0, r0, r0
 35c:	00000000 	andeq	r0, r0, r0
 360:	00000000 	andeq	r0, r0, r0
 364:	00000000 	andeq	r0, r0, r0
 368:	00000000 	andeq	r0, r0, r0
 36c:	00000000 	andeq	r0, r0, r0
 370:	00000000 	andeq	r0, r0, r0
 374:	0000002a 	andeq	r0, r0, sl, lsr #32
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000012 	andeq	r0, r0, r2, lsl r0
 380:	00000000 	andeq	r0, r0, r0
 384:	00000000 	andeq	r0, r0, r0
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000000 	andeq	r0, r0, r0
 390:	00000000 	andeq	r0, r0, r0
 394:	00000014 	andeq	r0, r0, r4, lsl r0
 398:	00000023 	andeq	r0, r0, r3, lsr #32
 39c:	00000000 	andeq	r0, r0, r0
 3a0:	00000038 	andeq	r0, r0, r8, lsr r0
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	00000010 	andeq	r0, r0, r0, lsl r0
 3b0:	0000001f 	andeq	r0, r0, pc, lsl r0
 3b4:	00000000 	andeq	r0, r0, r0
 3b8:	0000003a 	andeq	r0, r0, sl, lsr r0
 3bc:	00000000 	andeq	r0, r0, r0
 3c0:	00000024 	andeq	r0, r0, r4, lsr #32
 3c4:	00000000 	andeq	r0, r0, r0
 3c8:	00000000 	andeq	r0, r0, r0
 3cc:	00000000 	andeq	r0, r0, r0
 3d0:	00000043 	andeq	r0, r0, r3, asr #32
 3d4:	00000032 	andeq	r0, r0, r2, lsr r0
 3d8:	00000030 	andeq	r0, r0, r0, lsr r0
 3dc:	00000000 	andeq	r0, r0, r0
 3e0:	00000046 	andeq	r0, r0, r6, asr #32
 3e4:	0000001d 	andeq	r0, r0, sp, lsl r0
 3e8:	0000000e 	andeq	r0, r0, lr
 3ec:	00000036 	andeq	r0, r0, r6, lsr r0
 3f0:	00000025 	andeq	r0, r0, r5, lsr #32
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	00000000 	andeq	r0, r0, r0
 3fc:	0000000b 	andeq	r0, r0, fp
 400:	00000000 	andeq	r0, r0, r0
 404:	0000003c 	andeq	r0, r0, ip, lsr r0
 408:	0000003f 	andeq	r0, r0, pc, lsr r0
 40c:	00000000 	andeq	r0, r0, r0
 410:	00000000 	andeq	r0, r0, r0
 414:	00000000 	andeq	r0, r0, r0
 418:	0000004e 	andeq	r0, r0, lr, asr #32
 41c:	00000000 	andeq	r0, r0, r0
 420:	0000002d 	andeq	r0, r0, sp, lsr #32
 424:	00000000 	andeq	r0, r0, r0
 428:	0000004d 	andeq	r0, r0, sp, asr #32
 42c:	00000009 	andeq	r0, r0, r9
 430:	00000029 	andeq	r0, r0, r9, lsr #32
 434:	00000005 	andeq	r0, r0, r5
 438:	00000055 	andeq	r0, r0, r5, asr r0
 43c:	00000011 	andeq	r0, r0, r1, lsl r0
 440:	0000000f 	andeq	r0, r0, pc
 444:	00000045 	andeq	r0, r0, r5, asr #32
 448:	00000041 	andeq	r0, r0, r1, asr #32
 44c:	00000000 	andeq	r0, r0, r0
 450:	00000050 	andeq	r0, r0, r0, asr r0
 454:	00000000 	andeq	r0, r0, r0
 458:	00000000 	andeq	r0, r0, r0
 45c:	0000005f 	andeq	r0, r0, pc, asr r0
 460:	00000000 	andeq	r0, r0, r0
 464:	00000040 	andeq	r0, r0, r0, asr #32
 468:	00000047 	andeq	r0, r0, r7, asr #32
 46c:	0000005d 	andeq	r0, r0, sp, asr r0
 470:	0000003e 	andeq	r0, r0, lr, lsr r0
 474:	0000003b 	andeq	r0, r0, fp, lsr r0
 478:	00000000 	andeq	r0, r0, r0
 47c:	00000027 	andeq	r0, r0, r7, lsr #32
 480:	00000000 	andeq	r0, r0, r0
 484:	00000049 	andeq	r0, r0, r9, asr #32
 488:	0000002c 	andeq	r0, r0, ip, lsr #32
 48c:	0000004f 	andeq	r0, r0, pc, asr #32
 490:	00000000 	andeq	r0, r0, r0
 494:	00000044 	andeq	r0, r0, r4, asr #32
 498:	00000063 	andeq	r0, r0, r3, rrx
 49c:	00000067 	andeq	r0, r0, r7, rrx
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	00000034 	andeq	r0, r0, r4, lsr r0
 4a8:	00000000 	andeq	r0, r0, r0
 4ac:	0000005e 	andeq	r0, r0, lr, asr r0
 4b0:	00000037 	andeq	r0, r0, r7, lsr r0
 4b4:	00000000 	andeq	r0, r0, r0
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000000 	andeq	r0, r0, r0
 4c0:	00000039 	andeq	r0, r0, r9, lsr r0
 4c4:	0000001a 	andeq	r0, r0, sl, lsl r0
 4c8:	00000051 	andeq	r0, r0, r1, asr r0
 4cc:	0000007c 	andeq	r0, r0, ip, ror r0
 4d0:	0000004a 	andeq	r0, r0, sl, asr #32
 4d4:	00000000 	andeq	r0, r0, r0
 4d8:	00000006 	andeq	r0, r0, r6
 4dc:	00000000 	andeq	r0, r0, r0
 4e0:	0000007d 	andeq	r0, r0, sp, ror r0
 4e4:	00000000 	andeq	r0, r0, r0
 4e8:	0000006a 	andeq	r0, r0, sl, rrx
 4ec:	0000006d 	andeq	r0, r0, sp, rrx
 4f0:	00000059 	andeq	r0, r0, r9, asr r0

Disassembly of section .dynsym:

000004f4 <.dynsym>:
 4f4:	00000000 	andeq	r0, r0, r0
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	00000000 	andeq	r0, r0, r0
 500:	00000000 	andeq	r0, r0, r0
 504:	00000000 	andeq	r0, r0, r0
 508:	00003a1c 	andeq	r3, r0, ip, lsl sl
 50c:	00000000 	andeq	r0, r0, r0
 510:	00070003 	andeq	r0, r7, r3
 514:	00000000 	andeq	r0, r0, r0
 518:	00007cec 	andeq	r7, r0, ip, ror #25
 51c:	00000000 	andeq	r0, r0, r0
 520:	000d0003 	andeq	r0, sp, r3
 524:	00001436 	andeq	r1, r0, r6, lsr r4
 528:	00005258 	andeq	r5, r0, r8, asr r2
 52c:	000001d4 	ldrdeq	r0, [r0], -r4
 530:	00070022 	andeq	r0, r7, r2, lsr #32
 534:	000016bc 			@ <UNDEFINED> instruction: 0x000016bc
 538:	00000000 	andeq	r0, r0, r0
 53c:	00000000 	andeq	r0, r0, r0
 540:	00000010 	andeq	r0, r0, r0, lsl r0
 544:	00000001 	andeq	r0, r0, r1
 548:	00003a1c 	andeq	r3, r0, ip, lsl sl
 54c:	00000004 	andeq	r0, r0, r4
 550:	00070022 	andeq	r0, r7, r2, lsr #32
 554:	000020c4 	andeq	r2, r0, r4, asr #1
 558:	000062b4 			@ <UNDEFINED> instruction: 0x000062b4
 55c:	00000018 	andeq	r0, r0, r8, lsl r0
 560:	00070022 	andeq	r0, r7, r2, lsr #32
 564:	00001c0b 	andeq	r1, r0, fp, lsl #24
 568:	00007d08 	andeq	r7, r0, r8, lsl #26
 56c:	00000004 	andeq	r0, r0, r4
 570:	000f0021 	andeq	r0, pc, r1, lsr #32
 574:	00001c39 	andeq	r1, r0, r9, lsr ip
 578:	00007d04 	andeq	r7, r0, r4, lsl #26
 57c:	00000004 	andeq	r0, r0, r4
 580:	000f0021 	andeq	r0, pc, r1, lsr #32
 584:	000001e8 	andeq	r0, r0, r8, ror #3
 588:	00003a3c 	andeq	r3, r0, ip, lsr sl
 58c:	00000004 	andeq	r0, r0, r4
 590:	00070022 	andeq	r0, r7, r2, lsr #32
 594:	00000e9d 	muleq	r0, sp, lr
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000000 	andeq	r0, r0, r0
 5a0:	00000010 	andeq	r0, r0, r0, lsl r0
 5a4:	000018b0 			@ <UNDEFINED> instruction: 0x000018b0
 5a8:	0000c5f8 	strdeq	ip, [r0], -r8
 5ac:	00007804 	andeq	r7, r0, r4, lsl #16
 5b0:	000f0021 	andeq	r0, pc, r1, lsr #32
 5b4:	000024fd 	strdeq	r2, [r0], -sp
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	00000000 	andeq	r0, r0, r0
 5c0:	00000010 	andeq	r0, r0, r0, lsl r0
 5c4:	0000142e 	andeq	r1, r0, lr, lsr #8
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000000 	andeq	r0, r0, r0
 5d0:	00000010 	andeq	r0, r0, r0, lsl r0
 5d4:	000006fd 	strdeq	r0, [r0], -sp
 5d8:	00003b04 	andeq	r3, r0, r4, lsl #22
 5dc:	00000004 	andeq	r0, r0, r4
 5e0:	00070022 	andeq	r0, r7, r2, lsr #32
 5e4:	00000081 	andeq	r0, r0, r1, lsl #1
 5e8:	00003a24 	andeq	r3, r0, r4, lsr #20
 5ec:	00000004 	andeq	r0, r0, r4
 5f0:	00070022 	andeq	r0, r7, r2, lsr #32
 5f4:	00002413 	andeq	r2, r0, r3, lsl r4
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000000 	andeq	r0, r0, r0
 600:	00000010 	andeq	r0, r0, r0, lsl r0
 604:	00001d81 	andeq	r1, r0, r1, lsl #27
 608:	0001863c 	andeq	r8, r1, ip, lsr r6
 60c:	0000000c 	andeq	r0, r0, ip
 610:	000f0021 	andeq	r0, pc, r1, lsr #32
 614:	00000627 	andeq	r0, r0, r7, lsr #12
 618:	00003af4 	strdeq	r3, [r0], -r4
 61c:	00000004 	andeq	r0, r0, r4
 620:	00070022 	andeq	r0, r7, r2, lsr #32
 624:	00001ad6 	ldrdeq	r1, [r0], -r6
 628:	00007d28 	andeq	r7, r0, r8, lsr #26
 62c:	0000000c 	andeq	r0, r0, ip
 630:	000f0021 	andeq	r0, pc, r1, lsr #32
 634:	000006c1 	andeq	r0, r0, r1, asr #13
 638:	00003b00 	andeq	r3, r0, r0, lsl #22
 63c:	00000004 	andeq	r0, r0, r4
 640:	00070022 	andeq	r0, r7, r2, lsr #32
 644:	00000e39 	andeq	r0, r0, r9, lsr lr
 648:	00003d90 	muleq	r0, r0, sp
 64c:	0000009c 	muleq	r0, ip, r0
 650:	00070022 	andeq	r0, r7, r2, lsr #32
 654:	00001a5d 	andeq	r1, r0, sp, asr sl
 658:	00007d14 	andeq	r7, r0, r4, lsl sp
 65c:	00000004 	andeq	r0, r0, r4
 660:	000f0021 	andeq	r0, pc, r1, lsr #32
 664:	00000f9a 	muleq	r0, sl, pc	@ <UNPREDICTABLE>
 668:	000042d4 	ldrdeq	r4, [r0], -r4	@ <UNPREDICTABLE>
 66c:	00000148 	andeq	r0, r0, r8, asr #2
 670:	00070022 	andeq	r0, r7, r2, lsr #32
 674:	00000f37 	andeq	r0, r0, r7, lsr pc
 678:	000041b0 			@ <UNDEFINED> instruction: 0x000041b0
 67c:	00000124 	andeq	r0, r0, r4, lsr #2
 680:	00070022 	andeq	r0, r7, r2, lsr #32
 684:	00000e54 	andeq	r0, r0, r4, asr lr
 688:	00003e2c 	andeq	r3, r0, ip, lsr #28
 68c:	0000009c 	muleq	r0, ip, r0
 690:	00070022 	andeq	r0, r7, r2, lsr #32
 694:	00001427 	andeq	r1, r0, r7, lsr #8
 698:	00000000 	andeq	r0, r0, r0
 69c:	00000000 	andeq	r0, r0, r0
 6a0:	00000010 	andeq	r0, r0, r0, lsl r0
 6a4:	00001bc5 	andeq	r1, r0, r5, asr #23
 6a8:	00007d10 	andeq	r7, r0, r0, lsl sp
 6ac:	00000004 	andeq	r0, r0, r4
 6b0:	000f0021 	andeq	r0, pc, r1, lsr #32
 6b4:	000005b4 			@ <UNDEFINED> instruction: 0x000005b4
 6b8:	00003ab0 			@ <UNDEFINED> instruction: 0x00003ab0
 6bc:	00000014 	andeq	r0, r0, r4, lsl r0
 6c0:	00070022 	andeq	r0, r7, r2, lsr #32
 6c4:	0000238e 	andeq	r2, r0, lr, lsl #7
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	00000000 	andeq	r0, r0, r0
 6d0:	00000010 	andeq	r0, r0, r0, lsl r0
 6d4:	00001058 	andeq	r1, r0, r8, asr r0
 6d8:	00004688 	andeq	r4, r0, r8, lsl #13
 6dc:	0000012c 	andeq	r0, r0, ip, lsr #2
 6e0:	00070022 	andeq	r0, r7, r2, lsr #32
 6e4:	0000016f 	andeq	r0, r0, pc, ror #2
 6e8:	00003a34 	andeq	r3, r0, r4, lsr sl
 6ec:	00000004 	andeq	r0, r0, r4
 6f0:	00070022 	andeq	r0, r7, r2, lsr #32
 6f4:	00000587 	andeq	r0, r0, r7, lsl #11
 6f8:	00003aac 	andeq	r3, r0, ip, lsr #21
 6fc:	00000004 	andeq	r0, r0, r4
 700:	00070022 	andeq	r0, r7, r2, lsr #32
 704:	00000477 	andeq	r0, r0, r7, ror r4
 708:	00003a98 	muleq	r0, r8, sl
 70c:	00000004 	andeq	r0, r0, r4
 710:	00070022 	andeq	r0, r7, r2, lsr #32
 714:	00001130 	andeq	r1, r0, r0, lsr r1
 718:	000048e0 	andeq	r4, r0, r0, ror #17
 71c:	0000012c 	andeq	r0, r0, ip, lsr #2
 720:	00070022 	andeq	r0, r7, r2, lsr #32
 724:	00000de4 	andeq	r0, r0, r4, ror #27
 728:	00003cd4 	ldrdeq	r3, [r0], -r4
 72c:	00000090 	muleq	r0, r0, r0
 730:	00070022 	andeq	r0, r7, r2, lsr #32
 734:	00001d5f 	andeq	r1, r0, pc, asr sp
 738:	00018648 	andeq	r8, r1, r8, asr #12
 73c:	00000018 	andeq	r0, r0, r8, lsl r0
 740:	000f0021 	andeq	r0, pc, r1, lsr #32
 744:	00001d35 	andeq	r1, r0, r5, lsr sp
 748:	00007df0 	strdeq	r7, [r0], -r0
 74c:	00000004 	andeq	r0, r0, r4
 750:	000f0011 	andeq	r0, pc, r1, lsl r0	@ <UNPREDICTABLE>
 754:	0000033a 	andeq	r0, r0, sl, lsr r3
 758:	00003a70 	andeq	r3, r0, r0, ror sl
 75c:	00000004 	andeq	r0, r0, r4
 760:	00070022 	andeq	r0, r7, r2, lsr #32
 764:	00000ee3 	andeq	r0, r0, r3, ror #29
 768:	00007a38 	andeq	r7, r0, r8, lsr sl
 76c:	000000a8 	andeq	r0, r0, r8, lsr #1
 770:	000a0021 	andeq	r0, sl, r1, lsr #32
 774:	000003cd 	andeq	r0, r0, sp, asr #7
 778:	00003a80 	andeq	r3, r0, r0, lsl #21
 77c:	00000008 	andeq	r0, r0, r8
 780:	00070022 	andeq	r0, r7, r2, lsr #32
 784:	00002348 	andeq	r2, r0, r8, asr #6
 788:	00000000 	andeq	r0, r0, r0
 78c:	00000000 	andeq	r0, r0, r0
 790:	00000010 	andeq	r0, r0, r0, lsl r0
 794:	000023b3 			@ <UNDEFINED> instruction: 0x000023b3
 798:	00000000 	andeq	r0, r0, r0
 79c:	00000000 	andeq	r0, r0, r0
 7a0:	00000010 	andeq	r0, r0, r0, lsl r0
 7a4:	00000f08 	andeq	r0, r0, r8, lsl #30
 7a8:	00004150 	andeq	r4, r0, r0, asr r1
 7ac:	00000040 	andeq	r0, r0, r0, asr #32
 7b0:	00070022 	andeq	r0, r7, r2, lsr #32
 7b4:	0000066d 	andeq	r0, r0, sp, ror #12
 7b8:	00003af8 	strdeq	r3, [r0], -r8
 7bc:	00000004 	andeq	r0, r0, r4
 7c0:	00070022 	andeq	r0, r7, r2, lsr #32
 7c4:	000008e1 	andeq	r0, r0, r1, ror #17
 7c8:	00003b3c 	andeq	r3, r0, ip, lsr fp
 7cc:	00000028 	andeq	r0, r0, r8, lsr #32
 7d0:	00070022 	andeq	r0, r7, r2, lsr #32
 7d4:	00000805 	andeq	r0, r0, r5, lsl #16
 7d8:	00003b18 	andeq	r3, r0, r8, lsl fp
 7dc:	00000004 	andeq	r0, r0, r4
 7e0:	00070022 	andeq	r0, r7, r2, lsr #32
 7e4:	00000e83 	andeq	r0, r0, r3, lsl #29
 7e8:	00000000 	andeq	r0, r0, r0
 7ec:	00000000 	andeq	r0, r0, r0
 7f0:	00000010 	andeq	r0, r0, r0, lsl r0
 7f4:	00000229 	andeq	r0, r0, r9, lsr #4
 7f8:	00003a40 	andeq	r3, r0, r0, asr #20
 7fc:	00000004 	andeq	r0, r0, r4
 800:	00070022 	andeq	r0, r7, r2, lsr #32
 804:	000024a1 	andeq	r2, r0, r1, lsr #9
 808:	00000000 	andeq	r0, r0, r0
 80c:	00000000 	andeq	r0, r0, r0
 810:	00000010 	andeq	r0, r0, r0, lsl r0
 814:	00000f76 	andeq	r0, r0, r6, ror pc
 818:	00000000 	andeq	r0, r0, r0
 81c:	00000000 	andeq	r0, r0, r0
 820:	00000010 	andeq	r0, r0, r0, lsl r0
 824:	00000869 	andeq	r0, r0, r9, ror #16
 828:	00003b20 	andeq	r3, r0, r0, lsr #22
 82c:	00000004 	andeq	r0, r0, r4
 830:	00070022 	andeq	r0, r7, r2, lsr #32
 834:	00000247 	andeq	r0, r0, r7, asr #4
 838:	00003a44 	andeq	r3, r0, r4, asr #20
 83c:	00000004 	andeq	r0, r0, r4
 840:	00070022 	andeq	r0, r7, r2, lsr #32
 844:	00002551 	andeq	r2, r0, r1, asr r5
 848:	000067f8 	strdeq	r6, [r0], -r8
 84c:	00000120 	andeq	r0, r0, r0, lsr #2
 850:	00070012 	andeq	r0, r7, r2, lsl r0
 854:	0000236b 	andeq	r2, r0, fp, ror #6
 858:	00000000 	andeq	r0, r0, r0
 85c:	00000000 	andeq	r0, r0, r0
 860:	00000010 	andeq	r0, r0, r0, lsl r0
 864:	00001ff2 	strdeq	r1, [r0], -r2
 868:	00006248 	andeq	r6, r0, r8, asr #4
 86c:	0000006c 	andeq	r0, r0, ip, rrx
 870:	00070022 	andeq	r0, r7, r2, lsr #32
 874:	00000940 	andeq	r0, r0, r0, asr #18
 878:	00000000 	andeq	r0, r0, r0
 87c:	00000000 	andeq	r0, r0, r0
 880:	00000010 	andeq	r0, r0, r0, lsl r0
 884:	00000961 	andeq	r0, r0, r1, ror #18
 888:	00003b90 	muleq	r0, r0, fp
 88c:	00000028 	andeq	r0, r0, r8, lsr #32
 890:	00070022 	andeq	r0, r7, r2, lsr #32
 894:	000008be 			@ <UNDEFINED> instruction: 0x000008be
 898:	00003b3c 	andeq	r3, r0, ip, lsr fp
 89c:	00000028 	andeq	r0, r0, r8, lsr #32
 8a0:	00070022 	andeq	r0, r7, r2, lsr #32
 8a4:	00000424 	andeq	r0, r0, r4, lsr #8
 8a8:	00003a8c 	andeq	r3, r0, ip, lsl #21
 8ac:	00000008 	andeq	r0, r0, r8
 8b0:	00070022 	andeq	r0, r7, r2, lsr #32
 8b4:	000010c7 	andeq	r1, r0, r7, asr #1
 8b8:	000047b4 			@ <UNDEFINED> instruction: 0x000047b4
 8bc:	0000012c 	andeq	r0, r0, ip, lsr #2
 8c0:	00070022 	andeq	r0, r7, r2, lsr #32
 8c4:	00001dcd 	andeq	r1, r0, sp, asr #27
 8c8:	00018618 	andeq	r8, r1, r8, lsl r6
 8cc:	00000018 	andeq	r0, r0, r8, lsl r0
 8d0:	000f0021 	andeq	r0, pc, r1, lsr #32
 8d4:	000008b6 			@ <UNDEFINED> instruction: 0x000008b6
 8d8:	00000000 	andeq	r0, r0, r0
 8dc:	00000000 	andeq	r0, r0, r0
 8e0:	00000010 	andeq	r0, r0, r0, lsl r0
 8e4:	00000042 	andeq	r0, r0, r2, asr #32
 8e8:	00003a20 	andeq	r3, r0, r0, lsr #20
 8ec:	00000004 	andeq	r0, r0, r4
 8f0:	00070022 	andeq	r0, r7, r2, lsr #32
 8f4:	00000384 	andeq	r0, r0, r4, lsl #7
 8f8:	00003a74 	andeq	r3, r0, r4, ror sl
 8fc:	00000008 	andeq	r0, r0, r8
 900:	00070022 	andeq	r0, r7, r2, lsr #32
 904:	00001d15 	andeq	r1, r0, r5, lsl sp
 908:	00007df4 	strdeq	r7, [r0], -r4
 90c:	00004804 	andeq	r4, r0, r4, lsl #16
 910:	000f0021 	andeq	r0, pc, r1, lsr #32
 914:	000021ea 	andeq	r2, r0, sl, ror #3
 918:	0000632c 	andeq	r6, r0, ip, lsr #6
 91c:	0000006c 	andeq	r0, r0, ip, rrx
 920:	00070022 	andeq	r0, r7, r2, lsr #32
 924:	0000068e 	andeq	r0, r0, lr, lsl #13
 928:	00003afc 	strdeq	r3, [r0], -ip
 92c:	00000004 	andeq	r0, r0, r4
 930:	00070022 	andeq	r0, r7, r2, lsr #32
 934:	0000030f 	andeq	r0, r0, pc, lsl #6
 938:	00003a54 	andeq	r3, r0, r4, asr sl
 93c:	0000001c 	andeq	r0, r0, ip, lsl r0
 940:	00070022 	andeq	r0, r7, r2, lsr #32
 944:	000007cf 	andeq	r0, r0, pc, asr #15
 948:	00003b14 	andeq	r3, r0, r4, lsl fp
 94c:	00000004 	andeq	r0, r0, r4
 950:	00070022 	andeq	r0, r7, r2, lsr #32
 954:	0000256f 	andeq	r2, r0, pc, ror #10
 958:	00018678 	andeq	r8, r1, r8, ror r6
 95c:	00000004 	andeq	r0, r0, r4
 960:	000f0011 	andeq	r0, pc, r1, lsl r0	@ <UNPREDICTABLE>
 964:	00001f3d 	andeq	r1, r0, sp, lsr pc
 968:	000061e8 	andeq	r6, r0, r8, ror #3
 96c:	00000060 	andeq	r0, r0, r0, rrx
 970:	00070022 	andeq	r0, r7, r2, lsr #32
 974:	00000fd9 	ldrdeq	r0, [r0], -r9
 978:	0000441c 	andeq	r4, r0, ip, lsl r4
 97c:	00000148 	andeq	r0, r0, r8, asr #2
 980:	00070022 	andeq	r0, r7, r2, lsr #32
 984:	00001e8d 	andeq	r1, r0, sp, lsl #29
 988:	00018600 	andeq	r8, r1, r0, lsl #12
 98c:	00000018 	andeq	r0, r0, r8, lsl r0
 990:	000f0021 	andeq	r0, pc, r1, lsr #32
 994:	0000215d 	andeq	r2, r0, sp, asr r1
 998:	000062cc 	andeq	r6, r0, ip, asr #5
 99c:	00000060 	andeq	r0, r0, r0, rrx
 9a0:	00070022 	andeq	r0, r7, r2, lsr #32
 9a4:	00000ecf 	andeq	r0, r0, pc, asr #29
 9a8:	0000411c 	andeq	r4, r0, ip, lsl r1
 9ac:	00000034 	andeq	r0, r0, r4, lsr r0
 9b0:	00070022 	andeq	r0, r7, r2, lsr #32
 9b4:	00002441 	andeq	r2, r0, r1, asr #8
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	00000000 	andeq	r0, r0, r0
 9c0:	00000010 	andeq	r0, r0, r0, lsl r0
 9c4:	0000089b 	muleq	r0, fp, r8
 9c8:	00003b24 	andeq	r3, r0, r4, lsr #22
 9cc:	00000018 	andeq	r0, r0, r8, lsl r0
 9d0:	00070022 	andeq	r0, r7, r2, lsr #32
 9d4:	000002ea 	andeq	r0, r0, sl, ror #5
 9d8:	00003a50 	andeq	r3, r0, r0, asr sl
 9dc:	00000004 	andeq	r0, r0, r4
 9e0:	00070022 	andeq	r0, r7, r2, lsr #32
 9e4:	000000bd 	strheq	r0, [r0], -sp
 9e8:	00003a28 	andeq	r3, r0, r8, lsr #20
 9ec:	00000004 	andeq	r0, r0, r4
 9f0:	00070022 	andeq	r0, r7, r2, lsr #32
 9f4:	0000050f 	andeq	r0, r0, pc, lsl #10
 9f8:	00003aa4 	andeq	r3, r0, r4, lsr #21
 9fc:	00000004 	andeq	r0, r0, r4
 a00:	00070022 	andeq	r0, r7, r2, lsr #32
 a04:	00001cd7 	ldrdeq	r1, [r0], -r7
 a08:	00007cf4 	strdeq	r7, [r0], -r4
 a0c:	00000004 	andeq	r0, r0, r4
 a10:	000f0021 	andeq	r0, pc, r1, lsr #32
 a14:	00000cef 	andeq	r0, r0, pc, ror #25
 a18:	00003be0 	andeq	r3, r0, r0, ror #23
 a1c:	00000064 	andeq	r0, r0, r4, rrx
 a20:	00070022 	andeq	r0, r7, r2, lsr #32
 a24:	00000449 	andeq	r0, r0, r9, asr #8
 a28:	00003a94 	muleq	r0, r4, sl
 a2c:	00000004 	andeq	r0, r0, r4
 a30:	00070022 	andeq	r0, r7, r2, lsr #32
 a34:	00000b5a 	andeq	r0, r0, sl, asr fp
 a38:	00003bb8 			@ <UNDEFINED> instruction: 0x00003bb8
 a3c:	00000028 	andeq	r0, r0, r8, lsr #32
 a40:	00070022 	andeq	r0, r7, r2, lsr #32
 a44:	00000eb4 			@ <UNDEFINED> instruction: 0x00000eb4
 a48:	00003ec8 	andeq	r3, r0, r8, asr #29
 a4c:	00000254 	andeq	r0, r0, r4, asr r2
 a50:	00070022 	andeq	r0, r7, r2, lsr #32
 a54:	000023e0 	andeq	r2, r0, r0, ror #7
 a58:	00000000 	andeq	r0, r0, r0
 a5c:	00000000 	andeq	r0, r0, r0
 a60:	00000010 	andeq	r0, r0, r0, lsl r0
 a64:	0000169f 	muleq	r0, pc, r6	@ <UNPREDICTABLE>
 a68:	00000000 	andeq	r0, r0, r0
 a6c:	00000000 	andeq	r0, r0, r0
 a70:	00000010 	andeq	r0, r0, r0, lsl r0
 a74:	000001ae 	andeq	r0, r0, lr, lsr #3
 a78:	00003a38 	andeq	r3, r0, r8, lsr sl
 a7c:	00000004 	andeq	r0, r0, r4
 a80:	00070022 	andeq	r0, r7, r2, lsr #32
 a84:	0000196d 	andeq	r1, r0, sp, ror #18
 a88:	00007d38 	andeq	r7, r0, r8, lsr sp
 a8c:	000000b8 	strheq	r0, [r0], -r8
 a90:	000f0021 	andeq	r0, pc, r1, lsr #32
 a94:	00000dff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 a98:	00003d64 	andeq	r3, r0, r4, ror #26
 a9c:	0000002c 	andeq	r0, r0, ip, lsr #32
 aa0:	00070022 	andeq	r0, r7, r2, lsr #32
 aa4:	00001632 	andeq	r1, r0, r2, lsr r6
 aa8:	000055ac 	andeq	r5, r0, ip, lsr #11
 aac:	000007d4 	ldrdeq	r0, [r0], -r4
 ab0:	00070022 	andeq	r0, r7, r2, lsr #32
 ab4:	0000188c 	andeq	r1, r0, ip, lsl #17
 ab8:	00013dfc 	strdeq	r3, [r1], -ip
 abc:	00004804 	andeq	r4, r0, r4, lsl #16
 ac0:	000f0021 	andeq	r0, pc, r1, lsr #32
 ac4:	00001cb1 			@ <UNDEFINED> instruction: 0x00001cb1
 ac8:	00007cf8 	strdeq	r7, [r0], -r8
 acc:	00000004 	andeq	r0, r0, r4
 ad0:	000f0021 	andeq	r0, pc, r1, lsr #32
 ad4:	00000d9b 	muleq	r0, fp, sp
 ad8:	000079f0 	strdeq	r7, [r0], -r0
 adc:	00000048 	andeq	r0, r0, r8, asr #32
 ae0:	000a0021 	andeq	r0, sl, r1, lsr #32
 ae4:	000004a5 	andeq	r0, r0, r5, lsr #9
 ae8:	00003a9c 	muleq	r0, ip, sl
 aec:	00000004 	andeq	r0, r0, r4
 af0:	00070022 	andeq	r0, r7, r2, lsr #32
 af4:	00001c5b 	andeq	r1, r0, fp, asr ip
 af8:	00007d00 	andeq	r7, r0, r0, lsl #26
 afc:	00000004 	andeq	r0, r0, r4
 b00:	000f0021 	andeq	r0, pc, r1, lsr #32
 b04:	00000d87 	andeq	r0, r0, r7, lsl #27
 b08:	00003c44 	andeq	r3, r0, r4, asr #24
 b0c:	00000090 	muleq	r0, r0, r0
 b10:	00070022 	andeq	r0, r7, r2, lsr #32
 b14:	00001b4e 	andeq	r1, r0, lr, asr #22
 b18:	00007d18 	andeq	r7, r0, r8, lsl sp
 b1c:	0000000c 	andeq	r0, r0, ip
 b20:	000f0021 	andeq	r0, pc, r1, lsr #32
 b24:	000022a4 	andeq	r2, r0, r4, lsr #5
 b28:	00006398 	muleq	r0, r8, r3
 b2c:	00000018 	andeq	r0, r0, r8, lsl r0
 b30:	00070022 	andeq	r0, r7, r2, lsr #32
 b34:	00001be7 	andeq	r1, r0, r7, ror #23
 b38:	00007d0c 	andeq	r7, r0, ip, lsl #26
 b3c:	00000004 	andeq	r0, r0, r4
 b40:	000f0021 	andeq	r0, pc, r1, lsr #32
 b44:	00002329 	andeq	r2, r0, r9, lsr #6
 b48:	00000000 	andeq	r0, r0, r0
 b4c:	00000000 	andeq	r0, r0, r0
 b50:	00000010 	andeq	r0, r0, r0, lsl r0
 b54:	0000119a 	muleq	r0, sl, r1
 b58:	00004a0c 	andeq	r4, r0, ip, lsl #20
 b5c:	000003d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 b60:	00070022 	andeq	r0, r7, r2, lsr #32
 b64:	0000246d 	andeq	r2, r0, sp, ror #8
 b68:	00000000 	andeq	r0, r0, r0
 b6c:	00000000 	andeq	r0, r0, r0
 b70:	00000010 	andeq	r0, r0, r0, lsl r0
 b74:	000018ca 	andeq	r1, r0, sl, asr #17
 b78:	00007d34 	andeq	r7, r0, r4, lsr sp
 b7c:	00000004 	andeq	r0, r0, r4
 b80:	000f0021 	andeq	r0, pc, r1, lsr #32
 b84:	000004da 	ldrdeq	r0, [r0], -sl
 b88:	00003aa0 	andeq	r3, r0, r0, lsr #21
 b8c:	00000004 	andeq	r0, r0, r4
 b90:	00070022 	andeq	r0, r7, r2, lsr #32
 b94:	0000083d 	andeq	r0, r0, sp, lsr r8
 b98:	00003b1c 	andeq	r3, r0, ip, lsl fp
 b9c:	00000004 	andeq	r0, r0, r4
 ba0:	00070022 	andeq	r0, r7, r2, lsr #32
 ba4:	0000195c 	andeq	r1, r0, ip, asr r9
 ba8:	00007ae0 	andeq	r7, r0, r0, ror #21
 bac:	00000048 	andeq	r0, r0, r8, asr #32
 bb0:	000a0021 	andeq	r0, sl, r1, lsr #32
 bb4:	000003f4 	strdeq	r0, [r0], -r4
 bb8:	00003a88 	andeq	r3, r0, r8, lsl #21
 bbc:	00000004 	andeq	r0, r0, r4
 bc0:	00070022 	andeq	r0, r7, r2, lsr #32
 bc4:	000000fd 	strdeq	r0, [r0], -sp
 bc8:	00003a2c 	andeq	r3, r0, ip, lsr #20
 bcc:	00000004 	andeq	r0, r0, r4
 bd0:	00070022 	andeq	r0, r7, r2, lsr #32
 bd4:	000011bd 			@ <UNDEFINED> instruction: 0x000011bd
 bd8:	00004ddc 	ldrdeq	r4, [r0], -ip
 bdc:	000000c0 	andeq	r0, r0, r0, asr #1
 be0:	00070022 	andeq	r0, r7, r2, lsr #32
 be4:	000024d0 	ldrdeq	r2, [r0], -r0
 be8:	00000000 	andeq	r0, r0, r0
 bec:	00000000 	andeq	r0, r0, r0
 bf0:	00000010 	andeq	r0, r0, r0, lsl r0
 bf4:	00000dc9 	andeq	r0, r0, r9, asr #27
 bf8:	00003cd4 	ldrdeq	r3, [r0], -r4
 bfc:	00000090 	muleq	r0, r0, r0
 c00:	00070022 	andeq	r0, r7, r2, lsr #32
 c04:	00001dad 	andeq	r1, r0, sp, lsr #27
 c08:	00018630 	andeq	r8, r1, r0, lsr r6
 c0c:	0000000c 	andeq	r0, r0, ip
 c10:	000f0021 	andeq	r0, pc, r1, lsr #32
 c14:	000015ef 	andeq	r1, r0, pc, ror #11
 c18:	0000542c 	andeq	r5, r0, ip, lsr #8
 c1c:	00000180 	andeq	r0, r0, r0, lsl #3
 c20:	00070022 	andeq	r0, r7, r2, lsr #32
 c24:	00000db5 			@ <UNDEFINED> instruction: 0x00000db5
 c28:	00003c44 	andeq	r3, r0, r4, asr #24
 c2c:	00000090 	muleq	r0, r0, r0
 c30:	00070022 	andeq	r0, r7, r2, lsr #32
 c34:	0000078f 	andeq	r0, r0, pc, lsl #15
 c38:	00003b10 	andeq	r3, r0, r0, lsl fp
 c3c:	00000004 	andeq	r0, r0, r4
 c40:	00070022 	andeq	r0, r7, r2, lsr #32
 c44:	0000121f 	andeq	r1, r0, pc, lsl r2
 c48:	00000000 	andeq	r0, r0, r0
 c4c:	00000000 	andeq	r0, r0, r0
 c50:	00000010 	andeq	r0, r0, r0, lsl r0
 c54:	00000f1c 	andeq	r0, r0, ip, lsl pc
 c58:	00004190 	muleq	r0, r0, r1
 c5c:	00000020 	andeq	r0, r0, r0, lsr #32
 c60:	00070022 	andeq	r0, r7, r2, lsr #32
 c64:	00000904 	andeq	r0, r0, r4, lsl #18
 c68:	00003b64 	andeq	r3, r0, r4, ror #22
 c6c:	0000002c 	andeq	r0, r0, ip, lsr #32
 c70:	00070022 	andeq	r0, r7, r2, lsr #32
 c74:	00001c84 	andeq	r1, r0, r4, lsl #25
 c78:	00007cfc 	strdeq	r7, [r0], -ip
 c7c:	00000004 	andeq	r0, r0, r4
 c80:	000f0021 	andeq	r0, pc, r1, lsr #32
 c84:	00000137 	andeq	r0, r0, r7, lsr r1
 c88:	00003a30 	andeq	r3, r0, r0, lsr sl
 c8c:	00000004 	andeq	r0, r0, r4
 c90:	00070022 	andeq	r0, r7, r2, lsr #32
 c94:	00000273 	andeq	r0, r0, r3, ror r2
 c98:	00003a48 	andeq	r3, r0, r8, asr #20
 c9c:	00000004 	andeq	r0, r0, r4
 ca0:	00070022 	andeq	r0, r7, r2, lsr #32
 ca4:	00000549 	andeq	r0, r0, r9, asr #10
 ca8:	00003aa8 	andeq	r3, r0, r8, lsr #21
 cac:	00000004 	andeq	r0, r0, r4
 cb0:	00070022 	andeq	r0, r7, r2, lsr #32
 cb4:	000002a5 	andeq	r0, r0, r5, lsr #5
 cb8:	00003a4c 	andeq	r3, r0, ip, asr #20
 cbc:	00000004 	andeq	r0, r0, r4
 cc0:	00070022 	andeq	r0, r7, r2, lsr #32
 cc4:	00001cf3 	strdeq	r1, [r0], -r3
 cc8:	00007cf0 	strdeq	r7, [r0], -r0
 ccc:	00000004 	andeq	r0, r0, r4
 cd0:	000f0021 	andeq	r0, pc, r1, lsr #32
 cd4:	00000ef4 	strdeq	r0, [r0], -r4
 cd8:	0000411c 	andeq	r4, r0, ip, lsl r1
 cdc:	00000034 	andeq	r0, r0, r4, lsr r0
 ce0:	00070022 	andeq	r0, r7, r2, lsr #32
 ce4:	00000f94 	muleq	r0, r4, pc	@ <UNPREDICTABLE>
 ce8:	00000000 	andeq	r0, r0, r0
 cec:	00000000 	andeq	r0, r0, r0
 cf0:	00000010 	andeq	r0, r0, r0, lsl r0
 cf4:	00000e68 	andeq	r0, r0, r8, ror #28
 cf8:	00003ec8 	andeq	r3, r0, r8, asr #29
 cfc:	00000254 	andeq	r0, r0, r4, asr r2
 d00:	00070022 	andeq	r0, r7, r2, lsr #32
 d04:	00001239 	andeq	r1, r0, r9, lsr r2
 d08:	00004e9c 	muleq	r0, ip, lr
 d0c:	000003bc 			@ <UNDEFINED> instruction: 0x000003bc
 d10:	00070022 	andeq	r0, r7, r2, lsr #32
 d14:	00001df4 	strdeq	r1, [r0], -r4
 d18:	000062b4 			@ <UNDEFINED> instruction: 0x000062b4
 d1c:	00000018 	andeq	r0, r0, r8, lsl r0
 d20:	00070022 	andeq	r0, r7, r2, lsr #32
 d24:	00000753 	andeq	r0, r0, r3, asr r7
 d28:	00003b0c 	andeq	r3, r0, ip, lsl #22
 d2c:	00000004 	andeq	r0, r0, r4
 d30:	00070022 	andeq	r0, r7, r2, lsr #32
 d34:	00000d3b 	andeq	r0, r0, fp, lsr sp
 d38:	00003be0 	andeq	r3, r0, r0, ror #23
 d3c:	00000064 	andeq	r0, r0, r4, rrx
 d40:	00070022 	andeq	r0, r7, r2, lsr #32
 d44:	00001942 	andeq	r1, r0, r2, asr #18
 d48:	000079ac 	andeq	r7, r0, ip, lsr #19
 d4c:	00000044 	andeq	r0, r0, r4, asr #32
 d50:	000a0021 	andeq	r0, sl, r1, lsr #32
 d54:	000009c5 	andeq	r0, r0, r5, asr #19
 d58:	00003bb8 			@ <UNDEFINED> instruction: 0x00003bb8
 d5c:	00000028 	andeq	r0, r0, r8, lsr #32
 d60:	00070022 	andeq	r0, r7, r2, lsr #32
 d64:	000016a6 	andeq	r1, r0, r6, lsr #13
 d68:	00000000 	andeq	r0, r0, r0
 d6c:	00000000 	andeq	r0, r0, r0
 d70:	00000010 	andeq	r0, r0, r0, lsl r0
 d74:	0000257e 	andeq	r2, r0, lr, ror r5
 d78:	00080000 	andeq	r0, r8, r0
 d7c:	00000000 	andeq	r0, r0, r0
 d80:	00100010 	andseq	r0, r0, r0, lsl r0
 d84:	000007ea 	andeq	r0, r0, sl, ror #15
 d88:	00003b14 	andeq	r3, r0, r4, lsl fp
 d8c:	00000004 	andeq	r0, r0, r4
 d90:	00070022 	andeq	r0, r7, r2, lsr #32
 d94:	00000723 	andeq	r0, r0, r3, lsr #14
 d98:	00003b08 	andeq	r3, r0, r8, lsl #22
 d9c:	00000004 	andeq	r0, r0, r4
 da0:	00070022 	andeq	r0, r7, r2, lsr #32
 da4:	000005fe 	strdeq	r0, [r0], -lr
 da8:	00003ac4 	andeq	r3, r0, r4, asr #21
 dac:	00000030 	andeq	r0, r0, r0, lsr r0
 db0:	00070022 	andeq	r0, r7, r2, lsr #32
 db4:	000003a4 	andeq	r0, r0, r4, lsr #7
 db8:	00003a7c 	andeq	r3, r0, ip, ror sl
 dbc:	00000004 	andeq	r0, r0, r4
 dc0:	00070022 	andeq	r0, r7, r2, lsr #32
 dc4:	000019e3 	andeq	r1, r0, r3, ror #19
 dc8:	00007d24 	andeq	r7, r0, r4, lsr #26
 dcc:	00000004 	andeq	r0, r0, r4
 dd0:	000f0021 	andeq	r0, pc, r1, lsr #32
 dd4:	00001eb8 			@ <UNDEFINED> instruction: 0x00001eb8
 dd8:	00006398 	muleq	r0, r8, r3
 ddc:	00000018 	andeq	r0, r0, r8, lsl r0
 de0:	00070022 	andeq	r0, r7, r2, lsr #32
 de4:	00000993 	muleq	r0, r3, r9
 de8:	00003b90 	muleq	r0, r0, fp
 dec:	00000028 	andeq	r0, r0, r8, lsr #32
 df0:	00070022 	andeq	r0, r7, r2, lsr #32
 df4:	000016ad 	andeq	r1, r0, sp, lsr #13
 df8:	00000000 	andeq	r0, r0, r0
 dfc:	00000000 	andeq	r0, r0, r0
 e00:	00000010 	andeq	r0, r0, r0, lsl r0
 e04:	00001019 	andeq	r1, r0, r9, lsl r0
 e08:	00004564 	andeq	r4, r0, r4, ror #10
 e0c:	00000124 	andeq	r0, r0, r4, lsr #2
 e10:	00070022 	andeq	r0, r7, r2, lsr #32
 e14:	00001d3f 	andeq	r1, r0, pc, lsr sp
 e18:	00018660 	andeq	r8, r1, r0, ror #12
 e1c:	00000018 	andeq	r0, r0, r8, lsl r0
 e20:	000f0021 	andeq	r0, pc, r1, lsr #32

Disassembly of section .dynstr:

00000e24 <.dynstr>:
     e24:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     e28:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
     e2c:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
     e30:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     e34:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
     e38:	31746567 	cmncc	r4, r7, ror #10
     e3c:	446e6f31 	strbtmi	r6, [lr], #-3889	@ 0xfffff0cf
     e40:	53676172 	cmnpl	r7, #-2147483620	@ 0x8000001c
     e44:	74726174 	ldrbtvc	r6, [r2], #-372	@ 0xfffffe8c
     e48:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
     e4c:	65355f53 	ldrvs	r5, [r5, #-3923]!	@ 0xfffff0ad
     e50:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
     e54:	72443431 	subvc	r3, r4, #822083584	@ 0x31000000
     e58:	74536761 	ldrbvc	r6, [r3], #-1889	@ 0xfffff89f
     e5c:	45747261 	ldrbmi	r7, [r4, #-609]!	@ 0xfffffd9f
     e60:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
     e64:	5a5f0045 	bpl	17c0f80 <_stack+0x1740f80>
     e68:	6172344e 	cmnvs	r2, lr, asr #8
     e6c:	77366b63 	ldrvc	r6, [r6, -r3, ror #22]!
     e70:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
     e74:	69573674 	ldmdbvs	r7, {r2, r4, r5, r6, r9, sl, ip, sp}^
     e78:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     e7c:	6e6f3031 	mcrvs	0, 3, r3, cr15, cr1, {1}
     e80:	67617244 	strbvs	r7, [r1, -r4, asr #4]!
     e84:	65766f4d 	ldrbvs	r6, [r6, #-3917]!	@ 0xfffff0b3
     e88:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
     e8c:	65355f53 	ldrvs	r5, [r5, #-3923]!	@ 0xfffff0ad
     e90:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
     e94:	72443331 	subvc	r3, r4, #-1006632960	@ 0xc4000000
     e98:	6f4d6761 	svcvs	0x004d6761
     e9c:	76456576 			@ <UNDEFINED> instruction: 0x76456576
     ea0:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
     ea4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     ea8:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
     eac:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
     eb0:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     eb4:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
     eb8:	39746567 	ldmdbcc	r4!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
     ebc:	72446e6f 	subvc	r6, r4, #1776	@ 0x6f0
     ec0:	6e456761 	cdpvs	7, 4, cr6, cr5, cr1, {3}
     ec4:	4b524564 	blmi	149245c <_stack+0x141245c>
     ec8:	355f534e 	ldrbcc	r5, [pc, #-846]	@ b82 <.plt-0x2d2a>
     ecc:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     ed0:	44323174 	ldrtmi	r3, [r2], #-372	@ 0xfffffe8c
     ed4:	45676172 	strbmi	r6, [r7, #-370]!	@ 0xfffffe8e
     ed8:	7645646e 	strbvc	r6, [r5], -lr, ror #8
     edc:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
     ee0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     ee4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
     ee8:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
     eec:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     ef0:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
     ef4:	31746567 	cmncc	r4, r7, ror #10
     ef8:	446e6f33 	strbtmi	r6, [lr], #-3891	@ 0xfffff0cd
     efc:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	@ 0xfffffe44
     f00:	696c4365 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, lr}^
     f04:	52456b63 	subpl	r6, r5, #101376	@ 0x18c00
     f08:	5f534e4b 	svcpl	0x00534e4b
     f0c:	65766535 	ldrbvs	r6, [r6, #-1333]!	@ 0xfffffacb
     f10:	3131746e 	teqcc	r1, lr, ror #8
     f14:	62756f44 	rsbsvs	r6, r5, #68, 30	@ 0x110
     f18:	6c43656c 	cfstr64vs	mvdx6, [r3], {108}	@ 0x6c
     f1c:	456b6369 	strbmi	r6, [fp, #-873]!	@ 0xfffffc97
     f20:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
     f24:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
     f28:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
     f2c:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     f30:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
     f34:	38746567 	ldmdacc	r4!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
     f38:	63416e6f 	movtvs	r6, #7791	@ 0x1e6f
     f3c:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
     f40:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
     f44:	65355f53 	ldrvs	r5, [r5, #-3923]!	@ 0xfffff0ad
     f48:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
     f4c:	63413131 	movtvs	r3, #4401	@ 0x1131
     f50:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
     f54:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     f58:	5f004574 	svcpl	0x00004574
     f5c:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
     f60:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
     f64:	67646977 			@ <UNDEFINED> instruction: 0x67646977
     f68:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
     f6c:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
     f70:	6e6f3774 	mcrvs	7, 3, r3, cr15, cr4, {3}
     f74:	65766f48 	ldrbvs	r6, [r6, #-3912]!	@ 0xfffff0b8
     f78:	4b524572 	blmi	1492548 <_stack+0x1412548>
     f7c:	355f534e 	ldrbcc	r5, [pc, #-846]	@ c36 <.plt-0x2c76>
     f80:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     f84:	48303174 	ldmdami	r0!, {r2, r4, r5, r6, r8, ip, sp}
     f88:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
     f8c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
     f90:	5f004574 	svcpl	0x00004574
     f94:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
     f98:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
     f9c:	67646977 			@ <UNDEFINED> instruction: 0x67646977
     fa0:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
     fa4:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
     fa8:	6f303174 	svcvs	0x00303174
     fac:	766f486e 	strbtvc	r4, [pc], -lr, ror #16
     fb0:	654b7265 	strbvs	r7, [fp, #-613]	@ 0xfffffd9b
     fb4:	4b524579 	blmi	14925a0 <_stack+0x14125a0>
     fb8:	355f534e 	ldrbcc	r5, [pc, #-846]	@ c72 <.plt-0x2c3a>
     fbc:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     fc0:	48333174 	ldmdami	r3!, {r2, r4, r5, r6, r8, ip, sp}
     fc4:	7265766f 	rsbvc	r7, r5, #116391936	@ 0x6f00000
     fc8:	4579654b 	ldrbmi	r6, [r9, #-1355]!	@ 0xfffffab5
     fcc:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
     fd0:	5a5f0045 	bpl	17c10ec <_stack+0x17410ec>
     fd4:	6172344e 	cmnvs	r2, lr, asr #8
     fd8:	77366b63 	ldrvc	r6, [r6, -r3, ror #22]!
     fdc:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
     fe0:	69573674 	ldmdbvs	r7, {r2, r4, r5, r6, r9, sl, ip, sp}^
     fe4:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
     fe8:	426e6f38 	rsbmi	r6, lr, #56, 30	@ 0xe0
     fec:	6f747475 	svcvs	0x00747475
     ff0:	4b52456e 	blmi	14925b0 <_stack+0x14125b0>
     ff4:	355f534e 	ldrbcc	r5, [pc, #-846]	@ cae <.plt-0x2bfe>
     ff8:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
     ffc:	42313174 	eorsmi	r3, r1, #116, 2
    1000:	6f747475 	svcvs	0x00747475
    1004:	6576456e 	ldrbvs	r4, [r6, #-1390]!	@ 0xfffffa92
    1008:	0045746e 	subeq	r7, r5, lr, ror #8
    100c:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1010:	6b636172 	blvs	18d95e0 <_stack+0x18595e0>
    1014:	64697736 	strbtvs	r7, [r9], #-1846	@ 0xfffff8ca
    1018:	36746567 	ldrbtcc	r6, [r4], -r7, ror #10
    101c:	67646957 			@ <UNDEFINED> instruction: 0x67646957
    1020:	31317465 	teqcc	r1, r5, ror #8
    1024:	72446e6f 	subvc	r6, r4, #1776	@ 0x6f0
    1028:	6f486761 	svcvs	0x00486761
    102c:	45726576 	ldrbmi	r6, [r2, #-1398]!	@ 0xfffffa8a
    1030:	534e4b52 	movtpl	r4, #60242	@ 0xeb52
    1034:	7665355f 			@ <UNDEFINED> instruction: 0x7665355f
    1038:	31746e65 	cmncc	r4, r5, ror #28
    103c:	61724434 	cmnvs	r2, r4, lsr r4
    1040:	766f4867 	strbtvc	r4, [pc], -r7, ror #16
    1044:	76457265 	strbvc	r7, [r5], -r5, ror #4
    1048:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    104c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1050:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1054:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
    1058:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    105c:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
    1060:	34746567 	ldrbtcc	r6, [r4], #-1383	@ 0xfffffa99
    1064:	70657473 	rsbvc	r7, r5, r3, ror r4
    1068:	5f007645 	svcpl	0x00007645
    106c:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    1070:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    1074:	67646977 			@ <UNDEFINED> instruction: 0x67646977
    1078:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
    107c:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    1080:	72643474 	rsbvc	r3, r4, #116, 8	@ 0x74000000
    1084:	52457761 	subpl	r7, r5, #25427968	@ 0x1840000
    1088:	5f534e4b 	svcpl	0x00534e4b
    108c:	61724438 	cmnvs	r2, r8, lsr r4
    1090:	67724177 			@ <UNDEFINED> instruction: 0x67724177
    1094:	5f004573 	svcpl	0x00004573
    1098:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    109c:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    10a0:	67646977 			@ <UNDEFINED> instruction: 0x67646977
    10a4:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
    10a8:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    10ac:	72643974 	rsbvc	r3, r4, #116, 18	@ 0x1d0000
    10b0:	614c7761 	cmpvs	ip, r1, ror #14
    10b4:	45726579 	ldrbmi	r6, [r2, #-1401]!	@ 0xfffffa87
    10b8:	534e4b52 	movtpl	r4, #60242	@ 0xeb52
    10bc:	7244385f 	subvc	r3, r4, #6225920	@ 0x5f0000
    10c0:	72417761 	subvc	r7, r1, #25427968	@ 0x1840000
    10c4:	69457367 	stmdbvs	r5, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
    10c8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    10cc:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    10d0:	6977366b 	ldmdbvs	r7!, {r0, r1, r3, r5, r6, r9, sl, ip, sp}^
    10d4:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    10d8:	64695736 	strbtvs	r5, [r9], #-1846	@ 0xfffff8ca
    10dc:	31746567 	cmncc	r4, r7, ror #10
    10e0:	446e6f33 	strbtmi	r6, [lr], #-3891	@ 0xfffff0cd
    10e4:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	@ 0xfffffe44
    10e8:	696c4365 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, lr}^
    10ec:	52456b63 	subpl	r6, r5, #101376	@ 0x18c00
    10f0:	5f534e4b 	svcpl	0x00534e4b
    10f4:	65766535 	ldrbvs	r6, [r6, #-1333]!	@ 0xfffffacb
    10f8:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
    10fc:	62756f44 	rsbsvs	r6, r5, #68, 30	@ 0x110
    1100:	6c43656c 	cfstr64vs	mvdx6, [r3], {108}	@ 0x6c
    1104:	456b6369 	strbmi	r6, [fp, #-873]!	@ 0xfffffc97
    1108:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
    110c:	5a5f0045 	bpl	17c1228 <_stack+0x1741228>
    1110:	4333314e 	teqmi	r3, #-2147483629	@ 0x80000013
    1114:	5065726f 	rsbpl	r7, r5, pc, ror #4
    1118:	65636f72 	strbvs	r6, [r3, #-3954]!	@ 0xfffff08e
    111c:	726f7373 	rsbvc	r7, pc, #-872415231	@ 0xcc000001
    1120:	65733331 	ldrbvs	r3, [r3, #-817]!	@ 0xfffffccf
    1124:	6c615f74 	stclvs	15, cr5, [r1], #-464	@ 0xfffffe30
    1128:	61705f74 	cmnvs	r0, r4, ror pc
    112c:	456d6172 	strbmi	r6, [sp, #-370]!	@ 0xfffffe8e
    1130:	5f006669 	svcpl	0x00006669
    1134:	33314e5a 	teqcc	r1, #1440	@ 0x5a0
    1138:	65726f43 	ldrbvs	r6, [r2, #-3907]!	@ 0xfffff0bd
    113c:	636f7250 	cmnvs	pc, #80, 4
    1140:	6f737365 	svcvs	0x00737365
    1144:	67393172 			@ <UNDEFINED> instruction: 0x67393172
    1148:	615f7465 	cmpvs	pc, r5, ror #8
    114c:	705f746c 	subsvc	r7, pc, ip, ror #8
    1150:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
    1154:	6c61765f 	stclvs	6, cr7, [r1], #-380	@ 0xfffffe84
    1158:	6a456575 	bvs	115a734 <_stack+0x10da734>
    115c:	5a5f0066 	bpl	17c12fc <_stack+0x17412fc>
    1160:	6172344e 	cmnvs	r2, lr, asr #8
    1164:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1168:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    116c:	6f4d3665 	svcvs	0x004d3665
    1170:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1174:	72703331 	rsbsvc	r3, r0, #-1006632960	@ 0xc4000000
    1178:	7365636f 	cmnvc	r5, #-1140850687	@ 0xbc000001
    117c:	70794273 	rsbsvc	r4, r9, r3, ror r2
    1180:	45737361 	ldrbmi	r7, [r3, #-865]!	@ 0xfffffc9f
    1184:	314e4b52 	cmpcc	lr, r2, asr fp
    1188:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    118c:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    1190:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    1194:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    1198:	50313172 	eorspl	r3, r1, r2, ror r1
    119c:	65636f72 	strbvs	r6, [r3, #-3954]!	@ 0xfffff08e
    11a0:	72417373 	subvc	r7, r1, #-872415231	@ 0xcc000001
    11a4:	00457367 	subeq	r7, r5, r7, ror #6
    11a8:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    11ac:	6b636172 	blvs	18d977c <_stack+0x185977c>
    11b0:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    11b4:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    11b8:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    11bc:	7436656c 	ldrtvc	r6, [r6], #-1388	@ 0xfffffa94
    11c0:	6f734a6f 	svcvs	0x00734a6f
    11c4:	0076456e 	rsbseq	r4, r6, lr, ror #10
    11c8:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    11cc:	6b636172 	blvs	18d979c <_stack+0x185979c>
    11d0:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    11d4:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    11d8:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    11dc:	6638656c 	ldrtvs	r6, [r8], -ip, ror #10
    11e0:	4a6d6f72 	bmi	1b5cfb0 <_stack+0x1adcfb0>
    11e4:	456e6f73 	strbmi	r6, [lr, #-3955]!	@ 0xfffff08d
    11e8:	736a3650 	cmnvc	sl, #80, 12	@ 0x5000000
    11ec:	745f6e6f 	ldrbvc	r6, [pc], #-3695	@ 11f4 <.plt-0x26b8>
    11f0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    11f4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    11f8:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    11fc:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    1200:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 1208 <.plt-0x26a4>
    1204:	31656c75 	smccc	22213	@ 0x56c5
    1208:	72617032 	rsbvc	r7, r1, #50	@ 0x32
    120c:	54736d61 	ldrbtpl	r6, [r3], #-3425	@ 0xfffff29f
    1210:	6f734a6f 	svcvs	0x00734a6f
    1214:	0076456e 	rsbseq	r4, r6, lr, ror #10
    1218:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    121c:	6b636172 	blvs	18d97ec <_stack+0x18597ec>
    1220:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1224:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1228:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    122c:	3431656c 	ldrtcc	r6, [r1], #-1388	@ 0xfffffa94
    1230:	61726170 	cmnvs	r2, r0, ror r1
    1234:	7246736d 	subvc	r7, r6, #-1275068415	@ 0xb4000001
    1238:	734a6d6f 	movtvc	r6, #44399	@ 0xad6f
    123c:	50456e6f 	subpl	r6, r5, pc, ror #28
    1240:	6f736a36 	svcvs	0x00736a36
    1244:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    1248:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    124c:	6b636172 	blvs	18d981c <_stack+0x185981c>
    1250:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1254:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1258:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    125c:	3031656c 	eorscc	r6, r1, ip, ror #10
    1260:	61746164 	cmnvs	r4, r4, ror #2
    1264:	734a6f54 	movtvc	r6, #44884	@ 0xaf54
    1268:	76456e6f 	strbvc	r6, [r5], -pc, ror #28
    126c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1270:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1274:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    1278:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    127c:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 1284 <.plt-0x2628>
    1280:	31656c75 	smccc	22213	@ 0x56c5
    1284:	74616432 	strbtvc	r6, [r1], #-1074	@ 0xfffffbce
    1288:	6f724661 	svcvs	0x00724661
    128c:	6f734a6d 	svcvs	0x00734a6d
    1290:	3650456e 	ldrbcc	r4, [r0], -lr, ror #10
    1294:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
    1298:	5f00745f 	svcpl	0x0000745f
    129c:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    12a0:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    12a4:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    12a8:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    12ac:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    12b0:	6e6f3565 	cdpvs	5, 6, cr3, cr15, cr5, {3}
    12b4:	45646441 	strbmi	r6, [r4, #-1089]!	@ 0xfffffbbf
    12b8:	534e4b52 	movtpl	r4, #60242	@ 0xeb52
    12bc:	41385f31 	teqmi	r8, r1, lsr pc
    12c0:	76456464 	strbvc	r6, [r5], -r4, ror #8
    12c4:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    12c8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    12cc:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    12d0:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    12d4:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    12d8:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 12e0 <.plt-0x25cc>
    12dc:	38656c75 	stmdacc	r5!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    12e0:	65526e6f 	ldrbvs	r6, [r2, #-3695]	@ 0xfffff191
    12e4:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	@ 0xfffff093
    12e8:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    12ec:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    12f0:	6d655231 	sfmvs	f5, 2, [r5, #-196]!	@ 0xffffff3c
    12f4:	4565766f 	strbmi	r7, [r5, #-1647]!	@ 0xfffff991
    12f8:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
    12fc:	5a5f0045 	bpl	17c1418 <_stack+0x1741418>
    1300:	6172344e 	cmnvs	r2, lr, asr #8
    1304:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1308:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    130c:	6f4d3665 	svcvs	0x004d3665
    1310:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1314:	426e6f38 	rsbmi	r6, lr, #56, 30	@ 0xe0
    1318:	73617079 	cmnvc	r1, #121	@ 0x79
    131c:	4b524573 	blmi	14928f0 <_stack+0x14128f0>
    1320:	5f31534e 	svcpl	0x0031534e
    1324:	79423131 	stmdbvc	r2, {r0, r4, r5, r8, ip, sp}^
    1328:	73736170 	cmnvc	r3, #112, 2
    132c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1330:	5f004574 	svcpl	0x00004574
    1334:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    1338:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    133c:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1340:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    1344:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1348:	6f303165 	svcvs	0x00303165
    134c:	426e556e 	rsbmi	r5, lr, #461373440	@ 0x1b800000
    1350:	73617079 	cmnvc	r1, #121	@ 0x79
    1354:	4b524573 	blmi	1492928 <_stack+0x1412928>
    1358:	5f31534e 	svcpl	0x0031534e
    135c:	6e553331 	mrcvs	3, 2, r3, cr5, cr1, {1}
    1360:	61707942 	cmnvs	r0, r2, asr #18
    1364:	76457373 			@ <UNDEFINED> instruction: 0x76457373
    1368:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    136c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1370:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1374:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    1378:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    137c:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 1384 <.plt-0x2528>
    1380:	31656c75 	smccc	22213	@ 0x56c5
    1384:	506e6f32 	rsbpl	r6, lr, r2, lsr pc
    1388:	4374726f 	cmnmi	r4, #-268435450	@ 0xf0000006
    138c:	676e6168 	strbvs	r6, [lr, -r8, ror #2]!
    1390:	4b524565 	blmi	149292c <_stack+0x141292c>
    1394:	5f31534e 	svcpl	0x0031534e
    1398:	6f503531 	svcvs	0x00503531
    139c:	68437472 	stmdavs	r3, {r1, r4, r5, r6, sl, ip, sp, lr}^
    13a0:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
    13a4:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    13a8:	5f004574 	svcpl	0x00004574
    13ac:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    13b0:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    13b4:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    13b8:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    13bc:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    13c0:	6f383165 	svcvs	0x00383165
    13c4:	6d61536e 	stclvs	3, cr5, [r1, #-440]!	@ 0xfffffe48
    13c8:	52656c70 	rsbpl	r6, r5, #112, 24	@ 0x7000
    13cc:	43657461 	cmnmi	r5, #1627389952	@ 0x61000000
    13d0:	676e6168 	strbvs	r6, [lr, -r8, ror #2]!
    13d4:	00764565 	rsbseq	r4, r6, r5, ror #10
    13d8:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    13dc:	6b636172 	blvs	18d99ac <_stack+0x18599ac>
    13e0:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    13e4:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    13e8:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    13ec:	3831656c 	ldmdacc	r1!, {r2, r3, r5, r6, r8, sl, sp, lr}
    13f0:	61536e6f 	cmpvs	r3, pc, ror #28
    13f4:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
    13f8:	65746152 	ldrbvs	r6, [r4, #-338]!	@ 0xfffffeae
    13fc:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    1400:	52456567 	subpl	r6, r5, #432013312	@ 0x19c00000
    1404:	31534e4b 	cmpcc	r3, fp, asr #28
    1408:	5331325f 	teqpl	r1, #-268435451	@ 0xf0000005
    140c:	6c706d61 	ldclvs	13, cr6, [r0], #-388	@ 0xfffffe7c
    1410:	74615265 	strbtvc	r5, [r1], #-613	@ 0xfffffd9b
    1414:	61684365 	cmnvs	r8, r5, ror #6
    1418:	4565676e 	strbmi	r6, [r5, #-1902]!	@ 0xfffff892
    141c:	746e6576 	strbtvc	r6, [lr], #-1398	@ 0xfffffa8a
    1420:	5a5f0045 	bpl	17c153c <_stack+0x174153c>
    1424:	6172344e 	cmnvs	r2, lr, asr #8
    1428:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    142c:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    1430:	6f4d3665 	svcvs	0x004d3665
    1434:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1438:	65733431 	ldrbvs	r3, [r3, #-1073]!	@ 0xfffffbcf
    143c:	61735f74 	cmnvs	r3, r4, ror pc
    1440:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
    1444:	65746172 	ldrbvs	r6, [r4, #-370]!	@ 0xfffffe8e
    1448:	5f006645 	svcpl	0x00006645
    144c:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    1450:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    1454:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1458:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    145c:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1460:	6f363165 	svcvs	0x00363165
    1464:	7078456e 	rsbsvc	r4, r8, lr, ror #10
    1468:	65646e61 	strbvs	r6, [r4, #-3681]!	@ 0xfffff19f
    146c:	61684372 	smcvs	33842	@ 0x8432
    1470:	4565676e 	strbmi	r6, [r5, #-1902]!	@ 0xfffff892
    1474:	534e4b52 	movtpl	r4, #60242	@ 0xeb52
    1478:	39315f31 	ldmdbcc	r1!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}
    147c:	61707845 	cmnvs	r0, r5, asr #16
    1480:	7265646e 	rsbvc	r6, r5, #1845493760	@ 0x6e000000
    1484:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
    1488:	76456567 	strbvc	r6, [r5], -r7, ror #10
    148c:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    1490:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1494:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1498:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    149c:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    14a0:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 14a8 <.plt-0x2404>
    14a4:	37656c75 			@ <UNDEFINED> instruction: 0x37656c75
    14a8:	65526e6f 	ldrbvs	r6, [r2, #-3695]	@ 0xfffff191
    14ac:	45746573 	ldrbmi	r6, [r4, #-1395]!	@ 0xfffffa8d
    14b0:	5a5f0076 	bpl	17c1690 <_stack+0x1741690>
    14b4:	6172344e 	cmnvs	r2, lr, asr #8
    14b8:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    14bc:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    14c0:	6f4d3665 	svcvs	0x004d3665
    14c4:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    14c8:	526e6f37 	rsbpl	r6, lr, #55, 30	@ 0xdc
    14cc:	74657365 	strbtvc	r7, [r5], #-869	@ 0xfffffc9b
    14d0:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    14d4:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    14d8:	73655230 	cmnvc	r5, #48, 4
    14dc:	76457465 	strbvc	r7, [r5], -r5, ror #8
    14e0:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    14e4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    14e8:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    14ec:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    14f0:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    14f4:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 14fc <.plt-0x23b0>
    14f8:	31656c75 	smccc	22213	@ 0x56c5
    14fc:	526e6f31 	rsbpl	r6, lr, #49, 30	@ 0xc4
    1500:	6f646e61 	svcvs	0x00646e61
    1504:	657a696d 	ldrbvs	r6, [sl, #-2413]!	@ 0xfffff693
    1508:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    150c:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    1510:	6e615234 	mcrvs	2, 3, r5, cr1, cr4, {1}
    1514:	696d6f64 	stmdbvs	sp!, {r2, r5, r6, r8, r9, sl, fp, sp, lr}^
    1518:	7645657a 			@ <UNDEFINED> instruction: 0x7645657a
    151c:	45746e65 	ldrbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    1520:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1524:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1528:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    152c:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    1530:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 1538 <.plt-0x2374>
    1534:	31656c75 	smccc	22213	@ 0x56c5
    1538:	526e6f31 	rsbpl	r6, lr, #49, 30	@ 0xc4
    153c:	6f646e61 	svcvs	0x00646e61
    1540:	657a696d 	ldrbvs	r6, [sl, #-2413]!	@ 0xfffff693
    1544:	5f007645 	svcpl	0x00007645
    1548:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    154c:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    1550:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1554:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    1558:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    155c:	6e6f3665 	cdpvs	6, 6, cr3, cr15, cr5, {3}
    1560:	65766153 	ldrbvs	r6, [r6, #-339]!	@ 0xfffffead
    1564:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    1568:	395f3153 	ldmdbcc	pc, {r0, r1, r4, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
    156c:	65766153 	ldrbvs	r6, [r6, #-339]!	@ 0xfffffead
    1570:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1574:	5f004574 	svcpl	0x00004574
    1578:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    157c:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    1580:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1584:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    1588:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    158c:	6f313165 	svcvs	0x00313165
    1590:	7465536e 	strbtvc	r5, [r5], #-878	@ 0xfffffc92
    1594:	7473614d 	ldrbtvc	r6, [r3], #-333	@ 0xfffffeb3
    1598:	52457265 	subpl	r7, r5, #1342177286	@ 0x50000006
    159c:	31534e4b 	cmpcc	r3, fp, asr #28
    15a0:	5334315f 	teqpl	r4, #-1073741801	@ 0xc0000017
    15a4:	614d7465 	cmpvs	sp, r5, ror #8
    15a8:	72657473 	rsbvc	r7, r5, #1929379840	@ 0x73000000
    15ac:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    15b0:	5f004574 	svcpl	0x00004574
    15b4:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    15b8:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    15bc:	69676e65 	stmdbvs	r7!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    15c0:	4d36656e 	cfldr32mi	mvfx6, [r6, #-440]!	@ 0xfffffe48
    15c4:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    15c8:	6f333165 	svcvs	0x00333165
    15cc:	736e556e 	cmnvc	lr, #461373440	@ 0x1b800000
    15d0:	614d7465 	cmpvs	sp, r5, ror #8
    15d4:	72657473 	rsbvc	r7, r5, #1929379840	@ 0x73000000
    15d8:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    15dc:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    15e0:	736e5536 	cmnvc	lr, #226492416	@ 0xd800000
    15e4:	614d7465 	cmpvs	sp, r5, ror #8
    15e8:	72657473 	rsbvc	r7, r5, #1929379840	@ 0x73000000
    15ec:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    15f0:	5f004574 	svcpl	0x00004574
    15f4:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    15f8:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    15fc:	67646977 			@ <UNDEFINED> instruction: 0x67646977
    1600:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
    1604:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    1608:	45324474 	ldrmi	r4, [r2, #-1140]!	@ 0xfffffb8c
    160c:	5a5f0076 	bpl	17c17ec <_stack+0x17417ec>
    1610:	6172344e 	cmnvs	r2, lr, asr #8
    1614:	77366b63 	ldrvc	r6, [r6, -r3, ror #22]!
    1618:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    161c:	69573674 	ldmdbvs	r7, {r2, r4, r5, r6, r9, sl, ip, sp}^
    1620:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    1624:	76453144 	strbvc	r3, [r5], -r4, asr #2
    1628:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    162c:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1630:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    1634:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1638:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    163c:	31746567 	cmncc	r4, r7, ror #10
    1640:	70706137 	rsbsvc	r6, r0, r7, lsr r1
    1644:	43646e65 	cmnmi	r4, #1616	@ 0x650
    1648:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	@ 0xfffff191
    164c:	654d7478 	strbvs	r7, [sp, #-1144]	@ 0xfffffb88
    1650:	5045756e 	subpl	r7, r5, lr, ror #10
    1654:	325f534e 	subscc	r5, pc, #939524097	@ 0x38000001
    1658:	4d346975 			@ <UNDEFINED> instruction: 0x4d346975
    165c:	45756e65 	ldrbmi	r6, [r5, #-3685]!	@ 0xfffff19b
    1660:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1664:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1668:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    166c:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1670:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    1674:	34746567 	ldrbtcc	r6, [r4], #-1383	@ 0xfffffa99
    1678:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    167c:	4e4b5245 	cdpmi	2, 4, cr5, cr11, cr5, {2}
    1680:	44385f53 	ldrtmi	r5, [r8], #-3923	@ 0xfffff0ad
    1684:	41776172 	cmnmi	r7, r2, ror r1
    1688:	45736772 	ldrbmi	r6, [r3, #-1906]!	@ 0xfffff88e
    168c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1690:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1694:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    1698:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    169c:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    16a0:	39746567 	ldmdbcc	r4!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
    16a4:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
    16a8:	6579614c 	ldrbvs	r6, [r9, #-332]!	@ 0xfffffeb4
    16ac:	4b524572 	blmi	1492c7c <_stack+0x1412c7c>
    16b0:	385f534e 	ldmdacc	pc, {r1, r2, r3, r6, r8, r9, ip, lr}^	@ <UNPREDICTABLE>
    16b4:	77617244 	strbvc	r7, [r1, -r4, asr #4]!
    16b8:	73677241 	cmnvc	r7, #268435460	@ 0x10000004
    16bc:	5f006945 	svcpl	0x00006945
    16c0:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    16c4:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    16c8:	67646977 			@ <UNDEFINED> instruction: 0x67646977
    16cc:	57367465 	ldrpl	r7, [r6, -r5, ror #8]!
    16d0:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    16d4:	45304474 	ldrmi	r4, [r0, #-1140]!	@ 0xfffffb8c
    16d8:	5a5f0076 	bpl	17c18b8 <_stack+0x17418b8>
    16dc:	76506c64 	ldrbvc	r6, [r0], -r4, ror #24
    16e0:	5a5f006a 	bpl	17c1890 <_stack+0x1741890>
    16e4:	3674534e 	ldrbtcc	r5, [r4], -lr, asr #6
    16e8:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    16ec:	3849726f 	stmdacc	r9, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    16f0:	6347564e 	movtvs	r5, #30286	@ 0x764e
    16f4:	726f6c6f 	rsbvc	r6, pc, #28416	@ 0x6f00
    16f8:	53496153 	movtpl	r6, #37203	@ 0x9153
    16fc:	45455f30 	strbmi	r5, [r5, #-3888]	@ 0xfffff0d0
    1700:	76453244 	strbvc	r3, [r5], -r4, asr #4
    1704:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1708:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    170c:	6f746365 	svcvs	0x00746365
    1710:	4e384972 			@ <UNDEFINED> instruction: 0x4e384972
    1714:	6f634756 	svcvs	0x00634756
    1718:	53726f6c 	cmnpl	r2, #108, 30	@ 0x1b0
    171c:	30534961 	subscc	r4, r3, r1, ror #18
    1720:	4445455f 	strbmi	r4, [r5], #-1375	@ 0xfffffaa1
    1724:	00764531 	rsbseq	r4, r6, r1, lsr r5
    1728:	314e5a5f 	cmpcc	lr, pc, asr sl
    172c:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    1730:	646f4d74 	strbtvs	r4, [pc], #-3444	@ 1738 <.plt-0x2174>
    1734:	37656c75 			@ <UNDEFINED> instruction: 0x37656c75
    1738:	636f7270 	cmnvs	pc, #112, 4
    173c:	45737365 	ldrbmi	r7, [r3, #-869]!	@ 0xfffffc9b
    1740:	314e4b52 	cmpcc	lr, r2, asr fp
    1744:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    1748:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    174c:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    1750:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    1754:	50313172 	eorspl	r3, r1, r2, ror r1
    1758:	65636f72 	strbvs	r6, [r3, #-3954]!	@ 0xfffff08e
    175c:	72417373 	subvc	r7, r1, #-872415231	@ 0xcc000001
    1760:	00457367 	subeq	r7, r5, r7, ror #6
    1764:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1768:	6b636172 	blvs	18d9d38 <_stack+0x1859d38>
    176c:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1770:	35656e69 	strbcc	r6, [r5, #-3689]!	@ 0xfffff197
    1774:	61726150 	cmnvs	r2, r0, asr r1
    1778:	6567386d 	strbvs	r3, [r7, #-2157]!	@ 0xfffff793
    177c:	6c615674 	stclvs	6, cr5, [r1], #-464	@ 0xfffffe30
    1780:	76456575 			@ <UNDEFINED> instruction: 0x76456575
    1784:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1788:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    178c:	6f746365 	svcvs	0x00746365
    1790:	314e4972 	hvccc	58514	@ 0xe492
    1794:	656c4532 	strbvs	r4, [ip, #-1330]!	@ 0xffffface
    1798:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    179c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    17a0:	6e493774 	mcrvs	7, 2, r3, cr9, cr4, {3}
    17a4:	65636964 	strbvs	r6, [r3, #-2404]!	@ 0xfffff69c
    17a8:	61534573 	cmpvs	r3, r3, ror r5
    17ac:	5f315349 	svcpl	0x00315349
    17b0:	32444545 	subcc	r4, r4, #289406976	@ 0x11400000
    17b4:	5f007645 	svcpl	0x00007645
    17b8:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    17bc:	63657636 	cmnvs	r5, #56623104	@ 0x3600000
    17c0:	49726f74 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    17c4:	4532314e 	ldrmi	r3, [r2, #-334]!	@ 0xfffffeb2
    17c8:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
    17cc:	6f43746e 	svcvs	0x0043746e
    17d0:	37746e75 			@ <UNDEFINED> instruction: 0x37746e75
    17d4:	69646e49 	stmdbvs	r4!, {r0, r3, r6, r9, sl, fp, sp, lr}^
    17d8:	45736563 	ldrbmi	r6, [r3, #-1379]!	@ 0xfffffa9d
    17dc:	53496153 	movtpl	r6, #37203	@ 0x9153
    17e0:	45455f31 	strbmi	r5, [r5, #-3889]	@ 0xfffff0cf
    17e4:	76453144 	strbvc	r3, [r5], -r4, asr #2
    17e8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    17ec:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    17f0:	6f746365 	svcvs	0x00746365
    17f4:	74534972 	ldrbvc	r4, [r3], #-2418	@ 0xfffff68e
    17f8:	72617637 	rsbvc	r7, r1, #57671680	@ 0x3700000
    17fc:	746e6169 	strbtvc	r6, [lr], #-361	@ 0xfffffe97
    1800:	314e4a49 	cmpcc	lr, r9, asr #20
    1804:	74654d30 	strbtvc	r4, [r5], #-3376	@ 0xfffff2d0
    1808:	646f4d61 	strbtvs	r4, [pc], #-3425	@ 1810 <.plt-0x209c>
    180c:	31656c75 	smccc	22213	@ 0x56c5
    1810:	6c754e31 	ldclvs	14, cr4, [r5], #-196	@ 0xffffff3c
    1814:	656c456c 	strbvs	r4, [ip, #-1388]!	@ 0xfffffa94
    1818:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    181c:	31534e45 	cmpcc	r3, r5, asr #28
    1820:	6e4b345f 	mcrvs	4, 2, r3, cr11, cr15, {2}
    1824:	4e45626f 	cdpmi	2, 4, cr6, cr5, cr15, {3}
    1828:	365f3153 			@ <UNDEFINED> instruction: 0x365f3153
    182c:	64696c53 	strbtvs	r6, [r9], #-3155	@ 0xfffff3ad
    1830:	4e457265 	cdpmi	2, 4, cr7, cr5, cr5, {3}
    1834:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    1838:	696c5331 	stmdbvs	ip!, {r0, r4, r5, r8, r9, ip, lr}^
    183c:	4c726564 	cfldr64mi	mvdx6, [r2], #-400	@ 0xfffffe70
    1840:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    1844:	31534e45 	cmpcc	r3, r5, asr #28
    1848:	4630315f 			@ <UNDEFINED> instruction: 0x4630315f
    184c:	5370696c 	cmnpl	r0, #108, 18	@ 0x1b0000
    1850:	63746977 	cmnvs	r4, #1949696	@ 0x1dc000
    1854:	534e4568 	movtpl	r4, #58728	@ 0xe568
    1858:	31315f31 	teqcc	r1, r1, lsr pc
    185c:	64696c53 	strbtvs	r6, [r9], #-3155	@ 0xfffff3ad
    1860:	69775365 	ldmdbvs	r7!, {r0, r2, r5, r6, r8, r9, ip, lr}^
    1864:	45686374 	strbmi	r6, [r8, #-884]!	@ 0xfffffc8c
    1868:	5f31534e 	svcpl	0x0031534e
    186c:	6f4d3531 	svcvs	0x004d3531
    1870:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    1874:	42797261 	rsbsmi	r7, r9, #268435462	@ 0x10000006
    1878:	6f747475 	svcvs	0x00747475
    187c:	534e456e 	movtpl	r4, #58734	@ 0xe56e
    1880:	35325f31 	ldrcc	r5, [r2, #-3889]!	@ 0xfffff0cf
    1884:	656d6f4d 	strbvs	r6, [sp, #-3917]!	@ 0xfffff0b3
    1888:	7261746e 	rsbvc	r7, r1, #1845493760	@ 0x6e000000
    188c:	74754279 	ldrbtvc	r4, [r5], #-633	@ 0xfffffd87
    1890:	576e6f74 			@ <UNDEFINED> instruction: 0x576e6f74
    1894:	65746968 	ldrbvs	r6, [r4, #-2408]!	@ 0xfffff698
    1898:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    189c:	534e4574 	movtpl	r4, #58740	@ 0xe574
    18a0:	38315f31 	ldmdacc	r1!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}
    18a4:	656d6f4d 	strbvs	r6, [sp, #-3917]!	@ 0xfffff0b3
    18a8:	7261746e 	rsbvc	r7, r1, #1845493760	@ 0x6e000000
    18ac:	74754279 	ldrbtvc	r4, [r5], #-633	@ 0xfffffd87
    18b0:	526e6f74 	rsbpl	r6, lr, #116, 30	@ 0x1d0
    18b4:	4e454247 	cdpmi	2, 4, cr4, cr5, cr7, {2}
    18b8:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    18bc:	74614c34 	strbtvc	r4, [r1], #-3124	@ 0xfffff3cc
    18c0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    18c4:	74754267 	ldrbtvc	r4, [r5], #-615	@ 0xfffffd99
    18c8:	456e6f74 	strbmi	r6, [lr, #-3956]!	@ 0xfffff08c
    18cc:	5f31534e 	svcpl	0x0031534e
    18d0:	636e4537 	cmnvs	lr, #230686720	@ 0xdc00000
    18d4:	7265646f 	rsbvc	r6, r5, #1862270976	@ 0x6f000000
    18d8:	31534e45 	cmpcc	r3, r5, asr #28
    18dc:	4530315f 	ldrmi	r3, [r0, #-351]!	@ 0xfffffea1
    18e0:	646f636e 	strbtvs	r6, [pc], #-878	@ 18e8 <.plt-0x1fc4>
    18e4:	47527265 	ldrbmi	r7, [r2, -r5, ror #4]
    18e8:	534e4542 	movtpl	r4, #58690	@ 0xe542
    18ec:	4a395f31 	bmi	e595b8 <_stack+0xdd95b8>
    18f0:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    18f4:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
    18f8:	31534e45 	cmpcc	r3, r5, asr #28
    18fc:	4a30315f 	bmi	c0de80 <_stack+0xb8de80>
    1900:	4f6b6361 	svcmi	0x006b6361
    1904:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
    1908:	534e4574 	movtpl	r4, #58740	@ 0xe574
    190c:	4d395f31 	ldcmi	15, cr5, [r9, #-196]!	@ 0xffffff3c
    1910:	4c6f6e6f 	stclmi	14, cr6, [pc], #-444	@ 175c <.plt-0x2150>
    1914:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    1918:	31534e45 	cmpcc	r3, r5, asr #28
    191c:	7544395f 	strbvc	r3, [r4, #-2399]	@ 0xfffff6a1
    1920:	694c6c61 	stmdbvs	ip, {r0, r5, r6, sl, fp, sp, lr}^
    1924:	45746867 	ldrbmi	r6, [r4, #-2151]!	@ 0xfffff799
    1928:	5f31534e 	svcpl	0x0031534e
    192c:	62675238 	rsbvs	r5, r7, #56, 4	@ 0x80000003
    1930:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1934:	534e4574 	movtpl	r4, #58740	@ 0xe574
    1938:	44375f31 	ldrtmi	r5, [r7], #-3889	@ 0xfffff0cf
    193c:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
    1940:	4e457961 	vmlsmi.f16	s15, s10, s3	@ <UNPREDICTABLE>
    1944:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    1948:	746c4135 	strbtvc	r4, [ip], #-309	@ 0xfffffecb
    194c:	61726150 	cmnvs	r2, r0, asr r1
    1950:	676f546d 	strbvs	r5, [pc, -sp, ror #8]!
    1954:	32656c67 	rsbcc	r6, r5, #26368	@ 0x6700
    1958:	31534e45 	cmpcc	r3, r5, asr #28
    195c:	4135315f 	teqmi	r5, pc, asr r1
    1960:	6150746c 	cmpvs	r0, ip, ror #8
    1964:	546d6172 	strbtpl	r6, [sp], #-370	@ 0xfffffe8e
    1968:	6c67676f 	stclvs	7, cr6, [r7], #-444	@ 0xfffffe44
    196c:	45453365 	strbmi	r3, [r5, #-869]	@ 0xfffffc9b
    1970:	49615345 	stmdbmi	r1!, {r0, r2, r6, r8, r9, ip, lr}^
    1974:	455f4d53 	ldrbmi	r4, [pc, #-3411]	@ c29 <.plt-0x2c83>
    1978:	45324445 	ldrmi	r4, [r2, #-1093]!	@ 0xfffffbbb
    197c:	5a5f0076 	bpl	17c1b5c <_stack+0x1741b5c>
    1980:	3674534e 	ldrbtcc	r5, [r4], -lr, asr #6
    1984:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    1988:	5349726f 	movtpl	r7, #37487	@ 0x926f
    198c:	61763774 	cmnvs	r6, r4, ror r7
    1990:	6e616972 			@ <UNDEFINED> instruction: 0x6e616972
    1994:	4e4a4974 			@ <UNDEFINED> instruction: 0x4e4a4974
    1998:	654d3031 	strbvs	r3, [sp, #-49]	@ 0xffffffcf
    199c:	6f4d6174 	svcvs	0x004d6174
    19a0:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    19a4:	754e3131 	strbvc	r3, [lr, #-305]	@ 0xfffffecf
    19a8:	6c456c6c 	mcrrvs	12, 6, r6, r5, cr12
    19ac:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    19b0:	534e4574 	movtpl	r4, #58740	@ 0xe574
    19b4:	4b345f31 	blmi	d19680 <_stack+0xc99680>
    19b8:	45626f6e 	strbmi	r6, [r2, #-3950]!	@ 0xfffff092
    19bc:	5f31534e 	svcpl	0x0031534e
    19c0:	696c5336 	stmdbvs	ip!, {r1, r2, r4, r5, r8, r9, ip, lr}^
    19c4:	45726564 	ldrbmi	r6, [r2, #-1380]!	@ 0xfffffa9c
    19c8:	5f31534e 	svcpl	0x0031534e
    19cc:	6c533131 	ldfvse	f3, [r3], {49}	@ 0x31
    19d0:	72656469 	rsbvc	r6, r5, #1761607680	@ 0x69000000
    19d4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    19d8:	534e4574 	movtpl	r4, #58740	@ 0xe574
    19dc:	30315f31 	eorscc	r5, r1, r1, lsr pc
    19e0:	70696c46 	rsbvc	r6, r9, r6, asr #24
    19e4:	74697753 	strbtvc	r7, [r9], #-1875	@ 0xfffff8ad
    19e8:	4e456863 	cdpmi	8, 4, cr6, cr5, cr3, {3}
    19ec:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    19f0:	696c5331 	stmdbvs	ip!, {r0, r4, r5, r8, r9, ip, lr}^
    19f4:	77536564 	ldrbvc	r6, [r3, -r4, ror #10]
    19f8:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    19fc:	31534e45 	cmpcc	r3, r5, asr #28
    1a00:	4d35315f 	ldfmis	f3, [r5, #-380]!	@ 0xfffffe84
    1a04:	6e656d6f 	cdpvs	13, 6, cr6, cr5, cr15, {3}
    1a08:	79726174 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, sp, lr}^
    1a0c:	74747542 	ldrbtvc	r7, [r4], #-1346	@ 0xfffffabe
    1a10:	4e456e6f 	cdpmi	14, 4, cr6, cr5, cr15, {3}
    1a14:	325f3153 	subscc	r3, pc, #-1073741804	@ 0xc0000014
    1a18:	6d6f4d35 	stclvs	13, cr4, [pc, #-212]!	@ 194c <.plt-0x1f60>
    1a1c:	61746e65 	cmnvs	r4, r5, ror #28
    1a20:	75427972 	strbvc	r7, [r2, #-2418]	@ 0xfffff68e
    1a24:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    1a28:	74696857 	strbtvc	r6, [r9], #-2135	@ 0xfffff7a9
    1a2c:	67694c65 	strbvs	r4, [r9, -r5, ror #24]!
    1a30:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    1a34:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    1a38:	6d6f4d38 	stclvs	13, cr4, [pc, #-224]!	@ 1960 <.plt-0x1f4c>
    1a3c:	61746e65 	cmnvs	r4, r5, ror #28
    1a40:	75427972 	strbvc	r7, [r2, #-2418]	@ 0xfffff68e
    1a44:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    1a48:	45424752 	strbmi	r4, [r2, #-1874]	@ 0xfffff8ae
    1a4c:	5f31534e 	svcpl	0x0031534e
    1a50:	614c3431 	cmpvs	ip, r1, lsr r4
    1a54:	69686374 	stmdbvs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
    1a58:	7542676e 	strbvc	r6, [r2, #-1902]	@ 0xfffff892
    1a5c:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    1a60:	31534e45 	cmpcc	r3, r5, asr #28
    1a64:	6e45375f 	mcrvs	7, 2, r3, cr5, cr15, {2}
    1a68:	65646f63 	strbvs	r6, [r4, #-3939]!	@ 0xfffff09d
    1a6c:	534e4572 	movtpl	r4, #58738	@ 0xe572
    1a70:	30315f31 	eorscc	r5, r1, r1, lsr pc
    1a74:	6f636e45 	svcvs	0x00636e45
    1a78:	52726564 	rsbspl	r6, r2, #100, 10	@ 0x19000000
    1a7c:	4e454247 	cdpmi	2, 4, cr4, cr5, cr7, {2}
    1a80:	395f3153 	ldmdbcc	pc, {r0, r1, r4, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
    1a84:	6b63614a 	blvs	18d9fb4 <_stack+0x1859fb4>
    1a88:	75706e49 	ldrbvc	r6, [r0, #-3657]!	@ 0xfffff1b7
    1a8c:	534e4574 	movtpl	r4, #58740	@ 0xe574
    1a90:	30315f31 	eorscc	r5, r1, r1, lsr pc
    1a94:	6b63614a 	blvs	18d9fc4 <_stack+0x1859fc4>
    1a98:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1a9c:	4e457475 	mcrmi	4, 2, r7, cr5, cr5, {3}
    1aa0:	395f3153 	ldmdbcc	pc, {r0, r1, r4, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
    1aa4:	6f6e6f4d 	svcvs	0x006e6f4d
    1aa8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1aac:	534e4574 	movtpl	r4, #58740	@ 0xe574
    1ab0:	44395f31 	ldrtmi	r5, [r9], #-3889	@ 0xfffff0cf
    1ab4:	4c6c6175 	stfmie	f6, [ip], #-468	@ 0xfffffe2c
    1ab8:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    1abc:	31534e45 	cmpcc	r3, r5, asr #28
    1ac0:	6752385f 			@ <UNDEFINED> instruction: 0x6752385f
    1ac4:	67694c62 	strbvs	r4, [r9, -r2, ror #24]!
    1ac8:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    1acc:	375f3153 			@ <UNDEFINED> instruction: 0x375f3153
    1ad0:	70736944 	rsbsvc	r6, r3, r4, asr #18
    1ad4:	4579616c 	ldrbmi	r6, [r9, #-364]!	@ 0xfffffe94
    1ad8:	5f31534e 	svcpl	0x0031534e
    1adc:	6c413531 	cfstr64vs	mvdx3, [r1], {49}	@ 0x31
    1ae0:	72615074 	rsbvc	r5, r1, #116	@ 0x74
    1ae4:	6f546d61 	svcvs	0x00546d61
    1ae8:	656c6767 	strbvs	r6, [ip, #-1895]!	@ 0xfffff899
    1aec:	534e4532 	movtpl	r4, #58674	@ 0xe532
    1af0:	35315f31 	ldrcc	r5, [r1, #-3889]!	@ 0xfffff0cf
    1af4:	50746c41 	rsbspl	r6, r4, r1, asr #24
    1af8:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
    1afc:	67676f54 			@ <UNDEFINED> instruction: 0x67676f54
    1b00:	4533656c 	ldrmi	r6, [r3, #-1388]!	@ 0xfffffa94
    1b04:	61534545 	cmpvs	r3, r5, asr #10
    1b08:	5f4d5349 	svcpl	0x004d5349
    1b0c:	31444545 	cmpcc	r4, r5, asr #10
    1b10:	5f007645 	svcpl	0x00007645
    1b14:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    1b18:	635f5f37 	cmpvs	pc, #55, 30	@ 0xdc
    1b1c:	31317878 	teqcc	r1, r8, ror r8
    1b20:	73696c34 	cmnvc	r9, #52, 24	@ 0x3400
    1b24:	534e4974 	movtpl	r4, #59764	@ 0xe974
    1b28:	6232315f 	eorsvs	r3, r2, #-1073741801	@ 0xc0000017
    1b2c:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    1b30:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    1b34:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1b38:	31745363 	cmncc	r4, r3, ror #6
    1b3c:	61686331 	cmnvs	r8, r1, lsr r3
    1b40:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    1b44:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    1b48:	53456349 	movtpl	r6, #21321	@ 0x5349
    1b4c:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    1b50:	61534545 	cmpvs	r3, r5, asr #10
    1b54:	5f355349 	svcpl	0x00355349
    1b58:	32444545 	subcc	r4, r4, #289406976	@ 0x11400000
    1b5c:	5f007645 	svcpl	0x00007645
    1b60:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    1b64:	635f5f37 	cmpvs	pc, #55, 30	@ 0xdc
    1b68:	31317878 	teqcc	r1, r8, ror r8
    1b6c:	73696c34 	cmnvc	r9, #52, 24	@ 0x3400
    1b70:	534e4974 	movtpl	r4, #59764	@ 0xe974
    1b74:	6232315f 	eorsvs	r3, r2, #-1073741801	@ 0xc0000017
    1b78:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    1b7c:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    1b80:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1b84:	31745363 	cmncc	r4, r3, ror #6
    1b88:	61686331 	cmnvs	r8, r1, lsr r3
    1b8c:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    1b90:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    1b94:	53456349 	movtpl	r6, #21321	@ 0x5349
    1b98:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    1b9c:	61534545 	cmpvs	r3, r5, asr #10
    1ba0:	5f355349 	svcpl	0x00355349
    1ba4:	31444545 	cmpcc	r4, r5, asr #10
    1ba8:	5f007645 	svcpl	0x00007645
    1bac:	30314e5a 	eorscc	r4, r1, sl, asr lr
    1bb0:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
    1bb4:	67646957 			@ <UNDEFINED> instruction: 0x67646957
    1bb8:	32447465 	subcc	r7, r4, #1694498816	@ 0x65000000
    1bbc:	5f007645 	svcpl	0x00007645
    1bc0:	4e56545a 	mrcmi	4, 2, r5, cr6, cr10, {2}
    1bc4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1bc8:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    1bcc:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1bd0:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    1bd4:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
    1bd8:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1bdc:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    1be0:	69577473 	ldmdbvs	r7, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1be4:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    1be8:	76453144 	strbvc	r3, [r5], -r4, asr #2
    1bec:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1bf0:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1bf4:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    1bf8:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1bfc:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    1c00:	44746567 	ldrbtmi	r6, [r4], #-1383	@ 0xfffffa99
    1c04:	00764532 	rsbseq	r4, r6, r2, lsr r5
    1c08:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1c0c:	6b636172 	blvs	18da1dc <_stack+0x185a1dc>
    1c10:	6f4d3231 	svcvs	0x004d3231
    1c14:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1c18:	67646957 			@ <UNDEFINED> instruction: 0x67646957
    1c1c:	31447465 	cmpcc	r4, r5, ror #8
    1c20:	5f007645 	svcpl	0x00007645
    1c24:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    1c28:	635f5f37 	cmpvs	pc, #55, 30	@ 0xdc
    1c2c:	31317878 	teqcc	r1, r8, ror r8
    1c30:	61623231 	cmnvs	r2, r1, lsr r2
    1c34:	5f636973 	svcpl	0x00636973
    1c38:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1c3c:	6349676e 	movtvs	r6, #38766	@ 0x976e
    1c40:	31317453 	teqcc	r1, r3, asr r4
    1c44:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
    1c48:	6172745f 	cmnvs	r2, pc, asr r4
    1c4c:	49737469 	ldmdbmi	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1c50:	61534563 	cmpvs	r3, r3, ror #10
    1c54:	45456349 	strbmi	r6, [r5, #-841]	@ 0xfffffcb7
    1c58:	76453144 	strbvc	r3, [r5], -r4, asr #2
    1c5c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1c60:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1c64:	4d32316b 	ldfmis	f3, [r2, #-428]!	@ 0xfffffe54
    1c68:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    1c6c:	64695765 	strbtvs	r5, [r9], #-1893	@ 0xfffff89b
    1c70:	44746567 	ldrbtmi	r6, [r4], #-1383	@ 0xfffffa99
    1c74:	00764530 	rsbseq	r4, r6, r0, lsr r5
    1c78:	314e5a5f 	cmpcc	lr, pc, asr sl
    1c7c:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    1c80:	64695774 	strbtvs	r5, [r9], #-1908	@ 0xfffff88c
    1c84:	44746567 	ldrbtmi	r6, [r4], #-1383	@ 0xfffffa99
    1c88:	00764530 	rsbseq	r4, r6, r0, lsr r5
    1c8c:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1c90:	6b636172 	blvs	18da260 <_stack+0x185a260>
    1c94:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1c98:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1c9c:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    1ca0:	3244656c 	subcc	r6, r4, #108, 10	@ 0x1b000000
    1ca4:	5f007645 	svcpl	0x00007645
    1ca8:	4e56545a 	mrcmi	4, 2, r5, cr6, cr10, {2}
    1cac:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1cb0:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    1cb4:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    1cb8:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 1cc0 <.plt-0x1bec>
    1cbc:	45656c75 	strbmi	r6, [r5, #-3189]!	@ 0xfffff38b
    1cc0:	545a5f00 	ldrbpl	r5, [sl], #-3840	@ 0xfffff100
    1cc4:	56363156 			@ <UNDEFINED> instruction: 0x56363156
    1cc8:	6f4d5643 	svcvs	0x004d5643
    1ccc:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1cd0:	70617257 	rsbvc	r7, r1, r7, asr r2
    1cd4:	00726570 	rsbseq	r6, r2, r0, ror r5
    1cd8:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1cdc:	6b636172 	blvs	18da2ac <_stack+0x185a2ac>
    1ce0:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1ce4:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1ce8:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    1cec:	3144656c 	cmpcc	r4, ip, ror #10
    1cf0:	5f007645 	svcpl	0x00007645
    1cf4:	30314e5a 	eorscc	r4, r1, sl, asr lr
    1cf8:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
    1cfc:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    1d00:	3244656c 	subcc	r6, r4, #108, 10	@ 0x1b000000
    1d04:	5f007645 	svcpl	0x00007645
    1d08:	3156545a 	cmpcc	r6, sl, asr r4
    1d0c:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    1d10:	646f4d74 	strbtvs	r4, [pc], #-3444	@ 1d18 <.plt-0x1b94>
    1d14:	00656c75 	rsbeq	r6, r5, r5, ror ip
    1d18:	314e5a5f 	cmpcc	lr, pc, asr sl
    1d1c:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    1d20:	646f4d74 	strbtvs	r4, [pc], #-3444	@ 1d28 <.plt-0x1b84>
    1d24:	44656c75 	strbtmi	r6, [r5], #-3189	@ 0xfffff38b
    1d28:	00764531 	rsbseq	r4, r6, r1, lsr r5
    1d2c:	314e5a5f 	cmpcc	lr, pc, asr sl
    1d30:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    1d34:	646f4d74 	strbtvs	r4, [pc], #-3444	@ 1d3c <.plt-0x1b70>
    1d38:	44656c75 	strbtmi	r6, [r5], #-3189	@ 0xfffff38b
    1d3c:	00764530 	rsbseq	r4, r6, r0, lsr r5
    1d40:	344e5a5f 	strbcc	r5, [lr], #-2655	@ 0xfffff5a1
    1d44:	6b636172 	blvs	18da314 <_stack+0x185a314>
    1d48:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1d4c:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1d50:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    1d54:	3044656c 	subcc	r6, r4, ip, ror #10
    1d58:	5f007645 	svcpl	0x00007645
    1d5c:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    1d60:	63657636 	cmnvs	r5, #56623104	@ 0x3600000
    1d64:	49726f74 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d68:	6172344e 	cmnvs	r2, lr, asr #8
    1d6c:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1d70:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    1d74:	61503565 	cmpvs	r0, r5, ror #10
    1d78:	456d6172 	strbmi	r6, [sp, #-370]!	@ 0xfffffe8e
    1d7c:	53496153 	movtpl	r6, #37203	@ 0x9153
    1d80:	45455f32 	strbmi	r5, [r5, #-3890]	@ 0xfffff0ce
    1d84:	4d5f3731 	ldclmi	7, cr3, [pc, #-196]	@ 1cc8 <.plt-0x1be4>
    1d88:	6665645f 			@ <UNDEFINED> instruction: 0x6665645f
    1d8c:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
    1d90:	7070615f 	rsbsvc	r6, r0, pc, asr r1
    1d94:	45646e65 	strbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    1d98:	5a5f006a 	bpl	17c1f48 <_stack+0x1741f48>
    1d9c:	30327453 	eorscc	r7, r2, r3, asr r4
    1da0:	68745f5f 	ldmdavs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1da4:	5f776f72 	svcpl	0x00776f72
    1da8:	676e656c 	strbvs	r6, [lr, -ip, ror #10]!
    1dac:	655f6874 	ldrbvs	r6, [pc, #-2164]	@ 1540 <.plt-0x236c>
    1db0:	726f7272 	rsbvc	r7, pc, #536870919	@ 0x20000007
    1db4:	00634b50 	rsbeq	r4, r3, r0, asr fp
    1db8:	776e5a5f 			@ <UNDEFINED> instruction: 0x776e5a5f
    1dbc:	5a5f006a 	bpl	17c1f6c <_stack+0x1741f6c>
    1dc0:	3674534e 	ldrbtcc	r5, [r4], -lr, asr #6
    1dc4:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    1dc8:	4e49726f 	cdpmi	2, 4, cr7, cr9, cr15, {3}
    1dcc:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1dd0:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    1dd4:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    1dd8:	706e4935 	rsbvc	r4, lr, r5, lsr r9
    1ddc:	53457475 	movtpl	r7, #21621	@ 0x5475
    1de0:	32534961 	subscc	r4, r3, #1589248	@ 0x184000
    1de4:	3145455f 	cmpcc	r5, pc, asr r5
    1de8:	5f4d5f37 	svcpl	0x004d5f37
    1dec:	61666564 	cmnvs	r6, r4, ror #10
    1df0:	5f746c75 	svcpl	0x00746c75
    1df4:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    1df8:	6a45646e 	bvs	115afb8 <_stack+0x10dafb8>
    1dfc:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e00:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    1e04:	6f746365 	svcvs	0x00746365
    1e08:	344e4972 	strbcc	r4, [lr], #-2418	@ 0xfffff68e
    1e0c:	6b636172 	blvs	18da3dc <_stack+0x185a3dc>
    1e10:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1e14:	36656e69 	strbtcc	r6, [r5], -r9, ror #28
    1e18:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    1e1c:	53457475 	movtpl	r7, #21621	@ 0x5475
    1e20:	32534961 	subscc	r4, r3, #1589248	@ 0x184000
    1e24:	3145455f 	cmpcc	r5, pc, asr r5
    1e28:	5f4d5f37 	svcpl	0x004d5f37
    1e2c:	61666564 	cmnvs	r6, r4, ror #10
    1e30:	5f746c75 	svcpl	0x00746c75
    1e34:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    1e38:	6a45646e 	bvs	115aff8 <_stack+0x10daff8>
    1e3c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1e40:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    1e44:	6f746365 	svcvs	0x00746365
    1e48:	344e4972 	strbcc	r4, [lr], #-2418	@ 0xfffff68e
    1e4c:	6b636172 	blvs	18da41c <_stack+0x185a41c>
    1e50:	676e6536 			@ <UNDEFINED> instruction: 0x676e6536
    1e54:	35656e69 	strbcc	r6, [r5, #-3689]!	@ 0xfffff197
    1e58:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    1e5c:	61534574 	cmpvs	r3, r4, ror r5
    1e60:	5f325349 	svcpl	0x00325349
    1e64:	37314545 	ldrcc	r4, [r1, -r5, asr #10]!
    1e68:	645f4d5f 	ldrbvs	r4, [pc], #-3423	@ 1e70 <.plt-0x1a3c>
    1e6c:	75616665 	strbvc	r6, [r1, #-1637]!	@ 0xfffff99b
    1e70:	615f746c 	cmpvs	pc, ip, ror #8
    1e74:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
    1e78:	006a4564 	rsbeq	r4, sl, r4, ror #10
    1e7c:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    1e80:	65763674 	ldrbvs	r3, [r6, #-1652]!	@ 0xfffff98c
    1e84:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
    1e88:	31745349 	cmncc	r4, r9, asr #6
    1e8c:	696e7530 	stmdbvs	lr!, {r4, r5, r8, sl, ip, sp, lr}^
    1e90:	5f657571 	svcpl	0x00657571
    1e94:	49727470 	ldmdbmi	r2!, {r4, r5, r6, sl, ip, sp, lr}^
    1e98:	6172344e 	cmnvs	r2, lr, asr #8
    1e9c:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1ea0:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    1ea4:	50333165 	eorspl	r3, r3, r5, ror #2
    1ea8:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
    1eac:	6e617551 	mcrvs	5, 3, r7, cr1, cr1, {2}
    1eb0:	79746974 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    1eb4:	31745345 	cmncc	r4, r5, asr #6
    1eb8:	66656434 			@ <UNDEFINED> instruction: 0x66656434
    1ebc:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
    1ec0:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	@ 0xfffffe84
    1ec4:	49657465 	stmdbmi	r5!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1ec8:	455f3353 	ldrbmi	r3, [pc, #-851]	@ 1b7d <.plt-0x1d2f>
    1ecc:	49615345 	stmdbmi	r1!, {r0, r2, r6, r8, r9, ip, lr}^
    1ed0:	455f3653 	ldrbmi	r3, [pc, #-1619]	@ 1885 <.plt-0x2027>
    1ed4:	5f373145 	svcpl	0x00373145
    1ed8:	65645f4d 	strbvs	r5, [r4, #-3917]!	@ 0xfffff0b3
    1edc:	6c756166 	ldfvse	f6, [r5], #-408	@ 0xfffffe68
    1ee0:	70615f74 	rsbvc	r5, r1, r4, ror pc
    1ee4:	646e6570 	strbtvs	r6, [lr], #-1392	@ 0xfffffa90
    1ee8:	5f006a45 	svcpl	0x00006a45
    1eec:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    1ef0:	63657636 	cmnvs	r5, #56623104	@ 0x3600000
    1ef4:	49726f74 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ef8:	30317453 	eorscc	r7, r1, r3, asr r4
    1efc:	71696e75 	smcvc	38629	@ 0x96e5
    1f00:	705f6575 	subsvc	r6, pc, r5, ror r5	@ <UNPREDICTABLE>
    1f04:	4e497274 	mcrmi	2, 2, r7, cr9, cr4, {3}
    1f08:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1f0c:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    1f10:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    1f14:	726f5038 	rsbvc	r5, pc, #56	@ 0x38
    1f18:	666e4974 			@ <UNDEFINED> instruction: 0x666e4974
    1f1c:	7453456f 	ldrbvc	r4, [r3], #-1391	@ 0xfffffa91
    1f20:	65643431 	strbvs	r3, [r4, #-1073]!	@ 0xfffffbcf
    1f24:	6c756166 	ldfvse	f6, [r5], #-408	@ 0xfffffe68
    1f28:	65645f74 	strbvs	r5, [r4, #-3956]!	@ 0xfffff08c
    1f2c:	6574656c 	ldrbvs	r6, [r4, #-1388]!	@ 0xfffffa94
    1f30:	5f335349 	svcpl	0x00335349
    1f34:	61534545 	cmpvs	r3, r5, asr #10
    1f38:	5f365349 	svcpl	0x00365349
    1f3c:	37314545 	ldrcc	r4, [r1, -r5, asr #10]!
    1f40:	645f4d5f 	ldrbvs	r4, [pc], #-3423	@ 1f48 <.plt-0x1964>
    1f44:	75616665 	strbvc	r6, [r1, #-1637]!	@ 0xfffff99b
    1f48:	615f746c 	cmpvs	pc, ip, ror #8
    1f4c:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
    1f50:	006a4564 	rsbeq	r4, sl, r4, ror #10
    1f54:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    1f58:	65763674 	ldrbvs	r3, [r6, #-1652]!	@ 0xfffff98c
    1f5c:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
    1f60:	31745349 	cmncc	r4, r9, asr #6
    1f64:	696e7530 	stmdbvs	lr!, {r4, r5, r8, sl, ip, sp, lr}^
    1f68:	5f657571 	svcpl	0x00657571
    1f6c:	49727470 	ldmdbmi	r2!, {r4, r5, r6, sl, ip, sp, lr}^
    1f70:	6172344e 	cmnvs	r2, lr, asr #8
    1f74:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1f78:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    1f7c:	694c3965 	stmdbvs	ip, {r0, r2, r5, r6, r8, fp, ip, sp}^
    1f80:	49746867 	ldmdbmi	r4!, {r0, r1, r2, r5, r6, fp, sp, lr}^
    1f84:	456f666e 	strbmi	r6, [pc, #-1646]!	@ 191e <.plt-0x1f8e>
    1f88:	34317453 	ldrtcc	r7, [r1], #-1107	@ 0xfffffbad
    1f8c:	61666564 	cmnvs	r6, r4, ror #10
    1f90:	5f746c75 	svcpl	0x00746c75
    1f94:	656c6564 	strbvs	r6, [ip, #-1380]!	@ 0xfffffa9c
    1f98:	53496574 	movtpl	r6, #38260	@ 0x9574
    1f9c:	45455f33 	strbmi	r5, [r5, #-3891]	@ 0xfffff0cd
    1fa0:	53496153 	movtpl	r6, #37203	@ 0x9153
    1fa4:	45455f36 	strbmi	r5, [r5, #-3894]	@ 0xfffff0ca
    1fa8:	4d5f3731 	ldclmi	7, cr3, [pc, #-196]	@ 1eec <.plt-0x19c0>
    1fac:	6665645f 			@ <UNDEFINED> instruction: 0x6665645f
    1fb0:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
    1fb4:	7070615f 	rsbsvc	r6, r0, pc, asr r1
    1fb8:	45646e65 	strbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    1fbc:	5a5f006a 	bpl	17c216c <_stack+0x174216c>
    1fc0:	6172344e 	cmnvs	r2, lr, asr #8
    1fc4:	65366b63 	ldrvs	r6, [r6, #-2915]!	@ 0xfffff49d
    1fc8:	6e69676e 	cdpvs	7, 6, cr6, cr9, cr14, {3}
    1fcc:	6f4d3665 	svcvs	0x004d3665
    1fd0:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1fd4:	6e6f6336 	mcrvs	3, 3, r6, cr15, cr6, {1}
    1fd8:	45676966 	strbmi	r6, [r7, #-2406]!	@ 0xfffff69a
    1fdc:	6a6a6a6a 	bvs	1a9c98c <_stack+0x1a1c98c>
    1fe0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    1fe4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    1fe8:	6337316b 	teqvs	r7, #-1073741798	@ 0xc000001a
    1fec:	74616572 	strbtvc	r6, [r1], #-1394	@ 0xfffffa8e
    1ff0:	63765f65 	cmnvs	r6, #404	@ 0x194
    1ff4:	6f6d5f76 	svcvs	0x006d5f76
    1ff8:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    1ffc:	54303149 	ldrtpl	r3, [r0], #-329	@ 0xfffffeb7
    2000:	4d747365 	ldclmi	3, cr7, [r4, #-404]!	@ 0xfffffe6c
    2004:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2008:	53454565 	movtpl	r4, #21861	@ 0x5565
    200c:	75303174 	ldrvc	r3, [r0, #-372]!	@ 0xfffffe8c
    2010:	7571696e 	ldrbvc	r6, [r1, #-2414]!	@ 0xfffff692
    2014:	74705f65 	ldrbtvc	r5, [r0], #-3941	@ 0xfffff09b
    2018:	33314972 	teqcc	r1, #1867776	@ 0x1c8000
    201c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	@ 0xfffff0bd
    2020:	636f7250 	cmnvs	pc, #80, 4
    2024:	6f737365 	svcvs	0x00737365
    2028:	31745372 	cmncc	r4, r2, ror r3
    202c:	66656434 			@ <UNDEFINED> instruction: 0x66656434
    2030:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
    2034:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	@ 0xfffffe84
    2038:	49657465 	stmdbmi	r5!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    203c:	455f3353 	ldrbmi	r3, [pc, #-851]	@ 1cf1 <.plt-0x1bbb>
    2040:	5f007645 	svcpl	0x00007645
    2044:	36314e5a 			@ <UNDEFINED> instruction: 0x36314e5a
    2048:	4d564356 	ldclmi	3, cr4, [r6, #-344]	@ 0xfffffea8
    204c:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2050:	61725765 	cmnvs	r2, r5, ror #14
    2054:	72657070 	rsbvc	r7, r5, #112	@ 0x70
    2058:	76453243 	strbvc	r3, [r5], -r3, asr #4
    205c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2060:	76367453 			@ <UNDEFINED> instruction: 0x76367453
    2064:	6f746365 	svcvs	0x00746365
    2068:	74534972 	ldrbvc	r4, [r3], #-2418	@ 0xfffff68e
    206c:	72617637 	rsbvc	r7, r1, #57671680	@ 0x3700000
    2070:	746e6169 	strbtvc	r6, [lr], #-361	@ 0xfffffe97
    2074:	314e4a49 	cmpcc	lr, r9, asr #20
    2078:	74654d30 	strbtvc	r4, [r5], #-3376	@ 0xfffff2d0
    207c:	646f4d61 	strbtvs	r4, [pc], #-3425	@ 2084 <.plt-0x1828>
    2080:	31656c75 	smccc	22213	@ 0x56c5
    2084:	6c754e31 	ldclvs	14, cr4, [r5], #-196	@ 0xffffff3c
    2088:	656c456c 	strbvs	r4, [ip, #-1388]!	@ 0xfffffa94
    208c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    2090:	31534e45 	cmpcc	r3, r5, asr #28
    2094:	6e4b345f 	mcrvs	4, 2, r3, cr11, cr15, {2}
    2098:	4e45626f 	cdpmi	2, 4, cr6, cr5, cr15, {3}
    209c:	365f3153 			@ <UNDEFINED> instruction: 0x365f3153
    20a0:	64696c53 	strbtvs	r6, [r9], #-3155	@ 0xfffff3ad
    20a4:	4e457265 	cdpmi	2, 4, cr7, cr5, cr5, {3}
    20a8:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    20ac:	696c5331 	stmdbvs	ip!, {r0, r4, r5, r8, r9, ip, lr}^
    20b0:	4c726564 	cfldr64mi	mvdx6, [r2], #-400	@ 0xfffffe70
    20b4:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    20b8:	31534e45 	cmpcc	r3, r5, asr #28
    20bc:	4630315f 			@ <UNDEFINED> instruction: 0x4630315f
    20c0:	5370696c 	cmnpl	r0, #108, 18	@ 0x1b0000
    20c4:	63746977 	cmnvs	r4, #1949696	@ 0x1dc000
    20c8:	534e4568 	movtpl	r4, #58728	@ 0xe568
    20cc:	31315f31 	teqcc	r1, r1, lsr pc
    20d0:	64696c53 	strbtvs	r6, [r9], #-3155	@ 0xfffff3ad
    20d4:	69775365 	ldmdbvs	r7!, {r0, r2, r5, r6, r8, r9, ip, lr}^
    20d8:	45686374 	strbmi	r6, [r8, #-884]!	@ 0xfffffc8c
    20dc:	5f31534e 	svcpl	0x0031534e
    20e0:	6f4d3531 	svcvs	0x004d3531
    20e4:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    20e8:	42797261 	rsbsmi	r7, r9, #268435462	@ 0x10000006
    20ec:	6f747475 	svcvs	0x00747475
    20f0:	534e456e 	movtpl	r4, #58734	@ 0xe56e
    20f4:	35325f31 	ldrcc	r5, [r2, #-3889]!	@ 0xfffff0cf
    20f8:	656d6f4d 	strbvs	r6, [sp, #-3917]!	@ 0xfffff0b3
    20fc:	7261746e 	rsbvc	r7, r1, #1845493760	@ 0x6e000000
    2100:	74754279 	ldrbtvc	r4, [r5], #-633	@ 0xfffffd87
    2104:	576e6f74 			@ <UNDEFINED> instruction: 0x576e6f74
    2108:	65746968 	ldrbvs	r6, [r4, #-2408]!	@ 0xfffff698
    210c:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    2110:	534e4574 	movtpl	r4, #58740	@ 0xe574
    2114:	38315f31 	ldmdacc	r1!, {r0, r4, r5, r8, r9, sl, fp, ip, lr}
    2118:	656d6f4d 	strbvs	r6, [sp, #-3917]!	@ 0xfffff0b3
    211c:	7261746e 	rsbvc	r7, r1, #1845493760	@ 0x6e000000
    2120:	74754279 	ldrbtvc	r4, [r5], #-633	@ 0xfffffd87
    2124:	526e6f74 	rsbpl	r6, lr, #116, 30	@ 0x1d0
    2128:	4e454247 	cdpmi	2, 4, cr4, cr5, cr7, {2}
    212c:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    2130:	74614c34 	strbtvc	r4, [r1], #-3124	@ 0xfffff3cc
    2134:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    2138:	74754267 	ldrbtvc	r4, [r5], #-615	@ 0xfffffd99
    213c:	456e6f74 	strbmi	r6, [lr, #-3956]!	@ 0xfffff08c
    2140:	5f31534e 	svcpl	0x0031534e
    2144:	636e4537 	cmnvs	lr, #230686720	@ 0xdc00000
    2148:	7265646f 	rsbvc	r6, r5, #1862270976	@ 0x6f000000
    214c:	31534e45 	cmpcc	r3, r5, asr #28
    2150:	4530315f 	ldrmi	r3, [r0, #-351]!	@ 0xfffffea1
    2154:	646f636e 	strbtvs	r6, [pc], #-878	@ 215c <.plt-0x1750>
    2158:	47527265 	ldrbmi	r7, [r2, -r5, ror #4]
    215c:	534e4542 	movtpl	r4, #58690	@ 0xe542
    2160:	4a395f31 	bmi	e59e2c <_stack+0xdd9e2c>
    2164:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    2168:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
    216c:	31534e45 	cmpcc	r3, r5, asr #28
    2170:	4a30315f 	bmi	c0e6f4 <_stack+0xb8e6f4>
    2174:	4f6b6361 	svcmi	0x006b6361
    2178:	75707475 	ldrbvc	r7, [r0, #-1141]!	@ 0xfffffb8b
    217c:	534e4574 	movtpl	r4, #58740	@ 0xe574
    2180:	4d395f31 	ldcmi	15, cr5, [r9, #-196]!	@ 0xffffff3c
    2184:	4c6f6e6f 	stclmi	14, cr6, [pc], #-444	@ 1fd0 <.plt-0x18dc>
    2188:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    218c:	31534e45 	cmpcc	r3, r5, asr #28
    2190:	7544395f 	strbvc	r3, [r4, #-2399]	@ 0xfffff6a1
    2194:	694c6c61 	stmdbvs	ip, {r0, r5, r6, sl, fp, sp, lr}^
    2198:	45746867 	ldrbmi	r6, [r4, #-2151]!	@ 0xfffff799
    219c:	5f31534e 	svcpl	0x0031534e
    21a0:	62675238 	rsbvs	r5, r7, #56, 4	@ 0x80000003
    21a4:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    21a8:	534e4574 	movtpl	r4, #58740	@ 0xe574
    21ac:	44375f31 	ldrtmi	r5, [r7], #-3889	@ 0xfffff0cf
    21b0:	6c707369 	ldclvs	3, cr7, [r0], #-420	@ 0xfffffe5c
    21b4:	4e457961 	vmlsmi.f16	s15, s10, s3	@ <UNPREDICTABLE>
    21b8:	315f3153 	cmpcc	pc, r3, asr r1	@ <UNPREDICTABLE>
    21bc:	746c4135 	strbtvc	r4, [ip], #-309	@ 0xfffffecb
    21c0:	61726150 	cmnvs	r2, r0, asr r1
    21c4:	676f546d 	strbvs	r5, [pc, -sp, ror #8]!
    21c8:	32656c67 	rsbcc	r6, r5, #26368	@ 0x6700
    21cc:	31534e45 	cmpcc	r3, r5, asr #28
    21d0:	4135315f 	teqmi	r5, pc, asr r1
    21d4:	6150746c 	cmpvs	r0, ip, ror #8
    21d8:	546d6172 	strbtpl	r6, [sp], #-370	@ 0xfffffe8e
    21dc:	6c67676f 	stclvs	7, cr6, [r7], #-444	@ 0xfffffe44
    21e0:	45453365 	strbmi	r3, [r5, #-869]	@ 0xfffffc9b
    21e4:	49615345 	stmdbmi	r1!, {r0, r2, r6, r8, r9, ip, lr}^
    21e8:	455f4d53 	ldrbmi	r4, [pc, #-3411]	@ 149d <.plt-0x240f>
    21ec:	5f353145 	svcpl	0x00353145
    21f0:	61725f4d 	cmnvs	r2, sp, asr #30
    21f4:	5f65676e 	svcpl	0x0065676e
    21f8:	65736e69 	ldrbvs	r6, [r3, #-3689]!	@ 0xfffff197
    21fc:	4e497472 	mcrmi	4, 2, r7, cr9, cr2, {3}
    2200:	675f5f39 	smmlarvs	pc, r9, pc, r5	@ <UNPREDICTABLE>
    2204:	635f756e 	cmpvs	pc, #461373440	@ 0x1b800000
    2208:	37317878 			@ <UNDEFINED> instruction: 0x37317878
    220c:	6f6e5f5f 	svcvs	0x006e5f5f
    2210:	6c616d72 	stclvs	13, cr6, [r1], #-456	@ 0xfffffe38
    2214:	6574695f 	ldrbvs	r6, [r4, #-2399]!	@ 0xfffff6a1
    2218:	6f746172 	svcvs	0x00746172
    221c:	53504972 	cmppl	r0, #1867776	@ 0x1c8000
    2220:	4f535f4d 	svcmi	0x00535f4d
    2224:	4545455f 	strbmi	r4, [r5, #-1375]	@ 0xfffffaa1
    2228:	54537645 	ldrbpl	r7, [r3], #-1605	@ 0xfffff9bb
    222c:	535f545f 	cmppl	pc, #1593835520	@ 0x5f000000
    2230:	74535f55 	ldrbvc	r5, [r3], #-3925	@ 0xfffff0ab
    2234:	6f663032 	svcvs	0x00663032
    2238:	72617772 	rsbvc	r7, r1, #29884416	@ 0x1c80000
    223c:	74695f64 	strbtvc	r5, [r9], #-3940	@ 0xfffff09c
    2240:	74617265 	strbtvc	r7, [r1], #-613	@ 0xfffffd9b
    2244:	745f726f 	ldrbvc	r7, [pc], #-623	@ 224c <.plt-0x1660>
    2248:	6d006761 	stcvs	7, cr6, [r0, #-388]	@ 0xfffffe7c
    224c:	70636d65 	rsbvc	r6, r3, r5, ror #26
    2250:	656d0079 	strbvs	r0, [sp, #-121]!	@ 0xffffff87
    2254:	766f6d6d 	strbtvc	r6, [pc], -sp, ror #26
    2258:	5a5f0065 	bpl	17c23f4 <_stack+0x17423f4>
    225c:	6172344e 	cmnvs	r2, lr, asr #8
    2260:	32316b63 	eorscc	r6, r1, #101376	@ 0x18c00
    2264:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    2268:	6957656c 	ldmdbvs	r7, {r2, r3, r5, r6, r8, sl, sp, lr}^
    226c:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    2270:	6f703731 	svcvs	0x00703731
    2274:	616c7570 	smcvs	51024	@ 0xc750
    2278:	655f6574 	ldrbvs	r6, [pc, #-1396]	@ 1d0c <.plt-0x1ba0>
    227c:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
    2280:	4573746e 	ldrbmi	r7, [r3, #-1134]!	@ 0xfffffb92
    2284:	36745352 			@ <UNDEFINED> instruction: 0x36745352
    2288:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    228c:	5349726f 	movtpl	r7, #37487	@ 0x926f
    2290:	61763774 	cmnvs	r6, r4, ror r7
    2294:	6e616972 			@ <UNDEFINED> instruction: 0x6e616972
    2298:	4e4a4974 			@ <UNDEFINED> instruction: 0x4e4a4974
    229c:	654d3031 	strbvs	r3, [sp, #-49]	@ 0xffffffcf
    22a0:	6f4d6174 	svcvs	0x004d6174
    22a4:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    22a8:	754e3131 	strbvc	r3, [lr, #-305]	@ 0xfffffecf
    22ac:	6c456c6c 	mcrrvs	12, 6, r6, r5, cr12
    22b0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    22b4:	534e4574 	movtpl	r4, #58740	@ 0xe574
    22b8:	4b345f33 	blmi	d19f8c <_stack+0xc99f8c>
    22bc:	45626f6e 	strbmi	r6, [r2, #-3950]!	@ 0xfffff092
    22c0:	5f33534e 	svcpl	0x0033534e
    22c4:	696c5336 	stmdbvs	ip!, {r1, r2, r4, r5, r8, r9, ip, lr}^
    22c8:	45726564 	ldrbmi	r6, [r2, #-1380]!	@ 0xfffffa9c
    22cc:	5f33534e 	svcpl	0x0033534e
    22d0:	6c533131 	ldfvse	f3, [r3], {49}	@ 0x31
    22d4:	72656469 	rsbvc	r6, r5, #1761607680	@ 0x69000000
    22d8:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    22dc:	534e4574 	movtpl	r4, #58740	@ 0xe574
    22e0:	30315f33 	eorscc	r5, r1, r3, lsr pc
    22e4:	70696c46 	rsbvc	r6, r9, r6, asr #24
    22e8:	74697753 	strbtvc	r7, [r9], #-1875	@ 0xfffff8ad
    22ec:	4e456863 	cdpmi	8, 4, cr6, cr5, cr3, {3}
    22f0:	315f3353 	cmpcc	pc, r3, asr r3	@ <UNPREDICTABLE>
    22f4:	696c5331 	stmdbvs	ip!, {r0, r4, r5, r8, r9, ip, lr}^
    22f8:	77536564 	ldrbvc	r6, [r3, -r4, ror #10]
    22fc:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2300:	33534e45 	cmpcc	r3, #1104	@ 0x450
    2304:	4d35315f 	ldfmis	f3, [r5, #-380]!	@ 0xfffffe84
    2308:	6e656d6f 	cdpvs	13, 6, cr6, cr5, cr15, {3}
    230c:	79726174 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, sp, lr}^
    2310:	74747542 	ldrbtvc	r7, [r4], #-1346	@ 0xfffffabe
    2314:	4e456e6f 	cdpmi	14, 4, cr6, cr5, cr15, {3}
    2318:	325f3353 	subscc	r3, pc, #1275068417	@ 0x4c000001
    231c:	6d6f4d35 	stclvs	13, cr4, [pc, #-212]!	@ 2250 <.plt-0x165c>
    2320:	61746e65 	cmnvs	r4, r5, ror #28
    2324:	75427972 	strbvc	r7, [r2, #-2418]	@ 0xfffff68e
    2328:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    232c:	74696857 	strbtvc	r6, [r9], #-2135	@ 0xfffff7a9
    2330:	67694c65 	strbvs	r4, [r9, -r5, ror #24]!
    2334:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    2338:	315f3353 	cmpcc	pc, r3, asr r3	@ <UNPREDICTABLE>
    233c:	6d6f4d38 	stclvs	13, cr4, [pc, #-224]!	@ 2264 <.plt-0x1648>
    2340:	61746e65 	cmnvs	r4, r5, ror #28
    2344:	75427972 	strbvc	r7, [r2, #-2418]	@ 0xfffff68e
    2348:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    234c:	45424752 	strbmi	r4, [r2, #-1874]	@ 0xfffff8ae
    2350:	5f33534e 	svcpl	0x0033534e
    2354:	614c3431 	cmpvs	ip, r1, lsr r4
    2358:	69686374 	stmdbvs	r8!, {r2, r4, r5, r6, r8, r9, sp, lr}^
    235c:	7542676e 	strbvc	r6, [r2, #-1902]	@ 0xfffff892
    2360:	6e6f7474 	mcrvs	4, 3, r7, cr15, cr4, {3}
    2364:	33534e45 	cmpcc	r3, #1104	@ 0x450
    2368:	6e45375f 	mcrvs	7, 2, r3, cr5, cr15, {2}
    236c:	65646f63 	strbvs	r6, [r4, #-3939]!	@ 0xfffff09d
    2370:	534e4572 	movtpl	r4, #58738	@ 0xe572
    2374:	30315f33 	eorscc	r5, r1, r3, lsr pc
    2378:	6f636e45 	svcvs	0x00636e45
    237c:	52726564 	rsbspl	r6, r2, #100, 10	@ 0x19000000
    2380:	4e454247 	cdpmi	2, 4, cr4, cr5, cr7, {2}
    2384:	395f3353 	ldmdbcc	pc, {r0, r1, r4, r6, r8, r9, ip, sp}^	@ <UNPREDICTABLE>
    2388:	6b63614a 	blvs	18da8b8 <_stack+0x185a8b8>
    238c:	75706e49 	ldrbvc	r6, [r0, #-3657]!	@ 0xfffff1b7
    2390:	534e4574 	movtpl	r4, #58740	@ 0xe574
    2394:	30315f33 	eorscc	r5, r1, r3, lsr pc
    2398:	6b63614a 	blvs	18da8c8 <_stack+0x185a8c8>
    239c:	7074754f 	rsbsvc	r7, r4, pc, asr #10
    23a0:	4e457475 	mcrmi	4, 2, r7, cr5, cr5, {3}
    23a4:	395f3353 	ldmdbcc	pc, {r0, r1, r4, r6, r8, r9, ip, sp}^	@ <UNPREDICTABLE>
    23a8:	6f6e6f4d 	svcvs	0x006e6f4d
    23ac:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    23b0:	534e4574 	movtpl	r4, #58740	@ 0xe574
    23b4:	44395f33 	ldrtmi	r5, [r9], #-3891	@ 0xfffff0cd
    23b8:	4c6c6175 	stfmie	f6, [ip], #-468	@ 0xfffffe2c
    23bc:	74686769 	strbtvc	r6, [r8], #-1897	@ 0xfffff897
    23c0:	33534e45 	cmpcc	r3, #1104	@ 0x450
    23c4:	6752385f 			@ <UNDEFINED> instruction: 0x6752385f
    23c8:	67694c62 	strbvs	r4, [r9, -r2, ror #24]!
    23cc:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    23d0:	375f3353 			@ <UNDEFINED> instruction: 0x375f3353
    23d4:	70736944 	rsbsvc	r6, r3, r4, asr #18
    23d8:	4579616c 	ldrbmi	r6, [r9, #-364]!	@ 0xfffffe94
    23dc:	5f33534e 	svcpl	0x0033534e
    23e0:	6c413531 	cfstr64vs	mvdx3, [r1], {49}	@ 0x31
    23e4:	72615074 	rsbvc	r5, r1, #116	@ 0x74
    23e8:	6f546d61 	svcvs	0x00546d61
    23ec:	656c6767 	strbvs	r6, [ip, #-1895]!	@ 0xfffff899
    23f0:	534e4532 	movtpl	r4, #58674	@ 0xe532
    23f4:	35315f33 	ldrcc	r5, [r1, #-3891]!	@ 0xfffff0cd
    23f8:	50746c41 	rsbspl	r6, r4, r1, asr #24
    23fc:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	@ 0xfffffe7c
    2400:	67676f54 			@ <UNDEFINED> instruction: 0x67676f54
    2404:	4533656c 	ldrmi	r6, [r3, #-1388]!	@ 0xfffffa94
    2408:	61534545 	cmpvs	r3, r5, asr #10
    240c:	5f4f5349 	svcpl	0x004f5349
    2410:	5f004545 	svcpl	0x00004545
    2414:	74534e5a 	ldrbvc	r4, [r3], #-3674	@ 0xfffff1a6
    2418:	63657636 	cmnvs	r5, #56623104	@ 0x3600000
    241c:	49726f74 	ldmdbmi	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2420:	4532314e 	ldrmi	r3, [r2, #-334]!	@ 0xfffffeb2
    2424:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
    2428:	6f43746e 	svcvs	0x0043746e
    242c:	37746e75 			@ <UNDEFINED> instruction: 0x37746e75
    2430:	69646e49 	stmdbvs	r4!, {r0, r3, r6, r9, sl, fp, sp, lr}^
    2434:	45736563 	ldrbmi	r6, [r3, #-1379]!	@ 0xfffffa9d
    2438:	53496153 	movtpl	r6, #37203	@ 0x9153
    243c:	45455f31 	strbmi	r5, [r5, #-3889]	@ 0xfffff0cf
    2440:	4d5f3731 	ldclmi	7, cr3, [pc, #-196]	@ 2384 <.plt-0x1528>
    2444:	6665645f 			@ <UNDEFINED> instruction: 0x6665645f
    2448:	746c7561 	strbtvc	r7, [ip], #-1377	@ 0xfffffa9f
    244c:	7070615f 	rsbsvc	r6, r0, pc, asr r1
    2450:	45646e65 	strbmi	r6, [r4, #-3685]!	@ 0xfffff19b
    2454:	5a5f006a 	bpl	17c2604 <_stack+0x1742604>
    2458:	6172344e 	cmnvs	r2, lr, asr #8
    245c:	31316b63 	teqcc	r1, r3, ror #22
    2460:	61657263 	cmnvs	r5, r3, ror #4
    2464:	6f4d6574 	svcvs	0x004d6574
    2468:	496c6564 	stmdbmi	ip!, {r2, r5, r6, r8, sl, sp, lr}^
    246c:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    2470:	6f4d7473 	svcvs	0x004d7473
    2474:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    2478:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    247c:	69577473 	ldmdbvs	r7, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2480:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    2484:	4e504545 	cdpmi	5, 5, cr4, cr0, cr5, {2}
    2488:	70365f53 	eorsvc	r5, r6, r3, asr pc
    248c:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2490:	6f4d356e 	svcvs	0x004d356e
    2494:	456c6564 	strbmi	r6, [ip, #-1380]!	@ 0xfffffa9c
    2498:	37317453 			@ <UNDEFINED> instruction: 0x37317453
    249c:	69736162 	ldmdbvs	r3!, {r1, r5, r6, r8, sp, lr}^
    24a0:	74735f63 	ldrbtvc	r5, [r3], #-3939	@ 0xfffff09d
    24a4:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
    24a8:	6569765f 	strbvs	r7, [r9, #-1631]!	@ 0xfffff9a1
    24ac:	53634977 	cmnpl	r3, #1949696	@ 0x1dc000
    24b0:	63313174 	teqvs	r1, #116, 2
    24b4:	5f726168 	svcpl	0x00726168
    24b8:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    24bc:	63497374 	movtvs	r7, #37748	@ 0x9374
    24c0:	6d004545 	cfstr32vs	mvfx4, [r0, #-276]	@ 0xfffffeec
    24c4:	6d636d65 	stclvs	13, cr6, [r3, #-404]!	@ 0xfffffe6c
    24c8:	74730070 	ldrbtvc	r0, [r3], #-112	@ 0xffffff90
    24cc:	6e656c72 	mcrvs	12, 3, r6, cr5, cr2, {3}
    24d0:	615f5f00 	cmpvs	pc, r0, lsl #30
    24d4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    24d8:	6574615f 	ldrbvs	r6, [r4, #-351]!	@ 0xfffffea1
    24dc:	00746978 	rsbseq	r6, r4, r8, ror r9
    24e0:	314e5a5f 	cmpcc	lr, pc, asr sl
    24e4:	656c4532 	strbvs	r4, [ip, #-1330]!	@ 0xffffface
    24e8:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    24ec:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    24f0:	67313174 			@ <UNDEFINED> instruction: 0x67313174
    24f4:	695f7465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	@ <UNPREDICTABLE>
    24f8:	6369646e 	cmnvs	r9, #1845493760	@ 0x6e000000
    24fc:	53457365 	movtpl	r7, #21349	@ 0x5365
    2500:	70733474 	rsbsvc	r3, r3, r4, ror r4
    2504:	4b496e61 	blmi	125de90 <_stack+0x11dde90>
    2508:	76377453 			@ <UNDEFINED> instruction: 0x76377453
    250c:	61697261 	cmnvs	r9, r1, ror #4
    2510:	4a49746e 	bmi	125f6d0 <_stack+0x11df6d0>
    2514:	4d30314e 	ldfmis	f3, [r0, #-312]!	@ 0xfffffec8
    2518:	4d617465 	cfstrdmi	mvd7, [r1, #-404]!	@ 0xfffffe6c
    251c:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2520:	4e313165 	rsfmisz	f3, f1, f5
    2524:	456c6c75 	strbmi	r6, [ip, #-3189]!	@ 0xfffff38b
    2528:	656d656c 	strbvs	r6, [sp, #-1388]!	@ 0xfffffa94
    252c:	4e45746e 	cdpmi	4, 4, cr7, cr5, cr14, {3}
    2530:	345f3253 	ldrbcc	r3, [pc], #-595	@ 2538 <.plt-0x1374>
    2534:	626f6e4b 	rsbvs	r6, pc, #1200	@ 0x4b0
    2538:	32534e45 	subscc	r4, r3, #1104	@ 0x450
    253c:	6c53365f 	mrrcvs	6, 5, r3, r3, cr15	@ <UNPREDICTABLE>
    2540:	72656469 	rsbvc	r6, r5, #1761607680	@ 0x69000000
    2544:	32534e45 	subscc	r4, r3, #1104	@ 0x450
    2548:	5331315f 	teqpl	r1, #-1073741801	@ 0xc0000017
    254c:	6564696c 	strbvs	r6, [r4, #-2412]!	@ 0xfffff694
    2550:	67694c72 			@ <UNDEFINED> instruction: 0x67694c72
    2554:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    2558:	315f3253 	cmpcc	pc, r3, asr r2	@ <UNPREDICTABLE>
    255c:	696c4630 	stmdbvs	ip!, {r4, r5, r9, sl, lr}^
    2560:	69775370 	ldmdbvs	r7!, {r4, r5, r6, r8, r9, ip, lr}^
    2564:	45686374 	strbmi	r6, [r8, #-884]!	@ 0xfffffc8c
    2568:	5f32534e 	svcpl	0x0032534e
    256c:	6c533131 	ldfvse	f3, [r3], {49}	@ 0x31
    2570:	53656469 	cmnpl	r5, #1761607680	@ 0x69000000
    2574:	63746977 	cmnvs	r4, #1949696	@ 0x1dc000
    2578:	534e4568 	movtpl	r4, #58728	@ 0xe568
    257c:	35315f32 	ldrcc	r5, [r1, #-3890]!	@ 0xfffff0ce
    2580:	656d6f4d 	strbvs	r6, [sp, #-3917]!	@ 0xfffff0b3
    2584:	7261746e 	rsbvc	r7, r1, #1845493760	@ 0x6e000000
    2588:	74754279 	ldrbtvc	r4, [r5], #-633	@ 0xfffffd87
    258c:	456e6f74 	strbmi	r6, [lr, #-3956]!	@ 0xfffff08c
    2590:	5f32534e 	svcpl	0x0032534e
    2594:	6f4d3532 	svcvs	0x004d3532
    2598:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    259c:	42797261 	rsbsmi	r7, r9, #268435462	@ 0x10000006
    25a0:	6f747475 	svcvs	0x00747475
    25a4:	6968576e 	stmdbvs	r8!, {r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    25a8:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    25ac:	45746867 	ldrbmi	r6, [r4, #-2151]!	@ 0xfffff799
    25b0:	5f32534e 	svcpl	0x0032534e
    25b4:	6f4d3831 	svcvs	0x004d3831
    25b8:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    25bc:	42797261 	rsbsmi	r7, r9, #268435462	@ 0x10000006
    25c0:	6f747475 	svcvs	0x00747475
    25c4:	4247526e 	submi	r5, r7, #-536870906	@ 0xe0000006
    25c8:	32534e45 	subscc	r4, r3, #1104	@ 0x450
    25cc:	4c34315f 	ldfmis	f3, [r4], #-380	@ 0xfffffe84
    25d0:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    25d4:	42676e69 	rsbmi	r6, r7, #1680	@ 0x690
    25d8:	6f747475 	svcvs	0x00747475
    25dc:	534e456e 	movtpl	r4, #58734	@ 0xe56e
    25e0:	45375f32 	ldrmi	r5, [r7, #-3890]!	@ 0xfffff0ce
    25e4:	646f636e 	strbtvs	r6, [pc], #-878	@ 25ec <.plt-0x12c0>
    25e8:	4e457265 	cdpmi	2, 4, cr7, cr5, cr5, {3}
    25ec:	315f3253 	cmpcc	pc, r3, asr r2	@ <UNPREDICTABLE>
    25f0:	636e4530 	cmnvs	lr, #48, 10	@ 0xc000000
    25f4:	7265646f 	rsbvc	r6, r5, #1862270976	@ 0x6f000000
    25f8:	45424752 	strbmi	r4, [r2, #-1874]	@ 0xfffff8ae
    25fc:	5f32534e 	svcpl	0x0032534e
    2600:	63614a39 	cmnvs	r1, #233472	@ 0x39000
    2604:	706e496b 	rsbvc	r4, lr, fp, ror #18
    2608:	4e457475 	mcrmi	4, 2, r7, cr5, cr5, {3}
    260c:	315f3253 	cmpcc	pc, r3, asr r2	@ <UNPREDICTABLE>
    2610:	63614a30 	cmnvs	r1, #48, 20	@ 0x30000
    2614:	74754f6b 	ldrbtvc	r4, [r5], #-3947	@ 0xfffff095
    2618:	45747570 	ldrbmi	r7, [r4, #-1392]!	@ 0xfffffa90
    261c:	5f32534e 	svcpl	0x0032534e
    2620:	6e6f4d39 	mcrvs	13, 3, r4, cr15, cr9, {1}
    2624:	67694c6f 	strbvs	r4, [r9, -pc, ror #24]!
    2628:	4e457468 	cdpmi	4, 4, cr7, cr5, cr8, {3}
    262c:	395f3253 	ldmdbcc	pc, {r0, r1, r4, r6, r9, ip, sp}^	@ <UNPREDICTABLE>
    2630:	6c617544 	cfstr64vs	mvdx7, [r1], #-272	@ 0xfffffef0
    2634:	6867694c 	stmdavs	r7!, {r2, r3, r6, r8, fp, sp, lr}^
    2638:	534e4574 	movtpl	r4, #58740	@ 0xe574
    263c:	52385f32 	eorspl	r5, r8, #50, 30	@ 0xc8
    2640:	694c6267 	stmdbvs	ip, {r0, r1, r2, r5, r6, r9, sp, lr}^
    2644:	45746867 	ldrbmi	r6, [r4, #-2151]!	@ 0xfffff799
    2648:	5f32534e 	svcpl	0x0032534e
    264c:	73694437 	cmnvc	r9, #922746880	@ 0x37000000
    2650:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
    2654:	32534e45 	subscc	r4, r3, #1104	@ 0x450
    2658:	4135315f 	teqmi	r5, pc, asr r1
    265c:	6150746c 	cmpvs	r0, ip, ror #8
    2660:	546d6172 	strbtpl	r6, [sp], #-370	@ 0xfffffe8e
    2664:	6c67676f 	stclvs	7, cr6, [r7], #-444	@ 0xfffffe44
    2668:	4e453265 	cdpmi	2, 4, cr3, cr5, cr5, {3}
    266c:	315f3253 	cmpcc	pc, r3, asr r2	@ <UNPREDICTABLE>
    2670:	746c4135 	strbtvc	r4, [ip], #-309	@ 0xfffffecb
    2674:	61726150 	cmnvs	r2, r0, asr r1
    2678:	676f546d 	strbvs	r5, [pc, -sp, ror #8]!
    267c:	33656c67 	cmncc	r5, #26368	@ 0x6700
    2680:	4c454545 	cfstr64mi	mvdx4, [r5], {69}	@ 0x45
    2684:	3932346a 	ldmdbcc	r2!, {r1, r3, r5, r6, sl, ip, sp}
    2688:	37363934 			@ <UNDEFINED> instruction: 0x37363934
    268c:	45353932 	ldrmi	r3, [r5, #-2354]!	@ 0xfffff6ce
    2690:	5f305345 	svcpl	0x00305345
    2694:	5f534e49 	svcpl	0x00534e49
    2698:	646e4937 	strbtvs	r4, [lr], #-2359	@ 0xfffff6c9
    269c:	73656369 	cmnvc	r5, #-1543503871	@ 0xa4000001
    26a0:	346a4c45 	strbtcc	r4, [sl], #-3141	@ 0xfffff3bb
    26a4:	39343932 	ldmdbcc	r4!, {r1, r4, r5, r8, fp, ip, sp}
    26a8:	39323736 	ldmdbcc	r2!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
    26ac:	00454535 	subeq	r4, r5, r5, lsr r5
    26b0:	314e5a5f 	cmpcc	lr, pc, asr sl
    26b4:	646f4d33 	strbtvs	r4, [pc], #-3379	@ 26bc <.plt-0x11f0>
    26b8:	46656c75 			@ <UNDEFINED> instruction: 0x46656c75
    26bc:	6f746361 	svcvs	0x00746361
    26c0:	34317972 	ldrtcc	r7, [r1], #-2418	@ 0xfffff68e
    26c4:	61657263 	cmnvs	r5, r3, ror #4
    26c8:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
    26cc:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    26d0:	00457363 	subeq	r7, r5, r3, ror #6
    26d4:	314e5a5f 	cmpcc	lr, pc, asr sl
    26d8:	646f4d33 	strbtvs	r4, [pc], #-3379	@ 26e0 <.plt-0x11cc>
    26dc:	46656c75 			@ <UNDEFINED> instruction: 0x46656c75
    26e0:	6f746361 	svcvs	0x00746361
    26e4:	69357972 	ldmdbvs	r5!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
    26e8:	736f666e 	cmnvc	pc, #115343360	@ 0x6e00000
    26ec:	5a5f0045 	bpl	17c2808 <_stack+0x1742808>
    26f0:	4e5a5647 	cdpmi	6, 5, cr5, cr10, cr7, {2}
    26f4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    26f8:	6331316b 	teqvs	r1, #-1073741798	@ 0xc000001a
    26fc:	74616572 	strbtvc	r6, [r1], #-1394	@ 0xfffffa8e
    2700:	646f4d65 	strbtvs	r4, [pc], #-3429	@ 2708 <.plt-0x11a4>
    2704:	31496c65 	cmpcc	r9, r5, ror #24
    2708:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    270c:	646f4d74 	strbtvs	r4, [pc], #-3444	@ 2714 <.plt-0x1198>
    2710:	31656c75 	smccc	22213	@ 0x56c5
    2714:	73655430 	cmnvc	r5, #48, 8	@ 0x30000000
    2718:	64695774 	strbtvs	r5, [r9], #-1908	@ 0xfffff88c
    271c:	45746567 	ldrbmi	r6, [r4, #-1383]!	@ 0xfffffa99
    2720:	534e5045 	movtpl	r5, #57413	@ 0xe045
    2724:	6c70365f 	ldclvs	6, cr3, [r0], #-380	@ 0xfffffe84
    2728:	6e696775 	mcrvs	7, 3, r6, cr9, cr5, {3}
    272c:	646f4d35 	strbtvs	r4, [pc], #-3381	@ 2734 <.plt-0x1178>
    2730:	53456c65 	movtpl	r6, #23653	@ 0x5c65
    2734:	62373174 	eorsvs	r3, r7, #116, 2
    2738:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    273c:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    2740:	5f676e69 	svcpl	0x00676e69
    2744:	77656976 			@ <UNDEFINED> instruction: 0x77656976
    2748:	74536349 	ldrbvc	r6, [r3], #-841	@ 0xfffffcb7
    274c:	68633131 	stmdavs	r3!, {r0, r4, r5, r8, ip, sp}^
    2750:	745f7261 	ldrbvc	r7, [pc], #-609	@ 2758 <.plt-0x1154>
    2754:	74696172 	strbtvc	r6, [r9], #-370	@ 0xfffffe8e
    2758:	45634973 	strbmi	r4, [r3, #-2419]!	@ 0xfffff68d
    275c:	6d364545 	cfldr32vs	mvfx4, [r6, #-276]!	@ 0xfffffeec
    2760:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2764:	5a5f0065 	bpl	17c2900 <_stack+0x1742900>
    2768:	344e5654 	strbcc	r5, [lr], #-1620	@ 0xfffff9ac
    276c:	6b636172 	blvs	18dad3c <_stack+0x185ad3c>
    2770:	64697736 	strbtvs	r7, [r9], #-1846	@ 0xfffff8ca
    2774:	36746567 	ldrbtcc	r6, [r4], -r7, ror #10
    2778:	67646957 			@ <UNDEFINED> instruction: 0x67646957
    277c:	00457465 	subeq	r7, r5, r5, ror #8
    2780:	56545a5f 			@ <UNDEFINED> instruction: 0x56545a5f
    2784:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    2788:	69577473 	ldmdbvs	r7, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    278c:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    2790:	5a5a5f00 	bpl	169a398 <_stack+0x161a398>
    2794:	6172344e 	cmnvs	r2, lr, asr #8
    2798:	31316b63 	teqcc	r1, r3, ror #22
    279c:	61657263 	cmnvs	r5, r3, ror #4
    27a0:	6f4d6574 	svcvs	0x004d6574
    27a4:	496c6564 	stmdbmi	ip!, {r2, r5, r6, r8, sl, sp, lr}^
    27a8:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    27ac:	6f4d7473 	svcvs	0x004d7473
    27b0:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    27b4:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    27b8:	69577473 	ldmdbvs	r7, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    27bc:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    27c0:	4e504545 	cdpmi	5, 5, cr4, cr0, cr5, {2}
    27c4:	70365f53 	eorsvc	r5, r6, r3, asr pc
    27c8:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    27cc:	6f4d356e 	svcvs	0x004d356e
    27d0:	456c6564 	strbmi	r6, [ip, #-1380]!	@ 0xfffffa9c
    27d4:	37317453 			@ <UNDEFINED> instruction: 0x37317453
    27d8:	69736162 	ldmdbvs	r3!, {r1, r5, r6, r8, sp, lr}^
    27dc:	74735f63 	ldrbtvc	r5, [r3], #-3939	@ 0xfffff09d
    27e0:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
    27e4:	6569765f 	strbvs	r7, [r9, #-1631]!	@ 0xfffff9a1
    27e8:	53634977 	cmnpl	r3, #1949696	@ 0x1dc000
    27ec:	63313174 	teqvs	r1, #116, 2
    27f0:	5f726168 	svcpl	0x00726168
    27f4:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    27f8:	63497374 	movtvs	r7, #37748	@ 0x9374
    27fc:	36454545 	strbcc	r4, [r5], -r5, asr #10
    2800:	75646f6d 	strbvc	r6, [r4, #-3949]!	@ 0xfffff093
    2804:	5f00656c 	svcpl	0x0000656c
    2808:	5a56475a 	bpl	1594578 <_stack+0x1514578>
    280c:	6172344e 	cmnvs	r2, lr, asr #8
    2810:	31316b63 	teqcc	r1, r3, ror #22
    2814:	61657263 	cmnvs	r5, r3, ror #4
    2818:	6f4d6574 	svcvs	0x004d6574
    281c:	496c6564 	stmdbmi	ip!, {r2, r5, r6, r8, sl, sp, lr}^
    2820:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    2824:	6f4d7473 	svcvs	0x004d7473
    2828:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    282c:	65543031 	ldrbvs	r3, [r4, #-49]	@ 0xffffffcf
    2830:	69577473 	ldmdbvs	r7, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2834:	74656764 	strbtvc	r6, [r5], #-1892	@ 0xfffff89c
    2838:	4e504545 	cdpmi	5, 5, cr4, cr0, cr5, {2}
    283c:	70365f53 	eorsvc	r5, r6, r3, asr pc
    2840:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2844:	6f4d356e 	svcvs	0x004d356e
    2848:	456c6564 	strbmi	r6, [ip, #-1380]!	@ 0xfffffa9c
    284c:	37317453 			@ <UNDEFINED> instruction: 0x37317453
    2850:	69736162 	ldmdbvs	r3!, {r1, r5, r6, r8, sp, lr}^
    2854:	74735f63 	ldrbtvc	r5, [r3], #-3939	@ 0xfffff09d
    2858:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
    285c:	6569765f 	strbvs	r7, [r9, #-1631]!	@ 0xfffff9a1
    2860:	53634977 	cmnpl	r3, #1949696	@ 0x1dc000
    2864:	63313174 	teqvs	r1, #116, 2
    2868:	5f726168 	svcpl	0x00726168
    286c:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    2870:	63497374 	movtvs	r7, #37748	@ 0x9374
    2874:	38454545 	stmdacc	r5, {r0, r2, r6, r8, sl, lr}^
    2878:	6d656c65 	stclvs	12, cr6, [r5, #-404]!	@ 0xfffffe6c
    287c:	73746e65 	cmnvc	r4, #1616	@ 0x650
    2880:	475a5f00 	ldrbmi	r5, [sl, -r0, lsl #30]
    2884:	344e5a56 	strbcc	r5, [lr], #-2646	@ 0xfffff5aa
    2888:	6b636172 	blvs	18dae58 <_stack+0x185ae58>
    288c:	72633131 	rsbvc	r3, r3, #1073741836	@ 0x4000000c
    2890:	65746165 	ldrbvs	r6, [r4, #-357]!	@ 0xfffffe9b
    2894:	65646f4d 	strbvs	r6, [r4, #-3917]!	@ 0xfffff0b3
    2898:	3031496c 	eorscc	r4, r1, ip, ror #18
    289c:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
    28a0:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    28a4:	3031656c 	eorscc	r6, r1, ip, ror #10
    28a8:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
    28ac:	67646957 			@ <UNDEFINED> instruction: 0x67646957
    28b0:	45457465 	strbmi	r7, [r5, #-1125]	@ 0xfffffb9b
    28b4:	5f534e50 	svcpl	0x00534e50
    28b8:	756c7036 	strbvc	r7, [ip, #-54]!	@ 0xffffffca
    28bc:	356e6967 	strbcc	r6, [lr, #-2407]!	@ 0xfffff699
    28c0:	65646f4d 	strbvs	r6, [r4, #-3917]!	@ 0xfffff0b3
    28c4:	7453456c 	ldrbvc	r4, [r3], #-1388	@ 0xfffffa94
    28c8:	61623731 	cmnvs	r2, r1, lsr r7
    28cc:	5f636973 	svcpl	0x00636973
    28d0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    28d4:	765f676e 	ldrbvc	r6, [pc], -lr, ror #14
    28d8:	49776569 	ldmdbmi	r7!, {r0, r3, r5, r6, r8, sl, sp, lr}^
    28dc:	31745363 	cmncc	r4, r3, ror #6
    28e0:	61686331 	cmnvs	r8, r1, lsr r3
    28e4:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    28e8:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    28ec:	45456349 	strbmi	r6, [r5, #-841]	@ 0xfffffcb7
    28f0:	6e693745 	cdpvs	7, 6, cr3, cr9, cr5, {2}
    28f4:	65636964 	strbvs	r6, [r3, #-2404]!	@ 0xfffff69c
    28f8:	5a5f0073 	bpl	17c2acc <_stack+0x1742acc>
    28fc:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    2900:	316b6361 	cmncc	fp, r1, ror #6
    2904:	65726331 	ldrbvs	r6, [r2, #-817]!	@ 0xfffffccf
    2908:	4d657461 	cfstrdmi	mvd7, [r5, #-388]!	@ 0xfffffe7c
    290c:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2910:	54303149 	ldrtpl	r3, [r0], #-329	@ 0xfffffeb7
    2914:	4d747365 	ldclmi	3, cr7, [r4, #-404]!	@ 0xfffffe6c
    2918:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    291c:	54303165 	ldrtpl	r3, [r0], #-357	@ 0xfffffe9b
    2920:	57747365 	ldrbpl	r7, [r4, -r5, ror #6]!
    2924:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    2928:	50454574 	subpl	r4, r5, r4, ror r5
    292c:	365f534e 	ldrbcc	r5, [pc], -lr, asr #6
    2930:	67756c70 			@ <UNDEFINED> instruction: 0x67756c70
    2934:	4d356e69 	ldcmi	14, cr6, [r5, #-420]!	@ 0xfffffe5c
    2938:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    293c:	31745345 	cmncc	r4, r5, asr #6
    2940:	73616237 	cmnvc	r1, #1879048195	@ 0x70000003
    2944:	735f6369 	cmpvc	pc, #-1543503871	@ 0xa4000001
    2948:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    294c:	69765f67 	ldmdbvs	r6!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2950:	63497765 	movtvs	r7, #38757	@ 0x9765
    2954:	31317453 	teqcc	r1, r3, asr r4
    2958:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
    295c:	6172745f 	cmnvs	r2, pc, asr r4
    2960:	49737469 	ldmdbmi	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2964:	45454563 	strbmi	r4, [r5, #-1379]	@ 0xfffffa9d
    2968:	656c6538 	strbvs	r6, [ip, #-1336]!	@ 0xfffffac8
    296c:	746e656d 	strbtvc	r6, [lr], #-1389	@ 0xfffffa93
    2970:	5a5f0073 	bpl	17c2b44 <_stack+0x1742b44>
    2974:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    2978:	316b6361 	cmncc	fp, r1, ror #6
    297c:	65726331 	ldrbvs	r6, [r2, #-817]!	@ 0xfffffccf
    2980:	4d657461 	cfstrdmi	mvd7, [r5, #-388]!	@ 0xfffffe7c
    2984:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2988:	54303149 	ldrtpl	r3, [r0], #-329	@ 0xfffffeb7
    298c:	4d747365 	ldclmi	3, cr7, [r4, #-404]!	@ 0xfffffe6c
    2990:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    2994:	54303165 	ldrtpl	r3, [r0], #-357	@ 0xfffffe9b
    2998:	57747365 	ldrbpl	r7, [r4, -r5, ror #6]!
    299c:	65676469 	strbvs	r6, [r7, #-1129]!	@ 0xfffffb97
    29a0:	50454574 	subpl	r4, r5, r4, ror r5
    29a4:	365f534e 	ldrbcc	r5, [pc], -lr, asr #6
    29a8:	67756c70 			@ <UNDEFINED> instruction: 0x67756c70
    29ac:	4d356e69 	ldcmi	14, cr6, [r5, #-420]!	@ 0xfffffe5c
    29b0:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    29b4:	31745345 	cmncc	r4, r5, asr #6
    29b8:	73616237 	cmnvc	r1, #1879048195	@ 0x70000003
    29bc:	735f6369 	cmpvc	pc, #-1543503871	@ 0xa4000001
    29c0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    29c4:	69765f67 	ldmdbvs	r6!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    29c8:	63497765 	movtvs	r7, #38757	@ 0x9765
    29cc:	31317453 	teqcc	r1, r3, asr r4
    29d0:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
    29d4:	6172745f 	cmnvs	r2, pc, asr r4
    29d8:	49737469 	ldmdbmi	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    29dc:	45454563 	strbmi	r4, [r5, #-1379]	@ 0xfffffa9d
    29e0:	646e6937 	strbtvs	r6, [lr], #-2359	@ 0xfffff6c9
    29e4:	73656369 	cmnvc	r5, #-1543503871	@ 0xa4000001
    29e8:	475a5f00 	ldrbmi	r5, [sl, -r0, lsl #30]
    29ec:	72344e56 	eorsvc	r4, r4, #1376	@ 0x560
    29f0:	386b6361 	stmdacc	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    29f4:	74746573 	ldrbtvc	r6, [r4], #-1395	@ 0xfffffa8d
    29f8:	73676e69 	cmnvc	r7, #1680	@ 0x690
    29fc:	6b6f7435 	blvs	1bdfad8 <_stack+0x1b5fad8>
    2a00:	35426e65 	strbcc	r6, [r2, #-3685]	@ 0xfffff19b
    2a04:	31787863 	cmncc	r8, r3, ror #16
    2a08:	5f004531 	svcpl	0x00004531
    2a0c:	4e56475a 	mrcmi	7, 2, r4, cr6, cr10, {2}
    2a10:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2a14:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2a18:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2a1c:	75377367 	ldrvc	r7, [r7, #-871]!	@ 0xfffffc99
    2a20:	65685469 	strbvs	r5, [r8, #-1129]!	@ 0xfffffb97
    2a24:	3542656d 	strbcc	r6, [r2, #-1389]	@ 0xfffffa93
    2a28:	31787863 	cmncc	r8, r3, ror #16
    2a2c:	5f004531 	svcpl	0x00004531
    2a30:	4e56475a 	mrcmi	7, 2, r4, cr6, cr10, {2}
    2a34:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2a38:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2a3c:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2a40:	36317367 	ldrtcc	r7, [r1], -r7, ror #6
    2a44:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
    2a48:	6150746e 	cmpvs	r0, lr, ror #8
    2a4c:	50686374 	rsbpl	r6, r8, r4, ror r3
    2a50:	73687461 	cmnvc	r8, #1627389952	@ 0x61000000
    2a54:	78633542 	stmdavc	r3!, {r1, r6, r8, sl, ip, sp}^
    2a58:	45313178 	ldrmi	r3, [r1, #-376]!	@ 0xfffffe88
    2a5c:	475a5f00 	ldrbmi	r5, [sl, -r0, lsl #30]
    2a60:	72344e56 	eorsvc	r4, r4, #1376	@ 0x560
    2a64:	386b6361 	stmdacc	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    2a68:	74746573 	ldrbtvc	r6, [r4], #-1395	@ 0xfffffa8d
    2a6c:	73676e69 	cmnvc	r7, #1680	@ 0x690
    2a70:	61633131 	cmnvs	r3, r1, lsr r1
    2a74:	43656c62 	cmnmi	r5, #25088	@ 0x6200
    2a78:	726f6c6f 	rsbvc	r6, pc, #28416	@ 0x6f00
    2a7c:	5f004573 	svcpl	0x00004573
    2a80:	4e56475a 	mrcmi	7, 2, r4, cr6, cr10, {2}
    2a84:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2a88:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2a8c:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2a90:	31317367 	teqcc	r1, r7, ror #6
    2a94:	75646f6d 	strbvc	r6, [r4, #-3949]!	@ 0xfffff093
    2a98:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
    2a9c:	42736f66 	rsbsmi	r6, r3, #408	@ 0x198
    2aa0:	78786335 	ldmdavc	r8!, {r0, r2, r4, r5, r8, r9, sp, lr}^
    2aa4:	00453131 	subeq	r3, r5, r1, lsr r1
    2aa8:	56475a5f 			@ <UNDEFINED> instruction: 0x56475a5f
    2aac:	6172344e 	cmnvs	r2, lr, asr #8
    2ab0:	73386b63 	teqvc	r8, #101376	@ 0x18c00
    2ab4:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2ab8:	3173676e 	cmncc	r3, lr, ror #14
    2abc:	646f6d35 	strbtvs	r6, [pc], #-3381	@ 2ac4 <.plt-0xde8>
    2ac0:	57656c75 			@ <UNDEFINED> instruction: 0x57656c75
    2ac4:	65746968 	ldrbvs	r6, [r4, #-2408]!	@ 0xfffff698
    2ac8:	7473696c 	ldrbtvc	r6, [r3], #-2412	@ 0xfffff694
    2acc:	78633542 	stmdavc	r3!, {r1, r6, r8, sl, ip, sp}^
    2ad0:	45313178 	ldrmi	r3, [r1, #-376]!	@ 0xfffffe88
    2ad4:	475a5f00 	ldrbmi	r5, [sl, -r0, lsl #30]
    2ad8:	33314e56 	teqcc	r1, #1376	@ 0x560
    2adc:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    2ae0:	6146656c 	cmpvs	r6, ip, ror #10
    2ae4:	726f7463 	rsbvc	r7, pc, #1660944384	@ 0x63000000
    2ae8:	63343179 	teqvs	r4, #1073741854	@ 0x4000001e
    2aec:	74616572 	strbtvc	r6, [r1], #-1394	@ 0xfffffa8e
    2af0:	5f6e6f69 	svcpl	0x006e6f69
    2af4:	636e7566 	cmnvs	lr, #427819008	@ 0x19800000
    2af8:	5f004573 	svcpl	0x00004573
    2afc:	4e56475a 	mrcmi	7, 2, r4, cr6, cr10, {2}
    2b00:	6f4d3331 	svcvs	0x004d3331
    2b04:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    2b08:	74636146 	strbtvc	r6, [r3], #-326	@ 0xfffffeba
    2b0c:	3579726f 	ldrbcc	r7, [r9, #-623]!	@ 0xfffffd91
    2b10:	6f666e69 	svcvs	0x00666e69
    2b14:	5f004573 	svcpl	0x00004573
    2b18:	4e56475a 	mrcmi	7, 2, r4, cr6, cr10, {2}
    2b1c:	6f4d3331 	svcvs	0x004d3331
    2b20:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    2b24:	74636146 	strbtvc	r6, [r3], #-326	@ 0xfffffeba
    2b28:	3179726f 	cmncc	r9, pc, ror #4
    2b2c:	63616630 	cmnvs	r1, #48, 12	@ 0x3000000
    2b30:	616c7065 	cmnvs	ip, r5, rrx
    2b34:	45736574 	ldrbmi	r6, [r3, #-1396]!	@ 0xfffffa8c
    2b38:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2b3c:	6f4d3331 	svcvs	0x004d3331
    2b40:	656c7564 	strbvs	r7, [ip, #-1380]!	@ 0xfffffa9c
    2b44:	74636146 	strbtvc	r6, [r3], #-326	@ 0xfffffeba
    2b48:	3179726f 	cmncc	r9, pc, ror #4
    2b4c:	63616630 	cmnvs	r1, #48, 12	@ 0x3000000
    2b50:	616c7065 	cmnvs	ip, r5, rrx
    2b54:	45736574 	ldrbmi	r6, [r3, #-1396]!	@ 0xfffffa8c
    2b58:	646f6d00 	strbtvs	r6, [pc], #-3328	@ 2b60 <.plt-0xd4c>
    2b5c:	65546c65 	ldrbvs	r6, [r4, #-3173]	@ 0xfffff39b
    2b60:	5f007473 	svcpl	0x00007473
    2b64:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    2b68:	386b6361 	stmdacc	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    2b6c:	74746573 	ldrbtvc	r6, [r4], #-1395	@ 0xfffffa8d
    2b70:	73676e69 	cmnvc	r7, #1680	@ 0x690
    2b74:	6b6f7435 	blvs	1bdfc50 <_stack+0x1b5fc50>
    2b78:	35426e65 	strbcc	r6, [r2, #-3685]	@ 0xfffff19b
    2b7c:	31787863 	cmncc	r8, r3, ror #16
    2b80:	5f004531 	svcpl	0x00004531
    2b84:	72344e5a 	eorsvc	r4, r4, #1440	@ 0x5a0
    2b88:	386b6361 	stmdacc	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    2b8c:	74746573 	ldrbtvc	r6, [r4], #-1395	@ 0xfffffa8d
    2b90:	73676e69 	cmnvc	r7, #1680	@ 0x690
    2b94:	54697537 	strbtpl	r7, [r9], #-1335	@ 0xfffffac9
    2b98:	656d6568 	strbvs	r6, [sp, #-1384]!	@ 0xfffffa98
    2b9c:	78633542 	stmdavc	r3!, {r1, r6, r8, sl, ip, sp}^
    2ba0:	45313178 	ldrmi	r3, [r1, #-376]!	@ 0xfffffe88
    2ba4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2ba8:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2bac:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2bb0:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2bb4:	36317367 	ldrtcc	r7, [r1], -r7, ror #6
    2bb8:	65636572 	strbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
    2bbc:	6150746e 	cmpvs	r0, lr, ror #8
    2bc0:	50686374 	rsbpl	r6, r8, r4, ror r3
    2bc4:	73687461 	cmnvc	r8, #1627389952	@ 0x61000000
    2bc8:	78633542 	stmdavc	r3!, {r1, r6, r8, sl, ip, sp}^
    2bcc:	45313178 	ldrmi	r3, [r1, #-376]!	@ 0xfffffe88
    2bd0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2bd4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2bd8:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2bdc:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2be0:	31317367 	teqcc	r1, r7, ror #6
    2be4:	6c626163 	stfvse	f6, [r2], #-396	@ 0xfffffe74
    2be8:	6c6f4365 	stclvs	3, cr4, [pc], #-404	@ 2a5c <.plt-0xe50>
    2bec:	4573726f 	ldrbmi	r7, [r3, #-623]!	@ 0xfffffd91
    2bf0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2bf4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2bf8:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2bfc:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2c00:	31317367 	teqcc	r1, r7, ror #6
    2c04:	75646f6d 	strbvc	r6, [r4, #-3949]!	@ 0xfffff093
    2c08:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
    2c0c:	42736f66 	rsbsmi	r6, r3, #408	@ 0x198
    2c10:	78786335 	ldmdavc	r8!, {r0, r2, r4, r5, r8, r9, sp, lr}^
    2c14:	00453131 	subeq	r3, r5, r1, lsr r1
    2c18:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    2c1c:	616d3374 	smcvs	54068	@ 0xd334
    2c20:	534e4970 	movtpl	r4, #59760	@ 0xe970
    2c24:	5f5f3774 	svcpl	0x005f3774
    2c28:	31787863 	cmncc	r8, r3, ror #16
    2c2c:	62323131 	eorsvs	r3, r2, #1073741836	@ 0x4000000c
    2c30:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    2c34:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    2c38:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2c3c:	31745363 	cmncc	r4, r3, ror #6
    2c40:	61686331 	cmnvs	r8, r1, lsr r3
    2c44:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    2c48:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    2c4c:	53456349 	movtpl	r6, #21321	@ 0x5349
    2c50:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    2c54:	5f534545 	svcpl	0x00534545
    2c58:	5f355349 	svcpl	0x00355349
    2c5c:	6172344e 	cmnvs	r2, lr, asr #8
    2c60:	73386b63 	teqvc	r8, #101376	@ 0x18c00
    2c64:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2c68:	3173676e 	cmncc	r3, lr, ror #14
    2c6c:	646f4d30 	strbtvs	r4, [pc], #-3376	@ 2c74 <.plt-0xc38>
    2c70:	49656c75 	stmdbmi	r5!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2c74:	456f666e 	strbmi	r6, [pc, #-1646]!	@ 260e <.plt-0x129e>
    2c78:	6c347453 	cfldrsvs	mvf7, [r4], #-332	@ 0xfffffeb4
    2c7c:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
    2c80:	455f3553 	ldrbmi	r3, [pc, #-1363]	@ 2735 <.plt-0x1177>
    2c84:	53496153 	movtpl	r6, #37203	@ 0x9153
    2c88:	61703474 	cmnvs	r0, r4, ror r4
    2c8c:	4b497269 	blmi	125f638 <_stack+0x11df638>
    2c90:	535f3553 	cmppl	pc, #348127232	@ 0x14c00000
    2c94:	45455f38 	strbmi	r5, [r5, #-3896]	@ 0xfffff0c8
    2c98:	5f415345 	svcpl	0x00415345
    2c9c:	53496153 	movtpl	r6, #37203	@ 0x9153
    2ca0:	53495f42 	movtpl	r5, #40770	@ 0x9f42
    2ca4:	46535f43 	ldrbmi	r5, [r3], -r3, asr #30
    2ca8:	4545455f 	strbmi	r4, [r5, #-1375]	@ 0xfffffaa1
    2cac:	76453144 	strbvc	r3, [r5], -r4, asr #2
    2cb0:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2cb4:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2cb8:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2cbc:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2cc0:	35317367 	ldrcc	r7, [r1, #-871]!	@ 0xfffffc99
    2cc4:	75646f6d 	strbvc	r6, [r4, #-3949]!	@ 0xfffff093
    2cc8:	6857656c 	ldmdavs	r7, {r2, r3, r5, r6, r8, sl, sp, lr}^
    2ccc:	6c657469 	cfstrdvs	mvd7, [r5], #-420	@ 0xfffffe5c
    2cd0:	42747369 	rsbsmi	r7, r4, #-1543503871	@ 0xa4000001
    2cd4:	78786335 	ldmdavc	r8!, {r0, r2, r4, r5, r8, r9, sp, lr}^
    2cd8:	00453131 	subeq	r3, r5, r1, lsr r1
    2cdc:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    2ce0:	616d3374 	smcvs	54068	@ 0xd334
    2ce4:	534e4970 	movtpl	r4, #59760	@ 0xe970
    2ce8:	5f5f3774 	svcpl	0x005f3774
    2cec:	31787863 	cmncc	r8, r3, ror #16
    2cf0:	62323131 	eorsvs	r3, r2, #1073741836	@ 0x4000000c
    2cf4:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    2cf8:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    2cfc:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2d00:	31745363 	cmncc	r4, r3, ror #6
    2d04:	61686331 	cmnvs	r8, r1, lsr r3
    2d08:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    2d0c:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    2d10:	53456349 	movtpl	r6, #21321	@ 0x5349
    2d14:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    2d18:	344e4545 	strbcc	r4, [lr], #-1349	@ 0xfffffabb
    2d1c:	6b636172 	blvs	18db2ec <_stack+0x185b2ec>
    2d20:	74657338 	strbtvc	r7, [r5], #-824	@ 0xfffffcc8
    2d24:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
    2d28:	50353173 	eorspl	r3, r5, r3, ror r1
    2d2c:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    2d30:	6968576e 	stmdbvs	r8!, {r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    2d34:	696c6574 	stmdbvs	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    2d38:	53457473 	movtpl	r7, #21619	@ 0x5473
    2d3c:	656c3474 	strbvs	r3, [ip, #-1140]!	@ 0xfffffb8c
    2d40:	53497373 	movtpl	r7, #37747	@ 0x9373
    2d44:	53455f35 	movtpl	r5, #24373	@ 0x5f35
    2d48:	74534961 	ldrbvc	r4, [r3], #-2401	@ 0xfffff69f
    2d4c:	69617034 	stmdbvs	r1!, {r2, r4, r5, ip, sp, lr}^
    2d50:	534b4972 	movtpl	r4, #47474	@ 0xb972
    2d54:	38535f35 	ldmdacc	r3, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    2d58:	4545455f 	strbmi	r4, [r5, #-1375]	@ 0xfffffaa1
    2d5c:	76453144 	strbvc	r3, [r5], -r4, asr #2
    2d60:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2d64:	5f387453 	svcpl	0x00387453
    2d68:	745f6252 	ldrbvc	r6, [pc], #-594	@ 2d70 <.plt-0xb3c>
    2d6c:	49656572 	stmdbmi	r5!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2d70:	3774534e 	ldrbcc	r5, [r4, -lr, asr #6]!
    2d74:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2d78:	31313178 	teqcc	r1, r8, ror r1
    2d7c:	73616232 	cmnvc	r1, #536870915	@ 0x20000003
    2d80:	735f6369 	cmpvc	pc, #-1543503871	@ 0xa4000001
    2d84:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    2d88:	53634967 	cmnpl	r3, #1687552	@ 0x19c000
    2d8c:	63313174 	teqvs	r1, #116, 2
    2d90:	5f726168 	svcpl	0x00726168
    2d94:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    2d98:	63497374 	movtvs	r7, #37748	@ 0x9374
    2d9c:	49615345 	stmdbmi	r1!, {r0, r2, r6, r8, r9, ip, lr}^
    2da0:	45454563 	strbmi	r4, [r5, #-1379]	@ 0xfffffa9d
    2da4:	70347453 	eorsvc	r7, r4, r3, asr r4
    2da8:	49726961 	ldmdbmi	r2!, {r0, r5, r6, r8, fp, sp, lr}^
    2dac:	5f35534b 	svcpl	0x0035534b
    2db0:	6172344e 	cmnvs	r2, lr, asr #8
    2db4:	73386b63 	teqvc	r8, #101376	@ 0x18c00
    2db8:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2dbc:	3173676e 	cmncc	r3, lr, ror #14
    2dc0:	646f4d30 	strbtvs	r4, [pc], #-3376	@ 2dc8 <.plt-0xae4>
    2dc4:	49656c75 	stmdbmi	r5!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2dc8:	456f666e 	strbmi	r6, [pc, #-1646]!	@ 2762 <.plt-0x114a>
    2dcc:	31745345 	cmncc	r4, r5, asr #6
    2dd0:	65535f30 	ldrbvs	r5, [r3, #-3888]	@ 0xfffff0d0
    2dd4:	7463656c 	strbtvc	r6, [r3], #-1388	@ 0xfffffa94
    2dd8:	49747331 	ldmdbmi	r4!, {r0, r4, r5, r8, r9, ip, sp, lr}^
    2ddc:	455f4253 	ldrbmi	r4, [pc, #-595]	@ 2b91 <.plt-0xd1b>
    2de0:	6c347453 	cfldrsvs	mvf7, [r4], #-332	@ 0xfffffeb4
    2de4:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
    2de8:	455f3553 	ldrbmi	r3, [pc, #-1363]	@ 289d <.plt-0x100f>
    2dec:	53496153 	movtpl	r6, #37203	@ 0x9153
    2df0:	45455f42 	strbmi	r5, [r5, #-3906]	@ 0xfffff0be
    2df4:	5f4d5f38 	svcpl	0x004d5f38
    2df8:	73617265 	cmnvc	r1, #1342177286	@ 0x50000006
    2dfc:	53504565 	cmppl	r0, #423624704	@ 0x19400000
    2e00:	5f333174 	svcpl	0x00333174
    2e04:	745f6252 	ldrbvc	r6, [pc], #-594	@ 2e0c <.plt-0xaa0>
    2e08:	5f656572 	svcpl	0x00656572
    2e0c:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
    2e10:	5f425349 	svcpl	0x00425349
    2e14:	5a5f0045 	bpl	17c2f30 <_stack+0x1742f30>
    2e18:	3874534e 	ldmdacc	r4!, {r1, r2, r3, r6, r8, r9, ip, lr}^
    2e1c:	5f62525f 	svcpl	0x0062525f
    2e20:	65657274 	strbvs	r7, [r5, #-628]!	@ 0xfffffd8c
    2e24:	74534e49 	ldrbvc	r4, [r3], #-3657	@ 0xfffff1b7
    2e28:	635f5f37 	cmpvs	pc, #55, 30	@ 0xdc
    2e2c:	31317878 	teqcc	r1, r8, ror r8
    2e30:	61623231 	cmnvs	r2, r1, lsr r2
    2e34:	5f636973 	svcpl	0x00636973
    2e38:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2e3c:	6349676e 	movtvs	r6, #38766	@ 0x976e
    2e40:	31317453 	teqcc	r1, r3, asr r4
    2e44:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
    2e48:	6172745f 	cmnvs	r2, pc, asr r4
    2e4c:	49737469 	ldmdbmi	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2e50:	61534563 	cmpvs	r3, r3, ror #10
    2e54:	45456349 	strbmi	r6, [r5, #-841]	@ 0xfffffcb7
    2e58:	34745345 	ldrbtcc	r5, [r4], #-837	@ 0xfffffcbb
    2e5c:	72696170 	rsbvc	r6, r9, #112, 2
    2e60:	35534b49 	ldrbcc	r4, [r3, #-2889]	@ 0xfffff4b7
    2e64:	3374535f 	cmncc	r4, #2080374785	@ 0x7c000001
    2e68:	4970616d 	ldmdbmi	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2e6c:	4e5f3553 	mrcmi	5, 2, r3, cr15, cr3, {2}
    2e70:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    2e74:	6573386b 	ldrbvs	r3, [r3, #-2155]!	@ 0xfffff795
    2e78:	6e697474 	mcrvs	4, 3, r7, cr9, cr4, {3}
    2e7c:	30317367 	eorscc	r7, r1, r7, ror #6
    2e80:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    2e84:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
    2e88:	53456f66 	movtpl	r6, #24422	@ 0x5f66
    2e8c:	656c3474 	strbvs	r3, [ip, #-1140]!	@ 0xfffffb8c
    2e90:	53497373 	movtpl	r7, #37747	@ 0x9373
    2e94:	53455f35 	movtpl	r5, #24373	@ 0x5f35
    2e98:	36534961 	ldrbcc	r4, [r3], -r1, ror #18
    2e9c:	3753495f 			@ <UNDEFINED> instruction: 0x3753495f
    2ea0:	5f42535f 	svcpl	0x0042535f
    2ea4:	45454545 	strbmi	r4, [r5, #-1349]	@ 0xfffffabb
    2ea8:	30317453 	eorscc	r7, r1, r3, asr r4
    2eac:	6c65535f 	stclvs	3, cr5, [r5], #-380	@ 0xfffffe84
    2eb0:	31746365 	cmncc	r4, r5, ror #6
    2eb4:	53497473 	movtpl	r7, #38003	@ 0x9473
    2eb8:	53455f48 	movtpl	r5, #24392	@ 0x5f48
    2ebc:	61535f44 	cmpvs	r3, r4, asr #30
    2ec0:	5f485349 	svcpl	0x00485349
    2ec4:	5f384545 	svcpl	0x00384545
    2ec8:	72655f4d 	rsbvc	r5, r5, #308	@ 0x134
    2ecc:	45657361 	strbmi	r7, [r5, #-865]!	@ 0xfffffc9f
    2ed0:	31745350 	cmncc	r4, r0, asr r3
    2ed4:	62525f33 	subsvs	r5, r2, #51, 30	@ 0xcc
    2ed8:	6572745f 	ldrbvs	r7, [r2, #-1119]!	@ 0xfffffba1
    2edc:	6f6e5f65 	svcvs	0x006e5f65
    2ee0:	53496564 	movtpl	r6, #38244	@ 0x9564
    2ee4:	00455f48 	subeq	r5, r5, r8, asr #30
    2ee8:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    2eec:	616d3374 	smcvs	54068	@ 0xd334
    2ef0:	534e4970 	movtpl	r4, #59760	@ 0xe970
    2ef4:	5f5f3774 	svcpl	0x005f3774
    2ef8:	31787863 	cmncc	r8, r3, ror #16
    2efc:	62323131 	eorsvs	r3, r2, #1073741836	@ 0x4000000c
    2f00:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    2f04:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    2f08:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2f0c:	31745363 	cmncc	r4, r3, ror #6
    2f10:	61686331 	cmnvs	r8, r1, lsr r3
    2f14:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    2f18:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    2f1c:	53456349 	movtpl	r6, #21321	@ 0x5349
    2f20:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    2f24:	5f534545 	svcpl	0x00534545
    2f28:	5f355349 	svcpl	0x00355349
    2f2c:	6172344e 	cmnvs	r2, lr, asr #8
    2f30:	73386b63 	teqvc	r8, #101376	@ 0x18c00
    2f34:	69747465 	ldmdbvs	r4!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    2f38:	3173676e 	cmncc	r3, lr, ror #14
    2f3c:	646f4d30 	strbtvs	r4, [pc], #-3376	@ 2f44 <.plt-0x968>
    2f40:	49656c75 	stmdbmi	r5!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    2f44:	456f666e 	strbmi	r6, [pc, #-1646]!	@ 28de <.plt-0xfce>
    2f48:	6c347453 	cfldrsvs	mvf7, [r4], #-332	@ 0xfffffeb4
    2f4c:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
    2f50:	455f3553 	ldrbmi	r3, [pc, #-1363]	@ 2a05 <.plt-0xea7>
    2f54:	53496153 	movtpl	r6, #37203	@ 0x9153
    2f58:	61703474 	cmnvs	r0, r4, ror r4
    2f5c:	4b497269 	blmi	125f908 <_stack+0x11df908>
    2f60:	535f3553 	cmppl	pc, #348127232	@ 0x14c00000
    2f64:	45455f38 	strbmi	r5, [r5, #-3896]	@ 0xfffff0c8
    2f68:	5f415345 	svcpl	0x00415345
    2f6c:	53496153 	movtpl	r6, #37203	@ 0x9153
    2f70:	53495f42 	movtpl	r5, #40770	@ 0x9f42
    2f74:	46535f43 	ldrbmi	r5, [r3], -r3, asr #30
    2f78:	4545455f 	strbmi	r4, [r5, #-1375]	@ 0xfffffaa1
    2f7c:	76453244 	strbvc	r3, [r5], -r4, asr #4
    2f80:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    2f84:	5f387453 	svcpl	0x00387453
    2f88:	745f6252 	ldrbvc	r6, [pc], #-594	@ 2f90 <.plt-0x91c>
    2f8c:	49656572 	stmdbmi	r5!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2f90:	3774534e 	ldrbcc	r5, [r4, -lr, asr #6]!
    2f94:	78635f5f 	stmdavc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2f98:	31313178 	teqcc	r1, r8, ror r1
    2f9c:	73616232 	cmnvc	r1, #536870915	@ 0x20000003
    2fa0:	735f6369 	cmpvc	pc, #-1543503871	@ 0xa4000001
    2fa4:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    2fa8:	53634967 	cmnpl	r3, #1687552	@ 0x19c000
    2fac:	63313174 	teqvs	r1, #116, 2
    2fb0:	5f726168 	svcpl	0x00726168
    2fb4:	69617274 	stmdbvs	r1!, {r2, r4, r5, r6, r9, ip, sp, lr}^
    2fb8:	63497374 	movtvs	r7, #37748	@ 0x9374
    2fbc:	49615345 	stmdbmi	r1!, {r0, r2, r6, r8, r9, ip, lr}^
    2fc0:	45454563 	strbmi	r4, [r5, #-1379]	@ 0xfffffa9d
    2fc4:	535f3553 	cmppl	pc, #348127232	@ 0x14c00000
    2fc8:	495f3974 	ldmdbmi	pc, {r2, r4, r5, r6, r8, fp, ip, sp}^	@ <UNPREDICTABLE>
    2fcc:	746e6564 	strbtvc	r6, [lr], #-1380	@ 0xfffffa9c
    2fd0:	49797469 	ldmdbmi	r9!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2fd4:	455f3553 	ldrbmi	r3, [pc, #-1363]	@ 2a89 <.plt-0xe23>
    2fd8:	6c347453 	cfldrsvs	mvf7, [r4], #-332	@ 0xfffffeb4
    2fdc:	49737365 	ldmdbmi	r3!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}^
    2fe0:	455f3553 	ldrbmi	r3, [pc, #-1363]	@ 2a95 <.plt-0xe17>
    2fe4:	53496153 	movtpl	r6, #37203	@ 0x9153
    2fe8:	45455f35 	strbmi	r5, [r5, #-3893]	@ 0xfffff0cb
    2fec:	5f4d5f38 	svcpl	0x004d5f38
    2ff0:	73617265 	cmnvc	r1, #1342177286	@ 0x50000006
    2ff4:	53504565 	cmppl	r0, #423624704	@ 0x19400000
    2ff8:	5f333174 	svcpl	0x00333174
    2ffc:	745f6252 	ldrbvc	r6, [pc], #-594	@ 3004 <.plt-0x8a8>
    3000:	5f656572 	svcpl	0x00656572
    3004:	65646f6e 	strbvs	r6, [r4, #-3950]!	@ 0xfffff092
    3008:	5f355349 	svcpl	0x00355349
    300c:	5a5f0045 	bpl	17c3128 <_stack+0x1743128>
    3010:	3874534e 	ldmdacc	r4!, {r1, r2, r3, r6, r8, r9, ip, lr}^
    3014:	5f62525f 	svcpl	0x0062525f
    3018:	65657274 	strbvs	r7, [r5, #-628]!	@ 0xfffffd8c
    301c:	74534e49 	ldrbvc	r4, [r3], #-3657	@ 0xfffff1b7
    3020:	635f5f37 	cmpvs	pc, #55, 30	@ 0xdc
    3024:	31317878 	teqcc	r1, r8, ror r8
    3028:	61623231 	cmnvs	r2, r1, lsr r2
    302c:	5f636973 	svcpl	0x00636973
    3030:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    3034:	6349676e 	movtvs	r6, #38766	@ 0x976e
    3038:	31317453 	teqcc	r1, r3, asr r4
    303c:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
    3040:	6172745f 	cmnvs	r2, pc, asr r4
    3044:	49737469 	ldmdbmi	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    3048:	61534563 	cmpvs	r3, r3, ror #10
    304c:	45456349 	strbmi	r6, [r5, #-841]	@ 0xfffffcb7
    3050:	34745345 	ldrbtcc	r5, [r4], #-837	@ 0xfffffcbb
    3054:	72696170 	rsbvc	r6, r9, #112, 2
    3058:	35534b49 	ldrbcc	r4, [r3, #-2889]	@ 0xfffff4b7
    305c:	72344e5f 	eorsvc	r4, r4, #1520	@ 0x5f0
    3060:	386b6361 	stmdacc	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    3064:	74746573 	ldrbtvc	r6, [r4], #-1395	@ 0xfffffa8d
    3068:	73676e69 	cmnvc	r7, #1680	@ 0x690
    306c:	6c503531 	cfldr64vs	mvdx3, [r0], {49}	@ 0x31
    3070:	6e696775 	mcrvs	7, 3, r6, cr9, cr5, {3}
    3074:	74696857 	strbtvc	r6, [r9], #-2135	@ 0xfffff7a9
    3078:	73696c65 	cmnvc	r9, #25856	@ 0x6500
    307c:	53454574 	movtpl	r4, #21876	@ 0x5574
    3080:	5f303174 	svcpl	0x00303174
    3084:	656c6553 	strbvs	r6, [ip, #-1363]!	@ 0xfffffaad
    3088:	73317463 	teqvc	r1, #1660944384	@ 0x63000000
    308c:	42534974 	subsmi	r4, r3, #116, 18	@ 0x1d0000
    3090:	7453455f 	ldrbvc	r4, [r3], #-1375	@ 0xfffffaa1
    3094:	73656c34 	cmnvc	r5, #52, 24	@ 0x3400
    3098:	35534973 	ldrbcc	r4, [r3, #-2419]	@ 0xfffff68d
    309c:	6153455f 	cmpvs	r3, pc, asr r5
    30a0:	5f425349 	svcpl	0x00425349
    30a4:	5f384545 	svcpl	0x00384545
    30a8:	72655f4d 	rsbvc	r5, r5, #308	@ 0x134
    30ac:	45657361 	strbmi	r7, [r5, #-865]!	@ 0xfffffc9f
    30b0:	31745350 	cmncc	r4, r0, asr r3
    30b4:	62525f33 	subsvs	r5, r2, #51, 30	@ 0xcc
    30b8:	6572745f 	ldrbvs	r7, [r2, #-1119]!	@ 0xfffffba1
    30bc:	6f6e5f65 	svcvs	0x006e5f65
    30c0:	53496564 	movtpl	r6, #38244	@ 0x9564
    30c4:	00455f42 	subeq	r5, r5, r2, asr #30
    30c8:	534e5a5f 	movtpl	r5, #59999	@ 0xea5f
    30cc:	616d3374 	smcvs	54068	@ 0xd334
    30d0:	534e4970 	movtpl	r4, #59760	@ 0xe970
    30d4:	5f5f3774 	svcpl	0x005f3774
    30d8:	31787863 	cmncc	r8, r3, ror #16
    30dc:	62323131 	eorsvs	r3, r2, #1073741836	@ 0x4000000c
    30e0:	63697361 	cmnvs	r9, #-2080374783	@ 0x84000001
    30e4:	7274735f 	rsbsvc	r7, r4, #2080374785	@ 0x7c000001
    30e8:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    30ec:	31745363 	cmncc	r4, r3, ror #6
    30f0:	61686331 	cmnvs	r8, r1, lsr r3
    30f4:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    30f8:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    30fc:	53456349 	movtpl	r6, #21321	@ 0x5349
    3100:	45634961 	strbmi	r4, [r3, #-2401]!	@ 0xfffff69f
    3104:	344e4545 	strbcc	r4, [lr], #-1349	@ 0xfffffabb
    3108:	6b636172 	blvs	18db6d8 <_stack+0x185b6d8>
    310c:	74657338 	strbtvc	r7, [r5], #-824	@ 0xfffffcc8
    3110:	676e6974 			@ <UNDEFINED> instruction: 0x676e6974
    3114:	50353173 	eorspl	r3, r5, r3, ror r1
    3118:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    311c:	6968576e 	stmdbvs	r8!, {r1, r2, r3, r5, r6, r8, r9, sl, ip, lr}^
    3120:	696c6574 	stmdbvs	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    3124:	53457473 	movtpl	r7, #21619	@ 0x5473
    3128:	656c3474 	strbvs	r3, [ip, #-1140]!	@ 0xfffffb8c
    312c:	53497373 	movtpl	r7, #37747	@ 0x9373
    3130:	53455f35 	movtpl	r5, #24373	@ 0x5f35
    3134:	74534961 	ldrbvc	r4, [r3], #-2401	@ 0xfffff69f
    3138:	69617034 	stmdbvs	r1!, {r2, r4, r5, ip, sp, lr}^
    313c:	534b4972 	movtpl	r4, #47474	@ 0xb972
    3140:	38535f35 	ldmdacc	r3, {r0, r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    3144:	4545455f 	strbmi	r4, [r5, #-1375]	@ 0xfffffaa1
    3148:	76453244 	strbvc	r3, [r5], -r4, asr #4
    314c:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3150:	43563631 	cmpmi	r6, #51380224	@ 0x3100000
    3154:	646f4d56 	strbtvs	r4, [pc], #-3414	@ 315c <.plt-0x750>
    3158:	57656c75 			@ <UNDEFINED> instruction: 0x57656c75
    315c:	70706172 	rsbsvc	r6, r0, r2, ror r1
    3160:	75367265 	ldrvc	r7, [r6, #-613]!	@ 0xfffffd9b
    3164:	74616470 	strbtvc	r6, [r1], #-1136	@ 0xfffffb90
    3168:	00764565 	rsbseq	r4, r6, r5, ror #10
    316c:	314e5a5f 	cmpcc	lr, pc, asr sl
    3170:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    3174:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    3178:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    317c:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    3180:	65733972 	ldrbvs	r3, [r3, #-2418]!	@ 0xfffff68e
    3184:	61705f74 	cmnvs	r0, r4, ror pc
    3188:	456d6172 	strbmi	r6, [sp, #-370]!	@ 0xfffffe8e
    318c:	5f006669 	svcpl	0x00006669
    3190:	36314e5a 			@ <UNDEFINED> instruction: 0x36314e5a
    3194:	4d564356 	ldclmi	3, cr4, [r6, #-344]	@ 0xfffffea8
    3198:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    319c:	61725765 	cmnvs	r2, r5, ror #14
    31a0:	72657070 	rsbvc	r7, r5, #112	@ 0x70
    31a4:	74657339 	strbtvc	r7, [r5], #-825	@ 0xfffffcc7
    31a8:	706e695f 	rsbvc	r6, lr, pc, asr r9
    31ac:	69457475 	stmdbvs	r5, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    31b0:	5a5f0066 	bpl	17c3350 <_stack+0x1743350>
    31b4:	36314b4e 	ldrtcc	r4, [r1], -lr, asr #22
    31b8:	4d564356 	ldclmi	3, cr4, [r6, #-344]	@ 0xfffffea8
    31bc:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    31c0:	61725765 	cmnvs	r2, r5, ror #14
    31c4:	72657070 	rsbvc	r7, r5, #112	@ 0x70
    31c8:	65673031 	strbvs	r3, [r7, #-49]!	@ 0xffffffcf
    31cc:	756f5f74 	strbvc	r5, [pc, #-3956]!	@ 2260 <.plt-0x164c>
    31d0:	74757074 	ldrbtvc	r7, [r5], #-116	@ 0xffffff8c
    31d4:	5f006945 	svcpl	0x00006945
    31d8:	314b4e5a 	cmpcc	fp, sl, asr lr
    31dc:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    31e0:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    31e4:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    31e8:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    31ec:	67383172 			@ <UNDEFINED> instruction: 0x67383172
    31f0:	6c5f7465 	cfldrdvs	mvd7, [pc], {101}	@ 0x65
    31f4:	625f6465 	subsvs	r6, pc, #1694498816	@ 0x65000000
    31f8:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    31fc:	73656e74 	cmnvc	r5, #116, 28	@ 0x740
    3200:	00694573 	rsbeq	r4, r9, r3, ror r5
    3204:	314e5a5f 	cmpcc	lr, pc, asr sl
    3208:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    320c:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    3210:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    3214:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    3218:	6d353272 	lfmvs	f3, 4, [r5, #-456]!	@ 0xfffffe38
    321c:	5f6b7261 	svcpl	0x006b7261
    3220:	5f6c6c61 	svcpl	0x006c6c61
    3224:	75706e69 	ldrbvc	r6, [r0, #-3689]!	@ 0xfffff197
    3228:	755f7374 	ldrbvc	r7, [pc, #-884]	@ 2ebc <.plt-0x9f0>
    322c:	7461706e 	strbtvc	r7, [r1], #-110	@ 0xffffff92
    3230:	64656863 	strbtvs	r6, [r5], #-2147	@ 0xfffff79d
    3234:	5f007645 	svcpl	0x00007645
    3238:	36314e5a 			@ <UNDEFINED> instruction: 0x36314e5a
    323c:	4d564356 	ldclmi	3, cr4, [r6, #-344]	@ 0xfffffea8
    3240:	6c75646f 	cfldrdvs	mvd6, [r5], #-444	@ 0xfffffe44
    3244:	61725765 	cmnvs	r2, r5, ror #14
    3248:	72657070 	rsbvc	r7, r5, #112	@ 0x70
    324c:	616d3032 	cmnvs	sp, r2, lsr r0
    3250:	695f6b72 	ldmdbvs	pc, {r1, r4, r5, r6, r8, r9, fp, sp, lr}^	@ <UNPREDICTABLE>
    3254:	7475706e 	ldrbtvc	r7, [r5], #-110	@ 0xffffff92
    3258:	706e755f 	rsbvc	r7, lr, pc, asr r5
    325c:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    3260:	69456465 	stmdbvs	r5, {r0, r2, r5, r6, sl, sp, lr}^
    3264:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3268:	43563631 	cmpmi	r6, #51380224	@ 0x3100000
    326c:	646f4d56 	strbtvs	r4, [pc], #-3414	@ 3274 <.plt-0x638>
    3270:	57656c75 			@ <UNDEFINED> instruction: 0x57656c75
    3274:	70706172 	rsbsvc	r6, r0, r2, ror r1
    3278:	38317265 	ldmdacc	r1!, {r0, r2, r5, r6, r9, ip, sp, lr}
    327c:	6b72616d 	blvs	1c9b838 <_stack+0x1c1b838>
    3280:	706e695f 	rsbvc	r6, lr, pc, asr r9
    3284:	705f7475 	subsvc	r7, pc, r5, ror r4	@ <UNPREDICTABLE>
    3288:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    328c:	69456465 	stmdbvs	r5, {r0, r2, r5, r6, sl, sp, lr}^
    3290:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3294:	43563631 	cmpmi	r6, #51380224	@ 0x3100000
    3298:	646f4d56 	strbtvs	r4, [pc], #-3414	@ 32a0 <.plt-0x60c>
    329c:	57656c75 			@ <UNDEFINED> instruction: 0x57656c75
    32a0:	70706172 	rsbsvc	r6, r0, r2, ror r1
    32a4:	36327265 	ldrtcc	r7, [r2], -r5, ror #4
    32a8:	6b72616d 	blvs	1c9b864 <_stack+0x1c1b864>
    32ac:	6c6c615f 	stfvse	f6, [ip], #-380	@ 0xfffffe84
    32b0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	@ 0xfffff0a1
    32b4:	73747570 	cmnvc	r4, #112, 10	@ 0x1c000000
    32b8:	706e755f 	rsbvc	r7, lr, pc, asr r5
    32bc:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    32c0:	76456465 	strbvc	r6, [r5], -r5, ror #8
    32c4:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    32c8:	43563631 	cmpmi	r6, #51380224	@ 0x3100000
    32cc:	646f4d56 	strbtvs	r4, [pc], #-3414	@ 32d4 <.plt-0x5d8>
    32d0:	57656c75 			@ <UNDEFINED> instruction: 0x57656c75
    32d4:	70706172 	rsbsvc	r6, r0, r2, ror r1
    32d8:	31327265 	teqcc	r2, r5, ror #4
    32dc:	6b72616d 	blvs	1c9b898 <_stack+0x1c1b898>
    32e0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	@ 0xfffff0a1
    32e4:	5f747570 	svcpl	0x00747570
    32e8:	61706e75 	cmnvs	r0, r5, ror lr
    32ec:	65686374 	strbvs	r6, [r8, #-884]!	@ 0xfffffc8c
    32f0:	00694564 	rsbeq	r4, r9, r4, ror #10
    32f4:	314e5a5f 	cmpcc	lr, pc, asr sl
    32f8:	56435636 			@ <UNDEFINED> instruction: 0x56435636
    32fc:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    3300:	7257656c 	subsvc	r6, r7, #108, 10	@ 0x1b000000
    3304:	65707061 	ldrbvs	r7, [r0, #-97]!	@ 0xffffff9f
    3308:	6d393172 	ldfvss	f3, [r9, #-456]!	@ 0xfffffe38
    330c:	5f6b7261 	svcpl	0x006b7261
    3310:	7074756f 	rsbsvc	r7, r4, pc, ror #10
    3314:	705f7475 	subsvc	r7, pc, r5, ror r4	@ <UNPREDICTABLE>
    3318:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
    331c:	69456465 	stmdbvs	r5, {r0, r2, r5, r6, sl, sp, lr}^
    3320:	4e5a5f00 	cdpmi	15, 5, cr5, cr10, cr0, {0}
    3324:	63617234 	cmnvs	r1, #52, 4	@ 0x40000003
    3328:	6e65366b 	cdpvs	6, 6, cr3, cr5, cr11, {3}
    332c:	656e6967 	strbvs	r6, [lr, #-2407]!	@ 0xfffff699
    3330:	646f4d36 	strbtvs	r4, [pc], #-3382	@ 3338 <.plt-0x574>
    3334:	31656c75 	smccc	22213	@ 0x56c5
    3338:	696e6936 	stmdbvs	lr!, {r1, r2, r4, r5, r8, fp, sp, lr}^
    333c:	6c616974 			@ <UNDEFINED> instruction: 0x6c616974
    3340:	5f657a69 	svcpl	0x00657a69
    3344:	74617473 	strbtvc	r7, [r1], #-1139	@ 0xfffffb8d
    3348:	74534565 	ldrbvc	r4, [r3], #-1381	@ 0xfffffa9b
    334c:	61623731 	cmnvs	r2, r1, lsr r7
    3350:	5f636973 	svcpl	0x00636973
    3354:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    3358:	765f676e 	ldrbvc	r6, [pc], -lr, ror #14
    335c:	49776569 	ldmdbmi	r7!, {r0, r3, r5, r6, r8, sl, sp, lr}^
    3360:	31745363 	cmncc	r4, r3, ror #6
    3364:	61686331 	cmnvs	r8, r1, lsr r3
    3368:	72745f72 	rsbsvc	r5, r4, #456	@ 0x1c8
    336c:	73746961 	cmnvc	r4, #1589248	@ 0x184000
    3370:	45456349 	strbmi	r6, [r5, #-841]	@ 0xfffffcb7
    3374:	345a5f00 	ldrbcc	r5, [sl], #-3840	@ 0xfffff100
    3378:	74696e69 	strbtvc	r6, [r9], #-3689	@ 0xfffff197
    337c:	72344e50 	eorsvc	r4, r4, #80, 28	@ 0x500
    3380:	366b6361 	strbtcc	r6, [fp], -r1, ror #6
    3384:	67756c70 			@ <UNDEFINED> instruction: 0x67756c70
    3388:	50366e69 	eorspl	r6, r6, r9, ror #28
    338c:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    3390:	7000456e 	andvc	r4, r0, lr, ror #10
    3394:	6967756c 	stmdbvs	r7!, {r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    3398:	736e496e 	cmnvc	lr, #1802240	@ 0x1b8000
    339c:	636e6174 	cmnvs	lr, #116, 2
    33a0:	735f0065 	cmpvc	pc, #101	@ 0x65
    33a4:	6b636174 	blvs	18db97c <_stack+0x185b97c>
    33a8:	Address 0x33a8 is out of bounds.


Disassembly of section .rel.dyn:

000033ac <.rel.dyn>:
    33ac:	000079a4 	andeq	r7, r0, r4, lsr #19
    33b0:	00000017 	andeq	r0, r0, r7, lsl r0
    33b4:	000079a8 	andeq	r7, r0, r8, lsr #19
    33b8:	00000017 	andeq	r0, r0, r7, lsl r0
    33bc:	00007cec 	andeq	r7, r0, ip, ror #25
    33c0:	00000017 	andeq	r0, r0, r7, lsl r0
    33c4:	000079b4 			@ <UNDEFINED> instruction: 0x000079b4
    33c8:	00008902 	andeq	r8, r0, r2, lsl #18
    33cc:	000079b8 			@ <UNDEFINED> instruction: 0x000079b8
    33d0:	00004d02 	andeq	r4, r0, r2, lsl #26
    33d4:	000079bc 			@ <UNDEFINED> instruction: 0x000079bc
    33d8:	00000502 	andeq	r0, r0, r2, lsl #10
    33dc:	00007a00 	andeq	r7, r0, r0, lsl #20
    33e0:	00000502 	andeq	r0, r0, r2, lsl #10
    33e4:	00007af0 	strdeq	r7, [r0], -r0
    33e8:	00000502 	andeq	r0, r0, r2, lsl #10
    33ec:	000079c0 	andeq	r7, r0, r0, asr #19
    33f0:	00003f02 	andeq	r3, r0, r2, lsl #30
    33f4:	00007a04 	andeq	r7, r0, r4, lsl #20
    33f8:	00003f02 	andeq	r3, r0, r2, lsl #30
    33fc:	00007af4 	strdeq	r7, [r0], -r4
    3400:	00003f02 	andeq	r3, r0, r2, lsl #30
    3404:	000079c4 	andeq	r7, r0, r4, asr #19
    3408:	00000f02 	andeq	r0, r0, r2, lsl #30
    340c:	00007a08 	andeq	r7, r0, r8, lsl #20
    3410:	00000f02 	andeq	r0, r0, r2, lsl #30
    3414:	00007af8 	strdeq	r7, [r0], -r8
    3418:	00000f02 	andeq	r0, r0, r2, lsl #30
    341c:	000079c8 	andeq	r7, r0, r8, asr #19
    3420:	00004f02 	andeq	r4, r0, r2, lsl #30
    3424:	00007a0c 	andeq	r7, r0, ip, lsl #20
    3428:	00004f02 	andeq	r4, r0, r2, lsl #30
    342c:	00007afc 	strdeq	r7, [r0], -ip
    3430:	00004f02 	andeq	r4, r0, r2, lsl #30
    3434:	000079cc 	andeq	r7, r0, ip, asr #19
    3438:	00006d02 	andeq	r6, r0, r2, lsl #26
    343c:	00007a10 	andeq	r7, r0, r0, lsl sl
    3440:	00006d02 	andeq	r6, r0, r2, lsl #26
    3444:	00007b00 	andeq	r7, r0, r0, lsl #22
    3448:	00006d02 	andeq	r6, r0, r2, lsl #26
    344c:	000079d0 	ldrdeq	r7, [r0], -r0
    3450:	00007902 	andeq	r7, r0, r2, lsl #18
    3454:	00007a14 	andeq	r7, r0, r4, lsl sl
    3458:	00007902 	andeq	r7, r0, r2, lsl #18
    345c:	00007b04 	andeq	r7, r0, r4, lsl #22
    3460:	00007902 	andeq	r7, r0, r2, lsl #18
    3464:	000079d4 	ldrdeq	r7, [r0], -r4
    3468:	00001f02 	andeq	r1, r0, r2, lsl #30
    346c:	00007a18 	andeq	r7, r0, r8, lsl sl
    3470:	00001f02 	andeq	r1, r0, r2, lsl #30
    3474:	00007b08 	andeq	r7, r0, r8, lsl #22
    3478:	00001f02 	andeq	r1, r0, r2, lsl #30
    347c:	000079d8 	ldrdeq	r7, [r0], -r8
    3480:	00005802 	andeq	r5, r0, r2, lsl #16
    3484:	00007a1c 	andeq	r7, r0, ip, lsl sl
    3488:	00005802 	andeq	r5, r0, r2, lsl #16
    348c:	00007b0c 	andeq	r7, r0, ip, lsl #22
    3490:	00005802 	andeq	r5, r0, r2, lsl #16
    3494:	000079dc 	ldrdeq	r7, [r0], -ip
    3498:	00000902 	andeq	r0, r0, r2, lsl #18
    349c:	00007a20 	andeq	r7, r0, r0, lsr #20
    34a0:	00000902 	andeq	r0, r0, r2, lsl #18
    34a4:	00007b10 	andeq	r7, r0, r0, lsl fp
    34a8:	00000902 	andeq	r0, r0, r2, lsl #18
    34ac:	000079e0 	andeq	r7, r0, r0, ror #19
    34b0:	00003002 	andeq	r3, r0, r2
    34b4:	00007a24 	andeq	r7, r0, r4, lsr #20
    34b8:	00003002 	andeq	r3, r0, r2
    34bc:	00007b14 	andeq	r7, r0, r4, lsl fp
    34c0:	00003002 	andeq	r3, r0, r2
    34c4:	000079e4 	andeq	r7, r0, r4, ror #19
    34c8:	00003402 	andeq	r3, r0, r2, lsl #8
    34cc:	000079e8 	andeq	r7, r0, r8, ror #19
    34d0:	00007a02 	andeq	r7, r0, r2, lsl #20
    34d4:	000079ec 	andeq	r7, r0, ip, ror #19
    34d8:	00007c02 	andeq	r7, r0, r2, lsl #24
    34dc:	00007a30 	andeq	r7, r0, r0, lsr sl
    34e0:	00007c02 	andeq	r7, r0, r2, lsl #24
    34e4:	00007b20 	andeq	r7, r0, r0, lsr #22
    34e8:	00007c02 	andeq	r7, r0, r2, lsl #24
    34ec:	000079f8 	strdeq	r7, [r0], -r8
    34f0:	00002302 	andeq	r2, r0, r2, lsl #6
    34f4:	000079fc 	strdeq	r7, [r0], -ip
    34f8:	00001502 	andeq	r1, r0, r2, lsl #10
    34fc:	00007a28 	andeq	r7, r0, r8, lsr #20
    3500:	00006a02 	andeq	r6, r0, r2, lsl #20
    3504:	00007b18 	andeq	r7, r0, r8, lsl fp
    3508:	00006a02 	andeq	r6, r0, r2, lsl #20
    350c:	00007a2c 	andeq	r7, r0, ip, lsr #20
    3510:	00003302 	andeq	r3, r0, r2, lsl #6
    3514:	00007b1c 	andeq	r7, r0, ip, lsl fp
    3518:	00003302 	andeq	r3, r0, r2, lsl #6
    351c:	00007a34 	andeq	r7, r0, r4, lsr sl
    3520:	00002e02 	andeq	r2, r0, r2, lsl #28
    3524:	00007b24 	andeq	r7, r0, r4, lsr #22
    3528:	00002e02 	andeq	r2, r0, r2, lsl #28
    352c:	00007a40 	andeq	r7, r0, r0, asr #20
    3530:	00006502 	andeq	r6, r0, r2, lsl #10
    3534:	00007a44 	andeq	r7, r0, r4, asr #20
    3538:	00008b02 	andeq	r8, r0, r2, lsl #22
    353c:	00007a48 	andeq	r7, r0, r8, asr #20
    3540:	00002902 	andeq	r2, r0, r2, lsl #18
    3544:	00007a4c 	andeq	r7, r0, ip, asr #20
    3548:	00003602 	andeq	r3, r0, r2, lsl #12
    354c:	00007a50 	andeq	r7, r0, r0, asr sl
    3550:	00001d02 	andeq	r1, r0, r2, lsl #26
    3554:	00007a54 	andeq	r7, r0, r4, asr sl
    3558:	00002a02 	andeq	r2, r0, r2, lsl #20
    355c:	00007a58 	andeq	r7, r0, r8, asr sl
    3560:	00004e02 	andeq	r4, r0, r2, lsl #28
    3564:	00007a5c 	andeq	r7, r0, ip, asr sl
    3568:	00005602 	andeq	r5, r0, r2, lsl #12
    356c:	00007a60 	andeq	r7, r0, r0, ror #20
    3570:	00001002 	andeq	r1, r0, r2
    3574:	00007a64 	andeq	r7, r0, r4, ror #20
    3578:	00004c02 	andeq	r4, r0, r2, lsl #24
    357c:	00007a68 	andeq	r7, r0, r8, ror #20
    3580:	00006702 	andeq	r6, r0, r2, lsl #14
    3584:	00007a6c 	andeq	r7, r0, ip, ror #20
    3588:	00003102 	andeq	r3, r0, r2, lsl #2
    358c:	00007a70 	andeq	r7, r0, r0, ror sl
    3590:	00006f02 	andeq	r6, r0, r2, lsl #30
    3594:	00007a74 	andeq	r7, r0, r4, ror sl
    3598:	00004402 	andeq	r4, r0, r2, lsl #8
    359c:	00007a78 	andeq	r7, r0, r8, ror sl
    35a0:	00000c02 	andeq	r0, r0, r2, lsl #24
    35a4:	00007a7c 	andeq	r7, r0, ip, ror sl
    35a8:	00007e02 	andeq	r7, r0, r2, lsl #28
    35ac:	00007ccc 	andeq	r7, r0, ip, asr #25
    35b0:	00007e15 	andeq	r7, r0, r5, lsl lr
    35b4:	00007a80 	andeq	r7, r0, r0, lsl #21
    35b8:	00002b02 	andeq	r2, r0, r2, lsl #22
    35bc:	00007a84 	andeq	r7, r0, r4, lsl #21
    35c0:	00007702 	andeq	r7, r0, r2, lsl #14
    35c4:	00007a88 	andeq	r7, r0, r8, lsl #21
    35c8:	00002602 	andeq	r2, r0, r2, lsl #12
    35cc:	00007a8c 	andeq	r7, r0, ip, lsl #21
    35d0:	00004002 	andeq	r4, r0, r2
    35d4:	00007a90 	muleq	r0, r0, sl
    35d8:	00008c02 	andeq	r8, r0, r2, lsl #24
    35dc:	00007a94 	muleq	r0, r4, sl
    35e0:	00002802 	andeq	r2, r0, r2, lsl #16
    35e4:	00007a98 	muleq	r0, r8, sl
    35e8:	00006c02 	andeq	r6, r0, r2, lsl #24
    35ec:	00007a9c 	muleq	r0, ip, sl
    35f0:	00003b02 	andeq	r3, r0, r2, lsl #22
    35f4:	00007aa0 	andeq	r7, r0, r0, lsr #21
    35f8:	00005302 	andeq	r5, r0, r2, lsl #6
    35fc:	00007aa4 	andeq	r7, r0, r4, lsr #21
    3600:	00002102 	andeq	r2, r0, r2, lsl #2
    3604:	00007aa8 	andeq	r7, r0, r8, lsr #21
    3608:	00005f02 	andeq	r5, r0, r2, lsl #30
    360c:	00007aac 	andeq	r7, r0, ip, lsr #21
    3610:	00006902 	andeq	r6, r0, r2, lsl #18
    3614:	00007ab0 			@ <UNDEFINED> instruction: 0x00007ab0
    3618:	00005002 	andeq	r5, r0, r2
    361c:	00007ab4 			@ <UNDEFINED> instruction: 0x00007ab4
    3620:	00007b02 	andeq	r7, r0, r2, lsl #22
    3624:	00007ab8 			@ <UNDEFINED> instruction: 0x00007ab8
    3628:	00002002 	andeq	r2, r0, r2
    362c:	00007abc 			@ <UNDEFINED> instruction: 0x00007abc
    3630:	00001c02 	andeq	r1, r0, r2, lsl #24
    3634:	00007ac0 	andeq	r7, r0, r0, asr #21
    3638:	00001202 	andeq	r1, r0, r2, lsl #4
    363c:	00007ac4 	andeq	r7, r0, r4, asr #21
    3640:	00002c02 	andeq	r2, r0, r2, lsl #24
    3644:	00007ac8 	andeq	r7, r0, r8, asr #21
    3648:	00004302 	andeq	r4, r0, r2, lsl #6
    364c:	00007acc 	andeq	r7, r0, ip, asr #21
    3650:	00001402 	andeq	r1, r0, r2, lsl #8
    3654:	00007ad0 	ldrdeq	r7, [r0], -r0
    3658:	00000e02 	andeq	r0, r0, r2, lsl #28
    365c:	00007ad4 	ldrdeq	r7, [r0], -r4
    3660:	00008a02 	andeq	r8, r0, r2, lsl #20
    3664:	00007ad8 	ldrdeq	r7, [r0], -r8
    3668:	00008302 	andeq	r8, r0, r2, lsl #6
    366c:	00007adc 	ldrdeq	r7, [r0], -ip
    3670:	00007402 	andeq	r7, r0, r2, lsl #8
    3674:	00007ae8 	andeq	r7, r0, r8, ror #21
    3678:	00007302 	andeq	r7, r0, r2, lsl #6
    367c:	00007aec 	andeq	r7, r0, ip, ror #21
    3680:	00001902 	andeq	r1, r0, r2, lsl #18
    3684:	00007c48 	andeq	r7, r0, r8, asr #24
    3688:	00000715 	andeq	r0, r0, r5, lsl r7
    368c:	00007c4c 	andeq	r7, r0, ip, asr #24
    3690:	00000815 	andeq	r0, r0, r5, lsl r8
    3694:	00007c50 	andeq	r7, r0, r0, asr ip
    3698:	00000a15 	andeq	r0, r0, r5, lsl sl
    369c:	00007c54 	andeq	r7, r0, r4, asr ip
    36a0:	00000b15 	andeq	r0, r0, r5, lsl fp
    36a4:	00007c58 	andeq	r7, r0, r8, asr ip
    36a8:	00001115 	andeq	r1, r0, r5, lsl r1
    36ac:	00007c5c 	andeq	r7, r0, ip, asr ip
    36b0:	00001315 	andeq	r1, r0, r5, lsl r3
    36b4:	00007c60 	andeq	r7, r0, r0, ror #24
    36b8:	00001615 	andeq	r1, r0, r5, lsl r6
    36bc:	00007c64 	andeq	r7, r0, r4, ror #24
    36c0:	00001b15 	andeq	r1, r0, r5, lsl fp
    36c4:	00007c68 	andeq	r7, r0, r8, ror #24
    36c8:	00002415 	andeq	r2, r0, r5, lsl r4
    36cc:	00007c6c 	andeq	r7, r0, ip, ror #24
    36d0:	00002515 	andeq	r2, r0, r5, lsl r5
    36d4:	00007c70 	andeq	r7, r0, r0, ror ip
    36d8:	00002715 	andeq	r2, r0, r5, lsl r7
    36dc:	00007c74 	andeq	r7, r0, r4, ror ip
    36e0:	00002d15 	andeq	r2, r0, r5, lsl sp
    36e4:	00007c78 	andeq	r7, r0, r8, ror ip
    36e8:	00002f15 	andeq	r2, r0, r5, lsl pc
    36ec:	00007c7c 	andeq	r7, r0, ip, ror ip
    36f0:	00003d15 	andeq	r3, r0, r5, lsl sp
    36f4:	00007c80 	andeq	r7, r0, r0, lsl #25
    36f8:	00004115 	andeq	r4, r0, r5, lsl r1
    36fc:	00007c84 	andeq	r7, r0, r4, lsl #25
    3700:	00004615 	andeq	r4, r0, r5, lsl r6
    3704:	00007c88 	andeq	r7, r0, r8, lsl #25
    3708:	00004915 	andeq	r4, r0, r5, lsl r9
    370c:	00007c8c 	andeq	r7, r0, ip, lsl #25
    3710:	00005115 	andeq	r5, r0, r5, lsl r1
    3714:	00007c90 	muleq	r0, r0, ip
    3718:	00005415 	andeq	r5, r0, r5, lsl r4
    371c:	00007c94 	muleq	r0, r4, ip
    3720:	00005915 	andeq	r5, r0, r5, lsl r9
    3724:	00007c98 	muleq	r0, r8, ip
    3728:	00005a15 	andeq	r5, r0, r5, lsl sl
    372c:	00007c9c 	muleq	r0, ip, ip
    3730:	00005c15 	andeq	r5, r0, r5, lsl ip
    3734:	00007ca0 	andeq	r7, r0, r0, lsr #25
    3738:	00005d15 	andeq	r5, r0, r5, lsl sp
    373c:	00007ca4 	andeq	r7, r0, r4, lsr #25
    3740:	00005e15 	andeq	r5, r0, r5, lsl lr
    3744:	00007ca8 	andeq	r7, r0, r8, lsr #25
    3748:	00006015 	andeq	r6, r0, r5, lsl r0
    374c:	00007cac 	andeq	r7, r0, ip, lsr #25
    3750:	00006215 	andeq	r6, r0, r5, lsl r2
    3754:	00007cb0 			@ <UNDEFINED> instruction: 0x00007cb0
    3758:	00006415 	andeq	r6, r0, r5, lsl r4
    375c:	00007cb4 			@ <UNDEFINED> instruction: 0x00007cb4
    3760:	00006815 	andeq	r6, r0, r5, lsl r8
    3764:	00007cb8 			@ <UNDEFINED> instruction: 0x00007cb8
    3768:	00006b15 	andeq	r6, r0, r5, lsl fp
    376c:	00007cbc 			@ <UNDEFINED> instruction: 0x00007cbc
    3770:	00006e15 	andeq	r6, r0, r5, lsl lr
    3774:	00007cc0 	andeq	r7, r0, r0, asr #25
    3778:	00007115 	andeq	r7, r0, r5, lsl r1
    377c:	00007cc4 	andeq	r7, r0, r4, asr #25
    3780:	00007815 	andeq	r7, r0, r5, lsl r8
    3784:	00007cc8 	andeq	r7, r0, r8, asr #25
    3788:	00007d15 	andeq	r7, r0, r5, lsl sp
    378c:	00007cd0 	ldrdeq	r7, [r0], -r0
    3790:	00008215 	andeq	r8, r0, r5, lsl r2
    3794:	00007cd4 	ldrdeq	r7, [r0], -r4
    3798:	00008415 	andeq	r8, r0, r5, lsl r4
    379c:	00007cd8 	ldrdeq	r7, [r0], -r8
    37a0:	00008515 	andeq	r8, r0, r5, lsl r5
    37a4:	00007cdc 	ldrdeq	r7, [r0], -ip
    37a8:	00008d15 	andeq	r8, r0, r5, lsl sp
    37ac:	00007ce0 	andeq	r7, r0, r0, ror #25
    37b0:	00008e15 	andeq	r8, r0, r5, lsl lr
    37b4:	00007ce4 	andeq	r7, r0, r4, ror #25
    37b8:	00008f15 	andeq	r8, r0, r5, lsl pc
    37bc:	00007ce8 	andeq	r7, r0, r8, ror #25
    37c0:	00009215 	andeq	r9, r0, r5, lsl r2

Disassembly of section .rel.plt:

000037c4 <.rel.plt>:
    37c4:	00007bd4 	ldrdeq	r7, [r0], -r4
    37c8:	00000316 	andeq	r0, r0, r6, lsl r3
    37cc:	00007bd8 	ldrdeq	r7, [r0], -r8
    37d0:	00000416 	andeq	r0, r0, r6, lsl r4
    37d4:	00007bdc 	ldrdeq	r7, [r0], -ip
    37d8:	00000d16 	andeq	r0, r0, r6, lsl sp
    37dc:	00007be0 	andeq	r7, r0, r0, ror #23
    37e0:	00001716 	andeq	r1, r0, r6, lsl r7
    37e4:	00007be4 	andeq	r7, r0, r4, ror #23
    37e8:	00001816 	andeq	r1, r0, r6, lsl r8
    37ec:	00007be8 	andeq	r7, r0, r8, ror #23
    37f0:	00001a16 	andeq	r1, r0, r6, lsl sl
    37f4:	00007bec 	andeq	r7, r0, ip, ror #23
    37f8:	00001e16 	andeq	r1, r0, r6, lsl lr
    37fc:	00007bf0 	strdeq	r7, [r0], -r0
    3800:	00002216 	andeq	r2, r0, r6, lsl r2
    3804:	00007bf4 	strdeq	r7, [r0], -r4
    3808:	00003216 	andeq	r3, r0, r6, lsl r2
    380c:	00007bf8 	strdeq	r7, [r0], -r8
    3810:	00003716 	andeq	r3, r0, r6, lsl r7
    3814:	00007bfc 	strdeq	r7, [r0], -ip
    3818:	00003816 	andeq	r3, r0, r6, lsl r8
    381c:	00007c00 	andeq	r7, r0, r0, lsl #24
    3820:	00003c16 	andeq	r3, r0, r6, lsl ip
    3824:	00007c04 	andeq	r7, r0, r4, lsl #24
    3828:	00003e16 	andeq	r3, r0, r6, lsl lr
    382c:	00007c08 	andeq	r7, r0, r8, lsl #24
    3830:	00004216 	andeq	r4, r0, r6, lsl r2
    3834:	00007c0c 	andeq	r7, r0, ip, lsl #24
    3838:	00004716 	andeq	r4, r0, r6, lsl r7
    383c:	00007c10 	andeq	r7, r0, r0, lsl ip
    3840:	00004816 	andeq	r4, r0, r6, lsl r8
    3844:	00007c14 	andeq	r7, r0, r4, lsl ip
    3848:	00004a16 	andeq	r4, r0, r6, lsl sl
    384c:	00007c18 	andeq	r7, r0, r8, lsl ip
    3850:	00005516 	andeq	r5, r0, r6, lsl r5
    3854:	00007c1c 	andeq	r7, r0, ip, lsl ip
    3858:	00005716 	andeq	r5, r0, r6, lsl r7
    385c:	00007c20 	andeq	r7, r0, r0, lsr #24
    3860:	00005b16 	andeq	r5, r0, r6, lsl fp
    3864:	00007c24 	andeq	r7, r0, r4, lsr #24
    3868:	00006616 	andeq	r6, r0, r6, lsl r6
    386c:	00007c28 	andeq	r7, r0, r8, lsr #24
    3870:	00007216 	andeq	r7, r0, r6, lsl r2
    3874:	00007c2c 	andeq	r7, r0, ip, lsr #24
    3878:	00007516 	andeq	r7, r0, r6, lsl r5
    387c:	00007c30 	andeq	r7, r0, r0, lsr ip
    3880:	00007f16 	andeq	r7, r0, r6, lsl pc
    3884:	00007c34 	andeq	r7, r0, r4, lsr ip
    3888:	00008016 	andeq	r8, r0, r6, lsl r0
    388c:	00007c38 	andeq	r7, r0, r8, lsr ip
    3890:	00008116 	andeq	r8, r0, r6, lsl r1
    3894:	00007c3c 	andeq	r7, r0, ip, lsr ip
    3898:	00008716 	andeq	r8, r0, r6, lsl r7
    389c:	00007c40 	andeq	r7, r0, r0, asr #24
    38a0:	00009016 	andeq	r9, r0, r6, lsl r0
    38a4:	00007c44 	andeq	r7, r0, r4, asr #24
    38a8:	00009116 	andeq	r9, r0, r6, lsl r1

Disassembly of section .plt:

000038ac <.plt>:
    38ac:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    38b0:	e59fe004 	ldr	lr, [pc, #4]	@ 38bc <.plt+0x10>
    38b4:	e08fe00e 	add	lr, pc, lr
    38b8:	e5bef008 	ldr	pc, [lr, #8]!
    38bc:	0000430c 	andeq	r4, r0, ip, lsl #6

000038c0 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)@plt>:
    38c0:	e28fc600 	add	ip, pc, #0, 12
    38c4:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    38c8:	e5bcf30c 	ldr	pc, [ip, #780]!	@ 0x30c

000038cc <ElementCount::get_indices(std::span<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> const, 4294967295u>, std::span<ElementCount::Indices, 4294967295u>)@plt>:
    38cc:	e28fc600 	add	ip, pc, #0, 12
    38d0:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    38d4:	e5bcf304 	ldr	pc, [ip, #772]!	@ 0x304

000038d8 <memmove@plt>:
    38d8:	e28fc600 	add	ip, pc, #0, 12
    38dc:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    38e0:	e5bcf2fc 	ldr	pc, [ip, #764]!	@ 0x2fc

000038e4 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)@plt>:
    38e4:	e28fc600 	add	ip, pc, #0, 12
    38e8:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    38ec:	e5bcf2f4 	ldr	pc, [ip, #756]!	@ 0x2f4

000038f0 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)@plt>:
    38f0:	e28fc600 	add	ip, pc, #0, 12
    38f4:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    38f8:	e5bcf2ec 	ldr	pc, [ip, #748]!	@ 0x2ec

000038fc <memcpy@plt>:
    38fc:	e28fc600 	add	ip, pc, #0, 12
    3900:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3904:	e5bcf2e4 	ldr	pc, [ip, #740]!	@ 0x2e4

00003908 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)@plt>:
    3908:	e28fc600 	add	ip, pc, #0, 12
    390c:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3910:	e5bcf2dc 	ldr	pc, [ip, #732]!	@ 0x2dc

00003914 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)@plt>:
    3914:	e28fc600 	add	ip, pc, #0, 12
    3918:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    391c:	e5bcf2d4 	ldr	pc, [ip, #724]!	@ 0x2d4

00003920 <std::__throw_length_error(char const*)@plt>:
    3920:	e28fc600 	add	ip, pc, #0, 12
    3924:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3928:	e5bcf2cc 	ldr	pc, [ip, #716]!	@ 0x2cc

0000392c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)@plt>:
    392c:	e28fc600 	add	ip, pc, #0, 12
    3930:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3934:	e5bcf2c4 	ldr	pc, [ip, #708]!	@ 0x2c4

00003938 <rack::engine::Param::getValue()@plt>:
    3938:	e28fc600 	add	ip, pc, #0, 12
    393c:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3940:	e5bcf2bc 	ldr	pc, [ip, #700]!	@ 0x2bc

00003944 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)@plt>:
    3944:	e28fc600 	add	ip, pc, #0, 12
    3948:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    394c:	e5bcf2b4 	ldr	pc, [ip, #692]!	@ 0x2b4

00003950 <operator delete(void*, unsigned int)@plt>:
    3950:	e28fc600 	add	ip, pc, #0, 12
    3954:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3958:	e5bcf2ac 	ldr	pc, [ip, #684]!	@ 0x2ac

0000395c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)@plt>:
    395c:	e28fc600 	add	ip, pc, #0, 12
    3960:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3964:	e5bcf2a4 	ldr	pc, [ip, #676]!	@ 0x2a4

00003968 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)@plt>:
    3968:	e28fc600 	add	ip, pc, #0, 12
    396c:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3970:	e5bcf29c 	ldr	pc, [ip, #668]!	@ 0x29c

00003974 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)@plt>:
    3974:	e28fc600 	add	ip, pc, #0, 12
    3978:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    397c:	e5bcf294 	ldr	pc, [ip, #660]!	@ 0x294

00003980 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)@plt>:
    3980:	e28fc600 	add	ip, pc, #0, 12
    3984:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3988:	e5bcf28c 	ldr	pc, [ip, #652]!	@ 0x28c

0000398c <rack::engine::Module::~Module()@plt>:
    398c:	e28fc600 	add	ip, pc, #0, 12
    3990:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3994:	e5bcf284 	ldr	pc, [ip, #644]!	@ 0x284

00003998 <memcmp@plt>:
    3998:	e28fc600 	add	ip, pc, #0, 12
    399c:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39a0:	e5bcf27c 	ldr	pc, [ip, #636]!	@ 0x27c

000039a4 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)@plt>:
    39a4:	e28fc600 	add	ip, pc, #0, 12
    39a8:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39ac:	e5bcf274 	ldr	pc, [ip, #628]!	@ 0x274

000039b0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)@plt>:
    39b0:	e28fc600 	add	ip, pc, #0, 12
    39b4:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39b8:	e5bcf26c 	ldr	pc, [ip, #620]!	@ 0x26c

000039bc <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)@plt>:
    39bc:	e28fc600 	add	ip, pc, #0, 12
    39c0:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39c4:	e5bcf264 	ldr	pc, [ip, #612]!	@ 0x264

000039c8 <VCVModuleWrapper::VCVModuleWrapper()@plt>:
    39c8:	e28fc600 	add	ip, pc, #0, 12
    39cc:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39d0:	e5bcf25c 	ldr	pc, [ip, #604]!	@ 0x25c

000039d4 <operator new(unsigned int)@plt>:
    39d4:	e28fc600 	add	ip, pc, #0, 12
    39d8:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39dc:	e5bcf254 	ldr	pc, [ip, #596]!	@ 0x254

000039e0 <rack::engine::Module::~Module()@plt>:
    39e0:	e28fc600 	add	ip, pc, #0, 12
    39e4:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39e8:	e5bcf24c 	ldr	pc, [ip, #588]!	@ 0x24c

000039ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)@plt>:
    39ec:	e28fc600 	add	ip, pc, #0, 12
    39f0:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    39f4:	e5bcf244 	ldr	pc, [ip, #580]!	@ 0x244

000039f8 <strlen@plt>:
    39f8:	e28fc600 	add	ip, pc, #0, 12
    39fc:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3a00:	e5bcf23c 	ldr	pc, [ip, #572]!	@ 0x23c

00003a04 <__aeabi_atexit@plt>:
    3a04:	e28fc600 	add	ip, pc, #0, 12
    3a08:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3a0c:	e5bcf234 	ldr	pc, [ip, #564]!	@ 0x234

00003a10 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)@plt>:
    3a10:	e28fc600 	add	ip, pc, #0, 12
    3a14:	e28cca04 	add	ip, ip, #4, 20	@ 0x4000
    3a18:	e5bcf22c 	ldr	pc, [ip, #556]!	@ 0x22c

Disassembly of section .text:

00003a1c <rack::widget::Widget::onDragStart(rack::event::DragStartEvent const&)>:
	MetaModule::Element element;

	virtual ~Widget() = default;

	virtual void onDragStart(const event::DragStart &e) {
	}
    3a1c:	e12fff1e 	bx	lr

00003a20 <rack::widget::Widget::onDragMove(rack::event::DragMoveEvent const&)>:
	virtual void onDragMove(const event::DragMove &e) {
	}
    3a20:	e12fff1e 	bx	lr

00003a24 <rack::widget::Widget::onDragEnd(rack::event::DragEndEvent const&)>:
	virtual void onDragEnd(const event::DragEnd &e) {
	}
    3a24:	e12fff1e 	bx	lr

00003a28 <rack::widget::Widget::onDoubleClick(rack::event::DoubleClick const&)>:
	virtual void onDoubleClick(const event::DoubleClick &e) {
	}
    3a28:	e12fff1e 	bx	lr

00003a2c <rack::widget::Widget::onAction(rack::event::ActionEvent const&)>:
	virtual void onAction(const event::ActionEvent &e) {
	}
    3a2c:	e12fff1e 	bx	lr

00003a30 <rack::widget::Widget::onHover(rack::event::HoverEvent const&)>:
	virtual void onHover(const HoverEvent &e) {
	}
    3a30:	e12fff1e 	bx	lr

00003a34 <rack::widget::Widget::onHoverKey(rack::event::HoverKeyEvent const&)>:
	virtual void onHoverKey(const HoverKeyEvent &e) {
	}
    3a34:	e12fff1e 	bx	lr

00003a38 <rack::widget::Widget::onButton(rack::event::ButtonEvent const&)>:
	virtual void onButton(const ButtonEvent &e) {
	}
    3a38:	e12fff1e 	bx	lr

00003a3c <rack::widget::Widget::onDragHover(rack::event::DragHoverEvent const&)>:
	virtual void onDragHover(const DragHoverEvent &e) {
	}
    3a3c:	e12fff1e 	bx	lr

00003a40 <rack::widget::Widget::step()>:
	virtual void step() {
	}
    3a40:	e12fff1e 	bx	lr

00003a44 <rack::widget::Widget::draw(rack::DrawArgs const&)>:
	virtual void draw(const DrawArgs &) {
	}
    3a44:	e12fff1e 	bx	lr

00003a48 <rack::widget::Widget::drawLayer(rack::DrawArgs const&, int)>:
	virtual void drawLayer(const DrawArgs &, int) {
	}
    3a48:	e12fff1e 	bx	lr

00003a4c <rack::widget::Widget::onDoubleClick(rack::event::DoubleClickEvent const&)>:
	virtual void onDoubleClick(const DoubleClickEvent &e) {
	}
    3a4c:	e12fff1e 	bx	lr

00003a50 <CoreProcessor::set_alt_param(int, float)>:
	virtual float get_output(const int output_id) const = 0;
	virtual float get_led_brightness(const int led_id) const {
		return 0;
	}
	virtual void set_alt_param(const int alt_param_id, const float val) {
	}
    3a50:	e12fff1e 	bx	lr

00003a54 <CoreProcessor::get_alt_param_value(unsigned int, float)>:

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
      : _M_len{traits_type::length(__str)},
    3a54:	e3a02001 	mov	r2, #1
    3a58:	e5802000 	str	r2, [r0]
	_M_str{__str}
    3a5c:	e59f2008 	ldr	r2, [pc, #8]	@ 3a6c <CoreProcessor::get_alt_param_value(unsigned int, float)+0x18>
    3a60:	e08f2002 	add	r2, pc, r2
    3a64:	e5802004 	str	r2, [r0, #4]
	}
	virtual void mark_output_patched(const int output_id) {
	}
	virtual constexpr std::string_view get_alt_param_value(unsigned alt_id, float val) {
		return "-";
	}
    3a68:	e12fff1e 	bx	lr
    3a6c:	00002ec4 	andeq	r2, r0, r4, asr #29

00003a70 <rack::engine::Module::processBypass(VCVModuleWrapper::ProcessArgs const&)>:
	Expander &getExpander(int side) {
		return side ? rightExpander : leftExpander;
	}

	virtual void processBypass(const ProcessArgs &args) {
	}
    3a70:	e12fff1e 	bx	lr

00003a74 <rack::engine::Module::toJson()>:

	virtual json_t *toJson() {
		return nullptr;
	}
    3a74:	e3a00000 	mov	r0, #0
    3a78:	e12fff1e 	bx	lr

00003a7c <rack::engine::Module::fromJson(json_t*)>:
	virtual void fromJson(json_t *rootJ) {
	}
    3a7c:	e12fff1e 	bx	lr

00003a80 <rack::engine::Module::paramsToJson()>:
	virtual json_t *paramsToJson() {
		return nullptr;
	}
    3a80:	e3a00000 	mov	r0, #0
    3a84:	e12fff1e 	bx	lr

00003a88 <rack::engine::Module::paramsFromJson(json_t*)>:
	virtual void paramsFromJson(json_t *rootJ) {
	}
    3a88:	e12fff1e 	bx	lr

00003a8c <rack::engine::Module::dataToJson()>:
	virtual json_t *dataToJson() {
		return nullptr;
	}
    3a8c:	e3a00000 	mov	r0, #0
    3a90:	e12fff1e 	bx	lr

00003a94 <rack::engine::Module::dataFromJson(json_t*)>:
	virtual void dataFromJson(json_t *rootJ) {
	}
    3a94:	e12fff1e 	bx	lr

00003a98 <rack::engine::Module::onAdd(rack::engine::Module::AddEvent const&)>:
	// Events
	///////////////////////

	struct AddEvent {};
	virtual void onAdd(const AddEvent &e) {
	}
    3a98:	e12fff1e 	bx	lr

00003a9c <rack::engine::Module::onRemove(rack::engine::Module::RemoveEvent const&)>:

	struct RemoveEvent {};
	virtual void onRemove(const RemoveEvent &e) {
	}
    3a9c:	e12fff1e 	bx	lr

00003aa0 <rack::engine::Module::onBypass(rack::engine::Module::BypassEvent const&)>:

	struct BypassEvent {};
	virtual void onBypass(const BypassEvent &e) {
	}
    3aa0:	e12fff1e 	bx	lr

00003aa4 <rack::engine::Module::onUnBypass(rack::engine::Module::UnBypassEvent const&)>:

	struct UnBypassEvent {};
	virtual void onUnBypass(const UnBypassEvent &e) {
	}
    3aa4:	e12fff1e 	bx	lr

00003aa8 <rack::engine::Module::onPortChange(rack::engine::Module::PortChangeEvent const&)>:
		bool connecting;
		Port::Type type;
		int portId;
	};
	virtual void onPortChange(const PortChangeEvent &e) {
	}
    3aa8:	e12fff1e 	bx	lr

00003aac <rack::engine::Module::onSampleRateChange()>:
	struct SampleRateChangeEvent {
		float sampleRate;
		float sampleTime;
	};
	virtual void onSampleRateChange() {
	}
    3aac:	e12fff1e 	bx	lr

00003ab0 <rack::engine::Module::onSampleRateChange(rack::engine::Module::SampleRateChangeEvent const&)>:
	virtual void onSampleRateChange(const SampleRateChangeEvent &e) {
    3ab0:	e92d4010 	push	{r4, lr}
		onSampleRateChange();
    3ab4:	e5903000 	ldr	r3, [r0]
    3ab8:	e5933078 	ldr	r3, [r3, #120]	@ 0x78
    3abc:	e12fff33 	blx	r3
	}
    3ac0:	e8bd8010 	pop	{r4, pc}

00003ac4 <rack::engine::Module::set_samplerate(float)>:
	void set_samplerate(float sampleRate) final {
    3ac4:	e52de004 	push	{lr}		@ (str lr, [sp, #-4]!)
    3ac8:	e24dd00c 	sub	sp, sp, #12
		onSampleRateChange(SampleRateChangeEvent{sampleRate, 1.f / sampleRate});
    3acc:	e5903000 	ldr	r3, [r0]
    3ad0:	e593307c 	ldr	r3, [r3, #124]	@ 0x7c
    3ad4:	ed8d0a00 	vstr	s0, [sp]
    3ad8:	eeb77a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
    3adc:	eec77a00 	vdiv.f32	s15, s14, s0
    3ae0:	edcd7a01 	vstr	s15, [sp, #4]
    3ae4:	e1a0100d 	mov	r1, sp
    3ae8:	e12fff33 	blx	r3
	}
    3aec:	e28dd00c 	add	sp, sp, #12
    3af0:	e49df004 	pop	{pc}		@ (ldr pc, [sp], #4)

00003af4 <rack::engine::Module::onExpanderChange(rack::engine::Module::ExpanderChangeEvent const&)>:

	struct ExpanderChangeEvent {
		bool side;
	};
	virtual void onExpanderChange(const ExpanderChangeEvent &e) {
	}
    3af4:	e12fff1e 	bx	lr

00003af8 <rack::engine::Module::onReset()>:

	struct ResetEvent {};
	virtual void onReset() {
	}
    3af8:	e12fff1e 	bx	lr

00003afc <rack::engine::Module::onReset(rack::engine::Module::ResetEvent const&)>:
	virtual void onReset(const ResetEvent &e) {
	}
    3afc:	e12fff1e 	bx	lr

00003b00 <rack::engine::Module::onRandomize(rack::engine::Module::RandomizeEvent const&)>:

	struct RandomizeEvent {};
	virtual void onRandomize(const RandomizeEvent &e) {
	}
    3b00:	e12fff1e 	bx	lr

00003b04 <rack::engine::Module::onRandomize()>:

	virtual void onRandomize() {
	}
    3b04:	e12fff1e 	bx	lr

00003b08 <rack::engine::Module::onSave(rack::engine::Module::SaveEvent const&)>:

	struct SaveEvent {};
	virtual void onSave(const SaveEvent &e) {
	}
    3b08:	e12fff1e 	bx	lr

00003b0c <rack::engine::Module::onSetMaster(rack::engine::Module::SetMasterEvent const&)>:

	struct SetMasterEvent {};
	virtual void onSetMaster(const SetMasterEvent &e) {
	}
    3b0c:	e12fff1e 	bx	lr

00003b10 <rack::engine::Module::onUnsetMaster(rack::engine::Module::UnsetMasterEvent const&)>:

	struct UnsetMasterEvent {};
	virtual void onUnsetMaster(const UnsetMasterEvent &e) {
	}
    3b10:	e12fff1e 	bx	lr

00003b14 <rack::widget::Widget::~Widget()>:
	virtual ~Widget() = default;
    3b14:	e12fff1e 	bx	lr

00003b18 <rack::ModuleWidget::appendContextMenu(rack::ui::Menu*)>:
		// Makes same assumption as VCV Rack: That we are given ownership of the widget pointer
		delete output;
	}

	virtual void appendContextMenu(ui::Menu *) {
	}
    3b18:	e12fff1e 	bx	lr

00003b1c <rack::ModuleWidget::draw(rack::DrawArgs const&)>:
	app::PortWidget *getOutput(int portId) {
		return nullptr;
	}

	void draw(const DrawArgs &args) override {
	}
    3b1c:	e12fff1e 	bx	lr

00003b20 <rack::ModuleWidget::drawLayer(rack::DrawArgs const&, int)>:

	void drawLayer(const DrawArgs &args, int layer) override {
	}
    3b20:	e12fff1e 	bx	lr

00003b24 <rack::widget::Widget::~Widget()>:
    3b24:	e92d4010 	push	{r4, lr}
    3b28:	e1a04000 	mov	r4, r0
    3b2c:	e3a0108c 	mov	r1, #140	@ 0x8c
    3b30:	ebffff86 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3b34:	e1a00004 	mov	r0, r4
    3b38:	e8bd8010 	pop	{r4, pc}

00003b3c <std::vector<NVGcolor, std::allocator<NVGcolor> >::~vector()>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    3b3c:	e92d4010 	push	{r4, lr}
    3b40:	e1a04000 	mov	r4, r0
	_M_deallocate(_M_impl._M_start,
    3b44:	e5900000 	ldr	r0, [r0]
	if (__p)
    3b48:	e3500000 	cmp	r0, #0
    3b4c:	0a000002 	beq	3b5c <std::vector<NVGcolor, std::allocator<NVGcolor> >::~vector()+0x20>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3b50:	e5941008 	ldr	r1, [r4, #8]
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3b54:	e0411000 	sub	r1, r1, r0
    3b58:	ebffff7c 	bl	3950 <operator delete(void*, unsigned int)@plt>
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3b5c:	e1a00004 	mov	r0, r4
    3b60:	e8bd8010 	pop	{r4, pc}

00003b64 <TestModule::process(VCVModuleWrapper::ProcessArgs const&)>:
	TestModule() {
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
		// configParam(KNOB1_PARAM, -1.0, 1.0, 0.0, "First Knob");
	}

	void process(const ProcessArgs &args) override {
    3b64:	e92d4010 	push	{r4, lr}
    3b68:	ed2d8b02 	vpush	{d8}
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      reference
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
      {
	__glibcxx_requires_subscript(__n);
	return *(this->_M_impl._M_start + __n);
    3b6c:	e590401c 	ldr	r4, [r0, #28]
		// voltages[channel] = v;
		voltage = v;
	}

	float getVoltage(int chan = 0) const {
		return voltage;
    3b70:	e5903010 	ldr	r3, [r0, #16]
    3b74:	ed938a00 	vldr	s16, [r3]
		outputs[OUT1_OUTPUT].setVoltage(inputs[A1_INPUT].getVoltage() + params[KNOB1_PARAM].getValue());
    3b78:	e5900004 	ldr	r0, [r0, #4]
    3b7c:	ebffff6d 	bl	3938 <rack::engine::Param::getValue()@plt>
    3b80:	ee300a08 	vadd.f32	s0, s0, s16
		voltage = v;
    3b84:	ed840a00 	vstr	s0, [r4]
	}
    3b88:	ecbd8b02 	vpop	{d8}
    3b8c:	e8bd8010 	pop	{r4, pc}

00003b90 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
    3b90:	e92d4010 	push	{r4, lr}
    3b94:	e1a04000 	mov	r4, r0
	_M_deallocate(_M_impl._M_start,
    3b98:	e5900000 	ldr	r0, [r0]
	if (__p)
    3b9c:	e3500000 	cmp	r0, #0
    3ba0:	0a000002 	beq	3bb0 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::~vector()+0x20>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3ba4:	e5941008 	ldr	r1, [r4, #8]
    3ba8:	e0411000 	sub	r1, r1, r0
    3bac:	ebffff67 	bl	3950 <operator delete(void*, unsigned int)@plt>
      }
    3bb0:	e1a00004 	mov	r0, r4
    3bb4:	e8bd8010 	pop	{r4, pc}

00003bb8 <std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::~vector()>:
      ~vector() _GLIBCXX_NOEXCEPT
    3bb8:	e92d4010 	push	{r4, lr}
    3bbc:	e1a04000 	mov	r4, r0
	_M_deallocate(_M_impl._M_start,
    3bc0:	e5900000 	ldr	r0, [r0]
	if (__p)
    3bc4:	e3500000 	cmp	r0, #0
    3bc8:	0a000002 	beq	3bd8 <std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::~vector()+0x20>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3bcc:	e5941008 	ldr	r1, [r4, #8]
    3bd0:	e0411000 	sub	r1, r1, r0
    3bd4:	ebffff5d 	bl	3950 <operator delete(void*, unsigned int)@plt>
      }
    3bd8:	e1a00004 	mov	r0, r4
    3bdc:	e8bd8010 	pop	{r4, pc}

00003be0 <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()>:
       *  things.  The _Base dtor only erases the elements, and note
       *  that if the elements themselves are pointers, the pointed-to
       *  memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      ~list() = default;
    3be0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    3be4:	e1a06000 	mov	r6, r0
    void
    _List_base<_Tp, _Alloc>::
    _M_clear() _GLIBCXX_NOEXCEPT
    {
      typedef _List_node<_Tp>  _Node;
      __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
    3be8:	e5904000 	ldr	r4, [r0]
      while (__cur != &_M_impl._M_node)
    3bec:	e1540000 	cmp	r4, r0
    3bf0:	0a000011 	beq	3c3c <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()+0x5c>
    3bf4:	e3a07020 	mov	r7, #32
    3bf8:	ea000004 	b	3c10 <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()+0x30>
    3bfc:	e1a01007 	mov	r1, r7
    3c00:	e1a00005 	mov	r0, r5
    3c04:	ebffff51 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3c08:	e1540006 	cmp	r4, r6
    3c0c:	0a00000a 	beq	3c3c <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()+0x5c>
    3c10:	e1a05004 	mov	r5, r4
	{
	  _Node* __tmp = static_cast<_Node*>(__cur);
	  __cur = __tmp->_M_next;
    3c14:	e5944000 	ldr	r4, [r4]
      { _M_string_length = __length; }

      _GLIBCXX20_CONSTEXPR
      pointer
      _M_data() const
      { return _M_dataplus._M_p; }
    3c18:	e1a03005 	mov	r3, r5
    3c1c:	e5b30008 	ldr	r0, [r3, #8]!
      _GLIBCXX20_CONSTEXPR
      const_pointer
      _M_local_data() const
      {
#if __cplusplus >= 201103L
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    3c20:	e2833008 	add	r3, r3, #8

      _GLIBCXX20_CONSTEXPR
      bool
      _M_is_local() const
      {
	if (_M_data() == _M_local_data())
    3c24:	e1500003 	cmp	r0, r3
    3c28:	0afffff3 	beq	3bfc <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()+0x1c>
      }

      _GLIBCXX20_CONSTEXPR
      void
      _M_destroy(size_type __size) throw()
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3c2c:	e5951010 	ldr	r1, [r5, #16]
    3c30:	e2811001 	add	r1, r1, #1
    3c34:	ebffff45 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3c38:	eaffffef 	b	3bfc <std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~list()+0x1c>
    3c3c:	e1a00006 	mov	r0, r6
    3c40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00003c44 <TestWidget::~TestWidget()>:
};

struct TestWidget : ModuleWidget {
    3c44:	e92d4010 	push	{r4, lr}
    3c48:	e1a04000 	mov	r4, r0
    3c4c:	e59f3078 	ldr	r3, [pc, #120]	@ 3ccc <TestWidget::~TestWidget()+0x88>
    3c50:	e08f3003 	add	r3, pc, r3
struct ModuleWidget : widget::Widget {
    3c54:	e59f2074 	ldr	r2, [pc, #116]	@ 3cd0 <TestWidget::~TestWidget()+0x8c>
    3c58:	e7933002 	ldr	r3, [r3, r2]
    3c5c:	e2833008 	add	r3, r3, #8
    3c60:	e5803000 	str	r3, [r0]
	_M_deallocate(_M_impl._M_start,
    3c64:	e5900140 	ldr	r0, [r0, #320]	@ 0x140
	if (__p)
    3c68:	e3500000 	cmp	r0, #0
    3c6c:	0a000002 	beq	3c7c <TestWidget::~TestWidget()+0x38>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3c70:	e5941148 	ldr	r1, [r4, #328]	@ 0x148
    3c74:	e0411000 	sub	r1, r1, r0
    3c78:	ebffff34 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3c7c:	e5940134 	ldr	r0, [r4, #308]	@ 0x134
	if (__p)
    3c80:	e3500000 	cmp	r0, #0
    3c84:	0a000002 	beq	3c94 <TestWidget::~TestWidget()+0x50>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3c88:	e594113c 	ldr	r1, [r4, #316]	@ 0x13c
    3c8c:	e0411000 	sub	r1, r1, r0
    3c90:	ebffff2e 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3c94:	e5940128 	ldr	r0, [r4, #296]	@ 0x128
	if (__p)
    3c98:	e3500000 	cmp	r0, #0
    3c9c:	0a000002 	beq	3cac <TestWidget::~TestWidget()+0x68>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3ca0:	e5941130 	ldr	r1, [r4, #304]	@ 0x130
    3ca4:	e0411000 	sub	r1, r1, r0
    3ca8:	ebffff28 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3cac:	e594011c 	ldr	r0, [r4, #284]	@ 0x11c
	if (__p)
    3cb0:	e3500000 	cmp	r0, #0
    3cb4:	0a000002 	beq	3cc4 <TestWidget::~TestWidget()+0x80>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3cb8:	e5941124 	ldr	r1, [r4, #292]	@ 0x124
    3cbc:	e0411000 	sub	r1, r1, r0
    3cc0:	ebffff22 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3cc4:	e1a00004 	mov	r0, r4
    3cc8:	e8bd8010 	pop	{r4, pc}
    3ccc:	00003f70 	andeq	r3, r0, r0, ror pc
    3cd0:	000000dc 	ldrdeq	r0, [r0], -ip

00003cd4 <rack::ModuleWidget::~ModuleWidget()>:
    3cd4:	e92d4010 	push	{r4, lr}
    3cd8:	e1a04000 	mov	r4, r0
    3cdc:	e59f3078 	ldr	r3, [pc, #120]	@ 3d5c <rack::ModuleWidget::~ModuleWidget()+0x88>
    3ce0:	e08f3003 	add	r3, pc, r3
    3ce4:	e59f2074 	ldr	r2, [pc, #116]	@ 3d60 <rack::ModuleWidget::~ModuleWidget()+0x8c>
    3ce8:	e7933002 	ldr	r3, [r3, r2]
    3cec:	e2833008 	add	r3, r3, #8
    3cf0:	e5803000 	str	r3, [r0]
	_M_deallocate(_M_impl._M_start,
    3cf4:	e5900140 	ldr	r0, [r0, #320]	@ 0x140
	if (__p)
    3cf8:	e3500000 	cmp	r0, #0
    3cfc:	0a000002 	beq	3d0c <rack::ModuleWidget::~ModuleWidget()+0x38>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3d00:	e5941148 	ldr	r1, [r4, #328]	@ 0x148
    3d04:	e0411000 	sub	r1, r1, r0
    3d08:	ebffff10 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3d0c:	e5940134 	ldr	r0, [r4, #308]	@ 0x134
	if (__p)
    3d10:	e3500000 	cmp	r0, #0
    3d14:	0a000002 	beq	3d24 <rack::ModuleWidget::~ModuleWidget()+0x50>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3d18:	e594113c 	ldr	r1, [r4, #316]	@ 0x13c
    3d1c:	e0411000 	sub	r1, r1, r0
    3d20:	ebffff0a 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3d24:	e5940128 	ldr	r0, [r4, #296]	@ 0x128
	if (__p)
    3d28:	e3500000 	cmp	r0, #0
    3d2c:	0a000002 	beq	3d3c <rack::ModuleWidget::~ModuleWidget()+0x68>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3d30:	e5941130 	ldr	r1, [r4, #304]	@ 0x130
    3d34:	e0411000 	sub	r1, r1, r0
    3d38:	ebffff04 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3d3c:	e594011c 	ldr	r0, [r4, #284]	@ 0x11c
	if (__p)
    3d40:	e3500000 	cmp	r0, #0
    3d44:	0a000002 	beq	3d54 <rack::ModuleWidget::~ModuleWidget()+0x80>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3d48:	e5941124 	ldr	r1, [r4, #292]	@ 0x124
    3d4c:	e0411000 	sub	r1, r1, r0
    3d50:	ebfffefe 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3d54:	e1a00004 	mov	r0, r4
    3d58:	e8bd8010 	pop	{r4, pc}
    3d5c:	00003ee0 	andeq	r3, r0, r0, ror #29
    3d60:	000000dc 	ldrdeq	r0, [r0], -ip

00003d64 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()>:

      /**
       *  @brief  Destroy the string instance.
       */
      _GLIBCXX20_CONSTEXPR
      ~basic_string()
    3d64:	e92d4010 	push	{r4, lr}
    3d68:	e1a04000 	mov	r4, r0
      { return _M_dataplus._M_p; }
    3d6c:	e1a03000 	mov	r3, r0
    3d70:	e4930008 	ldr	r0, [r3], #8
	if (_M_data() == _M_local_data())
    3d74:	e1500003 	cmp	r0, r3
    3d78:	0a000002 	beq	3d88 <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()+0x24>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3d7c:	e5941008 	ldr	r1, [r4, #8]
    3d80:	e2811001 	add	r1, r1, #1
    3d84:	ebfffef1 	bl	3950 <operator delete(void*, unsigned int)@plt>
      { _M_dispose(); }
    3d88:	e1a00004 	mov	r0, r4
    3d8c:	e8bd8010 	pop	{r4, pc}

00003d90 <rack::ModuleWidget::~ModuleWidget()>:
    3d90:	e92d4010 	push	{r4, lr}
    3d94:	e1a04000 	mov	r4, r0
    3d98:	e59f3084 	ldr	r3, [pc, #132]	@ 3e24 <rack::ModuleWidget::~ModuleWidget()+0x94>
    3d9c:	e08f3003 	add	r3, pc, r3
    3da0:	e59f2080 	ldr	r2, [pc, #128]	@ 3e28 <rack::ModuleWidget::~ModuleWidget()+0x98>
    3da4:	e7933002 	ldr	r3, [r3, r2]
    3da8:	e2833008 	add	r3, r3, #8
    3dac:	e5803000 	str	r3, [r0]
	_M_deallocate(_M_impl._M_start,
    3db0:	e5900140 	ldr	r0, [r0, #320]	@ 0x140
	if (__p)
    3db4:	e3500000 	cmp	r0, #0
    3db8:	0a000002 	beq	3dc8 <rack::ModuleWidget::~ModuleWidget()+0x38>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3dbc:	e5941148 	ldr	r1, [r4, #328]	@ 0x148
    3dc0:	e0411000 	sub	r1, r1, r0
    3dc4:	ebfffee1 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3dc8:	e5940134 	ldr	r0, [r4, #308]	@ 0x134
	if (__p)
    3dcc:	e3500000 	cmp	r0, #0
    3dd0:	0a000002 	beq	3de0 <rack::ModuleWidget::~ModuleWidget()+0x50>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3dd4:	e594113c 	ldr	r1, [r4, #316]	@ 0x13c
    3dd8:	e0411000 	sub	r1, r1, r0
    3ddc:	ebfffedb 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3de0:	e5940128 	ldr	r0, [r4, #296]	@ 0x128
	if (__p)
    3de4:	e3500000 	cmp	r0, #0
    3de8:	0a000002 	beq	3df8 <rack::ModuleWidget::~ModuleWidget()+0x68>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3dec:	e5941130 	ldr	r1, [r4, #304]	@ 0x130
    3df0:	e0411000 	sub	r1, r1, r0
    3df4:	ebfffed5 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3df8:	e594011c 	ldr	r0, [r4, #284]	@ 0x11c
	if (__p)
    3dfc:	e3500000 	cmp	r0, #0
    3e00:	0a000002 	beq	3e10 <rack::ModuleWidget::~ModuleWidget()+0x80>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e04:	e5941124 	ldr	r1, [r4, #292]	@ 0x124
    3e08:	e0411000 	sub	r1, r1, r0
    3e0c:	ebfffecf 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3e10:	e3a01f53 	mov	r1, #332	@ 0x14c
    3e14:	e1a00004 	mov	r0, r4
    3e18:	ebfffecc 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3e1c:	e1a00004 	mov	r0, r4
    3e20:	e8bd8010 	pop	{r4, pc}
    3e24:	00003e24 	andeq	r3, r0, r4, lsr #28
    3e28:	000000dc 	ldrdeq	r0, [r0], -ip

00003e2c <TestWidget::~TestWidget()>:
    3e2c:	e92d4010 	push	{r4, lr}
    3e30:	e1a04000 	mov	r4, r0
    3e34:	e59f3084 	ldr	r3, [pc, #132]	@ 3ec0 <TestWidget::~TestWidget()+0x94>
    3e38:	e08f3003 	add	r3, pc, r3
    3e3c:	e59f2080 	ldr	r2, [pc, #128]	@ 3ec4 <TestWidget::~TestWidget()+0x98>
    3e40:	e7933002 	ldr	r3, [r3, r2]
    3e44:	e2833008 	add	r3, r3, #8
    3e48:	e5803000 	str	r3, [r0]
	_M_deallocate(_M_impl._M_start,
    3e4c:	e5900140 	ldr	r0, [r0, #320]	@ 0x140
	if (__p)
    3e50:	e3500000 	cmp	r0, #0
    3e54:	0a000002 	beq	3e64 <TestWidget::~TestWidget()+0x38>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e58:	e5941148 	ldr	r1, [r4, #328]	@ 0x148
    3e5c:	e0411000 	sub	r1, r1, r0
    3e60:	ebfffeba 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3e64:	e5940134 	ldr	r0, [r4, #308]	@ 0x134
	if (__p)
    3e68:	e3500000 	cmp	r0, #0
    3e6c:	0a000002 	beq	3e7c <TestWidget::~TestWidget()+0x50>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e70:	e594113c 	ldr	r1, [r4, #316]	@ 0x13c
    3e74:	e0411000 	sub	r1, r1, r0
    3e78:	ebfffeb4 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3e7c:	e5940128 	ldr	r0, [r4, #296]	@ 0x128
	if (__p)
    3e80:	e3500000 	cmp	r0, #0
    3e84:	0a000002 	beq	3e94 <TestWidget::~TestWidget()+0x68>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e88:	e5941130 	ldr	r1, [r4, #304]	@ 0x130
    3e8c:	e0411000 	sub	r1, r1, r0
    3e90:	ebfffeae 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    3e94:	e594011c 	ldr	r0, [r4, #284]	@ 0x11c
	if (__p)
    3e98:	e3500000 	cmp	r0, #0
    3e9c:	0a000002 	beq	3eac <TestWidget::~TestWidget()+0x80>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3ea0:	e5941124 	ldr	r1, [r4, #292]	@ 0x124
    3ea4:	e0411000 	sub	r1, r1, r0
    3ea8:	ebfffea8 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3eac:	e3a01f53 	mov	r1, #332	@ 0x14c
    3eb0:	e1a00004 	mov	r0, r4
    3eb4:	ebfffea5 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3eb8:	e1a00004 	mov	r0, r4
    3ebc:	e8bd8010 	pop	{r4, pc}
    3ec0:	00003d88 	andeq	r3, r0, r8, lsl #27
    3ec4:	000000dc 	ldrdeq	r0, [r0], -ip

00003ec8 <rack::engine::Module::~Module()>:
struct Module : VCVModuleWrapper {
    3ec8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3ecc:	e1a06000 	mov	r6, r0
    3ed0:	e59f7238 	ldr	r7, [pc, #568]	@ 4110 <rack::engine::Module::~Module()+0x248>
    3ed4:	e08f7007 	add	r7, pc, r7
    3ed8:	e59f3234 	ldr	r3, [pc, #564]	@ 4114 <rack::engine::Module::~Module()+0x24c>
    3edc:	e7973003 	ldr	r3, [r7, r3]
    3ee0:	e2833008 	add	r3, r3, #8
    3ee4:	e5803000 	str	r3, [r0]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3ee8:	e5904078 	ldr	r4, [r0, #120]	@ 0x78
    3eec:	e590507c 	ldr	r5, [r0, #124]	@ 0x7c
    {
      template<typename _ForwardIterator>
	static _GLIBCXX20_CONSTEXPR void
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
	{
	  for (; __first != __last; ++__first)
    3ef0:	e1540005 	cmp	r4, r5
    3ef4:	1a00000d 	bne	3f30 <rack::engine::Module::~Module()+0x68>
	_M_deallocate(_M_impl._M_start,
    3ef8:	e5960078 	ldr	r0, [r6, #120]	@ 0x78
	if (__p)
    3efc:	e3500000 	cmp	r0, #0
    3f00:	0a000002 	beq	3f10 <rack::engine::Module::~Module()+0x48>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3f04:	e5961080 	ldr	r1, [r6, #128]	@ 0x80
    3f08:	e0411000 	sub	r1, r1, r0
    3f0c:	ebfffe8f 	bl	3950 <operator delete(void*, unsigned int)@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3f10:	e596506c 	ldr	r5, [r6, #108]	@ 0x6c
    3f14:	e5968070 	ldr	r8, [r6, #112]	@ 0x70
    3f18:	e1550008 	cmp	r5, r8
    3f1c:	0a000021 	beq	3fa8 <rack::engine::Module::~Module()+0xe0>
      {
	static_assert(!is_void<_Tp>::value,
		      "can't delete pointer to incomplete type");
	static_assert(sizeof(_Tp)>0,
		      "can't delete pointer to incomplete type");
	delete __ptr;
    3f20:	e3a0903c 	mov	r9, #60	@ 0x3c
    3f24:	ea000010 	b	3f6c <rack::engine::Module::~Module()+0xa4>
    3f28:	e1550004 	cmp	r5, r4
    3f2c:	0afffff1 	beq	3ef8 <rack::engine::Module::~Module()+0x30>
      ~unique_ptr() noexcept
      {
	static_assert(__is_invocable<deleter_type&, pointer>::value,
		      "unique_ptr's deleter must be invocable with a pointer");
	auto& __ptr = _M_t._M_ptr();
	if (__ptr != nullptr)
    3f30:	e4940004 	ldr	r0, [r4], #4
    3f34:	e3500000 	cmp	r0, #0
    3f38:	0afffffa 	beq	3f28 <rack::engine::Module::~Module()+0x60>
	delete __ptr;
    3f3c:	e5903000 	ldr	r3, [r0]
    3f40:	e5933004 	ldr	r3, [r3, #4]
    3f44:	e12fff33 	blx	r3
      }
    3f48:	eafffff6 	b	3f28 <rack::engine::Module::~Module()+0x60>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3f4c:	e5941014 	ldr	r1, [r4, #20]
    3f50:	e2811001 	add	r1, r1, #1
    3f54:	ebfffe7d 	bl	3950 <operator delete(void*, unsigned int)@plt>
	delete __ptr;
    3f58:	e1a01009 	mov	r1, r9
    3f5c:	e1a00004 	mov	r0, r4
    3f60:	ebfffe7a 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3f64:	e1580005 	cmp	r8, r5
    3f68:	0a00000e 	beq	3fa8 <rack::engine::Module::~Module()+0xe0>
	if (__ptr != nullptr)
    3f6c:	e4954004 	ldr	r4, [r5], #4
    3f70:	e3540000 	cmp	r4, #0
    3f74:	0afffffa 	beq	3f64 <rack::engine::Module::~Module()+0x9c>
      { return _M_dataplus._M_p; }
    3f78:	e5940024 	ldr	r0, [r4, #36]	@ 0x24
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    3f7c:	e284302c 	add	r3, r4, #44	@ 0x2c
	if (_M_data() == _M_local_data())
    3f80:	e1500003 	cmp	r0, r3
    3f84:	0a000002 	beq	3f94 <rack::engine::Module::~Module()+0xcc>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    3f88:	e594102c 	ldr	r1, [r4, #44]	@ 0x2c
    3f8c:	e2811001 	add	r1, r1, #1
    3f90:	ebfffe6e 	bl	3950 <operator delete(void*, unsigned int)@plt>
      { return _M_dataplus._M_p; }
    3f94:	e594000c 	ldr	r0, [r4, #12]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    3f98:	e2843014 	add	r3, r4, #20
	if (_M_data() == _M_local_data())
    3f9c:	e1500003 	cmp	r0, r3
    3fa0:	1affffe9 	bne	3f4c <rack::engine::Module::~Module()+0x84>
    3fa4:	eaffffeb 	b	3f58 <rack::engine::Module::~Module()+0x90>
	_M_deallocate(_M_impl._M_start,
    3fa8:	e596006c 	ldr	r0, [r6, #108]	@ 0x6c
	if (__p)
    3fac:	e3500000 	cmp	r0, #0
    3fb0:	0a000002 	beq	3fc0 <rack::engine::Module::~Module()+0xf8>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3fb4:	e5961074 	ldr	r1, [r6, #116]	@ 0x74
    3fb8:	e0411000 	sub	r1, r1, r0
    3fbc:	ebfffe63 	bl	3950 <operator delete(void*, unsigned int)@plt>
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3fc0:	e5965060 	ldr	r5, [r6, #96]	@ 0x60
    3fc4:	e5968064 	ldr	r8, [r6, #100]	@ 0x64
    3fc8:	e1550008 	cmp	r5, r8
    3fcc:	0a000018 	beq	4034 <rack::engine::Module::~Module()+0x16c>
	delete __ptr;
    3fd0:	e3a0903c 	mov	r9, #60	@ 0x3c
    3fd4:	ea000004 	b	3fec <rack::engine::Module::~Module()+0x124>
    3fd8:	e1a01009 	mov	r1, r9
    3fdc:	e1a00004 	mov	r0, r4
    3fe0:	ebfffe5a 	bl	3950 <operator delete(void*, unsigned int)@plt>
    3fe4:	e1580005 	cmp	r8, r5
    3fe8:	0a000011 	beq	4034 <rack::engine::Module::~Module()+0x16c>
	if (__ptr != nullptr)
    3fec:	e4954004 	ldr	r4, [r5], #4
    3ff0:	e3540000 	cmp	r4, #0
    3ff4:	0afffffa 	beq	3fe4 <rack::engine::Module::~Module()+0x11c>
      { return _M_dataplus._M_p; }
    3ff8:	e5940024 	ldr	r0, [r4, #36]	@ 0x24
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    3ffc:	e284302c 	add	r3, r4, #44	@ 0x2c
	if (_M_data() == _M_local_data())
    4000:	e1500003 	cmp	r0, r3
    4004:	0a000002 	beq	4014 <rack::engine::Module::~Module()+0x14c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4008:	e594102c 	ldr	r1, [r4, #44]	@ 0x2c
    400c:	e2811001 	add	r1, r1, #1
    4010:	ebfffe4e 	bl	3950 <operator delete(void*, unsigned int)@plt>
      { return _M_dataplus._M_p; }
    4014:	e594000c 	ldr	r0, [r4, #12]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4018:	e2843014 	add	r3, r4, #20
	if (_M_data() == _M_local_data())
    401c:	e1500003 	cmp	r0, r3
    4020:	0affffec 	beq	3fd8 <rack::engine::Module::~Module()+0x110>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4024:	e5941014 	ldr	r1, [r4, #20]
    4028:	e2811001 	add	r1, r1, #1
    402c:	ebfffe47 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4030:	eaffffe8 	b	3fd8 <rack::engine::Module::~Module()+0x110>
	_M_deallocate(_M_impl._M_start,
    4034:	e5960060 	ldr	r0, [r6, #96]	@ 0x60
	if (__p)
    4038:	e3500000 	cmp	r0, #0
    403c:	0a000002 	beq	404c <rack::engine::Module::~Module()+0x184>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4040:	e5961068 	ldr	r1, [r6, #104]	@ 0x68
    4044:	e0411000 	sub	r1, r1, r0
    4048:	ebfffe40 	bl	3950 <operator delete(void*, unsigned int)@plt>
struct ParamScale {
	float range;
	float offset;
};

struct VCVModuleWrapper : CoreProcessor {
    404c:	e59f30c4 	ldr	r3, [pc, #196]	@ 4118 <rack::engine::Module::~Module()+0x250>
    4050:	e7973003 	ldr	r3, [r7, r3]
    4054:	e2833008 	add	r3, r3, #8
    4058:	e5863000 	str	r3, [r6]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    405c:	e5964034 	ldr	r4, [r6, #52]	@ 0x34
    4060:	e5965038 	ldr	r5, [r6, #56]	@ 0x38
    4064:	e1540005 	cmp	r4, r5
    4068:	1a000024 	bne	4100 <rack::engine::Module::~Module()+0x238>
	_M_deallocate(_M_impl._M_start,
    406c:	e5960034 	ldr	r0, [r6, #52]	@ 0x34
	if (__p)
    4070:	e3500000 	cmp	r0, #0
    4074:	0a000002 	beq	4084 <rack::engine::Module::~Module()+0x1bc>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4078:	e596103c 	ldr	r1, [r6, #60]	@ 0x3c
    407c:	e0411000 	sub	r1, r1, r0
    4080:	ebfffe32 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    4084:	e5960028 	ldr	r0, [r6, #40]	@ 0x28
	if (__p)
    4088:	e3500000 	cmp	r0, #0
    408c:	0a000002 	beq	409c <rack::engine::Module::~Module()+0x1d4>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4090:	e5961030 	ldr	r1, [r6, #48]	@ 0x30
    4094:	e0411000 	sub	r1, r1, r0
    4098:	ebfffe2c 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    409c:	e596001c 	ldr	r0, [r6, #28]
	if (__p)
    40a0:	e3500000 	cmp	r0, #0
    40a4:	0a000002 	beq	40b4 <rack::engine::Module::~Module()+0x1ec>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    40a8:	e5961024 	ldr	r1, [r6, #36]	@ 0x24
    40ac:	e0411000 	sub	r1, r1, r0
    40b0:	ebfffe26 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    40b4:	e5960010 	ldr	r0, [r6, #16]
	if (__p)
    40b8:	e3500000 	cmp	r0, #0
    40bc:	0a000002 	beq	40cc <rack::engine::Module::~Module()+0x204>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    40c0:	e5961018 	ldr	r1, [r6, #24]
    40c4:	e0411000 	sub	r1, r1, r0
    40c8:	ebfffe20 	bl	3950 <operator delete(void*, unsigned int)@plt>
	_M_deallocate(_M_impl._M_start,
    40cc:	e5960004 	ldr	r0, [r6, #4]
	if (__p)
    40d0:	e3500000 	cmp	r0, #0
    40d4:	0a000002 	beq	40e4 <rack::engine::Module::~Module()+0x21c>
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    40d8:	e596100c 	ldr	r1, [r6, #12]
    40dc:	e0411000 	sub	r1, r1, r0
    40e0:	ebfffe1a 	bl	3950 <operator delete(void*, unsigned int)@plt>
    40e4:	e1a00006 	mov	r0, r6
    40e8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
	delete __ptr;
    40ec:	e5903000 	ldr	r3, [r0]
    40f0:	e5933004 	ldr	r3, [r3, #4]
    40f4:	e12fff33 	blx	r3
    40f8:	e1550004 	cmp	r5, r4
    40fc:	0affffda 	beq	406c <rack::engine::Module::~Module()+0x1a4>
	if (__ptr != nullptr)
    4100:	e4940004 	ldr	r0, [r4], #4
    4104:	e3500000 	cmp	r0, #0
    4108:	1afffff7 	bne	40ec <rack::engine::Module::~Module()+0x224>
    410c:	eafffff9 	b	40f8 <rack::engine::Module::~Module()+0x230>
    4110:	00003cec 	andeq	r3, r0, ip, ror #25
    4114:	000000b0 	strheq	r0, [r0], -r0	@ <UNPREDICTABLE>
    4118:	00000088 	andeq	r0, r0, r8, lsl #1

0000411c <TestModule::~TestModule()>:
struct TestModule : Module {
    411c:	e92d4010 	push	{r4, lr}
    4120:	e1a04000 	mov	r4, r0
    4124:	e59f301c 	ldr	r3, [pc, #28]	@ 4148 <TestModule::~TestModule()+0x2c>
    4128:	e08f3003 	add	r3, pc, r3
    412c:	e59f2018 	ldr	r2, [pc, #24]	@ 414c <TestModule::~TestModule()+0x30>
    4130:	e7933002 	ldr	r3, [r3, r2]
    4134:	e2833008 	add	r3, r3, #8
    4138:	e5803000 	str	r3, [r0]
    413c:	ebfffe27 	bl	39e0 <rack::engine::Module::~Module()@plt>
    4140:	e1a00004 	mov	r0, r4
    4144:	e8bd8010 	pop	{r4, pc}
    4148:	00003a98 	muleq	r0, r8, sl
    414c:	000000a8 	andeq	r0, r0, r8, lsr #1

00004150 <TestModule::~TestModule()>:
    4150:	e92d4010 	push	{r4, lr}
    4154:	e1a04000 	mov	r4, r0
    4158:	e59f3028 	ldr	r3, [pc, #40]	@ 4188 <TestModule::~TestModule()+0x38>
    415c:	e08f3003 	add	r3, pc, r3
    4160:	e59f2024 	ldr	r2, [pc, #36]	@ 418c <TestModule::~TestModule()+0x3c>
    4164:	e7933002 	ldr	r3, [r3, r2]
    4168:	e2833008 	add	r3, r3, #8
    416c:	e5803000 	str	r3, [r0]
    4170:	ebfffe1a 	bl	39e0 <rack::engine::Module::~Module()@plt>
    4174:	e3a010b8 	mov	r1, #184	@ 0xb8
    4178:	e1a00004 	mov	r0, r4
    417c:	ebfffdf3 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4180:	e1a00004 	mov	r0, r4
    4184:	e8bd8010 	pop	{r4, pc}
    4188:	00003a64 	andeq	r3, r0, r4, ror #20
    418c:	000000a8 	andeq	r0, r0, r8, lsr #1

00004190 <rack::engine::Module::~Module()>:
    4190:	e92d4010 	push	{r4, lr}
    4194:	e1a04000 	mov	r4, r0
    4198:	ebfffdfb 	bl	398c <rack::engine::Module::~Module()@plt>
    419c:	e3a010b8 	mov	r1, #184	@ 0xb8
    41a0:	e1a00004 	mov	r0, r4
    41a4:	ebfffde9 	bl	3950 <operator delete(void*, unsigned int)@plt>
    41a8:	e1a00004 	mov	r0, r4
    41ac:	e8bd8010 	pop	{r4, pc}

000041b0 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    41b0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    41b4:	e2514000 	subs	r4, r1, #0
    41b8:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    41bc:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    41c0:	e5906004 	ldr	r6, [r0, #4]
    41c4:	e5908000 	ldr	r8, [r0]
    41c8:	e046b008 	sub	fp, r6, r8
    41cc:	e1a0714b 	asr	r7, fp, #2
	{
	  const size_type __size = size();
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
					 - this->_M_impl._M_finish);

	  if (__size > max_size() || __navail > max_size() - __size)
    41d0:	e30f2fff 	movw	r2, #65535	@ 0xffff
    41d4:	e3412fff 	movt	r2, #8191	@ 0x1fff
    41d8:	e0422007 	sub	r2, r2, r7
					 - this->_M_impl._M_finish);
    41dc:	e5903008 	ldr	r3, [r0, #8]
    41e0:	e0433006 	sub	r3, r3, r6
	    __builtin_unreachable();

	  if (__navail >= __n)
    41e4:	e1540143 	cmp	r4, r3, asr #2
    41e8:	8a000008 	bhi	4210 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0x60>
      template<typename _ForwardIterator, typename _Size>
	_GLIBCXX20_CONSTEXPR
        static _ForwardIterator
        __uninit_default_n(_ForwardIterator __first, _Size __n)
        {
	  _ForwardIterator __cur = __first;
    41ec:	e1a02006 	mov	r2, r6
    41f0:	e1a03004 	mov	r3, r4
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    41f4:	e3a01000 	mov	r1, #0
    41f8:	e4821004 	str	r1, [r2], #4
	  __try
	    {
	      for (; __n > 0; --__n, (void) ++__cur)
    41fc:	e2533001 	subs	r3, r3, #1
    4200:	1afffffc 	bne	41f8 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0x48>
    4204:	e0864104 	add	r4, r6, r4, lsl #2
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
    4208:	e5854004 	str	r4, [r5, #4]
    420c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      // Called by _M_fill_insert, _M_insert_aux etc.
      _GLIBCXX20_CONSTEXPR
      size_type
      _M_check_len(size_type __n, const char* __s) const
      {
	if (max_size() - size() < __n)
    4210:	e1520004 	cmp	r2, r4
    4214:	3a00000b 	bcc	4248 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0x98>
	  __throw_length_error(__N(__s));

	const size_type __len = size() + (std::max)(size(), __n);
    4218:	e1540007 	cmp	r4, r7
    421c:	20873004 	addcs	r3, r7, r4
    4220:	30873007 	addcc	r3, r7, r7
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4224:	e1570003 	cmp	r7, r3
    4228:	8a000009 	bhi	4254 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xa4>
    422c:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
    4230:	e153000a 	cmp	r3, sl
    4234:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4238:	e3530000 	cmp	r3, #0
    423c:	03a09000 	moveq	r9, #0
    4240:	0a000007 	beq	4264 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xb4>
    4244:	ea000003 	b	4258 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xa8>
	  __throw_length_error(__N(__s));
    4248:	e59f0080 	ldr	r0, [pc, #128]	@ 42d0 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0x120>
    424c:	e08f0000 	add	r0, pc, r0
    4250:	ebfffdb2 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4254:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4258:	e1a0010a 	lsl	r0, sl, #2
    425c:	ebfffddc 	bl	39d4 <operator new(unsigned int)@plt>
    4260:	e1a09000 	mov	r9, r0
	      pointer __new_start(this->_M_allocate(__len));
	      if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
		{
		  __try
		    {
		      std::__uninitialized_default_n_a(__new_start + __size,
    4264:	e089200b 	add	r2, r9, fp
    4268:	e1a03004 	mov	r3, r4
    426c:	e3a01000 	mov	r1, #0
    4270:	e4821004 	str	r1, [r2], #4
    4274:	e2533001 	subs	r3, r3, #1
    4278:	1afffffc 	bne	4270 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xc0>
      typedef typename iterator_traits<_ForwardIterator>::value_type
	_ValueType2;
      static_assert(std::is_same<_ValueType, _ValueType2>::value,
	  "relocation is only possible for values of the same type");
      _ForwardIterator __cur = __result;
      for (; __first != __last; ++__first, (void)++__cur)
    427c:	e1580006 	cmp	r8, r6
    4280:	0a000005 	beq	429c <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xec>
    4284:	e1a02009 	mov	r2, r9
    4288:	e1a03008 	mov	r3, r8
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    428c:	e4931004 	ldr	r1, [r3], #4
    4290:	e4821004 	str	r1, [r2], #4
    4294:	e1560003 	cmp	r6, r3
    4298:	1afffffb 	bne	428c <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0xdc>
	if (__p)
    429c:	e3580000 	cmp	r8, #0
    42a0:	0a000003 	beq	42b4 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)+0x104>
		  std::_Destroy(__old_start, __old_finish,
				_M_get_Tp_allocator());
		}
	      _GLIBCXX_ASAN_ANNOTATE_REINIT;
	      _M_deallocate(__old_start,
			    this->_M_impl._M_end_of_storage - __old_start);
    42a4:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    42a8:	e0411008 	sub	r1, r1, r8
    42ac:	e1a00008 	mov	r0, r8
    42b0:	ebfffda6 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    42b4:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    42b8:	e0844007 	add	r4, r4, r7
    42bc:	e0894104 	add	r4, r9, r4, lsl #2
    42c0:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    42c4:	e089910a 	add	r9, r9, sl, lsl #2
    42c8:	e5859008 	str	r9, [r5, #8]
	    }
	}
    }
    42cc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    42d0:	000026dc 	ldrdeq	r2, [r0], -ip

000042d4 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    42d4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    42d8:	e2514000 	subs	r4, r1, #0
    42dc:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    42e0:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    42e4:	e5906004 	ldr	r6, [r0, #4]
    42e8:	e5908000 	ldr	r8, [r0]
    42ec:	e046b008 	sub	fp, r6, r8
    42f0:	e1a071cb 	asr	r7, fp, #3
	  if (__size > max_size() || __navail > max_size() - __size)
    42f4:	e30f2fff 	movw	r2, #65535	@ 0xffff
    42f8:	e3402fff 	movt	r2, #4095	@ 0xfff
    42fc:	e0422007 	sub	r2, r2, r7
					 - this->_M_impl._M_finish);
    4300:	e5903008 	ldr	r3, [r0, #8]
    4304:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    4308:	e15401c3 	cmp	r4, r3, asr #3
    430c:	8a00000b 	bhi	4340 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0x6c>
	      for (; __n > 0; --__n, (void) ++__cur)
    4310:	e2863008 	add	r3, r6, #8
    4314:	e1a02004 	mov	r2, r4
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4318:	e3a00000 	mov	r0, #0
    431c:	e3a01000 	mov	r1, #0
    4320:	e5030008 	str	r0, [r3, #-8]
    4324:	e5431004 	strb	r1, [r3, #-4]
    4328:	e2833008 	add	r3, r3, #8
    432c:	e2522001 	subs	r2, r2, #1
    4330:	1afffffa 	bne	4320 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0x4c>
    4334:	e0864184 	add	r4, r6, r4, lsl #3
	      this->_M_impl._M_finish =
    4338:	e5854004 	str	r4, [r5, #4]
    433c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    4340:	e1520004 	cmp	r2, r4
    4344:	3a00000b 	bcc	4378 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xa4>
	const size_type __len = size() + (std::max)(size(), __n);
    4348:	e1540007 	cmp	r4, r7
    434c:	20873004 	addcs	r3, r7, r4
    4350:	30873007 	addcc	r3, r7, r7
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4354:	e1570003 	cmp	r7, r3
    4358:	8a000009 	bhi	4384 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xb0>
    435c:	e3e0a20f 	mvn	sl, #-268435456	@ 0xf0000000
    4360:	e153000a 	cmp	r3, sl
    4364:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4368:	e3530000 	cmp	r3, #0
    436c:	03a09000 	moveq	r9, #0
    4370:	0a000007 	beq	4394 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xc0>
    4374:	ea000003 	b	4388 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xb4>
	  __throw_length_error(__N(__s));
    4378:	e59f0098 	ldr	r0, [pc, #152]	@ 4418 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0x144>
    437c:	e08f0000 	add	r0, pc, r0
    4380:	ebfffd66 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4384:	e3e0a20f 	mvn	sl, #-268435456	@ 0xf0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4388:	e1a0018a 	lsl	r0, sl, #3
    438c:	ebfffd90 	bl	39d4 <operator new(unsigned int)@plt>
    4390:	e1a09000 	mov	r9, r0
    4394:	e28b3008 	add	r3, fp, #8
    4398:	e0893003 	add	r3, r9, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    439c:	e1a02004 	mov	r2, r4
    43a0:	e3a00000 	mov	r0, #0
    43a4:	e3a01000 	mov	r1, #0
    43a8:	e5030008 	str	r0, [r3, #-8]
    43ac:	e5431004 	strb	r1, [r3, #-4]
    43b0:	e2833008 	add	r3, r3, #8
    43b4:	e2522001 	subs	r2, r2, #1
    43b8:	1afffffa 	bne	43a8 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xd4>
      for (; __first != __last; ++__first, (void)++__cur)
    43bc:	e1580006 	cmp	r8, r6
    43c0:	0a000007 	beq	43e4 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0x110>
    43c4:	e2892008 	add	r2, r9, #8
    43c8:	e1a03008 	mov	r3, r8
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    43cc:	e8930003 	ldm	r3, {r0, r1}
    43d0:	e9020003 	stmdb	r2, {r0, r1}
    43d4:	e2833008 	add	r3, r3, #8
    43d8:	e2822008 	add	r2, r2, #8
    43dc:	e1560003 	cmp	r6, r3
    43e0:	1afffff9 	bne	43cc <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0xf8>
	if (__p)
    43e4:	e3580000 	cmp	r8, #0
    43e8:	0a000003 	beq	43fc <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)+0x128>
			    this->_M_impl._M_end_of_storage - __old_start);
    43ec:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    43f0:	e0411008 	sub	r1, r1, r8
    43f4:	e1a00008 	mov	r0, r8
    43f8:	ebfffd54 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    43fc:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    4400:	e0844007 	add	r4, r4, r7
    4404:	e0894184 	add	r4, r9, r4, lsl #3
    4408:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    440c:	e089918a 	add	r9, r9, sl, lsl #3
    4410:	e5859008 	str	r9, [r5, #8]
    }
    4414:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4418:	000025ac 	andeq	r2, r0, ip, lsr #11

0000441c <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    441c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    4420:	e2514000 	subs	r4, r1, #0
    4424:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4428:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    442c:	e5906004 	ldr	r6, [r0, #4]
    4430:	e5908000 	ldr	r8, [r0]
    4434:	e046b008 	sub	fp, r6, r8
    4438:	e1a071cb 	asr	r7, fp, #3
	  if (__size > max_size() || __navail > max_size() - __size)
    443c:	e30f2fff 	movw	r2, #65535	@ 0xffff
    4440:	e3402fff 	movt	r2, #4095	@ 0xfff
    4444:	e0422007 	sub	r2, r2, r7
					 - this->_M_impl._M_finish);
    4448:	e5903008 	ldr	r3, [r0, #8]
    444c:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    4450:	e15401c3 	cmp	r4, r3, asr #3
    4454:	8a00000b 	bhi	4488 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0x6c>
	      for (; __n > 0; --__n, (void) ++__cur)
    4458:	e2863008 	add	r3, r6, #8
    445c:	e1a02004 	mov	r2, r4
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4460:	e3a00000 	mov	r0, #0
    4464:	e3a01000 	mov	r1, #0
    4468:	e5030008 	str	r0, [r3, #-8]
    446c:	e5431004 	strb	r1, [r3, #-4]
    4470:	e2833008 	add	r3, r3, #8
    4474:	e2522001 	subs	r2, r2, #1
    4478:	1afffffa 	bne	4468 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0x4c>
    447c:	e0864184 	add	r4, r6, r4, lsl #3
	      this->_M_impl._M_finish =
    4480:	e5854004 	str	r4, [r5, #4]
    4484:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    4488:	e1520004 	cmp	r2, r4
    448c:	3a00000b 	bcc	44c0 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xa4>
	const size_type __len = size() + (std::max)(size(), __n);
    4490:	e1540007 	cmp	r4, r7
    4494:	20873004 	addcs	r3, r7, r4
    4498:	30873007 	addcc	r3, r7, r7
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    449c:	e1570003 	cmp	r7, r3
    44a0:	8a000009 	bhi	44cc <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xb0>
    44a4:	e3e0a20f 	mvn	sl, #-268435456	@ 0xf0000000
    44a8:	e153000a 	cmp	r3, sl
    44ac:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    44b0:	e3530000 	cmp	r3, #0
    44b4:	03a09000 	moveq	r9, #0
    44b8:	0a000007 	beq	44dc <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xc0>
    44bc:	ea000003 	b	44d0 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xb4>
	  __throw_length_error(__N(__s));
    44c0:	e59f0098 	ldr	r0, [pc, #152]	@ 4560 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0x144>
    44c4:	e08f0000 	add	r0, pc, r0
    44c8:	ebfffd14 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    44cc:	e3e0a20f 	mvn	sl, #-268435456	@ 0xf0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    44d0:	e1a0018a 	lsl	r0, sl, #3
    44d4:	ebfffd3e 	bl	39d4 <operator new(unsigned int)@plt>
    44d8:	e1a09000 	mov	r9, r0
    44dc:	e28b3008 	add	r3, fp, #8
    44e0:	e0893003 	add	r3, r9, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    44e4:	e1a02004 	mov	r2, r4
    44e8:	e3a00000 	mov	r0, #0
    44ec:	e3a01000 	mov	r1, #0
    44f0:	e5030008 	str	r0, [r3, #-8]
    44f4:	e5431004 	strb	r1, [r3, #-4]
    44f8:	e2833008 	add	r3, r3, #8
    44fc:	e2522001 	subs	r2, r2, #1
    4500:	1afffffa 	bne	44f0 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xd4>
      for (; __first != __last; ++__first, (void)++__cur)
    4504:	e1580006 	cmp	r8, r6
    4508:	0a000007 	beq	452c <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0x110>
    450c:	e2892008 	add	r2, r9, #8
    4510:	e1a03008 	mov	r3, r8
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    4514:	e8930003 	ldm	r3, {r0, r1}
    4518:	e9020003 	stmdb	r2, {r0, r1}
    451c:	e2833008 	add	r3, r3, #8
    4520:	e2822008 	add	r2, r2, #8
    4524:	e1560003 	cmp	r6, r3
    4528:	1afffff9 	bne	4514 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0xf8>
	if (__p)
    452c:	e3580000 	cmp	r8, #0
    4530:	0a000003 	beq	4544 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)+0x128>
			    this->_M_impl._M_end_of_storage - __old_start);
    4534:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4538:	e0411008 	sub	r1, r1, r8
    453c:	e1a00008 	mov	r0, r8
    4540:	ebfffd02 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    4544:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    4548:	e0844007 	add	r4, r4, r7
    454c:	e0894184 	add	r4, r9, r4, lsl #3
    4550:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    4554:	e089918a 	add	r9, r9, sl, lsl #3
    4558:	e5859008 	str	r9, [r5, #8]
    }
    455c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4560:	00002464 	andeq	r2, r0, r4, ror #8

00004564 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    4564:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    4568:	e2514000 	subs	r4, r1, #0
    456c:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4570:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4574:	e5906004 	ldr	r6, [r0, #4]
    4578:	e5908000 	ldr	r8, [r0]
    457c:	e046b008 	sub	fp, r6, r8
    4580:	e1a0714b 	asr	r7, fp, #2
	  if (__size > max_size() || __navail > max_size() - __size)
    4584:	e30f2fff 	movw	r2, #65535	@ 0xffff
    4588:	e3412fff 	movt	r2, #8191	@ 0x1fff
    458c:	e0422007 	sub	r2, r2, r7
					 - this->_M_impl._M_finish);
    4590:	e5903008 	ldr	r3, [r0, #8]
    4594:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    4598:	e1540143 	cmp	r4, r3, asr #2
    459c:	8a000008 	bhi	45c4 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0x60>
	  _ForwardIterator __cur = __first;
    45a0:	e1a02006 	mov	r2, r6
    45a4:	e1a03004 	mov	r3, r4
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    45a8:	e3a01000 	mov	r1, #0
    45ac:	e4821004 	str	r1, [r2], #4
	      for (; __n > 0; --__n, (void) ++__cur)
    45b0:	e2533001 	subs	r3, r3, #1
    45b4:	1afffffc 	bne	45ac <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0x48>
    45b8:	e0864104 	add	r4, r6, r4, lsl #2
	      this->_M_impl._M_finish =
    45bc:	e5854004 	str	r4, [r5, #4]
    45c0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    45c4:	e1520004 	cmp	r2, r4
    45c8:	3a00000b 	bcc	45fc <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0x98>
	const size_type __len = size() + (std::max)(size(), __n);
    45cc:	e1540007 	cmp	r4, r7
    45d0:	20873004 	addcs	r3, r7, r4
    45d4:	30873007 	addcc	r3, r7, r7
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    45d8:	e1570003 	cmp	r7, r3
    45dc:	8a000009 	bhi	4608 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xa4>
    45e0:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
    45e4:	e153000a 	cmp	r3, sl
    45e8:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    45ec:	e3530000 	cmp	r3, #0
    45f0:	03a09000 	moveq	r9, #0
    45f4:	0a000007 	beq	4618 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xb4>
    45f8:	ea000003 	b	460c <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xa8>
	  __throw_length_error(__N(__s));
    45fc:	e59f0080 	ldr	r0, [pc, #128]	@ 4684 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0x120>
    4600:	e08f0000 	add	r0, pc, r0
    4604:	ebfffcc5 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4608:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    460c:	e1a0010a 	lsl	r0, sl, #2
    4610:	ebfffcef 	bl	39d4 <operator new(unsigned int)@plt>
    4614:	e1a09000 	mov	r9, r0
		      std::__uninitialized_default_n_a(__new_start + __size,
    4618:	e089200b 	add	r2, r9, fp
    461c:	e1a03004 	mov	r3, r4
    4620:	e3a01000 	mov	r1, #0
    4624:	e4821004 	str	r1, [r2], #4
    4628:	e2533001 	subs	r3, r3, #1
    462c:	1afffffc 	bne	4624 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xc0>
      for (; __first != __last; ++__first, (void)++__cur)
    4630:	e1580006 	cmp	r8, r6
    4634:	0a000005 	beq	4650 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xec>
    4638:	e1a02009 	mov	r2, r9
    463c:	e1a03008 	mov	r3, r8
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    4640:	e4931004 	ldr	r1, [r3], #4
    4644:	e4821004 	str	r1, [r2], #4
    4648:	e1560003 	cmp	r6, r3
    464c:	1afffffb 	bne	4640 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0xdc>
	if (__p)
    4650:	e3580000 	cmp	r8, #0
    4654:	0a000003 	beq	4668 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)+0x104>
			    this->_M_impl._M_end_of_storage - __old_start);
    4658:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    465c:	e0411008 	sub	r1, r1, r8
    4660:	e1a00008 	mov	r0, r8
    4664:	ebfffcb9 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    4668:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    466c:	e0844007 	add	r4, r4, r7
    4670:	e0894104 	add	r4, r9, r4, lsl #2
    4674:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    4678:	e089910a 	add	r9, r9, sl, lsl #2
    467c:	e5859008 	str	r9, [r5, #8]
    }
    4680:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4684:	00002328 	andeq	r2, r0, r8, lsr #6

00004688 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    4688:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    468c:	e2514000 	subs	r4, r1, #0
    4690:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4694:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4698:	e5906004 	ldr	r6, [r0, #4]
    469c:	e5907000 	ldr	r7, [r0]
    46a0:	e046b007 	sub	fp, r6, r7
    46a4:	e1a0814b 	asr	r8, fp, #2
	  if (__size > max_size() || __navail > max_size() - __size)
    46a8:	e30f2fff 	movw	r2, #65535	@ 0xffff
    46ac:	e3412fff 	movt	r2, #8191	@ 0x1fff
    46b0:	e0422008 	sub	r2, r2, r8
					 - this->_M_impl._M_finish);
    46b4:	e5903008 	ldr	r3, [r0, #8]
    46b8:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    46bc:	e1540143 	cmp	r4, r3, asr #2
    46c0:	8a000008 	bhi	46e8 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0x60>
	  _ForwardIterator __cur = __first;
    46c4:	e1a02006 	mov	r2, r6
    46c8:	e1a03004 	mov	r3, r4

  template<size_t _Idx, typename _Head>
    struct _Head_base<_Idx, _Head, false>
    {
      constexpr _Head_base()
      : _M_head_impl() { }
    46cc:	e3a01000 	mov	r1, #0
    46d0:	e4821004 	str	r1, [r2], #4
	      for (; __n > 0; --__n, (void) ++__cur)
    46d4:	e2533001 	subs	r3, r3, #1
    46d8:	1afffffc 	bne	46d0 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0x48>
    46dc:	e0866104 	add	r6, r6, r4, lsl #2
	      this->_M_impl._M_finish =
    46e0:	e5856004 	str	r6, [r5, #4]
    46e4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    46e8:	e1520004 	cmp	r2, r4
    46ec:	3a00000b 	bcc	4720 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0x98>
	const size_type __len = size() + (std::max)(size(), __n);
    46f0:	e1540008 	cmp	r4, r8
    46f4:	20883004 	addcs	r3, r8, r4
    46f8:	30883008 	addcc	r3, r8, r8
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    46fc:	e1580003 	cmp	r8, r3
    4700:	8a000009 	bhi	472c <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xa4>
    4704:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
    4708:	e153000a 	cmp	r3, sl
    470c:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4710:	e3530000 	cmp	r3, #0
    4714:	03a09000 	moveq	r9, #0
    4718:	0a000007 	beq	473c <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xb4>
    471c:	ea000003 	b	4730 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xa8>
	  __throw_length_error(__N(__s));
    4720:	e59f0088 	ldr	r0, [pc, #136]	@ 47b0 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0x128>
    4724:	e08f0000 	add	r0, pc, r0
    4728:	ebfffc7c 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    472c:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4730:	e1a0010a 	lsl	r0, sl, #2
    4734:	ebfffca6 	bl	39d4 <operator new(unsigned int)@plt>
    4738:	e1a09000 	mov	r9, r0
		      std::__uninitialized_default_n_a(__new_start + __size,
    473c:	e089200b 	add	r2, r9, fp
    4740:	e1a03004 	mov	r3, r4
    4744:	e3a01000 	mov	r1, #0
    4748:	e4821004 	str	r1, [r2], #4
    474c:	e2533001 	subs	r3, r3, #1
    4750:	1afffffc 	bne	4748 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xc0>
      for (; __first != __last; ++__first, (void)++__cur)
    4754:	e1570006 	cmp	r7, r6
    4758:	0a000007 	beq	477c <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xf4>
    475c:	e1a03009 	mov	r3, r9
    4760:	e0466007 	sub	r6, r6, r7
    4764:	e0866009 	add	r6, r6, r9
    4768:	e1a02007 	mov	r2, r7

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 2729. Missing SFINAE on std::pair::operator=
      _Tuple_impl& operator=(const _Tuple_impl&) = delete;

      _Tuple_impl(_Tuple_impl&&) = default;
    476c:	e4921004 	ldr	r1, [r2], #4
    4770:	e4831004 	str	r1, [r3], #4
    4774:	e1560003 	cmp	r6, r3
    4778:	1afffffb 	bne	476c <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0xe4>
	if (__p)
    477c:	e3570000 	cmp	r7, #0
    4780:	0a000003 	beq	4794 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)+0x10c>
			    this->_M_impl._M_end_of_storage - __old_start);
    4784:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    4788:	e0411007 	sub	r1, r1, r7
    478c:	e1a00007 	mov	r0, r7
    4790:	ebfffc6e 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    4794:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    4798:	e0844008 	add	r4, r4, r8
    479c:	e0894104 	add	r4, r9, r4, lsl #2
    47a0:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    47a4:	e089910a 	add	r9, r9, sl, lsl #2
    47a8:	e5859008 	str	r9, [r5, #8]
    }
    47ac:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    47b0:	00002204 	andeq	r2, r0, r4, lsl #4

000047b4 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    47b4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    47b8:	e2514000 	subs	r4, r1, #0
    47bc:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    47c0:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    47c4:	e5906004 	ldr	r6, [r0, #4]
    47c8:	e5907000 	ldr	r7, [r0]
    47cc:	e046b007 	sub	fp, r6, r7
    47d0:	e1a0814b 	asr	r8, fp, #2
	  if (__size > max_size() || __navail > max_size() - __size)
    47d4:	e30f2fff 	movw	r2, #65535	@ 0xffff
    47d8:	e3412fff 	movt	r2, #8191	@ 0x1fff
    47dc:	e0422008 	sub	r2, r2, r8
					 - this->_M_impl._M_finish);
    47e0:	e5903008 	ldr	r3, [r0, #8]
    47e4:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    47e8:	e1540143 	cmp	r4, r3, asr #2
    47ec:	8a000008 	bhi	4814 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0x60>
	  _ForwardIterator __cur = __first;
    47f0:	e1a02006 	mov	r2, r6
    47f4:	e1a03004 	mov	r3, r4
      : _M_head_impl() { }
    47f8:	e3a01000 	mov	r1, #0
    47fc:	e4821004 	str	r1, [r2], #4
	      for (; __n > 0; --__n, (void) ++__cur)
    4800:	e2533001 	subs	r3, r3, #1
    4804:	1afffffc 	bne	47fc <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0x48>
    4808:	e0866104 	add	r6, r6, r4, lsl #2
	      this->_M_impl._M_finish =
    480c:	e5856004 	str	r6, [r5, #4]
    4810:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    4814:	e1520004 	cmp	r2, r4
    4818:	3a00000b 	bcc	484c <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0x98>
	const size_type __len = size() + (std::max)(size(), __n);
    481c:	e1540008 	cmp	r4, r8
    4820:	20883004 	addcs	r3, r8, r4
    4824:	30883008 	addcc	r3, r8, r8
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4828:	e1580003 	cmp	r8, r3
    482c:	8a000009 	bhi	4858 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xa4>
    4830:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
    4834:	e153000a 	cmp	r3, sl
    4838:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    483c:	e3530000 	cmp	r3, #0
    4840:	03a09000 	moveq	r9, #0
    4844:	0a000007 	beq	4868 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xb4>
    4848:	ea000003 	b	485c <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xa8>
	  __throw_length_error(__N(__s));
    484c:	e59f0088 	ldr	r0, [pc, #136]	@ 48dc <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0x128>
    4850:	e08f0000 	add	r0, pc, r0
    4854:	ebfffc31 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4858:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    485c:	e1a0010a 	lsl	r0, sl, #2
    4860:	ebfffc5b 	bl	39d4 <operator new(unsigned int)@plt>
    4864:	e1a09000 	mov	r9, r0
		      std::__uninitialized_default_n_a(__new_start + __size,
    4868:	e089200b 	add	r2, r9, fp
    486c:	e1a03004 	mov	r3, r4
    4870:	e3a01000 	mov	r1, #0
    4874:	e4821004 	str	r1, [r2], #4
    4878:	e2533001 	subs	r3, r3, #1
    487c:	1afffffc 	bne	4874 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xc0>
      for (; __first != __last; ++__first, (void)++__cur)
    4880:	e1570006 	cmp	r7, r6
    4884:	0a000007 	beq	48a8 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xf4>
    4888:	e1a03009 	mov	r3, r9
    488c:	e0466007 	sub	r6, r6, r7
    4890:	e0866009 	add	r6, r6, r9
    4894:	e1a02007 	mov	r2, r7
      _Tuple_impl(_Tuple_impl&&) = default;
    4898:	e4921004 	ldr	r1, [r2], #4
    489c:	e4831004 	str	r1, [r3], #4
    48a0:	e1560003 	cmp	r6, r3
    48a4:	1afffffb 	bne	4898 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0xe4>
	if (__p)
    48a8:	e3570000 	cmp	r7, #0
    48ac:	0a000003 	beq	48c0 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)+0x10c>
			    this->_M_impl._M_end_of_storage - __old_start);
    48b0:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    48b4:	e0411007 	sub	r1, r1, r7
    48b8:	e1a00007 	mov	r0, r7
    48bc:	ebfffc23 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    48c0:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    48c4:	e0844008 	add	r4, r4, r8
    48c8:	e0894104 	add	r4, r9, r4, lsl #2
    48cc:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    48d0:	e089910a 	add	r9, r9, sl, lsl #2
    48d4:	e5859008 	str	r9, [r5, #8]
    }
    48d8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48dc:	000020d8 	ldrdeq	r2, [r0], -r8

000048e0 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    48e0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      if (__n != 0)
    48e4:	e2514000 	subs	r4, r1, #0
    48e8:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    48ec:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    48f0:	e5906004 	ldr	r6, [r0, #4]
    48f4:	e5907000 	ldr	r7, [r0]
    48f8:	e046b007 	sub	fp, r6, r7
    48fc:	e1a0814b 	asr	r8, fp, #2
	  if (__size > max_size() || __navail > max_size() - __size)
    4900:	e30f2fff 	movw	r2, #65535	@ 0xffff
    4904:	e3412fff 	movt	r2, #8191	@ 0x1fff
    4908:	e0422008 	sub	r2, r2, r8
					 - this->_M_impl._M_finish);
    490c:	e5903008 	ldr	r3, [r0, #8]
    4910:	e0433006 	sub	r3, r3, r6
	  if (__navail >= __n)
    4914:	e1540143 	cmp	r4, r3, asr #2
    4918:	8a000008 	bhi	4940 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0x60>
	  _ForwardIterator __cur = __first;
    491c:	e1a02006 	mov	r2, r6
    4920:	e1a03004 	mov	r3, r4
      : _M_head_impl() { }
    4924:	e3a01000 	mov	r1, #0
    4928:	e4821004 	str	r1, [r2], #4
	      for (; __n > 0; --__n, (void) ++__cur)
    492c:	e2533001 	subs	r3, r3, #1
    4930:	1afffffc 	bne	4928 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0x48>
    4934:	e0866104 	add	r6, r6, r4, lsl #2
	      this->_M_impl._M_finish =
    4938:	e5856004 	str	r6, [r5, #4]
    493c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    4940:	e1520004 	cmp	r2, r4
    4944:	3a00000b 	bcc	4978 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0x98>
	const size_type __len = size() + (std::max)(size(), __n);
    4948:	e1540008 	cmp	r4, r8
    494c:	20883004 	addcs	r3, r8, r4
    4950:	30883008 	addcc	r3, r8, r8
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4954:	e1580003 	cmp	r8, r3
    4958:	8a000009 	bhi	4984 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xa4>
    495c:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
    4960:	e153000a 	cmp	r3, sl
    4964:	31a0a003 	movcc	sl, r3
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4968:	e3530000 	cmp	r3, #0
    496c:	03a09000 	moveq	r9, #0
    4970:	0a000007 	beq	4994 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xb4>
    4974:	ea000003 	b	4988 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xa8>
	  __throw_length_error(__N(__s));
    4978:	e59f0088 	ldr	r0, [pc, #136]	@ 4a08 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0x128>
    497c:	e08f0000 	add	r0, pc, r0
    4980:	ebfffbe6 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    4984:	e3e0a20e 	mvn	sl, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4988:	e1a0010a 	lsl	r0, sl, #2
    498c:	ebfffc10 	bl	39d4 <operator new(unsigned int)@plt>
    4990:	e1a09000 	mov	r9, r0
		      std::__uninitialized_default_n_a(__new_start + __size,
    4994:	e089200b 	add	r2, r9, fp
    4998:	e1a03004 	mov	r3, r4
    499c:	e3a01000 	mov	r1, #0
    49a0:	e4821004 	str	r1, [r2], #4
    49a4:	e2533001 	subs	r3, r3, #1
    49a8:	1afffffc 	bne	49a0 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xc0>
      for (; __first != __last; ++__first, (void)++__cur)
    49ac:	e1570006 	cmp	r7, r6
    49b0:	0a000007 	beq	49d4 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xf4>
    49b4:	e1a03009 	mov	r3, r9
    49b8:	e0466007 	sub	r6, r6, r7
    49bc:	e0866009 	add	r6, r6, r9
    49c0:	e1a02007 	mov	r2, r7
      _Tuple_impl(_Tuple_impl&&) = default;
    49c4:	e4921004 	ldr	r1, [r2], #4
    49c8:	e4831004 	str	r1, [r3], #4
    49cc:	e1560003 	cmp	r6, r3
    49d0:	1afffffb 	bne	49c4 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0xe4>
	if (__p)
    49d4:	e3570000 	cmp	r7, #0
    49d8:	0a000003 	beq	49ec <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)+0x10c>
			    this->_M_impl._M_end_of_storage - __old_start);
    49dc:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    49e0:	e0411007 	sub	r1, r1, r7
    49e4:	e1a00007 	mov	r0, r7
    49e8:	ebfffbd8 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    49ec:	e5859000 	str	r9, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    49f0:	e0844008 	add	r4, r4, r8
    49f4:	e0894104 	add	r4, r9, r4, lsl #2
    49f8:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    49fc:	e089910a 	add	r9, r9, sl, lsl #2
    4a00:	e5859008 	str	r9, [r5, #8]
    }
    4a04:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4a08:	00001fac 	andeq	r1, r0, ip, lsr #31

00004a0c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)>:
	void config(unsigned num_params, unsigned num_inputs, unsigned num_outputs, unsigned num_lights = 0) {
    4a0c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4a10:	e1a04000 	mov	r4, r0
    4a14:	e1a0a001 	mov	sl, r1
    4a18:	e1a06002 	mov	r6, r2
    4a1c:	e1a05003 	mov	r5, r3
    4a20:	e59d8028 	ldr	r8, [sp, #40]	@ 0x28
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4a24:	e5902008 	ldr	r2, [r0, #8]
    4a28:	e5903004 	ldr	r3, [r0, #4]
    4a2c:	e0421003 	sub	r1, r2, r3
    4a30:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4a34:	e15a0001 	cmp	sl, r1
    4a38:	8a00006e 	bhi	4bf8 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x1ec>
	else if (__new_size < size())
    4a3c:	e15a0001 	cmp	sl, r1
    4a40:	2a000002 	bcs	4a50 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x44>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4a44:	e083310a 	add	r3, r3, sl, lsl #2
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4a48:	e1520003 	cmp	r2, r3
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
	    this->_M_impl._M_finish = __pos;
    4a4c:	15803008 	strne	r3, [r0, #8]
      _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
      : _M_current(_Iterator()) { }

      explicit _GLIBCXX20_CONSTEXPR
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
      : _M_current(__i) { }
    4a50:	e5943004 	ldr	r3, [r4, #4]
    4a54:	e5942008 	ldr	r2, [r4, #8]
		for (auto &x : params)
    4a58:	e1520003 	cmp	r2, r3
    4a5c:	0a000003 	beq	4a70 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x64>
			x.value = 0;
    4a60:	e3a01000 	mov	r1, #0
    4a64:	e4831004 	str	r1, [r3], #4
		for (auto &x : params)
    4a68:	e1520003 	cmp	r2, r3
    4a6c:	1afffffc 	bne	4a64 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x58>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4a70:	e5942014 	ldr	r2, [r4, #20]
    4a74:	e5943010 	ldr	r3, [r4, #16]
    4a78:	e0421003 	sub	r1, r2, r3
    4a7c:	e1a011c1 	asr	r1, r1, #3
	if (__new_size > size())
    4a80:	e1560001 	cmp	r6, r1
    4a84:	8a00005f 	bhi	4c08 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x1fc>
	else if (__new_size < size())
    4a88:	e1560001 	cmp	r6, r1
    4a8c:	2a000002 	bcs	4a9c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x90>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4a90:	e0833186 	add	r3, r3, r6, lsl #3
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4a94:	e1520003 	cmp	r2, r3
	    this->_M_impl._M_finish = __pos;
    4a98:	15843014 	strne	r3, [r4, #20]
    4a9c:	e594c010 	ldr	ip, [r4, #16]
    4aa0:	e5942014 	ldr	r2, [r4, #20]
		for (auto &x : inputs)
    4aa4:	e152000c 	cmp	r2, ip
    4aa8:	0a000005 	beq	4ac4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0xb8>
    4aac:	e28cc008 	add	ip, ip, #8
			x.voltage = 0;
    4ab0:	e3a01000 	mov	r1, #0
    4ab4:	e50c1008 	str	r1, [ip, #-8]
		for (auto &x : inputs)
    4ab8:	e15c0002 	cmp	ip, r2
    4abc:	e28cc008 	add	ip, ip, #8
    4ac0:	1afffffb 	bne	4ab4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0xa8>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4ac4:	e5942020 	ldr	r2, [r4, #32]
    4ac8:	e594301c 	ldr	r3, [r4, #28]
    4acc:	e0421003 	sub	r1, r2, r3
    4ad0:	e1a011c1 	asr	r1, r1, #3
	if (__new_size > size())
    4ad4:	e1550001 	cmp	r5, r1
    4ad8:	8a00004e 	bhi	4c18 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x20c>
	else if (__new_size < size())
    4adc:	e1550001 	cmp	r5, r1
    4ae0:	2a000002 	bcs	4af0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0xe4>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4ae4:	e0833185 	add	r3, r3, r5, lsl #3
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4ae8:	e1520003 	cmp	r2, r3
	    this->_M_impl._M_finish = __pos;
    4aec:	15843020 	strne	r3, [r4, #32]
    4af0:	e594c01c 	ldr	ip, [r4, #28]
    4af4:	e5942020 	ldr	r2, [r4, #32]
		for (auto &x : outputs)
    4af8:	e152000c 	cmp	r2, ip
    4afc:	0a000005 	beq	4b18 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x10c>
    4b00:	e28cc008 	add	ip, ip, #8
			x.voltage = 0;
    4b04:	e3a01000 	mov	r1, #0
    4b08:	e50c1008 	str	r1, [ip, #-8]
		for (auto &x : outputs)
    4b0c:	e152000c 	cmp	r2, ip
    4b10:	e28cc008 	add	ip, ip, #8
    4b14:	1afffffb 	bne	4b08 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0xfc>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4b18:	e594202c 	ldr	r2, [r4, #44]	@ 0x2c
    4b1c:	e5943028 	ldr	r3, [r4, #40]	@ 0x28
    4b20:	e0421003 	sub	r1, r2, r3
    4b24:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4b28:	e1580001 	cmp	r8, r1
    4b2c:	8a00003d 	bhi	4c28 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x21c>
	else if (__new_size < size())
    4b30:	e1580001 	cmp	r8, r1
    4b34:	2a000002 	bcs	4b44 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x138>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4b38:	e0833108 	add	r3, r3, r8, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4b3c:	e1520003 	cmp	r2, r3
	    this->_M_impl._M_finish = __pos;
    4b40:	1584302c 	strne	r3, [r4, #44]	@ 0x2c
    4b44:	e5943028 	ldr	r3, [r4, #40]	@ 0x28
    4b48:	e594202c 	ldr	r2, [r4, #44]	@ 0x2c
		for (auto &x : lights)
    4b4c:	e1520003 	cmp	r2, r3
    4b50:	0a000003 	beq	4b64 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x158>
			x.value = 0;
    4b54:	e3a01000 	mov	r1, #0
    4b58:	e4831004 	str	r1, [r3], #4
		for (auto &x : lights)
    4b5c:	e1520003 	cmp	r2, r3
    4b60:	1afffffc 	bne	4b58 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x14c>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4b64:	e5949038 	ldr	r9, [r4, #56]	@ 0x38
    4b68:	e5943034 	ldr	r3, [r4, #52]	@ 0x34
    4b6c:	e0491003 	sub	r1, r9, r3
    4b70:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4b74:	e15a0001 	cmp	sl, r1
    4b78:	8a00002e 	bhi	4c38 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x22c>
	else if (__new_size < size())
    4b7c:	e15a0001 	cmp	sl, r1
    4b80:	3a000030 	bcc	4c48 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x23c>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4b84:	e5947064 	ldr	r7, [r4, #100]	@ 0x64
    4b88:	e5943060 	ldr	r3, [r4, #96]	@ 0x60
    4b8c:	e0471003 	sub	r1, r7, r3
    4b90:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4b94:	e1560001 	cmp	r6, r1
    4b98:	8a00003a 	bhi	4c88 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x27c>
	else if (__new_size < size())
    4b9c:	e1560001 	cmp	r6, r1
    4ba0:	3a00003c 	bcc	4c98 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x28c>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4ba4:	e5947070 	ldr	r7, [r4, #112]	@ 0x70
    4ba8:	e594306c 	ldr	r3, [r4, #108]	@ 0x6c
    4bac:	e0471003 	sub	r1, r7, r3
    4bb0:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4bb4:	e1550001 	cmp	r5, r1
    4bb8:	8a000055 	bhi	4d14 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x308>
	else if (__new_size < size())
    4bbc:	e1550001 	cmp	r5, r1
    4bc0:	3a000057 	bcc	4d24 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x318>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4bc4:	e594607c 	ldr	r6, [r4, #124]	@ 0x7c
    4bc8:	e5943078 	ldr	r3, [r4, #120]	@ 0x78
    4bcc:	e0461003 	sub	r1, r6, r3
    4bd0:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    4bd4:	e1580001 	cmp	r8, r1
    4bd8:	8a000070 	bhi	4da0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x394>
	else if (__new_size < size())
    4bdc:	e1580001 	cmp	r8, r1
    4be0:	28bd8ff8 	popcs	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4be4:	e0838108 	add	r8, r3, r8, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4be8:	e1560008 	cmp	r6, r8
    4bec:	08bd8ff8 	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	  for (; __first != __last; ++__first)
    4bf0:	e1a05008 	mov	r5, r8
    4bf4:	ea00006f 	b	4db8 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x3ac>
	  _M_default_append(__new_size - size());
    4bf8:	e04a1001 	sub	r1, sl, r1
    4bfc:	e2800004 	add	r0, r0, #4
    4c00:	ebfffb3a 	bl	38f0 <std::vector<rack::engine::Param, std::allocator<rack::engine::Param> >::_M_default_append(unsigned int)@plt>
    4c04:	eaffff91 	b	4a50 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x44>
    4c08:	e0461001 	sub	r1, r6, r1
    4c0c:	e2840010 	add	r0, r4, #16
    4c10:	ebfffb33 	bl	38e4 <std::vector<rack::engine::Input, std::allocator<rack::engine::Input> >::_M_default_append(unsigned int)@plt>
    4c14:	eaffffa0 	b	4a9c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x90>
    4c18:	e0451001 	sub	r1, r5, r1
    4c1c:	e284001c 	add	r0, r4, #28
    4c20:	ebfffb53 	bl	3974 <std::vector<rack::engine::Output, std::allocator<rack::engine::Output> >::_M_default_append(unsigned int)@plt>
    4c24:	eaffffb1 	b	4af0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0xe4>
    4c28:	e0481001 	sub	r1, r8, r1
    4c2c:	e2840028 	add	r0, r4, #40	@ 0x28
    4c30:	ebfffb76 	bl	3a10 <std::vector<rack::engine::Light, std::allocator<rack::engine::Light> >::_M_default_append(unsigned int)@plt>
    4c34:	eaffffc2 	b	4b44 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x138>
    4c38:	e04a1001 	sub	r1, sl, r1
    4c3c:	e2840034 	add	r0, r4, #52	@ 0x34
    4c40:	ebfffb30 	bl	3908 <std::vector<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> >, std::allocator<std::unique_ptr<rack::engine::ParamQuantity, std::default_delete<rack::engine::ParamQuantity> > > >::_M_default_append(unsigned int)@plt>
    4c44:	eaffffce 	b	4b84 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x178>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4c48:	e083a10a 	add	sl, r3, sl, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4c4c:	e159000a 	cmp	r9, sl
    4c50:	0affffcb 	beq	4b84 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x178>
    4c54:	e1a0700a 	mov	r7, sl
    4c58:	ea000001 	b	4c64 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x258>
    4c5c:	e1590007 	cmp	r9, r7
    4c60:	0a000006 	beq	4c80 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x274>
    4c64:	e4970004 	ldr	r0, [r7], #4
    4c68:	e3500000 	cmp	r0, #0
    4c6c:	0afffffa 	beq	4c5c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x250>
	delete __ptr;
    4c70:	e5903000 	ldr	r3, [r0]
    4c74:	e5933004 	ldr	r3, [r3, #4]
    4c78:	e12fff33 	blx	r3
      }
    4c7c:	eafffff6 	b	4c5c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x250>
	    this->_M_impl._M_finish = __pos;
    4c80:	e584a038 	str	sl, [r4, #56]	@ 0x38
    4c84:	eaffffbe 	b	4b84 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x178>
	  _M_default_append(__new_size - size());
    4c88:	e0461001 	sub	r1, r6, r1
    4c8c:	e2840060 	add	r0, r4, #96	@ 0x60
    4c90:	ebfffb2b 	bl	3944 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)@plt>
    4c94:	eaffffc2 	b	4ba4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x198>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4c98:	e083a106 	add	sl, r3, r6, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4c9c:	e157000a 	cmp	r7, sl
    4ca0:	0affffbf 	beq	4ba4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x198>
    4ca4:	e1a0900a 	mov	r9, sl
	delete __ptr;
    4ca8:	e3a0b03c 	mov	fp, #60	@ 0x3c
    4cac:	ea000004 	b	4cc4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x2b8>
    4cb0:	e1a0100b 	mov	r1, fp
    4cb4:	e1a00006 	mov	r0, r6
    4cb8:	ebfffb24 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4cbc:	e1570009 	cmp	r7, r9
    4cc0:	0a000011 	beq	4d0c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x300>
	if (__ptr != nullptr)
    4cc4:	e4996004 	ldr	r6, [r9], #4
    4cc8:	e3560000 	cmp	r6, #0
    4ccc:	0afffffa 	beq	4cbc <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x2b0>
      { return _M_dataplus._M_p; }
    4cd0:	e5960024 	ldr	r0, [r6, #36]	@ 0x24
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4cd4:	e286302c 	add	r3, r6, #44	@ 0x2c
	if (_M_data() == _M_local_data())
    4cd8:	e1500003 	cmp	r0, r3
    4cdc:	0a000002 	beq	4cec <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x2e0>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4ce0:	e596102c 	ldr	r1, [r6, #44]	@ 0x2c
    4ce4:	e2811001 	add	r1, r1, #1
    4ce8:	ebfffb18 	bl	3950 <operator delete(void*, unsigned int)@plt>
      { return _M_dataplus._M_p; }
    4cec:	e596000c 	ldr	r0, [r6, #12]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4cf0:	e2863014 	add	r3, r6, #20
	if (_M_data() == _M_local_data())
    4cf4:	e1500003 	cmp	r0, r3
    4cf8:	0affffec 	beq	4cb0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x2a4>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4cfc:	e5961014 	ldr	r1, [r6, #20]
    4d00:	e2811001 	add	r1, r1, #1
    4d04:	ebfffb11 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4d08:	eaffffe8 	b	4cb0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x2a4>
	    this->_M_impl._M_finish = __pos;
    4d0c:	e584a064 	str	sl, [r4, #100]	@ 0x64
    4d10:	eaffffa3 	b	4ba4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x198>
	  _M_default_append(__new_size - size());
    4d14:	e0451001 	sub	r1, r5, r1
    4d18:	e284006c 	add	r0, r4, #108	@ 0x6c
    4d1c:	ebfffb08 	bl	3944 <std::vector<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> >, std::allocator<std::unique_ptr<rack::engine::PortInfo, std::default_delete<rack::engine::PortInfo> > > >::_M_default_append(unsigned int)@plt>
    4d20:	eaffffa7 	b	4bc4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x1b8>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4d24:	e0839105 	add	r9, r3, r5, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    4d28:	e1570009 	cmp	r7, r9
    4d2c:	0affffa4 	beq	4bc4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x1b8>
    4d30:	e1a06009 	mov	r6, r9
	delete __ptr;
    4d34:	e3a0a03c 	mov	sl, #60	@ 0x3c
    4d38:	ea000004 	b	4d50 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x344>
    4d3c:	e1a0100a 	mov	r1, sl
    4d40:	e1a00005 	mov	r0, r5
    4d44:	ebfffb01 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4d48:	e1570006 	cmp	r7, r6
    4d4c:	0a000011 	beq	4d98 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x38c>
	if (__ptr != nullptr)
    4d50:	e4965004 	ldr	r5, [r6], #4
    4d54:	e3550000 	cmp	r5, #0
    4d58:	0afffffa 	beq	4d48 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x33c>
      { return _M_dataplus._M_p; }
    4d5c:	e5950024 	ldr	r0, [r5, #36]	@ 0x24
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4d60:	e285302c 	add	r3, r5, #44	@ 0x2c
	if (_M_data() == _M_local_data())
    4d64:	e1500003 	cmp	r0, r3
    4d68:	0a000002 	beq	4d78 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x36c>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4d6c:	e595102c 	ldr	r1, [r5, #44]	@ 0x2c
    4d70:	e2811001 	add	r1, r1, #1
    4d74:	ebfffaf5 	bl	3950 <operator delete(void*, unsigned int)@plt>
      { return _M_dataplus._M_p; }
    4d78:	e595000c 	ldr	r0, [r5, #12]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    4d7c:	e2853014 	add	r3, r5, #20
	if (_M_data() == _M_local_data())
    4d80:	e1500003 	cmp	r0, r3
    4d84:	0affffec 	beq	4d3c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x330>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    4d88:	e5951014 	ldr	r1, [r5, #20]
    4d8c:	e2811001 	add	r1, r1, #1
    4d90:	ebfffaee 	bl	3950 <operator delete(void*, unsigned int)@plt>
    4d94:	eaffffe8 	b	4d3c <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x330>
	    this->_M_impl._M_finish = __pos;
    4d98:	e5849070 	str	r9, [r4, #112]	@ 0x70
    4d9c:	eaffff88 	b	4bc4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x1b8>
	  _M_default_append(__new_size - size());
    4da0:	e0481001 	sub	r1, r8, r1
    4da4:	e2840078 	add	r0, r4, #120	@ 0x78
    4da8:	ebfffad9 	bl	3914 <std::vector<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> >, std::allocator<std::unique_ptr<rack::engine::LightInfo, std::default_delete<rack::engine::LightInfo> > > >::_M_default_append(unsigned int)@plt>
    4dac:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4db0:	e1560005 	cmp	r6, r5
    4db4:	0a000006 	beq	4dd4 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x3c8>
    4db8:	e4950004 	ldr	r0, [r5], #4
    4dbc:	e3500000 	cmp	r0, #0
    4dc0:	0afffffa 	beq	4db0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x3a4>
	delete __ptr;
    4dc4:	e5903000 	ldr	r3, [r0]
    4dc8:	e5933004 	ldr	r3, [r3, #4]
    4dcc:	e12fff33 	blx	r3
      }
    4dd0:	eafffff6 	b	4db0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)+0x3a4>
	    this->_M_impl._M_finish = __pos;
    4dd4:	e584807c 	str	r8, [r4, #124]	@ 0x7c
	}
    4dd8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00004ddc <std::unique_ptr<CoreProcessor, std::default_delete<CoreProcessor> > rack::create_vcv_module<TestModule>()>:

namespace rack
{

template<typename ModuleT>
std::unique_ptr<CoreProcessor> create_vcv_module() {
    4ddc:	e92d4070 	push	{r4, r5, r6, lr}
    4de0:	e24dd008 	sub	sp, sp, #8
    4de4:	e1a05000 	mov	r5, r0
    4de8:	e59f60a4 	ldr	r6, [pc, #164]	@ 4e94 <std::unique_ptr<CoreProcessor, std::default_delete<CoreProcessor> > rack::create_vcv_module<TestModule>()+0xb8>
    4dec:	e08f6006 	add	r6, pc, r6
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    4df0:	e3a000b8 	mov	r0, #184	@ 0xb8
    4df4:	ebfffaf6 	bl	39d4 <operator new(unsigned int)@plt>
    4df8:	e1a04000 	mov	r4, r0
struct Module : VCVModuleWrapper {
    4dfc:	ebfffaf1 	bl	39c8 <VCVModuleWrapper::VCVModuleWrapper()@plt>
    4e00:	e3a03000 	mov	r3, #0
    4e04:	e5843050 	str	r3, [r4, #80]	@ 0x50
    4e08:	f3c70e1f 	vmov.i8	d16, #255	@ 0xff
    4e0c:	edc40b16 	vstr	d16, [r4, #88]	@ 0x58
	: _M_start(), _M_finish(), _M_end_of_storage()
    4e10:	e5843060 	str	r3, [r4, #96]	@ 0x60
    4e14:	e5843064 	str	r3, [r4, #100]	@ 0x64
    4e18:	e5843068 	str	r3, [r4, #104]	@ 0x68
    4e1c:	e584306c 	str	r3, [r4, #108]	@ 0x6c
    4e20:	e5843070 	str	r3, [r4, #112]	@ 0x70
    4e24:	e5843074 	str	r3, [r4, #116]	@ 0x74
    4e28:	e5843078 	str	r3, [r4, #120]	@ 0x78
    4e2c:	e584307c 	str	r3, [r4, #124]	@ 0x7c
    4e30:	e5843080 	str	r3, [r4, #128]	@ 0x80
	struct Expander {
    4e34:	edc40b22 	vstr	d16, [r4, #136]	@ 0x88
    4e38:	e5843090 	str	r3, [r4, #144]	@ 0x90
    4e3c:	e5843094 	str	r3, [r4, #148]	@ 0x94
    4e40:	e5843098 	str	r3, [r4, #152]	@ 0x98
    4e44:	e5c4309c 	strb	r3, [r4, #156]	@ 0x9c
    4e48:	edc40b28 	vstr	d16, [r4, #160]	@ 0xa0
    4e4c:	e58430a8 	str	r3, [r4, #168]	@ 0xa8
    4e50:	e58430ac 	str	r3, [r4, #172]	@ 0xac
    4e54:	e58430b0 	str	r3, [r4, #176]	@ 0xb0
    4e58:	e5c430b4 	strb	r3, [r4, #180]	@ 0xb4
	TestModule() {
    4e5c:	e59f2034 	ldr	r2, [pc, #52]	@ 4e98 <std::unique_ptr<CoreProcessor, std::default_delete<CoreProcessor> > rack::create_vcv_module<TestModule>()+0xbc>
    4e60:	e7962002 	ldr	r2, [r6, r2]
    4e64:	e2822008 	add	r2, r2, #8
    4e68:	e5842000 	str	r2, [r4]
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
    4e6c:	e58d3000 	str	r3, [sp]
    4e70:	e3a03001 	mov	r3, #1
    4e74:	e1a02003 	mov	r2, r3
    4e78:	e1a01003 	mov	r1, r3
    4e7c:	e1a00004 	mov	r0, r4
    4e80:	ebfffaca 	bl	39b0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)@plt>
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    4e84:	e5854000 	str	r4, [r5]
	return std::make_unique<ModuleT>();
}
    4e88:	e1a00005 	mov	r0, r5
    4e8c:	e28dd008 	add	sp, sp, #8
    4e90:	e8bd8070 	pop	{r4, r5, r6, pc}
    4e94:	00002dd4 	ldrdeq	r2, [r0], -r4
    4e98:	000000a8 	andeq	r0, r0, r8, lsr #1

00004e9c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)>:
      void
      vector<_Tp, _Alloc>::
      _M_range_insert(iterator __position, _ForwardIterator __first,
		      _ForwardIterator __last, std::forward_iterator_tag)
      {
	if (__first != __last)
    4e9c:	e1530002 	cmp	r3, r2
    4ea0:	012fff1e 	bxeq	lr
      vector<_Tp, _Alloc>::
    4ea4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4ea8:	e24dd00c 	sub	sp, sp, #12
    4eac:	e1a09000 	mov	r9, r0
    4eb0:	e1a06001 	mov	r6, r1
    4eb4:	e1a08002 	mov	r8, r2
    4eb8:	e1a05003 	mov	r5, r3
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    4ebc:	e0437002 	sub	r7, r3, r2
    4ec0:	e1a0a1c7 	asr	sl, r7, #3
    4ec4:	e30e3eef 	movw	r3, #61167	@ 0xeeef
    4ec8:	e34e3eee 	movt	r3, #61166	@ 0xeeee
    4ecc:	e00a0a93 	mul	sl, r3, sl
	  {
	    const size_type __n = std::distance(__first, __last);
	    if (size_type(this->_M_impl._M_end_of_storage
			  - this->_M_impl._M_finish) >= __n)
    4ed0:	e5904004 	ldr	r4, [r0, #4]
    4ed4:	e5903008 	ldr	r3, [r0, #8]
    4ed8:	e0433004 	sub	r3, r3, r4
	    if (size_type(this->_M_impl._M_end_of_storage
    4edc:	e1570003 	cmp	r7, r3
    4ee0:	8a000063 	bhi	5074 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x1d8>
    4ee4:	e0442001 	sub	r2, r4, r1
	      {
		const size_type __elems_after = end() - __position;
		pointer __old_finish(this->_M_impl._M_finish);
		if (__elems_after > __n)
    4ee8:	e1570002 	cmp	r7, r2
    4eec:	2a000020 	bcs	4f74 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0xd8>
	  for (; __first != __last; ++__first, (void)++__cur)
    4ef0:	e044b007 	sub	fp, r4, r7
    4ef4:	e247a078 	sub	sl, r7, #120	@ 0x78
    4ef8:	e1a0a1aa 	lsr	sl, sl, #3
    4efc:	e30e3eef 	movw	r3, #61167	@ 0xeeef
    4f00:	e3403eee 	movt	r3, #3822	@ 0xeee
    4f04:	e00a0a93 	mul	sl, r3, sl
    4f08:	e3caa20e 	bic	sl, sl, #-536870912	@ 0xe0000000
    4f0c:	e28aa001 	add	sl, sl, #1
    4f10:	e3a03078 	mov	r3, #120	@ 0x78
    4f14:	e00a0a93 	mul	sl, r3, sl
		  {
		    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
		    std::__uninitialized_move_a(this->_M_impl._M_finish - __n,
    4f18:	e3a05000 	mov	r5, #0
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4f1c:	e3a02078 	mov	r2, #120	@ 0x78
    4f20:	e08b1005 	add	r1, fp, r5
    4f24:	e0840005 	add	r0, r4, r5
    4f28:	ebfffa73 	bl	38fc <memcpy@plt>
    4f2c:	e2855078 	add	r5, r5, #120	@ 0x78
    4f30:	e155000a 	cmp	r5, sl
    4f34:	1afffff8 	bne	4f1c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x80>
						this->_M_impl._M_finish,
						this->_M_impl._M_finish,
						_M_get_Tp_allocator());
		    this->_M_impl._M_finish += __n;
    4f38:	e5993004 	ldr	r3, [r9, #4]
    4f3c:	e0833007 	add	r3, r3, r7
    4f40:	e5893004 	str	r3, [r9, #4]
					       is_copy_assignable<_Tp>>;
	  // trivial types can have deleted assignment
	  static_assert( __assignable::value, "type must be assignable" );
#endif
	  const ptrdiff_t _Num = __last - __first;
	  if (_Num)
    4f44:	e15b0006 	cmp	fp, r6
    4f48:	0a000003 	beq	4f5c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0xc0>
	  const ptrdiff_t _Num = __last - __first;
    4f4c:	e04b2006 	sub	r2, fp, r6
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
    4f50:	e1a01006 	mov	r1, r6
    4f54:	e0440002 	sub	r0, r4, r2
    4f58:	ebfffa5e 	bl	38d8 <memmove@plt>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    4f5c:	e1a02007 	mov	r2, r7
    4f60:	e1a01008 	mov	r1, r8
    4f64:	e1a00006 	mov	r0, r6
    4f68:	ebfffa5a 	bl	38d8 <memmove@plt>
		this->_M_impl._M_start = __new_start;
		this->_M_impl._M_finish = __new_finish;
		this->_M_impl._M_end_of_storage = __new_start + __len;
	      }
	  }
      }
    4f6c:	e28dd00c 	add	sp, sp, #12
    4f70:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
      { _M_current += __n; return *this; }
    4f74:	e088b002 	add	fp, r8, r2
    4f78:	e155000b 	cmp	r5, fp
    4f7c:	0a000015 	beq	4fd8 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x13c>
    4f80:	e2457078 	sub	r7, r5, #120	@ 0x78
    4f84:	e047700b 	sub	r7, r7, fp
    4f88:	e1a071a7 	lsr	r7, r7, #3
    4f8c:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    4f90:	e3401eee 	movt	r1, #3822	@ 0xeee
    4f94:	e0070791 	mul	r7, r1, r7
    4f98:	e3c7720e 	bic	r7, r7, #-536870912	@ 0xe0000000
    4f9c:	e2877001 	add	r7, r7, #1
    4fa0:	e3a01078 	mov	r1, #120	@ 0x78
    4fa4:	e0070791 	mul	r7, r1, r7
    4fa8:	e3a05000 	mov	r5, #0
    4fac:	e58da000 	str	sl, [sp]
    4fb0:	e1a0a002 	mov	sl, r2
    4fb4:	e3a02078 	mov	r2, #120	@ 0x78
    4fb8:	e08b1005 	add	r1, fp, r5
    4fbc:	e0840005 	add	r0, r4, r5
    4fc0:	ebfffa4d 	bl	38fc <memcpy@plt>
    4fc4:	e2855078 	add	r5, r5, #120	@ 0x78
    4fc8:	e1550007 	cmp	r5, r7
    4fcc:	1afffff8 	bne	4fb4 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x118>
    4fd0:	e1a0200a 	mov	r2, sl
    4fd4:	e59da000 	ldr	sl, [sp]
    { return __lhs.base() - __rhs.base(); }
    4fd8:	e1a011c2 	asr	r1, r2, #3
    4fdc:	e30e0eef 	movw	r0, #61167	@ 0xeeef
    4fe0:	e34e0eee 	movt	r0, #61166	@ 0xeeee
		    this->_M_impl._M_finish += __n - __elems_after;
    4fe4:	e061a190 	mls	r1, r0, r1, sl
    4fe8:	e5997004 	ldr	r7, [r9, #4]
    4fec:	e3a00078 	mov	r0, #120	@ 0x78
    4ff0:	e0277190 	mla	r7, r0, r1, r7
    4ff4:	e5897004 	str	r7, [r9, #4]
    4ff8:	e1540006 	cmp	r4, r6
    4ffc:	0a000013 	beq	5050 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x1b4>
    5000:	e0445006 	sub	r5, r4, r6
    5004:	e2455078 	sub	r5, r5, #120	@ 0x78
    5008:	e1a051a5 	lsr	r5, r5, #3
    500c:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    5010:	e3401eee 	movt	r1, #3822	@ 0xeee
    5014:	e0050591 	mul	r5, r1, r5
    5018:	e3c5520e 	bic	r5, r5, #-536870912	@ 0xe0000000
    501c:	e2855001 	add	r5, r5, #1
    5020:	e0050590 	mul	r5, r0, r5
    5024:	e3a04000 	mov	r4, #0
    5028:	e1a0a000 	mov	sl, r0
    502c:	e58d2000 	str	r2, [sp]
    5030:	e1a0200a 	mov	r2, sl
    5034:	e0861004 	add	r1, r6, r4
    5038:	e0870004 	add	r0, r7, r4
    503c:	ebfffa2e 	bl	38fc <memcpy@plt>
    5040:	e2844078 	add	r4, r4, #120	@ 0x78
    5044:	e1550004 	cmp	r5, r4
    5048:	1afffff8 	bne	5030 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x194>
    504c:	e59d2000 	ldr	r2, [sp]
		    this->_M_impl._M_finish += __elems_after;
    5050:	e5991004 	ldr	r1, [r9, #4]
    5054:	e0811002 	add	r1, r1, r2
    5058:	e5891004 	str	r1, [r9, #4]
	  if (_Num)
    505c:	e158000b 	cmp	r8, fp
    5060:	0affffc1 	beq	4f6c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0xd0>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    5064:	e1a01008 	mov	r1, r8
    5068:	e1a00006 	mov	r0, r6
    506c:	ebfffa19 	bl	38d8 <memmove@plt>
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5070:	eaffffbd 	b	4f6c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0xd0>
		pointer __old_start = this->_M_impl._M_start;
    5074:	e590b000 	ldr	fp, [r0]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5078:	e044100b 	sub	r1, r4, fp
    507c:	e1a031c1 	asr	r3, r1, #3
    5080:	e30e2eef 	movw	r2, #61167	@ 0xeeef
    5084:	e34e2eee 	movt	r2, #61166	@ 0xeeee
    5088:	e0030392 	mul	r3, r2, r3
	if (max_size() - size() < __n)
    508c:	e3012111 	movw	r2, #4369	@ 0x1111
    5090:	e3402111 	movt	r2, #273	@ 0x111
    5094:	e0422003 	sub	r2, r2, r3
    5098:	e15a0002 	cmp	sl, r2
    509c:	8a00000c 	bhi	50d4 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x238>
      return __a;
    50a0:	e1570001 	cmp	r7, r1
    50a4:	91a0a003 	movls	sl, r3
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    50a8:	e093300a 	adds	r3, r3, sl
    50ac:	2a00000b 	bcs	50e0 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x244>
    50b0:	e3012111 	movw	r2, #4369	@ 0x1111
    50b4:	e3402111 	movt	r2, #273	@ 0x111
    50b8:	e1530002 	cmp	r3, r2
    50bc:	31a02003 	movcc	r2, r3
    50c0:	e58d2000 	str	r2, [sp]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    50c4:	e3530000 	cmp	r3, #0
    50c8:	03a0a000 	moveq	sl, #0
    50cc:	0a00000b 	beq	5100 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x264>
    50d0:	ea000005 	b	50ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x250>
	  __throw_length_error(__N(__s));
    50d4:	e59f0178 	ldr	r0, [pc, #376]	@ 5254 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x3b8>
    50d8:	e08f0000 	add	r0, pc, r0
    50dc:	ebfffa0f 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    50e0:	e3013111 	movw	r3, #4369	@ 0x1111
    50e4:	e3403111 	movt	r3, #273	@ 0x111
    50e8:	e58d3000 	str	r3, [sp]
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    50ec:	e3a00078 	mov	r0, #120	@ 0x78
    50f0:	e59d3000 	ldr	r3, [sp]
    50f4:	e0000390 	mul	r0, r0, r3
    50f8:	ebfffa35 	bl	39d4 <operator new(unsigned int)@plt>
    50fc:	e1a0a000 	mov	sl, r0
    5100:	e156000b 	cmp	r6, fp
    5104:	0a000050 	beq	524c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x3b0>
    5108:	e2462078 	sub	r2, r6, #120	@ 0x78
    510c:	e042200b 	sub	r2, r2, fp
    5110:	e1a021a2 	lsr	r2, r2, #3
    5114:	e30e3eef 	movw	r3, #61167	@ 0xeeef
    5118:	e3403eee 	movt	r3, #3822	@ 0xeee
    511c:	e0020293 	mul	r2, r3, r2
    5120:	e3c2220e 	bic	r2, r2, #-536870912	@ 0xe0000000
    5124:	e2822001 	add	r2, r2, #1
    5128:	e3a03078 	mov	r3, #120	@ 0x78
    512c:	e0020293 	mul	r2, r3, r2
    5130:	e3a07000 	mov	r7, #0
    5134:	e58d4004 	str	r4, [sp, #4]
    5138:	e1a04002 	mov	r4, r2
    513c:	e3a02078 	mov	r2, #120	@ 0x78
    5140:	e08b1007 	add	r1, fp, r7
    5144:	e08a0007 	add	r0, sl, r7
    5148:	ebfff9eb 	bl	38fc <memcpy@plt>
    514c:	e2877078 	add	r7, r7, #120	@ 0x78
    5150:	e1570004 	cmp	r7, r4
    5154:	1afffff8 	bne	513c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x2a0>
    5158:	e1a02004 	mov	r2, r4
    515c:	e59d4004 	ldr	r4, [sp, #4]
    5160:	e08a2002 	add	r2, sl, r2
    5164:	e2453078 	sub	r3, r5, #120	@ 0x78
    5168:	e0433008 	sub	r3, r3, r8
    516c:	e1a031a3 	lsr	r3, r3, #3
    5170:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    5174:	e3401eee 	movt	r1, #3822	@ 0xeee
    5178:	e0030391 	mul	r3, r1, r3
    517c:	e3c3320e 	bic	r3, r3, #-536870912	@ 0xe0000000
    5180:	e2833001 	add	r3, r3, #1
    5184:	e3a01078 	mov	r1, #120	@ 0x78
    5188:	e0070391 	mul	r7, r1, r3
      _ForwardIterator __cur = __result;
    518c:	e3a05000 	mov	r5, #0
    5190:	e58d4004 	str	r4, [sp, #4]
    5194:	e1a04002 	mov	r4, r2
    5198:	e3a02078 	mov	r2, #120	@ 0x78
    519c:	e0881005 	add	r1, r8, r5
    51a0:	e0840005 	add	r0, r4, r5
    51a4:	ebfff9d4 	bl	38fc <memcpy@plt>
	  for (; __first != __last; ++__first, (void)++__cur)
    51a8:	e2855078 	add	r5, r5, #120	@ 0x78
    51ac:	e1550007 	cmp	r5, r7
    51b0:	1afffff8 	bne	5198 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x2fc>
    51b4:	e1a02004 	mov	r2, r4
    51b8:	e59d4004 	ldr	r4, [sp, #4]
    51bc:	e0825007 	add	r5, r2, r7
    51c0:	e1540006 	cmp	r4, r6
    51c4:	0a000013 	beq	5218 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x37c>
    51c8:	e0448006 	sub	r8, r4, r6
    51cc:	e2488078 	sub	r8, r8, #120	@ 0x78
    51d0:	e1a081a8 	lsr	r8, r8, #3
    51d4:	e30e3eef 	movw	r3, #61167	@ 0xeeef
    51d8:	e3403eee 	movt	r3, #3822	@ 0xeee
    51dc:	e0080893 	mul	r8, r3, r8
    51e0:	e3c8820e 	bic	r8, r8, #-536870912	@ 0xe0000000
    51e4:	e2888001 	add	r8, r8, #1
    51e8:	e3a03078 	mov	r3, #120	@ 0x78
    51ec:	e0080893 	mul	r8, r3, r8
    51f0:	e3a04000 	mov	r4, #0
    51f4:	e1a07003 	mov	r7, r3
    51f8:	e1a02007 	mov	r2, r7
    51fc:	e0861004 	add	r1, r6, r4
    5200:	e0850004 	add	r0, r5, r4
    5204:	ebfff9bc 	bl	38fc <memcpy@plt>
    5208:	e2844078 	add	r4, r4, #120	@ 0x78
    520c:	e1580004 	cmp	r8, r4
    5210:	1afffff8 	bne	51f8 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x35c>
    5214:	e0855008 	add	r5, r5, r8
	if (__p)
    5218:	e35b0000 	cmp	fp, #0
    521c:	0a000003 	beq	5230 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x394>
			      this->_M_impl._M_end_of_storage - __old_start);
    5220:	e5991008 	ldr	r1, [r9, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5224:	e041100b 	sub	r1, r1, fp
    5228:	e1a0000b 	mov	r0, fp
    522c:	ebfff9c7 	bl	3950 <operator delete(void*, unsigned int)@plt>
		this->_M_impl._M_start = __new_start;
    5230:	e589a000 	str	sl, [r9]
		this->_M_impl._M_finish = __new_finish;
    5234:	e5895004 	str	r5, [r9, #4]
		this->_M_impl._M_end_of_storage = __new_start + __len;
    5238:	e3a03078 	mov	r3, #120	@ 0x78
    523c:	e59d2000 	ldr	r2, [sp]
    5240:	e02aa293 	mla	sl, r3, r2, sl
    5244:	e589a008 	str	sl, [r9, #8]
      }
    5248:	eaffff47 	b	4f6c <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0xd0>
      _ForwardIterator __cur = __result;
    524c:	e1a0200a 	mov	r2, sl
    5250:	eaffffc3 	b	5164 <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)+0x2c8>
    5254:	0000186c 	andeq	r1, r0, ip, ror #16

00005258 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)>:

	void populate_elements(std::vector<MetaModule::Element> &elements) {
    5258:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    525c:	e24dd014 	sub	sp, sp, #20
    5260:	e1a04000 	mov	r4, r0
    5264:	e1a05001 	mov	r5, r1
      { _M_erase_at_end(this->_M_impl._M_start); }
    5268:	e5912000 	ldr	r2, [r1]
	if (size_type __n = this->_M_impl._M_finish - __pos)
    526c:	e5913004 	ldr	r3, [r1, #4]
    5270:	e1520003 	cmp	r2, r3
	    this->_M_impl._M_finish = __pos;
    5274:	15812004 	strne	r2, [r1, #4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5278:	e590312c 	ldr	r3, [r0, #300]	@ 0x12c
    527c:	e5901128 	ldr	r1, [r0, #296]	@ 0x128
    5280:	e0433001 	sub	r3, r3, r1
    5284:	e1a031c3 	asr	r3, r3, #3
    5288:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    528c:	e34e1eee 	movt	r1, #61166	@ 0xeeee
    5290:	e5906120 	ldr	r6, [r0, #288]	@ 0x120
    5294:	e590011c 	ldr	r0, [r0, #284]	@ 0x11c
    5298:	e0466000 	sub	r6, r6, r0
    529c:	e1a061c6 	asr	r6, r6, #3
    52a0:	e0060691 	mul	r6, r1, r6
		elements.clear();
		elements.reserve(paramElements.size() + inputElements.size() + outputElements.size() + lightElements.size());
    52a4:	e0266391 	mla	r6, r1, r3, r6
    52a8:	e5943138 	ldr	r3, [r4, #312]	@ 0x138
    52ac:	e5940134 	ldr	r0, [r4, #308]	@ 0x134
    52b0:	e0433000 	sub	r3, r3, r0
    52b4:	e1a031c3 	asr	r3, r3, #3
    52b8:	e0266391 	mla	r6, r1, r3, r6
    52bc:	e5943144 	ldr	r3, [r4, #324]	@ 0x144
    52c0:	e5940140 	ldr	r0, [r4, #320]	@ 0x140
    52c4:	e0433000 	sub	r3, r3, r0
    52c8:	e1a031c3 	asr	r3, r3, #3
    52cc:	e0266391 	mla	r6, r1, r3, r6
      if (__n > this->max_size())
    52d0:	e3013111 	movw	r3, #4369	@ 0x1111
    52d4:	e3403111 	movt	r3, #273	@ 0x111
    52d8:	e1560003 	cmp	r6, r3
    52dc:	8a00004e 	bhi	541c <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0x1c4>
			 - this->_M_impl._M_start); }
    52e0:	e5953008 	ldr	r3, [r5, #8]
    52e4:	e0433002 	sub	r3, r3, r2
    52e8:	e1a031c3 	asr	r3, r3, #3
    52ec:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    52f0:	e34e1eee 	movt	r1, #61166	@ 0xeeee
    52f4:	e0030391 	mul	r3, r1, r3
      if (this->capacity() < __n)
    52f8:	e1560003 	cmp	r6, r3
    52fc:	9a000028 	bls	53a4 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0x14c>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5300:	e595b004 	ldr	fp, [r5, #4]
    5304:	e04b3002 	sub	r3, fp, r2
    5308:	e58d3008 	str	r3, [sp, #8]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    530c:	e3560000 	cmp	r6, #0
    5310:	03a0a000 	moveq	sl, #0
    5314:	0a000003 	beq	5328 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0xd0>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5318:	e3a00078 	mov	r0, #120	@ 0x78
    531c:	e0000690 	mul	r0, r0, r6
    5320:	ebfff9ab 	bl	39d4 <operator new(unsigned int)@plt>
    5324:	e1a0a000 	mov	sl, r0
	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    5328:	e5950000 	ldr	r0, [r5]
    532c:	e595b004 	ldr	fp, [r5, #4]
      for (; __first != __last; ++__first, (void)++__cur)
    5330:	e150000b 	cmp	r0, fp
    5334:	0a00000e 	beq	5374 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0x11c>
    5338:	e28a8078 	add	r8, sl, #120	@ 0x78
    533c:	e1a07000 	mov	r7, r0
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    5340:	e3a09078 	mov	r9, #120	@ 0x78
    5344:	e58d600c 	str	r6, [sp, #12]
    5348:	e1a06000 	mov	r6, r0
    534c:	e1a02009 	mov	r2, r9
    5350:	e1a01007 	mov	r1, r7
    5354:	e2480078 	sub	r0, r8, #120	@ 0x78
    5358:	ebfff967 	bl	38fc <memcpy@plt>
    535c:	e2877078 	add	r7, r7, #120	@ 0x78
    5360:	e2888078 	add	r8, r8, #120	@ 0x78
    5364:	e15b0007 	cmp	fp, r7
    5368:	1afffff7 	bne	534c <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0xf4>
    536c:	e1a00006 	mov	r0, r6
    5370:	e59d600c 	ldr	r6, [sp, #12]
	if (__p)
    5374:	e3500000 	cmp	r0, #0
    5378:	0a000002 	beq	5388 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0x130>
			- this->_M_impl._M_start);
    537c:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5380:	e0411000 	sub	r1, r1, r0
    5384:	ebfff971 	bl	3950 <operator delete(void*, unsigned int)@plt>
	  this->_M_impl._M_start = __tmp;
    5388:	e585a000 	str	sl, [r5]
	  this->_M_impl._M_finish = __tmp + __old_size;
    538c:	e59d3008 	ldr	r3, [sp, #8]
    5390:	e08ab003 	add	fp, sl, r3
    5394:	e585b004 	str	fp, [r5, #4]
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5398:	e3a03078 	mov	r3, #120	@ 0x78
    539c:	e02aa693 	mla	sl, r3, r6, sl
    53a0:	e585a008 	str	sl, [r5, #8]
	  _M_range_insert(__pos, __first, __last,
    53a4:	e3a03000 	mov	r3, #0
    53a8:	e5cd3000 	strb	r3, [sp]
    53ac:	e5943120 	ldr	r3, [r4, #288]	@ 0x120
    53b0:	e594211c 	ldr	r2, [r4, #284]	@ 0x11c
    53b4:	e5951004 	ldr	r1, [r5, #4]
    53b8:	e1a00005 	mov	r0, r5
    53bc:	ebfff98a 	bl	39ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)@plt>
    53c0:	e3a03000 	mov	r3, #0
    53c4:	e5cd3000 	strb	r3, [sp]
    53c8:	e594312c 	ldr	r3, [r4, #300]	@ 0x12c
    53cc:	e5942128 	ldr	r2, [r4, #296]	@ 0x128
    53d0:	e5951004 	ldr	r1, [r5, #4]
    53d4:	e1a00005 	mov	r0, r5
    53d8:	ebfff983 	bl	39ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)@plt>
    53dc:	e3a03000 	mov	r3, #0
    53e0:	e5cd3000 	strb	r3, [sp]
    53e4:	e5943138 	ldr	r3, [r4, #312]	@ 0x138
    53e8:	e5942134 	ldr	r2, [r4, #308]	@ 0x134
    53ec:	e5951004 	ldr	r1, [r5, #4]
    53f0:	e1a00005 	mov	r0, r5
    53f4:	ebfff97c 	bl	39ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)@plt>
    53f8:	e3a03000 	mov	r3, #0
    53fc:	e5cd3000 	strb	r3, [sp]
    5400:	e5943144 	ldr	r3, [r4, #324]	@ 0x144
    5404:	e5942140 	ldr	r2, [r4, #320]	@ 0x140
    5408:	e5951004 	ldr	r1, [r5, #4]
    540c:	e1a00005 	mov	r0, r5
    5410:	ebfff975 	bl	39ec <void std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > > >(__gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, __gnu_cxx::__normal_iterator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>*, std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > > >, std::forward_iterator_tag)@plt>
		elements.insert(elements.end(), paramElements.begin(), paramElements.end());
		elements.insert(elements.end(), inputElements.begin(), inputElements.end());
		elements.insert(elements.end(), outputElements.begin(), outputElements.end());
		elements.insert(elements.end(), lightElements.begin(), lightElements.end());
	}
    5414:	e28dd014 	add	sp, sp, #20
    5418:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	__throw_length_error(__N("vector::reserve"));
    541c:	e59f0004 	ldr	r0, [pc, #4]	@ 5428 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)+0x1d0>
    5420:	e08f0000 	add	r0, pc, r0
    5424:	ebfff93d 	bl	3920 <std::__throw_length_error(char const*)@plt>
    5428:	0000153c 	andeq	r1, r0, ip, lsr r5

0000542c <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)>:
    vector<_Tp, _Alloc>::
    542c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5430:	e24dd00c 	sub	sp, sp, #12
      if (__n != 0)
    5434:	e2514000 	subs	r4, r1, #0
    5438:	0a000017 	beq	549c <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x70>
    543c:	e1a05000 	mov	r5, r0
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5440:	e5908004 	ldr	r8, [r0, #4]
    5444:	e590a000 	ldr	sl, [r0]
    5448:	e048600a 	sub	r6, r8, sl
    544c:	e1a09146 	asr	r9, r6, #2
	  if (__size > max_size() || __navail > max_size() - __size)
    5450:	e30f2fff 	movw	r2, #65535	@ 0xffff
    5454:	e3412fff 	movt	r2, #8191	@ 0x1fff
    5458:	e0422009 	sub	r2, r2, r9
					 - this->_M_impl._M_finish);
    545c:	e5903008 	ldr	r3, [r0, #8]
    5460:	e0433008 	sub	r3, r3, r8
	  if (__navail >= __n)
    5464:	e1540143 	cmp	r4, r3, asr #2
    5468:	8a00000d 	bhi	54a4 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x78>
	  _ForwardIterator __cur = __first;
    546c:	e1a03008 	mov	r3, r8
    5470:	e1a01004 	mov	r1, r4
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5474:	e3a02000 	mov	r2, #0
    5478:	e5c32000 	strb	r2, [r3]
    547c:	e5c32001 	strb	r2, [r3, #1]
    5480:	e5c32002 	strb	r2, [r3, #2]
    5484:	e5c32003 	strb	r2, [r3, #3]
	      for (; __n > 0; --__n, (void) ++__cur)
    5488:	e2833004 	add	r3, r3, #4
    548c:	e2511001 	subs	r1, r1, #1
    5490:	1afffff8 	bne	5478 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x4c>
    5494:	e0884104 	add	r4, r8, r4, lsl #2
	      this->_M_impl._M_finish =
    5498:	e5854004 	str	r4, [r5, #4]
    }
    549c:	e28dd00c 	add	sp, sp, #12
    54a0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
	if (max_size() - size() < __n)
    54a4:	e1520004 	cmp	r2, r4
    54a8:	3a00000d 	bcc	54e4 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0xb8>
	const size_type __len = size() + (std::max)(size(), __n);
    54ac:	e1540009 	cmp	r4, r9
    54b0:	20893004 	addcs	r3, r9, r4
    54b4:	30893009 	addcc	r3, r9, r9
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    54b8:	e1590003 	cmp	r9, r3
    54bc:	8a00000b 	bhi	54f0 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0xc4>
    54c0:	e3e0220e 	mvn	r2, #-536870912	@ 0xe0000000
    54c4:	e1530002 	cmp	r3, r2
    54c8:	31a02003 	movcc	r2, r3
    54cc:	e58d2004 	str	r2, [sp, #4]
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    54d0:	e3530000 	cmp	r3, #0
    54d4:	03a03000 	moveq	r3, #0
    54d8:	058d3000 	streq	r3, [sp]
    54dc:	0a000009 	beq	5508 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0xdc>
    54e0:	ea000004 	b	54f8 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0xcc>
	  __throw_length_error(__N(__s));
    54e4:	e59f00bc 	ldr	r0, [pc, #188]	@ 55a8 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x17c>
    54e8:	e08f0000 	add	r0, pc, r0
    54ec:	ebfff90b 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    54f0:	e3e0320e 	mvn	r3, #-536870912	@ 0xe0000000
    54f4:	e58d3004 	str	r3, [sp, #4]
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    54f8:	e59d3004 	ldr	r3, [sp, #4]
    54fc:	e1a00103 	lsl	r0, r3, #2
    5500:	ebfff933 	bl	39d4 <operator new(unsigned int)@plt>
    5504:	e58d0000 	str	r0, [sp]
		      std::__uninitialized_default_n_a(__new_start + __size,
    5508:	e59d3000 	ldr	r3, [sp]
    550c:	e0833006 	add	r3, r3, r6
    5510:	e1a01004 	mov	r1, r4
    5514:	e3a02000 	mov	r2, #0
    5518:	e5c32000 	strb	r2, [r3]
    551c:	e5c32001 	strb	r2, [r3, #1]
    5520:	e5c32002 	strb	r2, [r3, #2]
    5524:	e5c32003 	strb	r2, [r3, #3]
    5528:	e2833004 	add	r3, r3, #4
    552c:	e2511001 	subs	r1, r1, #1
    5530:	1afffff8 	bne	5518 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0xec>
      for (; __first != __last; ++__first, (void)++__cur)
    5534:	e15a0008 	cmp	sl, r8
    5538:	0a00000b 	beq	556c <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x140>
    553c:	e59d3000 	ldr	r3, [sp]
    5540:	e2837004 	add	r7, r3, #4
    5544:	e1a0600a 	mov	r6, sl
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    5548:	e3a0b004 	mov	fp, #4
    554c:	e1a0200b 	mov	r2, fp
    5550:	e1a01006 	mov	r1, r6
    5554:	e2470004 	sub	r0, r7, #4
    5558:	ebfff8e7 	bl	38fc <memcpy@plt>
    555c:	e2866004 	add	r6, r6, #4
    5560:	e2877004 	add	r7, r7, #4
    5564:	e1580006 	cmp	r8, r6
    5568:	1afffff7 	bne	554c <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x120>
	if (__p)
    556c:	e35a0000 	cmp	sl, #0
    5570:	0a000003 	beq	5584 <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x158>
			    this->_M_impl._M_end_of_storage - __old_start);
    5574:	e5951008 	ldr	r1, [r5, #8]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5578:	e041100a 	sub	r1, r1, sl
    557c:	e1a0000a 	mov	r0, sl
    5580:	ebfff8f2 	bl	3950 <operator delete(void*, unsigned int)@plt>
	      this->_M_impl._M_start = __new_start;
    5584:	e59d3000 	ldr	r3, [sp]
    5588:	e5853000 	str	r3, [r5]
	      this->_M_impl._M_finish = __new_start + __size + __n;
    558c:	e0844009 	add	r4, r4, r9
    5590:	e0834104 	add	r4, r3, r4, lsl #2
    5594:	e5854004 	str	r4, [r5, #4]
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    5598:	e59d2004 	ldr	r2, [sp, #4]
    559c:	e0833102 	add	r3, r3, r2, lsl #2
    55a0:	e5853008 	str	r3, [r5, #8]
    }
    55a4:	eaffffbc 	b	549c <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)+0x70>
    55a8:	00001440 	andeq	r1, r0, r0, asr #8

000055ac <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)>:

template<typename ModuleT, typename WidgetT>
plugin::Model *createModel(std::string_view slug)
    55ac:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    55b0:	e24ddf77 	sub	sp, sp, #476	@ 0x1dc
    55b4:	e28d3018 	add	r3, sp, #24
    55b8:	e8830003 	stm	r3, {r0, r1}
    55bc:	e59fb770 	ldr	fp, [pc, #1904]	@ 5d34 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x788>
    55c0:	e08fb00b 	add	fp, pc, fp
    55c4:	e1a06000 	mov	r6, r0
    55c8:	e58d1010 	str	r1, [sp, #16]
      begin() const noexcept
      { return this->_M_str; }

      constexpr const_iterator
      end() const noexcept
      { return this->_M_str + this->_M_len; }
    55cc:	e0812000 	add	r2, r1, r0
    55d0:	e58d200c 	str	r2, [sp, #12]
		_data[i] = '\0';
	}

	constexpr void copy(std::string_view s) {
		size_t i = 0;
		for (auto c : s) {
    55d4:	e1520001 	cmp	r2, r1
    55d8:	0a00001c 	beq	5650 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xa4>
			_data[i++] = c;
    55dc:	e5d13000 	ldrb	r3, [r1]
    55e0:	e5cd305c 	strb	r3, [sp, #92]	@ 0x5c
    55e4:	e28d205c 	add	r2, sp, #92	@ 0x5c
    55e8:	e3a03001 	mov	r3, #1
		for (auto c : s) {
    55ec:	e1560003 	cmp	r6, r3
    55f0:	0a000005 	beq	560c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x60>
			_data[i++] = c;
    55f4:	e2833001 	add	r3, r3, #1
    55f8:	e5f10001 	ldrb	r0, [r1, #1]!
    55fc:	e5e20001 	strb	r0, [r2, #1]!
			if (i >= CAPACITY)
    5600:	e353001f 	cmp	r3, #31
    5604:	1afffff8 	bne	55ec <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x40>
    5608:	ea000000 	b	5610 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x64>
    560c:	e1a03006 	mov	r3, r6
				break;
		}
		_data[i] = '\0';
    5610:	e2833f76 	add	r3, r3, #472	@ 0x1d8
    5614:	e08d3003 	add	r3, sp, r3
    5618:	e3a02000 	mov	r2, #0
    561c:	e543217c 	strb	r2, [r3, #-380]	@ 0xfffffe84
		infos.insert(typeslug, info);
		return already_exists;
	}

	static bool registerModuleType(const ModuleTypeSlug &typeslug, CreateModuleFunc funcCreate) {
		bool already_exists = creation_funcs.key_exists(typeslug);
    5620:	e28dc07c 	add	ip, sp, #124	@ 0x7c
    5624:	e28de05c 	add	lr, sp, #92	@ 0x5c
    5628:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    562c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    5630:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    5634:	e88c000f 	stm	ip, {r0, r1, r2, r3}
		}
		return nullptr;
	}

	bool key_exists(KeyT key) {
		for (auto &k : keys) {
    5638:	e59f36f8 	ldr	r3, [pc, #1784]	@ 5d38 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x78c>
    563c:	e79b7003 	ldr	r7, [fp, r3]
    5640:	e2878901 	add	r8, r7, #16384	@ 0x4000
    5644:	e1a04007 	mov	r4, r7
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
	  return __gnu_cxx::char_traits<char_type>::length(__s);
#endif
	return __builtin_strlen(__s);
    5648:	e28d907c 	add	r9, sp, #124	@ 0x7c
    564c:	ea00000a 	b	567c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xd0>
		size_t i = 0;
    5650:	e3a03000 	mov	r3, #0
    5654:	eaffffed 	b	5610 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x64>
	return __builtin_memcmp(__s1, __s2, __n);
    5658:	e1a02005 	mov	r2, r5
    565c:	e1a01009 	mov	r1, r9
    5660:	e1a00004 	mov	r0, r4
    5664:	ebfff8cb 	bl	3998 <memcmp@plt>
			if (k == key)
    5668:	e3500000 	cmp	r0, #0
    566c:	0a00000b 	beq	56a0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xf4>
		for (auto &k : keys) {
    5670:	e2844020 	add	r4, r4, #32
    5674:	e1580004 	cmp	r8, r4
    5678:	0a000008 	beq	56a0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xf4>
	return __builtin_strlen(__s);
    567c:	e1a00004 	mov	r0, r4
    5680:	ebfff8dc 	bl	39f8 <strlen@plt>
    5684:	e1a05000 	mov	r5, r0
    5688:	e1a00009 	mov	r0, r9
    568c:	ebfff8d9 	bl	39f8 <strlen@plt>

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    5690:	e1550000 	cmp	r5, r0
    5694:	1afffff5 	bne	5670 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xc4>
	if (__n == 0)
    5698:	e3550000 	cmp	r5, #0
    569c:	1affffed 	bne	5658 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0xac>
		creation_funcs.insert(typeslug, funcCreate);
    56a0:	e28dc07c 	add	ip, sp, #124	@ 0x7c
    56a4:	e28de05c 	add	lr, sp, #92	@ 0x5c
    56a8:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    56ac:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    56b0:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    56b4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
		if (idx >= Size)
    56b8:	e59f3678 	ldr	r3, [pc, #1656]	@ 5d38 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x78c>
    56bc:	e79b3003 	ldr	r3, [fp, r3]
    56c0:	e2833901 	add	r3, r3, #16384	@ 0x4000
    56c4:	e593c800 	ldr	ip, [r3, #2048]	@ 0x800
    56c8:	e35c0c02 	cmp	ip, #512	@ 0x200
    56cc:	2a00000f 	bcs	5710 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x164>
		keys[idx] = key;
    56d0:	e59f3660 	ldr	r3, [pc, #1632]	@ 5d38 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x78c>
    56d4:	e79b4003 	ldr	r4, [fp, r3]
    56d8:	e084c28c 	add	ip, r4, ip, lsl #5
    56dc:	e28de07c 	add	lr, sp, #124	@ 0x7c
    56e0:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    56e4:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    56e8:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    56ec:	e88c000f 	stm	ip, {r0, r1, r2, r3}
		vals[idx] = val;
    56f0:	e2843901 	add	r3, r4, #16384	@ 0x4000
    56f4:	e5932800 	ldr	r2, [r3, #2048]	@ 0x800
    56f8:	e59f163c 	ldr	r1, [pc, #1596]	@ 5d3c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x790>
    56fc:	e79b1001 	ldr	r1, [fp, r1]
    5700:	e7831102 	str	r1, [r3, r2, lsl #2]
		idx++;
    5704:	e5932800 	ldr	r2, [r3, #2048]	@ 0x800
    5708:	e2822001 	add	r2, r2, #1
    570c:	e5832800 	str	r2, [r3, #2048]	@ 0x800
		for (auto c : s) {
    5710:	e59d300c 	ldr	r3, [sp, #12]
    5714:	e59d1010 	ldr	r1, [sp, #16]
    5718:	e1530001 	cmp	r3, r1
    571c:	0a00001b 	beq	5790 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x1e4>
			_data[i++] = c;
    5720:	e5d13000 	ldrb	r3, [r1]
    5724:	e5cd305c 	strb	r3, [sp, #92]	@ 0x5c
    5728:	e28d205c 	add	r2, sp, #92	@ 0x5c
    572c:	e3a03001 	mov	r3, #1
		for (auto c : s) {
    5730:	e1560003 	cmp	r6, r3
    5734:	0a000005 	beq	5750 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x1a4>
			_data[i++] = c;
    5738:	e2833001 	add	r3, r3, #1
    573c:	e5f10001 	ldrb	r0, [r1, #1]!
    5740:	e5e20001 	strb	r0, [r2, #1]!
			if (i >= CAPACITY)
    5744:	e353001f 	cmp	r3, #31
    5748:	1afffff8 	bne	5730 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x184>
    574c:	ea000000 	b	5754 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x1a8>
    5750:	e1a03006 	mov	r3, r6
		_data[i] = '\0';
    5754:	e2833f76 	add	r3, r3, #472	@ 0x1d8
    5758:	e08d3003 	add	r3, sp, r3
    575c:	e3a02000 	mov	r2, #0
    5760:	e543217c 	strb	r2, [r3, #-380]	@ 0xfffffe84
			return nullptr;
	}

	// Returns true if slug is valid and registered.
	static bool isValidSlug(const ModuleTypeSlug &typeslug) {
		return infos.key_exists(typeslug) && creation_funcs.key_exists(typeslug);
    5764:	e28dc07c 	add	ip, sp, #124	@ 0x7c
    5768:	e28de05c 	add	lr, sp, #92	@ 0x5c
    576c:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    5770:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    5774:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    5778:	e88c000f 	stm	ip, {r0, r1, r2, r3}
		for (auto &k : keys) {
    577c:	e59f35bc 	ldr	r3, [pc, #1468]	@ 5d40 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x794>
    5780:	e79b4003 	ldr	r4, [fp, r3]
    5784:	e284a901 	add	sl, r4, #16384	@ 0x4000
	return __builtin_strlen(__s);
    5788:	e28d907c 	add	r9, sp, #124	@ 0x7c
    578c:	ea00000a 	b	57bc <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x210>
		size_t i = 0;
    5790:	e3a03000 	mov	r3, #0
    5794:	eaffffee 	b	5754 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x1a8>
	return __builtin_memcmp(__s1, __s2, __n);
    5798:	e1a02005 	mov	r2, r5
    579c:	e1a01009 	mov	r1, r9
    57a0:	e1a00004 	mov	r0, r4
    57a4:	ebfff87b 	bl	3998 <memcmp@plt>
			if (k == key)
    57a8:	e3500000 	cmp	r0, #0
    57ac:	0a00000c 	beq	57e4 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x238>
		for (auto &k : keys) {
    57b0:	e2844020 	add	r4, r4, #32
    57b4:	e154000a 	cmp	r4, sl
    57b8:	0a000027 	beq	585c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2b0>
		return length();
	}

	template<size_t CAP2>
	bool operator==(const StaticString<CAP2> &rhs) const {
		return std::string_view{_data} == std::string_view{rhs};
    57bc:	e58d4008 	str	r4, [sp, #8]
	return __builtin_strlen(__s);
    57c0:	e1a00004 	mov	r0, r4
    57c4:	ebfff88b 	bl	39f8 <strlen@plt>
    57c8:	e1a05000 	mov	r5, r0
    57cc:	e1a00009 	mov	r0, r9
    57d0:	ebfff888 	bl	39f8 <strlen@plt>
    57d4:	e1550000 	cmp	r5, r0
    57d8:	1afffff4 	bne	57b0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x204>
	if (__n == 0)
    57dc:	e3550000 	cmp	r5, #0
    57e0:	1affffec 	bne	5798 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x1ec>
    57e4:	e28dc07c 	add	ip, sp, #124	@ 0x7c
    57e8:	e28de05c 	add	lr, sp, #92	@ 0x5c
    57ec:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    57f0:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    57f4:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    57f8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
    57fc:	e1a04007 	mov	r4, r7
	return __builtin_strlen(__s);
    5800:	e28d907c 	add	r9, sp, #124	@ 0x7c
    5804:	ea000008 	b	582c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x280>
	return __builtin_memcmp(__s1, __s2, __n);
    5808:	e1a02005 	mov	r2, r5
    580c:	e1a01009 	mov	r1, r9
    5810:	e1a00004 	mov	r0, r4
    5814:	ebfff85f 	bl	3998 <memcmp@plt>
			if (k == key)
    5818:	e3500000 	cmp	r0, #0
    581c:	0a00000b 	beq	5850 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2a4>
		for (auto &k : keys) {
    5820:	e2844020 	add	r4, r4, #32
    5824:	e1540008 	cmp	r4, r8
    5828:	0a00000b 	beq	585c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2b0>
	return __builtin_strlen(__s);
    582c:	e1a00004 	mov	r0, r4
    5830:	ebfff870 	bl	39f8 <strlen@plt>
    5834:	e1a05000 	mov	r5, r0
    5838:	e1a00009 	mov	r0, r9
    583c:	ebfff86d 	bl	39f8 <strlen@plt>
    5840:	e1550000 	cmp	r5, r0
    5844:	1afffff5 	bne	5820 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x274>
	if (__n == 0)
    5848:	e3550000 	cmp	r5, #0
    584c:	1affffed 	bne	5808 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x25c>
		// TODO: create a Model type which refers to ModuleT and WidgetT, and return a ptr to a static instance of it
		return nullptr;
	}

	return nullptr;
}
    5850:	e3a00000 	mov	r0, #0
    5854:	e28ddf77 	add	sp, sp, #476	@ 0x1dc
    5858:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		static ModuleT module; //400k
    585c:	e59f34e0 	ldr	r3, [pc, #1248]	@ 5d44 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x798>
    5860:	e79b3003 	ldr	r3, [fp, r3]
    5864:	e5933000 	ldr	r3, [r3]
    5868:	e3130001 	tst	r3, #1
    586c:	0a000055 	beq	59c8 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x41c>
*/
struct Vec {
	float x = 0.f;
	float y = 0.f;

	Vec() = default;
    5870:	e3a02000 	mov	r2, #0
    5874:	e58d2080 	str	r2, [sp, #128]	@ 0x80
    5878:	e58d2084 	str	r2, [sp, #132]	@ 0x84
    587c:	e58d2088 	str	r2, [sp, #136]	@ 0x88
    5880:	e58d208c 	str	r2, [sp, #140]	@ 0x8c
    struct _Uninitialized<_Type, true>
    {
      template<typename... _Args>
	constexpr
	_Uninitialized(in_place_index_t<0>, _Args&&... __args)
	: _M_storage(std::forward<_Args>(__args)...)
    5884:	f2c00010 	vmov.i32	d16, #0	@ 0x00000000
    5888:	edcd0b24 	vstr	d16, [sp, #144]	@ 0x90
    588c:	edcd0b25 	vstr	d16, [sp, #148]	@ 0x94
      : _M_len{0}, _M_str{nullptr}
    5890:	e3a03000 	mov	r3, #0
    5894:	e58d309c 	str	r3, [sp, #156]	@ 0x9c
    5898:	e58d30a0 	str	r3, [sp, #160]	@ 0xa0
    589c:	e58d30a4 	str	r3, [sp, #164]	@ 0xa4
    58a0:	e58d30a8 	str	r3, [sp, #168]	@ 0xa8

      template<size_t _Np, typename... _Args>
	constexpr
	_Variant_storage(in_place_index_t<_Np>, _Args&&... __args)
	: _M_u(in_place_index<_Np>, std::forward<_Args>(__args)...),
	_M_index{_Np}
    58a4:	e5cd3104 	strb	r3, [sp, #260]	@ 0x104
struct Widget {
    58a8:	e59f1498 	ldr	r1, [pc, #1176]	@ 5d48 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x79c>
    58ac:	e79b1001 	ldr	r1, [fp, r1]
    58b0:	e2811008 	add	r1, r1, #8
    58b4:	e58d110c 	str	r1, [sp, #268]	@ 0x10c
    58b8:	e58d2110 	str	r2, [sp, #272]	@ 0x110
    58bc:	e58d2114 	str	r2, [sp, #276]	@ 0x114
    58c0:	e58d2118 	str	r2, [sp, #280]	@ 0x118
    58c4:	e58d211c 	str	r2, [sp, #284]	@ 0x11c
	: _M_storage(std::forward<_Args>(__args)...)
    58c8:	edcd0b48 	vstr	d16, [sp, #288]	@ 0x120
    58cc:	edcd0b49 	vstr	d16, [sp, #292]	@ 0x124
    58d0:	e58d312c 	str	r3, [sp, #300]	@ 0x12c
    58d4:	e58d3130 	str	r3, [sp, #304]	@ 0x130
    58d8:	e58d3134 	str	r3, [sp, #308]	@ 0x134
    58dc:	e58d3138 	str	r3, [sp, #312]	@ 0x138
	_M_index{_Np}
    58e0:	e5cd3194 	strb	r3, [sp, #404]	@ 0x194
	: _M_start(), _M_finish(), _M_end_of_storage()
    58e4:	e58d3198 	str	r3, [sp, #408]	@ 0x198
    58e8:	e58d319c 	str	r3, [sp, #412]	@ 0x19c
    58ec:	e58d31a0 	str	r3, [sp, #416]	@ 0x1a0
    58f0:	e58d31a4 	str	r3, [sp, #420]	@ 0x1a4
    58f4:	e58d31a8 	str	r3, [sp, #424]	@ 0x1a8
    58f8:	e58d31ac 	str	r3, [sp, #428]	@ 0x1ac
    58fc:	e58d31b0 	str	r3, [sp, #432]	@ 0x1b0
    5900:	e58d31b4 	str	r3, [sp, #436]	@ 0x1b4
    5904:	e58d31b8 	str	r3, [sp, #440]	@ 0x1b8
    5908:	e58d31bc 	str	r3, [sp, #444]	@ 0x1bc
    590c:	e58d31c0 	str	r3, [sp, #448]	@ 0x1c0
    5910:	e58d31c4 	str	r3, [sp, #452]	@ 0x1c4
	TestWidget(TestModule *module) {
    5914:	e59f3430 	ldr	r3, [pc, #1072]	@ 5d4c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7a0>
    5918:	e79b3003 	ldr	r3, [fp, r3]
    591c:	e2833008 	add	r3, r3, #8
    5920:	e58d307c 	str	r3, [sp, #124]	@ 0x7c
		module = m;
    5924:	e59f3424 	ldr	r3, [pc, #1060]	@ 5d50 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7a4>
    5928:	e79b3003 	ldr	r3, [fp, r3]
    592c:	e58d3108 	str	r3, [sp, #264]	@ 0x108
		static std::vector<MetaModule::Element> elements;
    5930:	e59f341c 	ldr	r3, [pc, #1052]	@ 5d54 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7a8>
    5934:	e79b3003 	ldr	r3, [fp, r3]
    5938:	e5933000 	ldr	r3, [r3]
    593c:	e3130001 	tst	r3, #1
    5940:	0a000052 	beq	5a90 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x4e4>
		static std::vector<ElementCount::Indices> indices;
    5944:	e59f340c 	ldr	r3, [pc, #1036]	@ 5d58 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7ac>
    5948:	e79b3003 	ldr	r3, [fp, r3]
    594c:	e5933000 	ldr	r3, [r3]
    5950:	e3130001 	tst	r3, #1
    5954:	0a00005d 	beq	5ad0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x524>
		mw.populate_elements(elements);
    5958:	e59f33fc 	ldr	r3, [pc, #1020]	@ 5d5c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b0>
    595c:	e79b4003 	ldr	r4, [fp, r3]
    5960:	e1a01004 	mov	r1, r4
    5964:	e28d007c 	add	r0, sp, #124	@ 0x7c
    5968:	ebfff7d4 	bl	38c0 <rack::ModuleWidget::populate_elements(std::vector<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3>, std::allocator<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> > >&)@plt>
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    596c:	e5943004 	ldr	r3, [r4, #4]
    5970:	e5942000 	ldr	r2, [r4]
    5974:	e0433002 	sub	r3, r3, r2
    5978:	e1a031c3 	asr	r3, r3, #3
    597c:	e30e2eef 	movw	r2, #61167	@ 0xeeef
    5980:	e34e2eee 	movt	r2, #61166	@ 0xeeee
    5984:	e0030392 	mul	r3, r2, r3
    5988:	e59f23d0 	ldr	r2, [pc, #976]	@ 5d60 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b4>
    598c:	e79b2002 	ldr	r2, [fp, r2]
    5990:	e5920004 	ldr	r0, [r2, #4]
    5994:	e5922000 	ldr	r2, [r2]
    5998:	e0401002 	sub	r1, r0, r2
    599c:	e1a01141 	asr	r1, r1, #2
	if (__new_size > size())
    59a0:	e1530001 	cmp	r3, r1
    59a4:	8a000059 	bhi	5b10 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x564>
	else if (__new_size < size())
    59a8:	e1530001 	cmp	r3, r1
    59ac:	2a00005d 	bcs	5b28 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x57c>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    59b0:	e0822103 	add	r2, r2, r3, lsl #2
	if (size_type __n = this->_M_impl._M_finish - __pos)
    59b4:	e1500002 	cmp	r0, r2
	    this->_M_impl._M_finish = __pos;
    59b8:	159f33a0 	ldrne	r3, [pc, #928]	@ 5d60 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b4>
    59bc:	179b3003 	ldrne	r3, [fp, r3]
    59c0:	15832004 	strne	r2, [r3, #4]
    59c4:	ea000057 	b	5b28 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x57c>
struct Module : VCVModuleWrapper {
    59c8:	e59f3380 	ldr	r3, [pc, #896]	@ 5d50 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7a4>
    59cc:	e79b4003 	ldr	r4, [fp, r3]
    59d0:	e1a00004 	mov	r0, r4
    59d4:	ebfff7fb 	bl	39c8 <VCVModuleWrapper::VCVModuleWrapper()@plt>
    59d8:	e3a03000 	mov	r3, #0
    59dc:	e5843050 	str	r3, [r4, #80]	@ 0x50
    59e0:	f3c70e1f 	vmov.i8	d16, #255	@ 0xff
    59e4:	edc40b16 	vstr	d16, [r4, #88]	@ 0x58
	: _M_start(), _M_finish(), _M_end_of_storage()
    59e8:	e5843060 	str	r3, [r4, #96]	@ 0x60
    59ec:	e5843064 	str	r3, [r4, #100]	@ 0x64
    59f0:	e5843068 	str	r3, [r4, #104]	@ 0x68
    59f4:	e584306c 	str	r3, [r4, #108]	@ 0x6c
    59f8:	e5843070 	str	r3, [r4, #112]	@ 0x70
    59fc:	e5843074 	str	r3, [r4, #116]	@ 0x74
    5a00:	e5843078 	str	r3, [r4, #120]	@ 0x78
    5a04:	e584307c 	str	r3, [r4, #124]	@ 0x7c
    5a08:	e5843080 	str	r3, [r4, #128]	@ 0x80
	struct Expander {
    5a0c:	edc40b22 	vstr	d16, [r4, #136]	@ 0x88
    5a10:	e5843090 	str	r3, [r4, #144]	@ 0x90
    5a14:	e5843094 	str	r3, [r4, #148]	@ 0x94
    5a18:	e5843098 	str	r3, [r4, #152]	@ 0x98
    5a1c:	e5c4309c 	strb	r3, [r4, #156]	@ 0x9c
    5a20:	edc40b28 	vstr	d16, [r4, #160]	@ 0xa0
    5a24:	e58430a8 	str	r3, [r4, #168]	@ 0xa8
    5a28:	e58430ac 	str	r3, [r4, #172]	@ 0xac
    5a2c:	e58430b0 	str	r3, [r4, #176]	@ 0xb0
    5a30:	e5c430b4 	strb	r3, [r4, #180]	@ 0xb4
	TestModule() {
    5a34:	e59f2328 	ldr	r2, [pc, #808]	@ 5d64 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b8>
    5a38:	e79b2002 	ldr	r2, [fp, r2]
    5a3c:	e2822008 	add	r2, r2, #8
    5a40:	e5842000 	str	r2, [r4]
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
    5a44:	e58d3000 	str	r3, [sp]
    5a48:	e3a03001 	mov	r3, #1
    5a4c:	e1a02003 	mov	r2, r3
    5a50:	e1a01003 	mov	r1, r3
    5a54:	e1a00004 	mov	r0, r4
    5a58:	ebfff7d4 	bl	39b0 <rack::engine::Module::config(unsigned int, unsigned int, unsigned int, unsigned int)@plt>
		static ModuleT module; //400k
    5a5c:	e59f32e0 	ldr	r3, [pc, #736]	@ 5d44 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x798>
    5a60:	e79b3003 	ldr	r3, [fp, r3]
    5a64:	e3a02001 	mov	r2, #1
    5a68:	e5832000 	str	r2, [r3]
    5a6c:	e59f32f4 	ldr	r3, [pc, #756]	@ 5d68 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7bc>
    5a70:	e79b3003 	ldr	r3, [fp, r3]
    5a74:	e58d3008 	str	r3, [sp, #8]
    5a78:	e59f22ec 	ldr	r2, [pc, #748]	@ 5d6c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7c0>
    5a7c:	e08f2002 	add	r2, pc, r2
    5a80:	e1a01003 	mov	r1, r3
    5a84:	e1a00004 	mov	r0, r4
    5a88:	ebfff7dd 	bl	3a04 <__aeabi_atexit@plt>
    5a8c:	eaffff77 	b	5870 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2c4>
		static std::vector<MetaModule::Element> elements;
    5a90:	e59f32bc 	ldr	r3, [pc, #700]	@ 5d54 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7a8>
    5a94:	e79b3003 	ldr	r3, [fp, r3]
    5a98:	e3a02001 	mov	r2, #1
    5a9c:	e5832000 	str	r2, [r3]
    5aa0:	e59f32c8 	ldr	r3, [pc, #712]	@ 5d70 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7c4>
    5aa4:	e79b3003 	ldr	r3, [fp, r3]
    5aa8:	e58d3008 	str	r3, [sp, #8]
    5aac:	e59f32a8 	ldr	r3, [pc, #680]	@ 5d5c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b0>
    5ab0:	e79b3003 	ldr	r3, [fp, r3]
    5ab4:	e58d3014 	str	r3, [sp, #20]
    5ab8:	e59f22b4 	ldr	r2, [pc, #692]	@ 5d74 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7c8>
    5abc:	e08f2002 	add	r2, pc, r2
    5ac0:	e59d1008 	ldr	r1, [sp, #8]
    5ac4:	e1a00003 	mov	r0, r3
    5ac8:	ebfff7cd 	bl	3a04 <__aeabi_atexit@plt>
    5acc:	eaffff9c 	b	5944 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x398>
		static std::vector<ElementCount::Indices> indices;
    5ad0:	e59f3280 	ldr	r3, [pc, #640]	@ 5d58 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7ac>
    5ad4:	e79b3003 	ldr	r3, [fp, r3]
    5ad8:	e3a02001 	mov	r2, #1
    5adc:	e5832000 	str	r2, [r3]
    5ae0:	e59f3290 	ldr	r3, [pc, #656]	@ 5d78 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7cc>
    5ae4:	e79b3003 	ldr	r3, [fp, r3]
    5ae8:	e58d3008 	str	r3, [sp, #8]
    5aec:	e59f326c 	ldr	r3, [pc, #620]	@ 5d60 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b4>
    5af0:	e79b3003 	ldr	r3, [fp, r3]
    5af4:	e58d3014 	str	r3, [sp, #20]
    5af8:	e59f227c 	ldr	r2, [pc, #636]	@ 5d7c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7d0>
    5afc:	e08f2002 	add	r2, pc, r2
    5b00:	e59d1008 	ldr	r1, [sp, #8]
    5b04:	e1a00003 	mov	r0, r3
    5b08:	ebfff7bd 	bl	3a04 <__aeabi_atexit@plt>
    5b0c:	eaffff91 	b	5958 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x3ac>
	  _M_default_append(__new_size - size());
    5b10:	e59f2248 	ldr	r2, [pc, #584]	@ 5d60 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b4>
    5b14:	e79b2002 	ldr	r2, [fp, r2]
    5b18:	e58d2008 	str	r2, [sp, #8]
    5b1c:	e0431001 	sub	r1, r3, r1
    5b20:	e1a00002 	mov	r0, r2
    5b24:	ebfff7a4 	bl	39bc <std::vector<ElementCount::Indices, std::allocator<ElementCount::Indices> >::_M_default_append(unsigned int)@plt>
      { return _M_data_ptr(this->_M_impl._M_start); }
    5b28:	e59f322c 	ldr	r3, [pc, #556]	@ 5d5c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b0>
    5b2c:	e79b5003 	ldr	r5, [fp, r3]
    5b30:	e5952000 	ldr	r2, [r5]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5b34:	e5953004 	ldr	r3, [r5, #4]
    5b38:	e0433002 	sub	r3, r3, r2
    5b3c:	e1a031c3 	asr	r3, r3, #3
    5b40:	e30e1eef 	movw	r1, #61167	@ 0xeeef
    5b44:	e34e1eee 	movt	r1, #61166	@ 0xeeee
    5b48:	e0030391 	mul	r3, r1, r3
      template<contiguous_iterator _It>
	requires __is_compatible_ref<iter_reference_t<_It>>::value
	constexpr explicit(extent != dynamic_extent)
	span(_It __first, size_type __count)
	noexcept
	: _M_ptr(std::to_address(__first)), _M_extent(__count)
    5b4c:	e58d21c8 	str	r2, [sp, #456]	@ 0x1c8
	: _M_extent_value(__extent)
    5b50:	e58d31cc 	str	r3, [sp, #460]	@ 0x1cc
      { return _M_data_ptr(this->_M_impl._M_start); }
    5b54:	e59f3204 	ldr	r3, [pc, #516]	@ 5d60 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x7b4>
    5b58:	e79b4003 	ldr	r4, [fp, r3]
    5b5c:	e5942000 	ldr	r2, [r4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5b60:	e5943004 	ldr	r3, [r4, #4]
    5b64:	e0433002 	sub	r3, r3, r2
    5b68:	e1a03143 	asr	r3, r3, #2
	: _M_ptr(std::to_address(__first)), _M_extent(__count)
    5b6c:	e58d21d0 	str	r2, [sp, #464]	@ 0x1d0
	: _M_extent_value(__extent)
    5b70:	e58d31d4 	str	r3, [sp, #468]	@ 0x1d4
		ElementCount::get_indices(elements, indices);
    5b74:	e28d3f76 	add	r3, sp, #472	@ 0x1d8
    5b78:	e913000c 	ldmdb	r3, {r2, r3}
    5b7c:	e28d1f72 	add	r1, sp, #456	@ 0x1c8
    5b80:	e8910003 	ldm	r1, {r0, r1}
    5b84:	ebfff750 	bl	38cc <ElementCount::get_indices(std::span<std::variant<MetaModule::NullElement, MetaModule::Knob, MetaModule::Slider, MetaModule::SliderLight, MetaModule::FlipSwitch, MetaModule::SlideSwitch, MetaModule::MomentaryButton, MetaModule::MomentaryButtonWhiteLight, MetaModule::MomentaryButtonRGB, MetaModule::LatchingButton, MetaModule::Encoder, MetaModule::EncoderRGB, MetaModule::JackInput, MetaModule::JackOutput, MetaModule::MonoLight, MetaModule::DualLight, MetaModule::RgbLight, MetaModule::Display, MetaModule::AltParamToggle2, MetaModule::AltParamToggle3> const, 4294967295u>, std::span<ElementCount::Indices, 4294967295u>)@plt>
      { return _M_data_ptr(this->_M_impl._M_start); }
    5b88:	e5959000 	ldr	r9, [r5]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5b8c:	e5953004 	ldr	r3, [r5, #4]
    5b90:	e58d3014 	str	r3, [sp, #20]
		info.description = slug;
    5b94:	e28d3018 	add	r3, sp, #24
    5b98:	e8930003 	ldm	r3, {r0, r1}
    5b9c:	e28d3020 	add	r3, sp, #32
    5ba0:	e8830003 	stm	r3, {r0, r1}
      { return _M_data_ptr(this->_M_impl._M_start); }
    5ba4:	e5945000 	ldr	r5, [r4]
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5ba8:	e5943004 	ldr	r3, [r4, #4]
    5bac:	e58d3008 	str	r3, [sp, #8]
		for (auto c : s) {
    5bb0:	e59d300c 	ldr	r3, [sp, #12]
    5bb4:	e59d1010 	ldr	r1, [sp, #16]
    5bb8:	e1530001 	cmp	r3, r1
    5bbc:	0a000017 	beq	5c20 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x674>
			_data[i++] = c;
    5bc0:	e5d13000 	ldrb	r3, [r1]
    5bc4:	e5cd303c 	strb	r3, [sp, #60]	@ 0x3c
    5bc8:	e28d203c 	add	r2, sp, #60	@ 0x3c
    5bcc:	e3a03001 	mov	r3, #1
		for (auto c : s) {
    5bd0:	e1560003 	cmp	r6, r3
    5bd4:	0a000005 	beq	5bf0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x644>
			_data[i++] = c;
    5bd8:	e2833001 	add	r3, r3, #1
    5bdc:	e5f10001 	ldrb	r0, [r1, #1]!
    5be0:	e5e20001 	strb	r0, [r2, #1]!
			if (i >= CAPACITY)
    5be4:	e353001f 	cmp	r3, #31
    5be8:	1afffff8 	bne	5bd0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x624>
			_data[i++] = c;
    5bec:	e1a06003 	mov	r6, r3
		_data[i] = '\0';
    5bf0:	e2863f76 	add	r3, r6, #472	@ 0x1d8
    5bf4:	e08d6003 	add	r6, sp, r3
    5bf8:	e3a03000 	mov	r3, #0
    5bfc:	e546319c 	strb	r3, [r6, #-412]	@ 0xfffffe64
		bool already_exists = creation_funcs.key_exists(typeslug);
    5c00:	e28dc05c 	add	ip, sp, #92	@ 0x5c
    5c04:	e28de03c 	add	lr, sp, #60	@ 0x3c
    5c08:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    5c0c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    5c10:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    5c14:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	return __builtin_strlen(__s);
    5c18:	e28d605c 	add	r6, sp, #92	@ 0x5c
    5c1c:	ea00000a 	b	5c4c <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x6a0>
		size_t i = 0;
    5c20:	e3a06000 	mov	r6, #0
    5c24:	eafffff1 	b	5bf0 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x644>
	return __builtin_memcmp(__s1, __s2, __n);
    5c28:	e1a02004 	mov	r2, r4
    5c2c:	e1a01006 	mov	r1, r6
    5c30:	e1a00007 	mov	r0, r7
    5c34:	ebfff757 	bl	3998 <memcmp@plt>
			if (k == key)
    5c38:	e3500000 	cmp	r0, #0
    5c3c:	0a00000b 	beq	5c70 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x6c4>
		for (auto &k : keys) {
    5c40:	e2877020 	add	r7, r7, #32
    5c44:	e1570008 	cmp	r7, r8
    5c48:	0a000008 	beq	5c70 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x6c4>
	return __builtin_strlen(__s);
    5c4c:	e1a00007 	mov	r0, r7
    5c50:	ebfff768 	bl	39f8 <strlen@plt>
    5c54:	e1a04000 	mov	r4, r0
    5c58:	e1a00006 	mov	r0, r6
    5c5c:	ebfff765 	bl	39f8 <strlen@plt>
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    5c60:	e1540000 	cmp	r4, r0
    5c64:	1afffff5 	bne	5c40 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x694>
	if (__n == 0)
    5c68:	e3540000 	cmp	r4, #0
    5c6c:	1affffed 	bne	5c28 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x67c>
		infos.insert(typeslug, info);
    5c70:	e28dc05c 	add	ip, sp, #92	@ 0x5c
    5c74:	e28de03c 	add	lr, sp, #60	@ 0x3c
    5c78:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    5c7c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    5c80:	e89e000f 	ldm	lr, {r0, r1, r2, r3}
    5c84:	e88c000f 	stm	ip, {r0, r1, r2, r3}
		if (idx >= Size)
    5c88:	e59f30b0 	ldr	r3, [pc, #176]	@ 5d40 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x794>
    5c8c:	e79b3003 	ldr	r3, [fp, r3]
    5c90:	e2833a07 	add	r3, r3, #28672	@ 0x7000
    5c94:	e593e800 	ldr	lr, [r3, #2048]	@ 0x800
    5c98:	e35e0c02 	cmp	lr, #512	@ 0x200
    5c9c:	2afffeeb 	bcs	5850 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2a4>
		keys[idx] = key;
    5ca0:	e59f3098 	ldr	r3, [pc, #152]	@ 5d40 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x794>
    5ca4:	e79bc003 	ldr	ip, [fp, r3]
    5ca8:	e08ce28e 	add	lr, ip, lr, lsl #5
    5cac:	e28d405c 	add	r4, sp, #92	@ 0x5c
    5cb0:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
    5cb4:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
    5cb8:	e894000f 	ldm	r4, {r0, r1, r2, r3}
    5cbc:	e88e000f 	stm	lr, {r0, r1, r2, r3}
		vals[idx] = val;
    5cc0:	e28c4a07 	add	r4, ip, #28672	@ 0x7000
    5cc4:	e5941800 	ldr	r1, [r4, #2048]	@ 0x800
    5cc8:	e3a03001 	mov	r3, #1
    5ccc:	e58d3028 	str	r3, [sp, #40]	@ 0x28
    5cd0:	e58d902c 	str	r9, [sp, #44]	@ 0x2c
    5cd4:	e59d3014 	ldr	r3, [sp, #20]
    5cd8:	e0433009 	sub	r3, r3, r9
    5cdc:	e1a031c3 	asr	r3, r3, #3
    5ce0:	e30e2eef 	movw	r2, #61167	@ 0xeeef
    5ce4:	e34e2eee 	movt	r2, #61166	@ 0xeeee
    5ce8:	e0030392 	mul	r3, r2, r3
    5cec:	e58d3030 	str	r3, [sp, #48]	@ 0x30
    5cf0:	e58d5034 	str	r5, [sp, #52]	@ 0x34
    5cf4:	e59d3008 	ldr	r3, [sp, #8]
    5cf8:	e0433005 	sub	r3, r3, r5
    5cfc:	e1a03143 	asr	r3, r3, #2
    5d00:	e58d3038 	str	r3, [sp, #56]	@ 0x38
    5d04:	e3a0301c 	mov	r3, #28
    5d08:	e02cc193 	mla	ip, r3, r1, ip
    5d0c:	e28cc901 	add	ip, ip, #16384	@ 0x4000
    5d10:	e28de020 	add	lr, sp, #32
    5d14:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
    5d18:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
    5d1c:	e89e0007 	ldm	lr, {r0, r1, r2}
    5d20:	e88c0007 	stm	ip, {r0, r1, r2}
		idx++;
    5d24:	e5943800 	ldr	r3, [r4, #2048]	@ 0x800
    5d28:	e2833001 	add	r3, r3, #1
    5d2c:	e5843800 	str	r3, [r4, #2048]	@ 0x800
		return true;
    5d30:	eafffec6 	b	5850 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)+0x2a4>
    5d34:	00002600 	andeq	r2, r0, r0, lsl #12
    5d38:	000000d4 	ldrdeq	r0, [r0], -r4
    5d3c:	000000f4 	strdeq	r0, [r0], -r4
    5d40:	0000008c 	andeq	r0, r0, ip, lsl #1
    5d44:	000000ec 	andeq	r0, r0, ip, ror #1
    5d48:	00000110 	andeq	r0, r0, r0, lsl r1
    5d4c:	000000f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    5d50:	000000cc 	andeq	r0, r0, ip, asr #1
    5d54:	00000114 	andeq	r0, r0, r4, lsl r1
    5d58:	00000098 	muleq	r0, r8, r0
    5d5c:	00000094 	muleq	r0, r4, r0
    5d60:	000000e4 	andeq	r0, r0, r4, ror #1
    5d64:	000000a8 	andeq	r0, r0, r8, lsr #1
    5d68:	00000104 	andeq	r0, r0, r4, lsl #2
    5d6c:	00002268 	andeq	r2, r0, r8, ror #4
    5d70:	000000c8 	andeq	r0, r0, r8, asr #1
    5d74:	00002228 	andeq	r2, r0, r8, lsr #4
    5d78:	0000011c 	andeq	r0, r0, ip, lsl r1
    5d7c:	000021e8 	andeq	r2, r0, r8, ror #3

00005d80 <__static_initialization_and_destruction_0(int, int)>:
		// addInput(createInput<PJ301MPort>(Vec(7, 28), module, TestModule::A1_INPUT));
		// addOutput(createOutput<PJ301MPort>(Vec(7, 154), module, TestModule::OUT1_OUTPUT));
	}
};

Model *modelTest = createModel<TestModule, TestWidget>("TestModuleSlug");
    5d80:	e92d4010 	push	{r4, lr}
    5d84:	e24dd010 	sub	sp, sp, #16
    5d88:	e59f43d4 	ldr	r4, [pc, #980]	@ 6164 <__static_initialization_and_destruction_0(int, int)+0x3e4>
    5d8c:	e08f4004 	add	r4, pc, r4
    5d90:	e30f3fff 	movw	r3, #65535	@ 0xffff
    5d94:	e3500001 	cmp	r0, #1
    5d98:	01510003 	cmpeq	r1, r3
    5d9c:	0a000001 	beq	5da8 <__static_initialization_and_destruction_0(int, int)+0x28>
    5da0:	e28dd010 	add	sp, sp, #16
    5da4:	e8bd8010 	pop	{r4, pc}
	// Persistent state, serialized to settings.json.

	/** Launches Rack without loading plugins or the autosave patch. Always set to false when settings are saved. */
	static inline bool safeMode;
	/** vcvrack.com user token */
	static inline std::string token;
    5da8:	e59f33b8 	ldr	r3, [pc, #952]	@ 6168 <__static_initialization_and_destruction_0(int, int)+0x3e8>
    5dac:	e7943003 	ldr	r3, [r4, r3]
    5db0:	e5933000 	ldr	r3, [r3]
    5db4:	e3130001 	tst	r3, #1
    5db8:	0a000053 	beq	5f0c <__static_initialization_and_destruction_0(int, int)+0x18c>
	/** Ratio between UI pixel and physical screen pixel.
0 for auto.
*/
	static inline float pixelRatio;
	/** Name of UI theme, specified in ui::refreshTheme() */
	static inline std::string uiTheme;
    5dbc:	e59f33a8 	ldr	r3, [pc, #936]	@ 616c <__static_initialization_and_destruction_0(int, int)+0x3ec>
    5dc0:	e7943003 	ldr	r3, [r4, r3]
    5dc4:	e5933000 	ldr	r3, [r3]
    5dc8:	e3130001 	tst	r3, #1
    5dcc:	0a000061 	beq	5f58 <__static_initialization_and_destruction_0(int, int)+0x1d8>
	/** Maximum screen redraw frequency in Hz, or 0 for unlimited. */
	static inline float frameRateLimit;
	/** Interval between autosaves in seconds. */
	static inline float autosaveInterval;
	static inline bool skipLoadOnLaunch;
	static inline std::list<std::string> recentPatchPaths;
    5dd0:	e59f3398 	ldr	r3, [pc, #920]	@ 6170 <__static_initialization_and_destruction_0(int, int)+0x3f0>
    5dd4:	e7943003 	ldr	r3, [r4, r3]
    5dd8:	e5933000 	ldr	r3, [r3]
    5ddc:	e3130001 	tst	r3, #1
    5de0:	0a00006f 	beq	5fa4 <__static_initialization_and_destruction_0(int, int)+0x224>
	static inline std::vector<NVGcolor> cableColors;
    5de4:	e59f3388 	ldr	r3, [pc, #904]	@ 6174 <__static_initialization_and_destruction_0(int, int)+0x3f4>
    5de8:	e7943003 	ldr	r3, [r4, r3]
    5dec:	e5933000 	ldr	r3, [r3]
    5df0:	e3130001 	tst	r3, #1
    5df4:	0a00007c 	beq	5fec <__static_initialization_and_destruction_0(int, int)+0x26c>
		bool favorite = false;
		int added = 0;
		double lastAdded = NAN;
	};
	/** pluginSlug -> (moduleSlug -> ModuleInfo) */
	static inline std::map<std::string, std::map<std::string, ModuleInfo>> moduleInfos;
    5df8:	e59f3378 	ldr	r3, [pc, #888]	@ 6178 <__static_initialization_and_destruction_0(int, int)+0x3f8>
    5dfc:	e7943003 	ldr	r3, [r4, r3]
    5e00:	e5933000 	ldr	r3, [r3]
    5e04:	e3130001 	tst	r3, #1
    5e08:	0a000087 	beq	602c <__static_initialization_and_destruction_0(int, int)+0x2ac>
*/
	struct PluginWhitelist {
		bool subscribed = false;
		std::set<std::string> moduleSlugs;
	};
	static inline std::map<std::string, PluginWhitelist> moduleWhitelist;
    5e0c:	e59f3368 	ldr	r3, [pc, #872]	@ 617c <__static_initialization_and_destruction_0(int, int)+0x3fc>
    5e10:	e7943003 	ldr	r3, [r4, r3]
    5e14:	e5933000 	ldr	r3, [r3]
    5e18:	e3130001 	tst	r3, #1
    5e1c:	0a000097 	beq	6080 <__static_initialization_and_destruction_0(int, int)+0x300>
	static inline ModuleInfoView nullinfo{};

private:
	static constexpr int MAX_MODULE_TYPES = 512;

	static inline SeqMap<ModuleTypeSlug, CreateModuleFunc, MAX_MODULE_TYPES> creation_funcs;
    5e20:	e59f3358 	ldr	r3, [pc, #856]	@ 6180 <__static_initialization_and_destruction_0(int, int)+0x400>
    5e24:	e7943003 	ldr	r3, [r4, r3]
    5e28:	e5933000 	ldr	r3, [r3]
    5e2c:	e3130001 	tst	r3, #1
    5e30:	1a00000f 	bne	5e74 <__static_initialization_and_destruction_0(int, int)+0xf4>
    5e34:	e59f3344 	ldr	r3, [pc, #836]	@ 6180 <__static_initialization_and_destruction_0(int, int)+0x400>
    5e38:	e7943003 	ldr	r3, [r4, r3]
    5e3c:	e3a02001 	mov	r2, #1
    5e40:	e5832000 	str	r2, [r3]
   *
   *  @tparam  Tp  Type of element. Required to be a complete type.
   *  @tparam  Nm  Number of elements.
  */
  template<typename _Tp, std::size_t _Nm>
    struct array
    5e44:	e59f3338 	ldr	r3, [pc, #824]	@ 6184 <__static_initialization_and_destruction_0(int, int)+0x404>
    5e48:	e7943003 	ldr	r3, [r4, r3]
    5e4c:	e2831901 	add	r1, r3, #16384	@ 0x4000
		_data[0] = '\0';
    5e50:	e3a02000 	mov	r2, #0
    5e54:	e4c32020 	strb	r2, [r3], #32
    5e58:	e1530001 	cmp	r3, r1
    5e5c:	1afffffc 	bne	5e54 <__static_initialization_and_destruction_0(int, int)+0xd4>
struct SeqMap {
    5e60:	e59f331c 	ldr	r3, [pc, #796]	@ 6184 <__static_initialization_and_destruction_0(int, int)+0x404>
    5e64:	e7943003 	ldr	r3, [r4, r3]
    5e68:	e2833901 	add	r3, r3, #16384	@ 0x4000
    5e6c:	e3a02000 	mov	r2, #0
    5e70:	e5832800 	str	r2, [r3, #2048]	@ 0x800
	static inline SeqMap<ModuleTypeSlug, ModuleInfoView, MAX_MODULE_TYPES> infos;
    5e74:	e59f330c 	ldr	r3, [pc, #780]	@ 6188 <__static_initialization_and_destruction_0(int, int)+0x408>
    5e78:	e7943003 	ldr	r3, [r4, r3]
    5e7c:	e5933000 	ldr	r3, [r3]
    5e80:	e3130001 	tst	r3, #1
    5e84:	0a000092 	beq	60d4 <__static_initialization_and_destruction_0(int, int)+0x354>
	static inline SeqMap<ModuleTypeSlug, FaceplatePtr, MAX_MODULE_TYPES> faceplates;
    5e88:	e59f32fc 	ldr	r3, [pc, #764]	@ 618c <__static_initialization_and_destruction_0(int, int)+0x40c>
    5e8c:	e7943003 	ldr	r3, [r4, r3]
    5e90:	e5933000 	ldr	r3, [r3]
    5e94:	e3130001 	tst	r3, #1
    5e98:	1a00000f 	bne	5edc <__static_initialization_and_destruction_0(int, int)+0x15c>
    5e9c:	e59f32e8 	ldr	r3, [pc, #744]	@ 618c <__static_initialization_and_destruction_0(int, int)+0x40c>
    5ea0:	e7943003 	ldr	r3, [r4, r3]
    5ea4:	e3a02001 	mov	r2, #1
    5ea8:	e5832000 	str	r2, [r3]
    5eac:	e59f32dc 	ldr	r3, [pc, #732]	@ 6190 <__static_initialization_and_destruction_0(int, int)+0x410>
    5eb0:	e7943003 	ldr	r3, [r4, r3]
    5eb4:	e2831901 	add	r1, r3, #16384	@ 0x4000
    5eb8:	e3a02000 	mov	r2, #0
    5ebc:	e4c32020 	strb	r2, [r3], #32
    5ec0:	e1510003 	cmp	r1, r3
    5ec4:	1afffffc 	bne	5ebc <__static_initialization_and_destruction_0(int, int)+0x13c>
    5ec8:	e59f32c0 	ldr	r3, [pc, #704]	@ 6190 <__static_initialization_and_destruction_0(int, int)+0x410>
    5ecc:	e7943003 	ldr	r3, [r4, r3]
    5ed0:	e2833901 	add	r3, r3, #16384	@ 0x4000
    5ed4:	e3a02000 	mov	r2, #0
    5ed8:	e5832800 	str	r2, [r3, #2048]	@ 0x800
      : _M_len{traits_type::length(__str)},
    5edc:	e3a0300e 	mov	r3, #14
    5ee0:	e58d3008 	str	r3, [sp, #8]
	_M_str{__str}
    5ee4:	e59f32a8 	ldr	r3, [pc, #680]	@ 6194 <__static_initialization_and_destruction_0(int, int)+0x414>
    5ee8:	e08f3003 	add	r3, pc, r3
    5eec:	e58d300c 	str	r3, [sp, #12]
    5ef0:	e28d3010 	add	r3, sp, #16
    5ef4:	e9130003 	ldmdb	r3, {r0, r1}
    5ef8:	ebfff6a9 	bl	39a4 <rack::plugin::Model* rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)@plt>
    5efc:	e59f3294 	ldr	r3, [pc, #660]	@ 6198 <__static_initialization_and_destruction_0(int, int)+0x418>
    5f00:	e7943003 	ldr	r3, [r4, r3]
    5f04:	e5830000 	str	r0, [r3]
    5f08:	eaffffa4 	b	5da0 <__static_initialization_and_destruction_0(int, int)+0x20>
	static inline std::string token;
    5f0c:	e59f3254 	ldr	r3, [pc, #596]	@ 6168 <__static_initialization_and_destruction_0(int, int)+0x3e8>
    5f10:	e7943003 	ldr	r3, [r4, r3]
    5f14:	e3a02001 	mov	r2, #1
    5f18:	e5832000 	str	r2, [r3]
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    5f1c:	e59f3278 	ldr	r3, [pc, #632]	@ 619c <__static_initialization_and_destruction_0(int, int)+0x41c>
    5f20:	e7940003 	ldr	r0, [r4, r3]
    5f24:	e2803008 	add	r3, r0, #8
    5f28:	e5803000 	str	r3, [r0]
      { _M_string_length = __length; }
    5f2c:	e3a03000 	mov	r3, #0
    5f30:	e5803004 	str	r3, [r0, #4]
	__c1 = __c2;
    5f34:	e5c03008 	strb	r3, [r0, #8]
    5f38:	e59f3260 	ldr	r3, [pc, #608]	@ 61a0 <__static_initialization_and_destruction_0(int, int)+0x420>
    5f3c:	e7943003 	ldr	r3, [r4, r3]
    5f40:	e58d3000 	str	r3, [sp]
    5f44:	e59f2258 	ldr	r2, [pc, #600]	@ 61a4 <__static_initialization_and_destruction_0(int, int)+0x424>
    5f48:	e08f2002 	add	r2, pc, r2
    5f4c:	e1a01003 	mov	r1, r3
    5f50:	ebfff6ab 	bl	3a04 <__aeabi_atexit@plt>
    5f54:	eaffff98 	b	5dbc <__static_initialization_and_destruction_0(int, int)+0x3c>
	static inline std::string uiTheme;
    5f58:	e59f320c 	ldr	r3, [pc, #524]	@ 616c <__static_initialization_and_destruction_0(int, int)+0x3ec>
    5f5c:	e7943003 	ldr	r3, [r4, r3]
    5f60:	e3a02001 	mov	r2, #1
    5f64:	e5832000 	str	r2, [r3]
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    5f68:	e59f3238 	ldr	r3, [pc, #568]	@ 61a8 <__static_initialization_and_destruction_0(int, int)+0x428>
    5f6c:	e7940003 	ldr	r0, [r4, r3]
    5f70:	e2803008 	add	r3, r0, #8
    5f74:	e5803000 	str	r3, [r0]
      { _M_string_length = __length; }
    5f78:	e3a03000 	mov	r3, #0
    5f7c:	e5803004 	str	r3, [r0, #4]
    5f80:	e5c03008 	strb	r3, [r0, #8]
    5f84:	e59f3214 	ldr	r3, [pc, #532]	@ 61a0 <__static_initialization_and_destruction_0(int, int)+0x420>
    5f88:	e7943003 	ldr	r3, [r4, r3]
    5f8c:	e58d3000 	str	r3, [sp]
    5f90:	e59f2214 	ldr	r2, [pc, #532]	@ 61ac <__static_initialization_and_destruction_0(int, int)+0x42c>
    5f94:	e08f2002 	add	r2, pc, r2
    5f98:	e1a01003 	mov	r1, r3
    5f9c:	ebfff698 	bl	3a04 <__aeabi_atexit@plt>
    5fa0:	eaffff8a 	b	5dd0 <__static_initialization_and_destruction_0(int, int)+0x50>
	static inline std::list<std::string> recentPatchPaths;
    5fa4:	e59f31c4 	ldr	r3, [pc, #452]	@ 6170 <__static_initialization_and_destruction_0(int, int)+0x3f0>
    5fa8:	e7943003 	ldr	r3, [r4, r3]
    5fac:	e3a02001 	mov	r2, #1
    5fb0:	e5832000 	str	r2, [r3]
	this->_M_next = this->_M_prev = this;
    5fb4:	e59f31f4 	ldr	r3, [pc, #500]	@ 61b0 <__static_initialization_and_destruction_0(int, int)+0x430>
    5fb8:	e7940003 	ldr	r0, [r4, r3]
    5fbc:	e5800004 	str	r0, [r0, #4]
    5fc0:	e5800000 	str	r0, [r0]
	this->_M_size = 0;
    5fc4:	e3a03000 	mov	r3, #0
    5fc8:	e5803008 	str	r3, [r0, #8]
    5fcc:	e59f31e0 	ldr	r3, [pc, #480]	@ 61b4 <__static_initialization_and_destruction_0(int, int)+0x434>
    5fd0:	e7943003 	ldr	r3, [r4, r3]
    5fd4:	e58d3000 	str	r3, [sp]
    5fd8:	e59f21d8 	ldr	r2, [pc, #472]	@ 61b8 <__static_initialization_and_destruction_0(int, int)+0x438>
    5fdc:	e08f2002 	add	r2, pc, r2
    5fe0:	e1a01003 	mov	r1, r3
    5fe4:	ebfff686 	bl	3a04 <__aeabi_atexit@plt>
    5fe8:	eaffff7d 	b	5de4 <__static_initialization_and_destruction_0(int, int)+0x64>
	static inline std::vector<NVGcolor> cableColors;
    5fec:	e59f3180 	ldr	r3, [pc, #384]	@ 6174 <__static_initialization_and_destruction_0(int, int)+0x3f4>
    5ff0:	e7943003 	ldr	r3, [r4, r3]
    5ff4:	e3a02001 	mov	r2, #1
    5ff8:	e5832000 	str	r2, [r3]
    5ffc:	e59f31b8 	ldr	r3, [pc, #440]	@ 61bc <__static_initialization_and_destruction_0(int, int)+0x43c>
    6000:	e7943003 	ldr	r3, [r4, r3]
    6004:	e58d3000 	str	r3, [sp]
    6008:	e59f31b0 	ldr	r3, [pc, #432]	@ 61c0 <__static_initialization_and_destruction_0(int, int)+0x440>
    600c:	e7943003 	ldr	r3, [r4, r3]
    6010:	e58d3004 	str	r3, [sp, #4]
    6014:	e59f21a8 	ldr	r2, [pc, #424]	@ 61c4 <__static_initialization_and_destruction_0(int, int)+0x444>
    6018:	e08f2002 	add	r2, pc, r2
    601c:	e59d1000 	ldr	r1, [sp]
    6020:	e1a00003 	mov	r0, r3
    6024:	ebfff676 	bl	3a04 <__aeabi_atexit@plt>
    6028:	eaffff72 	b	5df8 <__static_initialization_and_destruction_0(int, int)+0x78>
	static inline std::map<std::string, std::map<std::string, ModuleInfo>> moduleInfos;
    602c:	e59f3144 	ldr	r3, [pc, #324]	@ 6178 <__static_initialization_and_destruction_0(int, int)+0x3f8>
    6030:	e7943003 	ldr	r3, [r4, r3]
    6034:	e3a02001 	mov	r2, #1
    6038:	e5832000 	str	r2, [r3]
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    {
      _M_header._M_color = _S_red;
    603c:	e59f3184 	ldr	r3, [pc, #388]	@ 61c8 <__static_initialization_and_destruction_0(int, int)+0x448>
    6040:	e7940003 	ldr	r0, [r4, r3]
    6044:	e3a03000 	mov	r3, #0
    6048:	e5c03004 	strb	r3, [r0, #4]
    }

    void
    _M_reset()
    {
      _M_header._M_parent = 0;
    604c:	e5803008 	str	r3, [r0, #8]
      _M_header._M_left = &_M_header;
    6050:	e2802004 	add	r2, r0, #4
    6054:	e580200c 	str	r2, [r0, #12]
      _M_header._M_right = &_M_header;
    6058:	e5802010 	str	r2, [r0, #16]
      _M_node_count = 0;
    605c:	e5803014 	str	r3, [r0, #20]
    6060:	e59f3164 	ldr	r3, [pc, #356]	@ 61cc <__static_initialization_and_destruction_0(int, int)+0x44c>
    6064:	e7943003 	ldr	r3, [r4, r3]
    6068:	e58d3000 	str	r3, [sp]
    606c:	e59f215c 	ldr	r2, [pc, #348]	@ 61d0 <__static_initialization_and_destruction_0(int, int)+0x450>
    6070:	e08f2002 	add	r2, pc, r2
    6074:	e1a01003 	mov	r1, r3
    6078:	ebfff661 	bl	3a04 <__aeabi_atexit@plt>
    607c:	eaffff62 	b	5e0c <__static_initialization_and_destruction_0(int, int)+0x8c>
	static inline std::map<std::string, PluginWhitelist> moduleWhitelist;
    6080:	e59f30f4 	ldr	r3, [pc, #244]	@ 617c <__static_initialization_and_destruction_0(int, int)+0x3fc>
    6084:	e7943003 	ldr	r3, [r4, r3]
    6088:	e3a02001 	mov	r2, #1
    608c:	e5832000 	str	r2, [r3]
      _M_header._M_color = _S_red;
    6090:	e59f313c 	ldr	r3, [pc, #316]	@ 61d4 <__static_initialization_and_destruction_0(int, int)+0x454>
    6094:	e7940003 	ldr	r0, [r4, r3]
    6098:	e3a03000 	mov	r3, #0
    609c:	e5c03004 	strb	r3, [r0, #4]
      _M_header._M_parent = 0;
    60a0:	e5803008 	str	r3, [r0, #8]
      _M_header._M_left = &_M_header;
    60a4:	e2802004 	add	r2, r0, #4
    60a8:	e580200c 	str	r2, [r0, #12]
      _M_header._M_right = &_M_header;
    60ac:	e5802010 	str	r2, [r0, #16]
      _M_node_count = 0;
    60b0:	e5803014 	str	r3, [r0, #20]
    60b4:	e59f311c 	ldr	r3, [pc, #284]	@ 61d8 <__static_initialization_and_destruction_0(int, int)+0x458>
    60b8:	e7943003 	ldr	r3, [r4, r3]
    60bc:	e58d3000 	str	r3, [sp]
    60c0:	e59f2114 	ldr	r2, [pc, #276]	@ 61dc <__static_initialization_and_destruction_0(int, int)+0x45c>
    60c4:	e08f2002 	add	r2, pc, r2
    60c8:	e1a01003 	mov	r1, r3
    60cc:	ebfff64c 	bl	3a04 <__aeabi_atexit@plt>
    60d0:	eaffff52 	b	5e20 <__static_initialization_and_destruction_0(int, int)+0xa0>
	static inline SeqMap<ModuleTypeSlug, ModuleInfoView, MAX_MODULE_TYPES> infos;
    60d4:	e59f30ac 	ldr	r3, [pc, #172]	@ 6188 <__static_initialization_and_destruction_0(int, int)+0x408>
    60d8:	e7943003 	ldr	r3, [r4, r3]
    60dc:	e3a02001 	mov	r2, #1
    60e0:	e5832000 	str	r2, [r3]
    60e4:	e59f30f4 	ldr	r3, [pc, #244]	@ 61e0 <__static_initialization_and_destruction_0(int, int)+0x460>
    60e8:	e7941003 	ldr	r1, [r4, r3]
    60ec:	e2810901 	add	r0, r1, #16384	@ 0x4000
    60f0:	e1a03001 	mov	r3, r1
    60f4:	e3a02000 	mov	r2, #0
    60f8:	e4c32020 	strb	r2, [r3], #32
    60fc:	e1500003 	cmp	r0, r3
    6100:	1afffffc 	bne	60f8 <__static_initialization_and_destruction_0(int, int)+0x378>
    6104:	e59f30d4 	ldr	r3, [pc, #212]	@ 61e0 <__static_initialization_and_destruction_0(int, int)+0x460>
    6108:	e7943003 	ldr	r3, [r4, r3]
    610c:	e2833901 	add	r3, r3, #16384	@ 0x4000
    6110:	e2811b1e 	add	r1, r1, #30720	@ 0x7800
    6114:	f2c00010 	vmov.i32	d16, #0	@ 0x00000000
      : _M_len{traits_type::length(__str)},
    6118:	e3a02000 	mov	r2, #0
	_M_str{__str}
    611c:	e59f00c0 	ldr	r0, [pc, #192]	@ 61e4 <__static_initialization_and_destruction_0(int, int)+0x464>
    6120:	e08f0000 	add	r0, pc, r0
    6124:	edc30b02 	vstr	d16, [r3, #8]
      : _M_len{traits_type::length(__str)},
    6128:	e5832000 	str	r2, [r3]
	_M_str{__str}
    612c:	e5830004 	str	r0, [r3, #4]
      : _M_ptr(nullptr), _M_extent(0)
    6130:	e583200c 	str	r2, [r3, #12]
	: _M_extent_value(__extent)
    6134:	e5832010 	str	r2, [r3, #16]
      : _M_ptr(nullptr), _M_extent(0)
    6138:	e5832014 	str	r2, [r3, #20]
	: _M_extent_value(__extent)
    613c:	e5832018 	str	r2, [r3, #24]
    6140:	e283301c 	add	r3, r3, #28
    6144:	e1530001 	cmp	r3, r1
    6148:	1afffff5 	bne	6124 <__static_initialization_and_destruction_0(int, int)+0x3a4>
    614c:	e59f308c 	ldr	r3, [pc, #140]	@ 61e0 <__static_initialization_and_destruction_0(int, int)+0x460>
    6150:	e7943003 	ldr	r3, [r4, r3]
    6154:	e2833a07 	add	r3, r3, #28672	@ 0x7000
    6158:	e3a02000 	mov	r2, #0
    615c:	e5832800 	str	r2, [r3, #2048]	@ 0x800
    6160:	eaffff48 	b	5e88 <__static_initialization_and_destruction_0(int, int)+0x108>
    6164:	00001e34 	andeq	r1, r0, r4, lsr lr
    6168:	0000009c 	muleq	r0, ip, r0
    616c:	000000e8 	andeq	r0, r0, r8, ror #1
    6170:	00000080 	andeq	r0, r0, r0, lsl #1
    6174:	00000084 	andeq	r0, r0, r4, lsl #1
    6178:	000000e0 	andeq	r0, r0, r0, ror #1
    617c:	000000fc 	strdeq	r0, [r0], -ip
    6180:	000000d8 	ldrdeq	r0, [r0], -r8
    6184:	000000d4 	ldrdeq	r0, [r0], -r4
    6188:	000000c4 	andeq	r0, r0, r4, asr #1
    618c:	00000100 	andeq	r0, r0, r0, lsl #2
    6190:	000000b8 	strheq	r0, [r0], -r8
    6194:	00000a88 	andeq	r0, r0, r8, lsl #21
    6198:	000000a4 	andeq	r0, r0, r4, lsr #1
    619c:	00000120 	andeq	r0, r0, r0, lsr #2
    61a0:	000000d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    61a4:	00001d9c 	muleq	r0, ip, sp
    61a8:	000000a0 	andeq	r0, r0, r0, lsr #1
    61ac:	00001d50 	andeq	r1, r0, r0, asr sp
    61b0:	00000090 	muleq	r0, r0, r0
    61b4:	0000010c 	andeq	r0, r0, ip, lsl #2
    61b8:	00001d08 	andeq	r1, r0, r8, lsl #26
    61bc:	000000ac 	andeq	r0, r0, ip, lsr #1
    61c0:	000000f8 	strdeq	r0, [r0], -r8
    61c4:	00001ccc 	andeq	r1, r0, ip, asr #25
    61c8:	000000b4 	strheq	r0, [r0], -r4
    61cc:	00000108 	andeq	r0, r0, r8, lsl #2
    61d0:	00001c74 	andeq	r1, r0, r4, ror ip
    61d4:	000000c0 	andeq	r0, r0, r0, asr #1
    61d8:	00000118 	andeq	r0, r0, r8, lsl r1
    61dc:	00001c20 	andeq	r1, r0, r0, lsr #24
    61e0:	0000008c 	andeq	r0, r0, ip, lsl #1
    61e4:	0000084c 	andeq	r0, r0, ip, asr #16

000061e8 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    61e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    61ec:	e2514000 	subs	r4, r1, #0
    61f0:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    61f4:	e1a07000 	mov	r7, r0
    61f8:	e3a06038 	mov	r6, #56	@ 0x38
    61fc:	ea000007 	b	6220 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)+0x38>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6200:	e5951018 	ldr	r1, [r5, #24]
    6204:	e2811001 	add	r1, r1, #1
    6208:	ebfff5d0 	bl	3950 <operator delete(void*, unsigned int)@plt>
    620c:	e1a01006 	mov	r1, r6
    6210:	e1a00005 	mov	r0, r5
    6214:	ebfff5cd 	bl	3950 <operator delete(void*, unsigned int)@plt>
    6218:	e3540000 	cmp	r4, #0
    621c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
	{
	  _M_erase(_S_right(__x));
    6220:	e594100c 	ldr	r1, [r4, #12]
    6224:	e1a00007 	mov	r0, r7
    6228:	ebfff5ce 	bl	3968 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)@plt>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    622c:	e1a05004 	mov	r5, r4
      { return static_cast<_Link_type>(__x->_M_left); }
    6230:	e5944008 	ldr	r4, [r4, #8]
      { return _M_dataplus._M_p; }
    6234:	e5950010 	ldr	r0, [r5, #16]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    6238:	e2853018 	add	r3, r5, #24
	if (_M_data() == _M_local_data())
    623c:	e1500003 	cmp	r0, r3
    6240:	1affffee 	bne	6200 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)+0x18>
    6244:	eafffff0 	b	620c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)+0x24>

00006248 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6248:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
      while (__x != 0)
    624c:	e2514000 	subs	r4, r1, #0
    6250:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    6254:	e1a07000 	mov	r7, r0
    6258:	e3a06040 	mov	r6, #64	@ 0x40
    625c:	ea000007 	b	6280 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)+0x38>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6260:	e5951018 	ldr	r1, [r5, #24]
    6264:	e2811001 	add	r1, r1, #1
    6268:	ebfff5b8 	bl	3950 <operator delete(void*, unsigned int)@plt>
    626c:	e1a01006 	mov	r1, r6
    6270:	e1a00005 	mov	r0, r5
    6274:	ebfff5b5 	bl	3950 <operator delete(void*, unsigned int)@plt>
    6278:	e3540000 	cmp	r4, #0
    627c:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
	  _M_erase(_S_right(__x));
    6280:	e594100c 	ldr	r1, [r4, #12]
    6284:	e1a00007 	mov	r0, r7
    6288:	ebfff5a7 	bl	392c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)@plt>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    628c:	e1a05004 	mov	r5, r4
      { return static_cast<_Link_type>(__x->_M_left); }
    6290:	e5944008 	ldr	r4, [r4, #8]
      { _M_erase(_M_begin()); }
    6294:	e5951030 	ldr	r1, [r5, #48]	@ 0x30
    6298:	e2850028 	add	r0, r5, #40	@ 0x28
    629c:	ebfff5b1 	bl	3968 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> >*)@plt>
      { return _M_dataplus._M_p; }
    62a0:	e5950010 	ldr	r0, [r5, #16]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    62a4:	e2853018 	add	r3, r5, #24
	if (_M_data() == _M_local_data())
    62a8:	e1500003 	cmp	r0, r3
    62ac:	1affffeb 	bne	6260 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)+0x18>
    62b0:	eaffffed 	b	626c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)+0x24>

000062b4 <std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::~map()>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    62b4:	e92d4010 	push	{r4, lr}
    62b8:	e1a04000 	mov	r4, r0
    62bc:	e5901008 	ldr	r1, [r0, #8]
    62c0:	ebfff599 	bl	392c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::ModuleInfo, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::ModuleInfo> > > > >*)@plt>
    62c4:	e1a00004 	mov	r0, r4
    62c8:	e8bd8010 	pop	{r4, pc}

000062cc <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    62cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
      while (__x != 0)
    62d0:	e2514000 	subs	r4, r1, #0
    62d4:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    62d8:	e1a07000 	mov	r7, r0
    62dc:	e3a06028 	mov	r6, #40	@ 0x28
    62e0:	ea000007 	b	6304 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)+0x38>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    62e4:	e5951018 	ldr	r1, [r5, #24]
    62e8:	e2811001 	add	r1, r1, #1
    62ec:	ebfff597 	bl	3950 <operator delete(void*, unsigned int)@plt>
    62f0:	e1a01006 	mov	r1, r6
    62f4:	e1a00005 	mov	r0, r5
    62f8:	ebfff594 	bl	3950 <operator delete(void*, unsigned int)@plt>
    62fc:	e3540000 	cmp	r4, #0
    6300:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
	  _M_erase(_S_right(__x));
    6304:	e594100c 	ldr	r1, [r4, #12]
    6308:	e1a00007 	mov	r0, r7
    630c:	ebfff59b 	bl	3980 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)@plt>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6310:	e1a05004 	mov	r5, r4
      { return static_cast<_Link_type>(__x->_M_left); }
    6314:	e5944008 	ldr	r4, [r4, #8]
      { return _M_dataplus._M_p; }
    6318:	e5950010 	ldr	r0, [r5, #16]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    631c:	e2853018 	add	r3, r5, #24
	if (_M_data() == _M_local_data())
    6320:	e1500003 	cmp	r0, r3
    6324:	1affffee 	bne	62e4 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)+0x18>
    6328:	eafffff0 	b	62f0 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)+0x24>

0000632c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    632c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
      while (__x != 0)
    6330:	e2514000 	subs	r4, r1, #0
    6334:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
    6338:	e1a07000 	mov	r7, r0
    633c:	e3a06044 	mov	r6, #68	@ 0x44
    6340:	ea000007 	b	6364 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)+0x38>
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    6344:	e5951018 	ldr	r1, [r5, #24]
    6348:	e2811001 	add	r1, r1, #1
    634c:	ebfff57f 	bl	3950 <operator delete(void*, unsigned int)@plt>
    6350:	e1a01006 	mov	r1, r6
    6354:	e1a00005 	mov	r0, r5
    6358:	ebfff57c 	bl	3950 <operator delete(void*, unsigned int)@plt>
    635c:	e3540000 	cmp	r4, #0
    6360:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
	  _M_erase(_S_right(__x));
    6364:	e594100c 	ldr	r1, [r4, #12]
    6368:	e1a00007 	mov	r0, r7
    636c:	ebfff57a 	bl	395c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)@plt>
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6370:	e1a05004 	mov	r5, r4
      { return static_cast<_Link_type>(__x->_M_left); }
    6374:	e5944008 	ldr	r4, [r4, #8]
      { _M_erase(_M_begin()); }
    6378:	e5951034 	ldr	r1, [r5, #52]	@ 0x34
    637c:	e285002c 	add	r0, r5, #44	@ 0x2c
    6380:	ebfff57e 	bl	3980 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)@plt>
      { return _M_dataplus._M_p; }
    6384:	e5950010 	ldr	r0, [r5, #16]
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    6388:	e2853018 	add	r3, r5, #24
	if (_M_data() == _M_local_data())
    638c:	e1500003 	cmp	r0, r3
    6390:	1affffeb 	bne	6344 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)+0x18>
    6394:	eaffffed 	b	6350 <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)+0x24>

00006398 <std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rack::settings::PluginWhitelist, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::~map()>:
    6398:	e92d4010 	push	{r4, lr}
    639c:	e1a04000 	mov	r4, r0
    63a0:	e5901008 	ldr	r1, [r0, #8]
    63a4:	ebfff56c 	bl	395c <std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rack::settings::PluginWhitelist> >*)@plt>
    63a8:	e1a00004 	mov	r0, r4
    63ac:	e8bd8010 	pop	{r4, pc}

000063b0 <_GLOBAL__sub_I_test_module.cpp>:
    63b0:	e92d4010 	push	{r4, lr}
    63b4:	e30f1fff 	movw	r1, #65535	@ 0xffff
    63b8:	e3a00001 	mov	r0, #1
    63bc:	ebfffe6f 	bl	5d80 <__static_initialization_and_destruction_0(int, int)>
    63c0:	e8bd8010 	pop	{r4, pc}

000063c4 <__static_initialization_and_destruction_0(int, int)>:

void init(Plugin *p) {
	pluginInstance = p;

	p->addModel(modelTest);
}
    63c4:	e92d4010 	push	{r4, lr}
    63c8:	e24dd008 	sub	sp, sp, #8
    63cc:	e59f43a8 	ldr	r4, [pc, #936]	@ 677c <__static_initialization_and_destruction_0(int, int)+0x3b8>
    63d0:	e08f4004 	add	r4, pc, r4
    63d4:	e30f3fff 	movw	r3, #65535	@ 0xffff
    63d8:	e3500001 	cmp	r0, #1
    63dc:	01510003 	cmpeq	r1, r3
    63e0:	0a000001 	beq	63ec <__static_initialization_and_destruction_0(int, int)+0x28>
    63e4:	e28dd008 	add	sp, sp, #8
    63e8:	e8bd8010 	pop	{r4, pc}
	static inline std::string token;
    63ec:	e59f338c 	ldr	r3, [pc, #908]	@ 6780 <__static_initialization_and_destruction_0(int, int)+0x3bc>
    63f0:	e7943003 	ldr	r3, [r4, r3]
    63f4:	e5933000 	ldr	r3, [r3]
    63f8:	e3130001 	tst	r3, #1
    63fc:	0a000048 	beq	6524 <__static_initialization_and_destruction_0(int, int)+0x160>
	static inline std::string uiTheme;
    6400:	e59f337c 	ldr	r3, [pc, #892]	@ 6784 <__static_initialization_and_destruction_0(int, int)+0x3c0>
    6404:	e7943003 	ldr	r3, [r4, r3]
    6408:	e5933000 	ldr	r3, [r3]
    640c:	e3130001 	tst	r3, #1
    6410:	0a000056 	beq	6570 <__static_initialization_and_destruction_0(int, int)+0x1ac>
	static inline std::list<std::string> recentPatchPaths;
    6414:	e59f336c 	ldr	r3, [pc, #876]	@ 6788 <__static_initialization_and_destruction_0(int, int)+0x3c4>
    6418:	e7943003 	ldr	r3, [r4, r3]
    641c:	e5933000 	ldr	r3, [r3]
    6420:	e3130001 	tst	r3, #1
    6424:	0a000064 	beq	65bc <__static_initialization_and_destruction_0(int, int)+0x1f8>
	static inline std::vector<NVGcolor> cableColors;
    6428:	e59f335c 	ldr	r3, [pc, #860]	@ 678c <__static_initialization_and_destruction_0(int, int)+0x3c8>
    642c:	e7943003 	ldr	r3, [r4, r3]
    6430:	e5933000 	ldr	r3, [r3]
    6434:	e3130001 	tst	r3, #1
    6438:	0a000071 	beq	6604 <__static_initialization_and_destruction_0(int, int)+0x240>
	static inline std::map<std::string, std::map<std::string, ModuleInfo>> moduleInfos;
    643c:	e59f334c 	ldr	r3, [pc, #844]	@ 6790 <__static_initialization_and_destruction_0(int, int)+0x3cc>
    6440:	e7943003 	ldr	r3, [r4, r3]
    6444:	e5933000 	ldr	r3, [r3]
    6448:	e3130001 	tst	r3, #1
    644c:	0a00007c 	beq	6644 <__static_initialization_and_destruction_0(int, int)+0x280>
	static inline std::map<std::string, PluginWhitelist> moduleWhitelist;
    6450:	e59f333c 	ldr	r3, [pc, #828]	@ 6794 <__static_initialization_and_destruction_0(int, int)+0x3d0>
    6454:	e7943003 	ldr	r3, [r4, r3]
    6458:	e5933000 	ldr	r3, [r3]
    645c:	e3130001 	tst	r3, #1
    6460:	0a00008c 	beq	6698 <__static_initialization_and_destruction_0(int, int)+0x2d4>
	static inline SeqMap<ModuleTypeSlug, CreateModuleFunc, MAX_MODULE_TYPES> creation_funcs;
    6464:	e59f332c 	ldr	r3, [pc, #812]	@ 6798 <__static_initialization_and_destruction_0(int, int)+0x3d4>
    6468:	e7943003 	ldr	r3, [r4, r3]
    646c:	e5933000 	ldr	r3, [r3]
    6470:	e3130001 	tst	r3, #1
    6474:	1a00000f 	bne	64b8 <__static_initialization_and_destruction_0(int, int)+0xf4>
    6478:	e59f3318 	ldr	r3, [pc, #792]	@ 6798 <__static_initialization_and_destruction_0(int, int)+0x3d4>
    647c:	e7943003 	ldr	r3, [r4, r3]
    6480:	e3a02001 	mov	r2, #1
    6484:	e5832000 	str	r2, [r3]
    6488:	e59f330c 	ldr	r3, [pc, #780]	@ 679c <__static_initialization_and_destruction_0(int, int)+0x3d8>
    648c:	e7943003 	ldr	r3, [r4, r3]
    6490:	e2831901 	add	r1, r3, #16384	@ 0x4000
    6494:	e3a02000 	mov	r2, #0
    6498:	e4c32020 	strb	r2, [r3], #32
    649c:	e1530001 	cmp	r3, r1
    64a0:	1afffffc 	bne	6498 <__static_initialization_and_destruction_0(int, int)+0xd4>
    64a4:	e59f32f0 	ldr	r3, [pc, #752]	@ 679c <__static_initialization_and_destruction_0(int, int)+0x3d8>
    64a8:	e7943003 	ldr	r3, [r4, r3]
    64ac:	e2833901 	add	r3, r3, #16384	@ 0x4000
    64b0:	e3a02000 	mov	r2, #0
    64b4:	e5832800 	str	r2, [r3, #2048]	@ 0x800
	static inline SeqMap<ModuleTypeSlug, ModuleInfoView, MAX_MODULE_TYPES> infos;
    64b8:	e59f32e0 	ldr	r3, [pc, #736]	@ 67a0 <__static_initialization_and_destruction_0(int, int)+0x3dc>
    64bc:	e7943003 	ldr	r3, [r4, r3]
    64c0:	e5933000 	ldr	r3, [r3]
    64c4:	e3130001 	tst	r3, #1
    64c8:	0a000087 	beq	66ec <__static_initialization_and_destruction_0(int, int)+0x328>
	static inline SeqMap<ModuleTypeSlug, FaceplatePtr, MAX_MODULE_TYPES> faceplates;
    64cc:	e59f32d0 	ldr	r3, [pc, #720]	@ 67a4 <__static_initialization_and_destruction_0(int, int)+0x3e0>
    64d0:	e7943003 	ldr	r3, [r4, r3]
    64d4:	e5933000 	ldr	r3, [r3]
    64d8:	e3130001 	tst	r3, #1
    64dc:	1affffc0 	bne	63e4 <__static_initialization_and_destruction_0(int, int)+0x20>
    64e0:	e59f32bc 	ldr	r3, [pc, #700]	@ 67a4 <__static_initialization_and_destruction_0(int, int)+0x3e0>
    64e4:	e7943003 	ldr	r3, [r4, r3]
    64e8:	e3a02001 	mov	r2, #1
    64ec:	e5832000 	str	r2, [r3]
    64f0:	e59f32b0 	ldr	r3, [pc, #688]	@ 67a8 <__static_initialization_and_destruction_0(int, int)+0x3e4>
    64f4:	e7943003 	ldr	r3, [r4, r3]
    64f8:	e2831901 	add	r1, r3, #16384	@ 0x4000
    64fc:	e3a02000 	mov	r2, #0
    6500:	e4c32020 	strb	r2, [r3], #32
    6504:	e1510003 	cmp	r1, r3
    6508:	1afffffc 	bne	6500 <__static_initialization_and_destruction_0(int, int)+0x13c>
    650c:	e59f3294 	ldr	r3, [pc, #660]	@ 67a8 <__static_initialization_and_destruction_0(int, int)+0x3e4>
    6510:	e7943003 	ldr	r3, [r4, r3]
    6514:	e2833901 	add	r3, r3, #16384	@ 0x4000
    6518:	e3a02000 	mov	r2, #0
    651c:	e5832800 	str	r2, [r3, #2048]	@ 0x800
    6520:	eaffffaf 	b	63e4 <__static_initialization_and_destruction_0(int, int)+0x20>
	static inline std::string token;
    6524:	e59f3254 	ldr	r3, [pc, #596]	@ 6780 <__static_initialization_and_destruction_0(int, int)+0x3bc>
    6528:	e7943003 	ldr	r3, [r4, r3]
    652c:	e3a02001 	mov	r2, #1
    6530:	e5832000 	str	r2, [r3]
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6534:	e59f3270 	ldr	r3, [pc, #624]	@ 67ac <__static_initialization_and_destruction_0(int, int)+0x3e8>
    6538:	e7940003 	ldr	r0, [r4, r3]
    653c:	e2803008 	add	r3, r0, #8
    6540:	e5803000 	str	r3, [r0]
      { _M_string_length = __length; }
    6544:	e3a03000 	mov	r3, #0
    6548:	e5803004 	str	r3, [r0, #4]
    654c:	e5c03008 	strb	r3, [r0, #8]
    6550:	e59f3258 	ldr	r3, [pc, #600]	@ 67b0 <__static_initialization_and_destruction_0(int, int)+0x3ec>
    6554:	e7943003 	ldr	r3, [r4, r3]
    6558:	e58d3000 	str	r3, [sp]
    655c:	e59f2250 	ldr	r2, [pc, #592]	@ 67b4 <__static_initialization_and_destruction_0(int, int)+0x3f0>
    6560:	e08f2002 	add	r2, pc, r2
    6564:	e1a01003 	mov	r1, r3
    6568:	ebfff525 	bl	3a04 <__aeabi_atexit@plt>
    656c:	eaffffa3 	b	6400 <__static_initialization_and_destruction_0(int, int)+0x3c>
	static inline std::string uiTheme;
    6570:	e59f320c 	ldr	r3, [pc, #524]	@ 6784 <__static_initialization_and_destruction_0(int, int)+0x3c0>
    6574:	e7943003 	ldr	r3, [r4, r3]
    6578:	e3a02001 	mov	r2, #1
    657c:	e5832000 	str	r2, [r3]
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    6580:	e59f3230 	ldr	r3, [pc, #560]	@ 67b8 <__static_initialization_and_destruction_0(int, int)+0x3f4>
    6584:	e7940003 	ldr	r0, [r4, r3]
    6588:	e2803008 	add	r3, r0, #8
    658c:	e5803000 	str	r3, [r0]
      { _M_string_length = __length; }
    6590:	e3a03000 	mov	r3, #0
    6594:	e5803004 	str	r3, [r0, #4]
    6598:	e5c03008 	strb	r3, [r0, #8]
    659c:	e59f320c 	ldr	r3, [pc, #524]	@ 67b0 <__static_initialization_and_destruction_0(int, int)+0x3ec>
    65a0:	e7943003 	ldr	r3, [r4, r3]
    65a4:	e58d3000 	str	r3, [sp]
    65a8:	e59f220c 	ldr	r2, [pc, #524]	@ 67bc <__static_initialization_and_destruction_0(int, int)+0x3f8>
    65ac:	e08f2002 	add	r2, pc, r2
    65b0:	e1a01003 	mov	r1, r3
    65b4:	ebfff512 	bl	3a04 <__aeabi_atexit@plt>
    65b8:	eaffff95 	b	6414 <__static_initialization_and_destruction_0(int, int)+0x50>
	static inline std::list<std::string> recentPatchPaths;
    65bc:	e59f31c4 	ldr	r3, [pc, #452]	@ 6788 <__static_initialization_and_destruction_0(int, int)+0x3c4>
    65c0:	e7943003 	ldr	r3, [r4, r3]
    65c4:	e3a02001 	mov	r2, #1
    65c8:	e5832000 	str	r2, [r3]
	this->_M_next = this->_M_prev = this;
    65cc:	e59f31ec 	ldr	r3, [pc, #492]	@ 67c0 <__static_initialization_and_destruction_0(int, int)+0x3fc>
    65d0:	e7940003 	ldr	r0, [r4, r3]
    65d4:	e5800004 	str	r0, [r0, #4]
    65d8:	e5800000 	str	r0, [r0]
	this->_M_size = 0;
    65dc:	e3a03000 	mov	r3, #0
    65e0:	e5803008 	str	r3, [r0, #8]
    65e4:	e59f31d8 	ldr	r3, [pc, #472]	@ 67c4 <__static_initialization_and_destruction_0(int, int)+0x400>
    65e8:	e7943003 	ldr	r3, [r4, r3]
    65ec:	e58d3000 	str	r3, [sp]
    65f0:	e59f21d0 	ldr	r2, [pc, #464]	@ 67c8 <__static_initialization_and_destruction_0(int, int)+0x404>
    65f4:	e08f2002 	add	r2, pc, r2
    65f8:	e1a01003 	mov	r1, r3
    65fc:	ebfff500 	bl	3a04 <__aeabi_atexit@plt>
    6600:	eaffff88 	b	6428 <__static_initialization_and_destruction_0(int, int)+0x64>
	static inline std::vector<NVGcolor> cableColors;
    6604:	e59f3180 	ldr	r3, [pc, #384]	@ 678c <__static_initialization_and_destruction_0(int, int)+0x3c8>
    6608:	e7943003 	ldr	r3, [r4, r3]
    660c:	e3a02001 	mov	r2, #1
    6610:	e5832000 	str	r2, [r3]
    6614:	e59f31b0 	ldr	r3, [pc, #432]	@ 67cc <__static_initialization_and_destruction_0(int, int)+0x408>
    6618:	e7943003 	ldr	r3, [r4, r3]
    661c:	e58d3000 	str	r3, [sp]
    6620:	e59f31a8 	ldr	r3, [pc, #424]	@ 67d0 <__static_initialization_and_destruction_0(int, int)+0x40c>
    6624:	e7943003 	ldr	r3, [r4, r3]
    6628:	e58d3004 	str	r3, [sp, #4]
    662c:	e59f21a0 	ldr	r2, [pc, #416]	@ 67d4 <__static_initialization_and_destruction_0(int, int)+0x410>
    6630:	e08f2002 	add	r2, pc, r2
    6634:	e59d1000 	ldr	r1, [sp]
    6638:	e1a00003 	mov	r0, r3
    663c:	ebfff4f0 	bl	3a04 <__aeabi_atexit@plt>
    6640:	eaffff7d 	b	643c <__static_initialization_and_destruction_0(int, int)+0x78>
	static inline std::map<std::string, std::map<std::string, ModuleInfo>> moduleInfos;
    6644:	e59f3144 	ldr	r3, [pc, #324]	@ 6790 <__static_initialization_and_destruction_0(int, int)+0x3cc>
    6648:	e7943003 	ldr	r3, [r4, r3]
    664c:	e3a02001 	mov	r2, #1
    6650:	e5832000 	str	r2, [r3]
      _M_header._M_color = _S_red;
    6654:	e59f317c 	ldr	r3, [pc, #380]	@ 67d8 <__static_initialization_and_destruction_0(int, int)+0x414>
    6658:	e7940003 	ldr	r0, [r4, r3]
    665c:	e3a03000 	mov	r3, #0
    6660:	e5c03004 	strb	r3, [r0, #4]
      _M_header._M_parent = 0;
    6664:	e5803008 	str	r3, [r0, #8]
      _M_header._M_left = &_M_header;
    6668:	e2802004 	add	r2, r0, #4
    666c:	e580200c 	str	r2, [r0, #12]
      _M_header._M_right = &_M_header;
    6670:	e5802010 	str	r2, [r0, #16]
      _M_node_count = 0;
    6674:	e5803014 	str	r3, [r0, #20]
    6678:	e59f315c 	ldr	r3, [pc, #348]	@ 67dc <__static_initialization_and_destruction_0(int, int)+0x418>
    667c:	e7943003 	ldr	r3, [r4, r3]
    6680:	e58d3000 	str	r3, [sp]
    6684:	e59f2154 	ldr	r2, [pc, #340]	@ 67e0 <__static_initialization_and_destruction_0(int, int)+0x41c>
    6688:	e08f2002 	add	r2, pc, r2
    668c:	e1a01003 	mov	r1, r3
    6690:	ebfff4db 	bl	3a04 <__aeabi_atexit@plt>
    6694:	eaffff6d 	b	6450 <__static_initialization_and_destruction_0(int, int)+0x8c>
	static inline std::map<std::string, PluginWhitelist> moduleWhitelist;
    6698:	e59f30f4 	ldr	r3, [pc, #244]	@ 6794 <__static_initialization_and_destruction_0(int, int)+0x3d0>
    669c:	e7943003 	ldr	r3, [r4, r3]
    66a0:	e3a02001 	mov	r2, #1
    66a4:	e5832000 	str	r2, [r3]
      _M_header._M_color = _S_red;
    66a8:	e59f3134 	ldr	r3, [pc, #308]	@ 67e4 <__static_initialization_and_destruction_0(int, int)+0x420>
    66ac:	e7940003 	ldr	r0, [r4, r3]
    66b0:	e3a03000 	mov	r3, #0
    66b4:	e5c03004 	strb	r3, [r0, #4]
      _M_header._M_parent = 0;
    66b8:	e5803008 	str	r3, [r0, #8]
      _M_header._M_left = &_M_header;
    66bc:	e2802004 	add	r2, r0, #4
    66c0:	e580200c 	str	r2, [r0, #12]
      _M_header._M_right = &_M_header;
    66c4:	e5802010 	str	r2, [r0, #16]
      _M_node_count = 0;
    66c8:	e5803014 	str	r3, [r0, #20]
    66cc:	e59f3114 	ldr	r3, [pc, #276]	@ 67e8 <__static_initialization_and_destruction_0(int, int)+0x424>
    66d0:	e7943003 	ldr	r3, [r4, r3]
    66d4:	e58d3000 	str	r3, [sp]
    66d8:	e59f210c 	ldr	r2, [pc, #268]	@ 67ec <__static_initialization_and_destruction_0(int, int)+0x428>
    66dc:	e08f2002 	add	r2, pc, r2
    66e0:	e1a01003 	mov	r1, r3
    66e4:	ebfff4c6 	bl	3a04 <__aeabi_atexit@plt>
    66e8:	eaffff5d 	b	6464 <__static_initialization_and_destruction_0(int, int)+0xa0>
	static inline SeqMap<ModuleTypeSlug, ModuleInfoView, MAX_MODULE_TYPES> infos;
    66ec:	e59f30ac 	ldr	r3, [pc, #172]	@ 67a0 <__static_initialization_and_destruction_0(int, int)+0x3dc>
    66f0:	e7943003 	ldr	r3, [r4, r3]
    66f4:	e3a02001 	mov	r2, #1
    66f8:	e5832000 	str	r2, [r3]
    66fc:	e59f30ec 	ldr	r3, [pc, #236]	@ 67f0 <__static_initialization_and_destruction_0(int, int)+0x42c>
    6700:	e7941003 	ldr	r1, [r4, r3]
    6704:	e2810901 	add	r0, r1, #16384	@ 0x4000
    6708:	e1a03001 	mov	r3, r1
    670c:	e3a02000 	mov	r2, #0
    6710:	e4c32020 	strb	r2, [r3], #32
    6714:	e1500003 	cmp	r0, r3
    6718:	1afffffc 	bne	6710 <__static_initialization_and_destruction_0(int, int)+0x34c>
    671c:	e59f30cc 	ldr	r3, [pc, #204]	@ 67f0 <__static_initialization_and_destruction_0(int, int)+0x42c>
    6720:	e7943003 	ldr	r3, [r4, r3]
    6724:	e2833901 	add	r3, r3, #16384	@ 0x4000
    6728:	e2811b1e 	add	r1, r1, #30720	@ 0x7800
    672c:	f2c00010 	vmov.i32	d16, #0	@ 0x00000000
      : _M_len{traits_type::length(__str)},
    6730:	e3a02000 	mov	r2, #0
	_M_str{__str}
    6734:	e59f00b8 	ldr	r0, [pc, #184]	@ 67f4 <__static_initialization_and_destruction_0(int, int)+0x430>
    6738:	e08f0000 	add	r0, pc, r0
    673c:	edc30b02 	vstr	d16, [r3, #8]
      : _M_len{traits_type::length(__str)},
    6740:	e5832000 	str	r2, [r3]
	_M_str{__str}
    6744:	e5830004 	str	r0, [r3, #4]
      : _M_ptr(nullptr), _M_extent(0)
    6748:	e583200c 	str	r2, [r3, #12]
	: _M_extent_value(__extent)
    674c:	e5832010 	str	r2, [r3, #16]
      : _M_ptr(nullptr), _M_extent(0)
    6750:	e5832014 	str	r2, [r3, #20]
	: _M_extent_value(__extent)
    6754:	e5832018 	str	r2, [r3, #24]
    6758:	e283301c 	add	r3, r3, #28
    675c:	e1530001 	cmp	r3, r1
    6760:	1afffff5 	bne	673c <__static_initialization_and_destruction_0(int, int)+0x378>
    6764:	e59f3084 	ldr	r3, [pc, #132]	@ 67f0 <__static_initialization_and_destruction_0(int, int)+0x42c>
    6768:	e7943003 	ldr	r3, [r4, r3]
    676c:	e2833a07 	add	r3, r3, #28672	@ 0x7000
    6770:	e3a02000 	mov	r2, #0
    6774:	e5832800 	str	r2, [r3, #2048]	@ 0x800
    6778:	eaffff53 	b	64cc <__static_initialization_and_destruction_0(int, int)+0x108>
    677c:	000017f0 	strdeq	r1, [r0], -r0
    6780:	0000009c 	muleq	r0, ip, r0
    6784:	000000e8 	andeq	r0, r0, r8, ror #1
    6788:	00000080 	andeq	r0, r0, r0, lsl #1
    678c:	00000084 	andeq	r0, r0, r4, lsl #1
    6790:	000000e0 	andeq	r0, r0, r0, ror #1
    6794:	000000fc 	strdeq	r0, [r0], -ip
    6798:	000000d8 	ldrdeq	r0, [r0], -r8
    679c:	000000d4 	ldrdeq	r0, [r0], -r4
    67a0:	000000c4 	andeq	r0, r0, r4, asr #1
    67a4:	00000100 	andeq	r0, r0, r0, lsl #2
    67a8:	000000b8 	strheq	r0, [r0], -r8
    67ac:	00000120 	andeq	r0, r0, r0, lsr #2
    67b0:	000000d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
    67b4:	00001784 	andeq	r1, r0, r4, lsl #15
    67b8:	000000a0 	andeq	r0, r0, r0, lsr #1
    67bc:	00001738 	andeq	r1, r0, r8, lsr r7
    67c0:	00000090 	muleq	r0, r0, r0
    67c4:	0000010c 	andeq	r0, r0, ip, lsl #2
    67c8:	000016f0 	strdeq	r1, [r0], -r0
    67cc:	000000ac 	andeq	r0, r0, ip, lsr #1
    67d0:	000000f8 	strdeq	r0, [r0], -r8
    67d4:	000016b4 			@ <UNDEFINED> instruction: 0x000016b4
    67d8:	000000b4 	strheq	r0, [r0], -r4
    67dc:	00000108 	andeq	r0, r0, r8, lsl #2
    67e0:	0000165c 	andeq	r1, r0, ip, asr r6
    67e4:	000000c0 	andeq	r0, r0, r0, asr #1
    67e8:	00000118 	andeq	r0, r0, r8, lsl r1
    67ec:	00001608 	andeq	r1, r0, r8, lsl #12
    67f0:	0000008c 	andeq	r0, r0, ip, lsl #1
    67f4:	00000234 	andeq	r0, r0, r4, lsr r2

000067f8 <init(rack::plugin::Plugin*)>:
void init(Plugin *p) {
    67f8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    67fc:	e1a04000 	mov	r4, r0
    6800:	e59f3100 	ldr	r3, [pc, #256]	@ 6908 <init(rack::plugin::Plugin*)+0x110>
    6804:	e08f3003 	add	r3, pc, r3
	pluginInstance = p;
    6808:	e59f20fc 	ldr	r2, [pc, #252]	@ 690c <init(rack::plugin::Plugin*)+0x114>
    680c:	e7932002 	ldr	r2, [r3, r2]
    6810:	e5820000 	str	r0, [r2]
	p->addModel(modelTest);
    6814:	e59f20f4 	ldr	r2, [pc, #244]	@ 6910 <init(rack::plugin::Plugin*)+0x118>
    6818:	e7933002 	ldr	r3, [r3, r2]
    681c:	e5935000 	ldr	r5, [r3]
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    6820:	e5903004 	ldr	r3, [r0, #4]
    6824:	e5902008 	ldr	r2, [r0, #8]
    6828:	e1530002 	cmp	r3, r2
    682c:	0a000004 	beq	6844 <init(rack::plugin::Plugin*)+0x4c>
    6830:	e5835000 	str	r5, [r3]
	    ++this->_M_impl._M_finish;
    6834:	e5903004 	ldr	r3, [r0, #4]
    6838:	e2833004 	add	r3, r3, #4
    683c:	e5803004 	str	r3, [r0, #4]
    6840:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6844:	e5908000 	ldr	r8, [r0]
    6848:	e0436008 	sub	r6, r3, r8
    684c:	e1a02146 	asr	r2, r6, #2
	if (max_size() - size() < __n)
    6850:	e372021e 	cmn	r2, #-536870911	@ 0xe0000001
    6854:	0a00000b 	beq	6888 <init(rack::plugin::Plugin*)+0x90>
	return __b;
    6858:	e1530008 	cmp	r3, r8
    685c:	11a01002 	movne	r1, r2
    6860:	03a01001 	moveq	r1, #1
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    6864:	e0922001 	adds	r2, r2, r1
    6868:	2a000009 	bcs	6894 <init(rack::plugin::Plugin*)+0x9c>
    686c:	e3e0920e 	mvn	r9, #-536870912	@ 0xe0000000
    6870:	e1520009 	cmp	r2, r9
    6874:	31a09002 	movcc	r9, r2
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6878:	e3520000 	cmp	r2, #0
    687c:	03a07000 	moveq	r7, #0
    6880:	0a000007 	beq	68a4 <init(rack::plugin::Plugin*)+0xac>
    6884:	ea000003 	b	6898 <init(rack::plugin::Plugin*)+0xa0>
	  __throw_length_error(__N(__s));
    6888:	e59f0084 	ldr	r0, [pc, #132]	@ 6914 <init(rack::plugin::Plugin*)+0x11c>
    688c:	e08f0000 	add	r0, pc, r0
    6890:	ebfff422 	bl	3920 <std::__throw_length_error(char const*)@plt>
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    6894:	e3e0920e 	mvn	r9, #-536870912	@ 0xe0000000
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6898:	e1a00109 	lsl	r0, r9, #2
    689c:	ebfff44c 	bl	39d4 <operator new(unsigned int)@plt>
    68a0:	e1a07000 	mov	r7, r0
    68a4:	e7875006 	str	r5, [r7, r6]
    __relocate_a_1(_Tp* __first, _Tp* __last,
		   _Tp* __result,
		   [[__maybe_unused__]] allocator<_Up>& __alloc) noexcept
    {
      ptrdiff_t __count = __last - __first;
      if (__count > 0)
    68a8:	e3560000 	cmp	r6, #0
    68ac:	ca000006 	bgt	68cc <init(rack::plugin::Plugin*)+0xd4>
	      ++__new_finish;
    68b0:	e2866004 	add	r6, r6, #4
    68b4:	e0876006 	add	r6, r7, r6
	if (__p)
    68b8:	e3580000 	cmp	r8, #0
    68bc:	0a00000c 	beq	68f4 <init(rack::plugin::Plugin*)+0xfc>
		    this->_M_impl._M_end_of_storage - __old_start);
    68c0:	e5941008 	ldr	r1, [r4, #8]
    68c4:	e0411008 	sub	r1, r1, r8
    68c8:	ea000007 	b	68ec <init(rack::plugin::Plugin*)+0xf4>
	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
	      return __out.base();
	    }
#endif
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    68cc:	e1a02006 	mov	r2, r6
    68d0:	e1a01008 	mov	r1, r8
    68d4:	e1a00007 	mov	r0, r7
    68d8:	ebfff3fe 	bl	38d8 <memmove@plt>
	      ++__new_finish;
    68dc:	e2866004 	add	r6, r6, #4
    68e0:	e0876006 	add	r6, r7, r6
		    this->_M_impl._M_end_of_storage - __old_start);
    68e4:	e5941008 	ldr	r1, [r4, #8]
    68e8:	e0411008 	sub	r1, r1, r8
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    68ec:	e1a00008 	mov	r0, r8
    68f0:	ebfff416 	bl	3950 <operator delete(void*, unsigned int)@plt>
      this->_M_impl._M_start = __new_start;
    68f4:	e5847000 	str	r7, [r4]
      this->_M_impl._M_finish = __new_finish;
    68f8:	e5846004 	str	r6, [r4, #4]
      this->_M_impl._M_end_of_storage = __new_start + __len;
    68fc:	e0877109 	add	r7, r7, r9, lsl #2
    6900:	e5847008 	str	r7, [r4, #8]
}
    6904:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6908:	000013bc 			@ <UNDEFINED> instruction: 0x000013bc
    690c:	000000bc 	strheq	r0, [r0], -ip
    6910:	000000a4 	andeq	r0, r0, r4, lsr #1
    6914:	000000f4 	strdeq	r0, [r0], -r4

00006918 <_GLOBAL__sub_I_plugin.cpp>:
    6918:	e92d4010 	push	{r4, lr}
    691c:	e30f1fff 	movw	r1, #65535	@ 0xffff
    6920:	e3a00001 	mov	r0, #1
    6924:	ebfffea6 	bl	63c4 <__static_initialization_and_destruction_0(int, int)>
    6928:	e8bd8010 	pop	{r4, pc}

Disassembly of section .rodata:

0000692c <.rodata>:
    692c:	0000002d 	andeq	r0, r0, sp, lsr #32
    6930:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    6934:	3a3a726f 	bcc	ea32f8 <_stack+0xe232f8>
    6938:	645f4d5f 	ldrbvs	r4, [pc], #-3423	@ 6940 <_GLOBAL__sub_I_plugin.cpp+0x28>
    693c:	75616665 	strbvc	r6, [r1, #-1637]!	@ 0xfffff99b
    6940:	615f746c 	cmpvs	pc, ip, ror #8
    6944:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
    6948:	00000064 	andeq	r0, r0, r4, rrx
    694c:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    6950:	3a3a726f 	bcc	ea3314 <_stack+0xe23314>
    6954:	725f4d5f 	subsvc	r4, pc, #6080	@ 0x17c0
    6958:	65676e61 	strbvs	r6, [r7, #-3681]!	@ 0xfffff19f
    695c:	736e695f 	cmnvc	lr, #1556480	@ 0x17c000
    6960:	00747265 	rsbseq	r7, r4, r5, ror #4
    6964:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    6968:	3a3a726f 	bcc	ea332c <_stack+0xe2332c>
    696c:	65736572 	ldrbvs	r6, [r3, #-1394]!	@ 0xfffffa8e
    6970:	00657672 	rsbeq	r7, r5, r2, ror r6
    6974:	00000000 	andeq	r0, r0, r0
    6978:	74736554 	ldrbtvc	r6, [r3], #-1364	@ 0xfffffaac
    697c:	75646f4d 	strbvc	r6, [r4, #-3917]!	@ 0xfffff0b3
    6980:	6c53656c 	cfldr64vs	mvdx6, [r3], {108}	@ 0x6c
    6984:	00006775 	andeq	r6, r0, r5, ror r7
    6988:	74636576 	strbtvc	r6, [r3], #-1398	@ 0xfffffa8a
    698c:	3a3a726f 	bcc	ea3350 <_stack+0xe23350>
    6990:	725f4d5f 	subsvc	r4, pc, #6080	@ 0x17c0
    6994:	6c6c6165 	stfvse	f6, [ip], #-404	@ 0xfffffe6c
    6998:	695f636f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^	@ <UNPREDICTABLE>
    699c:	7265736e 	rsbvc	r7, r5, #-1207959551	@ 0xb8000001
    69a0:	Address 0x69a0 is out of bounds.


Disassembly of section .init_array:

000079a4 <.init_array>:
    79a4:	000063b0 			@ <UNDEFINED> instruction: 0x000063b0
    79a8:	00006918 	andeq	r6, r0, r8, lsl r9

Disassembly of section .data.rel.ro:

000079ac <vtable for rack::widget::Widget>:
    79ac:	00000000 	andeq	r0, r0, r0
    79b0:	00000000 	andeq	r0, r0, r0
    79b4:	00000000 	andeq	r0, r0, r0
    79b8:	00000000 	andeq	r0, r0, r0
    79bc:	00000000 	andeq	r0, r0, r0
    79c0:	00000000 	andeq	r0, r0, r0
    79c4:	00000000 	andeq	r0, r0, r0
    79c8:	00000000 	andeq	r0, r0, r0
    79cc:	00000000 	andeq	r0, r0, r0
    79d0:	00000000 	andeq	r0, r0, r0
    79d4:	00000000 	andeq	r0, r0, r0
    79d8:	00000000 	andeq	r0, r0, r0
    79dc:	00000000 	andeq	r0, r0, r0
    79e0:	00000000 	andeq	r0, r0, r0
    79e4:	00000000 	andeq	r0, r0, r0
    79e8:	00000000 	andeq	r0, r0, r0
    79ec:	00000000 	andeq	r0, r0, r0

000079f0 <vtable for rack::ModuleWidget>:
    79f0:	00000000 	andeq	r0, r0, r0
    79f4:	00000000 	andeq	r0, r0, r0
    79f8:	00000000 	andeq	r0, r0, r0
    79fc:	00000000 	andeq	r0, r0, r0
    7a00:	00000000 	andeq	r0, r0, r0
    7a04:	00000000 	andeq	r0, r0, r0
    7a08:	00000000 	andeq	r0, r0, r0
    7a0c:	00000000 	andeq	r0, r0, r0
    7a10:	00000000 	andeq	r0, r0, r0
    7a14:	00000000 	andeq	r0, r0, r0
    7a18:	00000000 	andeq	r0, r0, r0
    7a1c:	00000000 	andeq	r0, r0, r0
    7a20:	00000000 	andeq	r0, r0, r0
    7a24:	00000000 	andeq	r0, r0, r0
    7a28:	00000000 	andeq	r0, r0, r0
    7a2c:	00000000 	andeq	r0, r0, r0
    7a30:	00000000 	andeq	r0, r0, r0
    7a34:	00000000 	andeq	r0, r0, r0

00007a38 <vtable for TestModule>:
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	00000000 	andeq	r0, r0, r0
    7a40:	00000000 	andeq	r0, r0, r0
    7a44:	00000000 	andeq	r0, r0, r0
    7a48:	00000000 	andeq	r0, r0, r0
    7a4c:	00000000 	andeq	r0, r0, r0
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	00000000 	andeq	r0, r0, r0
    7a58:	00000000 	andeq	r0, r0, r0
    7a5c:	00000000 	andeq	r0, r0, r0
    7a60:	00000000 	andeq	r0, r0, r0
    7a64:	00000000 	andeq	r0, r0, r0
    7a68:	00000000 	andeq	r0, r0, r0
    7a6c:	00000000 	andeq	r0, r0, r0
    7a70:	00000000 	andeq	r0, r0, r0
    7a74:	00000000 	andeq	r0, r0, r0
    7a78:	00000000 	andeq	r0, r0, r0
    7a7c:	00000000 	andeq	r0, r0, r0
    7a80:	00000000 	andeq	r0, r0, r0
    7a84:	00000000 	andeq	r0, r0, r0
    7a88:	00000000 	andeq	r0, r0, r0
    7a8c:	00000000 	andeq	r0, r0, r0
    7a90:	00000000 	andeq	r0, r0, r0
    7a94:	00000000 	andeq	r0, r0, r0
    7a98:	00000000 	andeq	r0, r0, r0
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	00000000 	andeq	r0, r0, r0
    7aa4:	00000000 	andeq	r0, r0, r0
    7aa8:	00000000 	andeq	r0, r0, r0
    7aac:	00000000 	andeq	r0, r0, r0
    7ab0:	00000000 	andeq	r0, r0, r0
    7ab4:	00000000 	andeq	r0, r0, r0
    7ab8:	00000000 	andeq	r0, r0, r0
    7abc:	00000000 	andeq	r0, r0, r0
    7ac0:	00000000 	andeq	r0, r0, r0
    7ac4:	00000000 	andeq	r0, r0, r0
    7ac8:	00000000 	andeq	r0, r0, r0
    7acc:	00000000 	andeq	r0, r0, r0
    7ad0:	00000000 	andeq	r0, r0, r0
    7ad4:	00000000 	andeq	r0, r0, r0
    7ad8:	00000000 	andeq	r0, r0, r0
    7adc:	00000000 	andeq	r0, r0, r0

00007ae0 <vtable for TestWidget>:
    7ae0:	00000000 	andeq	r0, r0, r0
    7ae4:	00000000 	andeq	r0, r0, r0
    7ae8:	00000000 	andeq	r0, r0, r0
    7aec:	00000000 	andeq	r0, r0, r0
    7af0:	00000000 	andeq	r0, r0, r0
    7af4:	00000000 	andeq	r0, r0, r0
    7af8:	00000000 	andeq	r0, r0, r0
    7afc:	00000000 	andeq	r0, r0, r0
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	00000000 	andeq	r0, r0, r0
    7b08:	00000000 	andeq	r0, r0, r0
    7b0c:	00000000 	andeq	r0, r0, r0
    7b10:	00000000 	andeq	r0, r0, r0
    7b14:	00000000 	andeq	r0, r0, r0
    7b18:	00000000 	andeq	r0, r0, r0
    7b1c:	00000000 	andeq	r0, r0, r0
    7b20:	00000000 	andeq	r0, r0, r0
    7b24:	00000000 	andeq	r0, r0, r0

Disassembly of section .dynamic:

00007b28 <.dynamic>:
    7b28:	00000019 	andeq	r0, r0, r9, lsl r0
    7b2c:	000079a4 	andeq	r7, r0, r4, lsr #19
    7b30:	0000001b 	andeq	r0, r0, fp, lsl r0
    7b34:	00000008 	andeq	r0, r0, r8
    7b38:	00000004 	andeq	r0, r0, r4
    7b3c:	00000094 	muleq	r0, r4, r0
    7b40:	00000005 	andeq	r0, r0, r5
    7b44:	00000e24 	andeq	r0, r0, r4, lsr #28
    7b48:	00000006 	andeq	r0, r0, r6
    7b4c:	000004f4 	strdeq	r0, [r0], -r4
    7b50:	0000000a 	andeq	r0, r0, sl
    7b54:	00002585 	andeq	r2, r0, r5, lsl #11
    7b58:	0000000b 	andeq	r0, r0, fp
    7b5c:	00000010 	andeq	r0, r0, r0, lsl r0
    7b60:	00000003 	andeq	r0, r0, r3
    7b64:	00007bc8 	andeq	r7, r0, r8, asr #23
    7b68:	00000002 	andeq	r0, r0, r2
    7b6c:	000000e8 	andeq	r0, r0, r8, ror #1
    7b70:	00000014 	andeq	r0, r0, r4, lsl r0
    7b74:	00000011 	andeq	r0, r0, r1, lsl r0
    7b78:	00000017 	andeq	r0, r0, r7, lsl r0
    7b7c:	000037c4 	andeq	r3, r0, r4, asr #15
    7b80:	00000011 	andeq	r0, r0, r1, lsl r0
    7b84:	000033ac 	andeq	r3, r0, ip, lsr #7
    7b88:	00000012 	andeq	r0, r0, r2, lsl r0
    7b8c:	00000418 	andeq	r0, r0, r8, lsl r4
    7b90:	00000013 	andeq	r0, r0, r3, lsl r0
    7b94:	00000008 	andeq	r0, r0, r8
    7b98:	6ffffffa 	svcvs	0x00fffffa
    7b9c:	00000003 	andeq	r0, r0, r3
    7ba0:	00000000 	andeq	r0, r0, r0
    7ba4:	00000000 	andeq	r0, r0, r0
    7ba8:	00000000 	andeq	r0, r0, r0
    7bac:	00000000 	andeq	r0, r0, r0
    7bb0:	00000000 	andeq	r0, r0, r0
    7bb4:	00000000 	andeq	r0, r0, r0
    7bb8:	00000000 	andeq	r0, r0, r0
    7bbc:	00000000 	andeq	r0, r0, r0
    7bc0:	00000000 	andeq	r0, r0, r0
    7bc4:	00000000 	andeq	r0, r0, r0

Disassembly of section .got:

00007bc8 <.got>:
    7bc8:	00007b28 	andeq	r7, r0, r8, lsr #22
    7bcc:	00000000 	andeq	r0, r0, r0
    7bd0:	00000000 	andeq	r0, r0, r0
    7bd4:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bd8:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bdc:	000038ac 	andeq	r3, r0, ip, lsr #17
    7be0:	000038ac 	andeq	r3, r0, ip, lsr #17
    7be4:	000038ac 	andeq	r3, r0, ip, lsr #17
    7be8:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bec:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bf0:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bf4:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bf8:	000038ac 	andeq	r3, r0, ip, lsr #17
    7bfc:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c00:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c04:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c08:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c0c:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c10:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c14:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c18:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c1c:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c20:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c24:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c28:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c2c:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c30:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c34:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c38:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c3c:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c40:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c44:	000038ac 	andeq	r3, r0, ip, lsr #17
    7c48:	00000000 	andeq	r0, r0, r0
    7c4c:	00000000 	andeq	r0, r0, r0
    7c50:	00000000 	andeq	r0, r0, r0
    7c54:	00000000 	andeq	r0, r0, r0
    7c58:	00000000 	andeq	r0, r0, r0
    7c5c:	00000000 	andeq	r0, r0, r0
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	00000000 	andeq	r0, r0, r0
    7c68:	00000000 	andeq	r0, r0, r0
    7c6c:	00000000 	andeq	r0, r0, r0
    7c70:	00000000 	andeq	r0, r0, r0
    7c74:	00000000 	andeq	r0, r0, r0
    7c78:	00000000 	andeq	r0, r0, r0
    7c7c:	00000000 	andeq	r0, r0, r0
    7c80:	00000000 	andeq	r0, r0, r0
    7c84:	00000000 	andeq	r0, r0, r0
    7c88:	00000000 	andeq	r0, r0, r0
    7c8c:	00000000 	andeq	r0, r0, r0
    7c90:	00000000 	andeq	r0, r0, r0
    7c94:	00000000 	andeq	r0, r0, r0
    7c98:	00000000 	andeq	r0, r0, r0
    7c9c:	00000000 	andeq	r0, r0, r0
    7ca0:	00000000 	andeq	r0, r0, r0
    7ca4:	00000000 	andeq	r0, r0, r0
    7ca8:	00000000 	andeq	r0, r0, r0
    7cac:	00000000 	andeq	r0, r0, r0
    7cb0:	00000000 	andeq	r0, r0, r0
    7cb4:	00000000 	andeq	r0, r0, r0
    7cb8:	00000000 	andeq	r0, r0, r0
    7cbc:	00000000 	andeq	r0, r0, r0
    7cc0:	00000000 	andeq	r0, r0, r0
    7cc4:	00000000 	andeq	r0, r0, r0
    7cc8:	00000000 	andeq	r0, r0, r0
    7ccc:	00000000 	andeq	r0, r0, r0
    7cd0:	00000000 	andeq	r0, r0, r0
    7cd4:	00000000 	andeq	r0, r0, r0
    7cd8:	00000000 	andeq	r0, r0, r0
    7cdc:	00000000 	andeq	r0, r0, r0
    7ce0:	00000000 	andeq	r0, r0, r0
    7ce4:	00000000 	andeq	r0, r0, r0
    7ce8:	00000000 	andeq	r0, r0, r0

Disassembly of section .data:

00007cec <__dso_handle>:
void *__dso_handle = (void *)&__dso_handle;
    7cec:	00007cec 	andeq	r7, r0, ip, ror #25

Disassembly of section .bss:

00007cf0 <guard variable for ModuleFactory::faceplates>:
    7cf0:	00000000 	andeq	r0, r0, r0

00007cf4 <guard variable for ModuleFactory::infos>:
    7cf4:	00000000 	andeq	r0, r0, r0

00007cf8 <guard variable for ModuleFactory::creation_funcs>:
    7cf8:	00000000 	andeq	r0, r0, r0

00007cfc <guard variable for rack::settings::moduleWhitelist[abi:cxx11]>:
    7cfc:	00000000 	andeq	r0, r0, r0

00007d00 <guard variable for rack::settings::moduleInfos[abi:cxx11]>:
    7d00:	00000000 	andeq	r0, r0, r0

00007d04 <guard variable for rack::settings::cableColors>:
    7d04:	00000000 	andeq	r0, r0, r0

00007d08 <guard variable for rack::settings::recentPatchPaths[abi:cxx11]>:
    7d08:	00000000 	andeq	r0, r0, r0

00007d0c <guard variable for rack::settings::uiTheme[abi:cxx11]>:
    7d0c:	00000000 	andeq	r0, r0, r0

00007d10 <guard variable for rack::settings::token[abi:cxx11]>:
    7d10:	00000000 	andeq	r0, r0, r0

00007d14 <guard variable for rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::indices>:
    7d14:	00000000 	andeq	r0, r0, r0

00007d18 <rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::indices>:
		static std::vector<ElementCount::Indices> indices;
    7d18:	00000000 	andeq	r0, r0, r0
    7d1c:	00000000 	andeq	r0, r0, r0
    7d20:	00000000 	andeq	r0, r0, r0

00007d24 <guard variable for rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::elements>:
    7d24:	00000000 	andeq	r0, r0, r0

00007d28 <rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::elements>:
		static std::vector<MetaModule::Element> elements;
    7d28:	00000000 	andeq	r0, r0, r0
    7d2c:	00000000 	andeq	r0, r0, r0
    7d30:	00000000 	andeq	r0, r0, r0

00007d34 <guard variable for rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::module>:
    7d34:	00000000 	andeq	r0, r0, r0

00007d38 <rack::createModel<TestModule, TestWidget>(std::basic_string_view<char, std::char_traits<char> >)::module>:
		static ModuleT module; //400k
    7d38:	00000000 	andeq	r0, r0, r0
    7d3c:	00000000 	andeq	r0, r0, r0
    7d40:	00000000 	andeq	r0, r0, r0
    7d44:	00000000 	andeq	r0, r0, r0
    7d48:	00000000 	andeq	r0, r0, r0
    7d4c:	00000000 	andeq	r0, r0, r0
    7d50:	00000000 	andeq	r0, r0, r0
    7d54:	00000000 	andeq	r0, r0, r0
    7d58:	00000000 	andeq	r0, r0, r0
    7d5c:	00000000 	andeq	r0, r0, r0
    7d60:	00000000 	andeq	r0, r0, r0
    7d64:	00000000 	andeq	r0, r0, r0
    7d68:	00000000 	andeq	r0, r0, r0
    7d6c:	00000000 	andeq	r0, r0, r0
    7d70:	00000000 	andeq	r0, r0, r0
    7d74:	00000000 	andeq	r0, r0, r0
    7d78:	00000000 	andeq	r0, r0, r0
    7d7c:	00000000 	andeq	r0, r0, r0
    7d80:	00000000 	andeq	r0, r0, r0
    7d84:	00000000 	andeq	r0, r0, r0
    7d88:	00000000 	andeq	r0, r0, r0
    7d8c:	00000000 	andeq	r0, r0, r0
    7d90:	00000000 	andeq	r0, r0, r0
    7d94:	00000000 	andeq	r0, r0, r0
    7d98:	00000000 	andeq	r0, r0, r0
    7d9c:	00000000 	andeq	r0, r0, r0
    7da0:	00000000 	andeq	r0, r0, r0
    7da4:	00000000 	andeq	r0, r0, r0
    7da8:	00000000 	andeq	r0, r0, r0
    7dac:	00000000 	andeq	r0, r0, r0
    7db0:	00000000 	andeq	r0, r0, r0
    7db4:	00000000 	andeq	r0, r0, r0
    7db8:	00000000 	andeq	r0, r0, r0
    7dbc:	00000000 	andeq	r0, r0, r0
    7dc0:	00000000 	andeq	r0, r0, r0
    7dc4:	00000000 	andeq	r0, r0, r0
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	00000000 	andeq	r0, r0, r0
    7dd0:	00000000 	andeq	r0, r0, r0
    7dd4:	00000000 	andeq	r0, r0, r0
    7dd8:	00000000 	andeq	r0, r0, r0
    7ddc:	00000000 	andeq	r0, r0, r0
    7de0:	00000000 	andeq	r0, r0, r0
    7de4:	00000000 	andeq	r0, r0, r0
    7de8:	00000000 	andeq	r0, r0, r0
    7dec:	00000000 	andeq	r0, r0, r0

00007df0 <modelTest>:
    7df0:	00000000 	andeq	r0, r0, r0

00007df4 <ModuleFactory::faceplates>:
	static inline SeqMap<ModuleTypeSlug, FaceplatePtr, MAX_MODULE_TYPES> faceplates;
    7df4:	00000000 	andeq	r0, r0, r0
    7df8:	00000000 	andeq	r0, r0, r0
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	00000000 	andeq	r0, r0, r0
    7e04:	00000000 	andeq	r0, r0, r0
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	00000000 	andeq	r0, r0, r0
    7e10:	00000000 	andeq	r0, r0, r0
    7e14:	00000000 	andeq	r0, r0, r0
    7e18:	00000000 	andeq	r0, r0, r0
    7e1c:	00000000 	andeq	r0, r0, r0
    7e20:	00000000 	andeq	r0, r0, r0
    7e24:	00000000 	andeq	r0, r0, r0
    7e28:	00000000 	andeq	r0, r0, r0
    7e2c:	00000000 	andeq	r0, r0, r0
    7e30:	00000000 	andeq	r0, r0, r0
    7e34:	00000000 	andeq	r0, r0, r0
    7e38:	00000000 	andeq	r0, r0, r0
    7e3c:	00000000 	andeq	r0, r0, r0
    7e40:	00000000 	andeq	r0, r0, r0
    7e44:	00000000 	andeq	r0, r0, r0
    7e48:	00000000 	andeq	r0, r0, r0
    7e4c:	00000000 	andeq	r0, r0, r0
    7e50:	00000000 	andeq	r0, r0, r0
    7e54:	00000000 	andeq	r0, r0, r0
    7e58:	00000000 	andeq	r0, r0, r0
    7e5c:	00000000 	andeq	r0, r0, r0
    7e60:	00000000 	andeq	r0, r0, r0
    7e64:	00000000 	andeq	r0, r0, r0
    7e68:	00000000 	andeq	r0, r0, r0
    7e6c:	00000000 	andeq	r0, r0, r0
    7e70:	00000000 	andeq	r0, r0, r0
    7e74:	00000000 	andeq	r0, r0, r0
    7e78:	00000000 	andeq	r0, r0, r0
    7e7c:	00000000 	andeq	r0, r0, r0
    7e80:	00000000 	andeq	r0, r0, r0
    7e84:	00000000 	andeq	r0, r0, r0
    7e88:	00000000 	andeq	r0, r0, r0
    7e8c:	00000000 	andeq	r0, r0, r0
    7e90:	00000000 	andeq	r0, r0, r0
    7e94:	00000000 	andeq	r0, r0, r0
    7e98:	00000000 	andeq	r0, r0, r0
    7e9c:	00000000 	andeq	r0, r0, r0
    7ea0:	00000000 	andeq	r0, r0, r0
    7ea4:	00000000 	andeq	r0, r0, r0
    7ea8:	00000000 	andeq	r0, r0, r0
    7eac:	00000000 	andeq	r0, r0, r0
    7eb0:	00000000 	andeq	r0, r0, r0
    7eb4:	00000000 	andeq	r0, r0, r0
    7eb8:	00000000 	andeq	r0, r0, r0
    7ebc:	00000000 	andeq	r0, r0, r0
    7ec0:	00000000 	andeq	r0, r0, r0
    7ec4:	00000000 	andeq	r0, r0, r0
    7ec8:	00000000 	andeq	r0, r0, r0
    7ecc:	00000000 	andeq	r0, r0, r0
    7ed0:	00000000 	andeq	r0, r0, r0
    7ed4:	00000000 	andeq	r0, r0, r0
    7ed8:	00000000 	andeq	r0, r0, r0
    7edc:	00000000 	andeq	r0, r0, r0
    7ee0:	00000000 	andeq	r0, r0, r0
    7ee4:	00000000 	andeq	r0, r0, r0
    7ee8:	00000000 	andeq	r0, r0, r0
    7eec:	00000000 	andeq	r0, r0, r0
    7ef0:	00000000 	andeq	r0, r0, r0
    7ef4:	00000000 	andeq	r0, r0, r0
    7ef8:	00000000 	andeq	r0, r0, r0
    7efc:	00000000 	andeq	r0, r0, r0
    7f00:	00000000 	andeq	r0, r0, r0
    7f04:	00000000 	andeq	r0, r0, r0
    7f08:	00000000 	andeq	r0, r0, r0
    7f0c:	00000000 	andeq	r0, r0, r0
    7f10:	00000000 	andeq	r0, r0, r0
    7f14:	00000000 	andeq	r0, r0, r0
    7f18:	00000000 	andeq	r0, r0, r0
    7f1c:	00000000 	andeq	r0, r0, r0
    7f20:	00000000 	andeq	r0, r0, r0
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	00000000 	andeq	r0, r0, r0
    7f2c:	00000000 	andeq	r0, r0, r0
    7f30:	00000000 	andeq	r0, r0, r0
    7f34:	00000000 	andeq	r0, r0, r0
    7f38:	00000000 	andeq	r0, r0, r0
    7f3c:	00000000 	andeq	r0, r0, r0
    7f40:	00000000 	andeq	r0, r0, r0
    7f44:	00000000 	andeq	r0, r0, r0
    7f48:	00000000 	andeq	r0, r0, r0
    7f4c:	00000000 	andeq	r0, r0, r0
    7f50:	00000000 	andeq	r0, r0, r0
    7f54:	00000000 	andeq	r0, r0, r0
    7f58:	00000000 	andeq	r0, r0, r0
    7f5c:	00000000 	andeq	r0, r0, r0
    7f60:	00000000 	andeq	r0, r0, r0
    7f64:	00000000 	andeq	r0, r0, r0
    7f68:	00000000 	andeq	r0, r0, r0
    7f6c:	00000000 	andeq	r0, r0, r0
    7f70:	00000000 	andeq	r0, r0, r0
    7f74:	00000000 	andeq	r0, r0, r0
    7f78:	00000000 	andeq	r0, r0, r0
    7f7c:	00000000 	andeq	r0, r0, r0
    7f80:	00000000 	andeq	r0, r0, r0
    7f84:	00000000 	andeq	r0, r0, r0
    7f88:	00000000 	andeq	r0, r0, r0
    7f8c:	00000000 	andeq	r0, r0, r0
    7f90:	00000000 	andeq	r0, r0, r0
    7f94:	00000000 	andeq	r0, r0, r0
    7f98:	00000000 	andeq	r0, r0, r0
    7f9c:	00000000 	andeq	r0, r0, r0
    7fa0:	00000000 	andeq	r0, r0, r0
    7fa4:	00000000 	andeq	r0, r0, r0
    7fa8:	00000000 	andeq	r0, r0, r0
    7fac:	00000000 	andeq	r0, r0, r0
    7fb0:	00000000 	andeq	r0, r0, r0
    7fb4:	00000000 	andeq	r0, r0, r0
    7fb8:	00000000 	andeq	r0, r0, r0
    7fbc:	00000000 	andeq	r0, r0, r0
    7fc0:	00000000 	andeq	r0, r0, r0
    7fc4:	00000000 	andeq	r0, r0, r0
    7fc8:	00000000 	andeq	r0, r0, r0
    7fcc:	00000000 	andeq	r0, r0, r0
    7fd0:	00000000 	andeq	r0, r0, r0
    7fd4:	00000000 	andeq	r0, r0, r0
    7fd8:	00000000 	andeq	r0, r0, r0
    7fdc:	00000000 	andeq	r0, r0, r0
    7fe0:	00000000 	andeq	r0, r0, r0
    7fe4:	00000000 	andeq	r0, r0, r0
    7fe8:	00000000 	andeq	r0, r0, r0
    7fec:	00000000 	andeq	r0, r0, r0
    7ff0:	00000000 	andeq	r0, r0, r0
    7ff4:	00000000 	andeq	r0, r0, r0
    7ff8:	00000000 	andeq	r0, r0, r0
    7ffc:	00000000 	andeq	r0, r0, r0
    8000:	00000000 	andeq	r0, r0, r0
    8004:	00000000 	andeq	r0, r0, r0
    8008:	00000000 	andeq	r0, r0, r0
    800c:	00000000 	andeq	r0, r0, r0
    8010:	00000000 	andeq	r0, r0, r0
    8014:	00000000 	andeq	r0, r0, r0
    8018:	00000000 	andeq	r0, r0, r0
    801c:	00000000 	andeq	r0, r0, r0
    8020:	00000000 	andeq	r0, r0, r0
    8024:	00000000 	andeq	r0, r0, r0
    8028:	00000000 	andeq	r0, r0, r0
    802c:	00000000 	andeq	r0, r0, r0
    8030:	00000000 	andeq	r0, r0, r0
    8034:	00000000 	andeq	r0, r0, r0
    8038:	00000000 	andeq	r0, r0, r0
    803c:	00000000 	andeq	r0, r0, r0
    8040:	00000000 	andeq	r0, r0, r0
    8044:	00000000 	andeq	r0, r0, r0
    8048:	00000000 	andeq	r0, r0, r0
    804c:	00000000 	andeq	r0, r0, r0
    8050:	00000000 	andeq	r0, r0, r0
    8054:	00000000 	andeq	r0, r0, r0
    8058:	00000000 	andeq	r0, r0, r0
    805c:	00000000 	andeq	r0, r0, r0
    8060:	00000000 	andeq	r0, r0, r0
    8064:	00000000 	andeq	r0, r0, r0
    8068:	00000000 	andeq	r0, r0, r0
    806c:	00000000 	andeq	r0, r0, r0
    8070:	00000000 	andeq	r0, r0, r0
    8074:	00000000 	andeq	r0, r0, r0
    8078:	00000000 	andeq	r0, r0, r0
    807c:	00000000 	andeq	r0, r0, r0
    8080:	00000000 	andeq	r0, r0, r0
    8084:	00000000 	andeq	r0, r0, r0
    8088:	00000000 	andeq	r0, r0, r0
    808c:	00000000 	andeq	r0, r0, r0
    8090:	00000000 	andeq	r0, r0, r0
    8094:	00000000 	andeq	r0, r0, r0
    8098:	00000000 	andeq	r0, r0, r0
    809c:	00000000 	andeq	r0, r0, r0
    80a0:	00000000 	andeq	r0, r0, r0
    80a4:	00000000 	andeq	r0, r0, r0
    80a8:	00000000 	andeq	r0, r0, r0
    80ac:	00000000 	andeq	r0, r0, r0
    80b0:	00000000 	andeq	r0, r0, r0
    80b4:	00000000 	andeq	r0, r0, r0
    80b8:	00000000 	andeq	r0, r0, r0
    80bc:	00000000 	andeq	r0, r0, r0
    80c0:	00000000 	andeq	r0, r0, r0
    80c4:	00000000 	andeq	r0, r0, r0
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	00000000 	andeq	r0, r0, r0
    80d0:	00000000 	andeq	r0, r0, r0
    80d4:	00000000 	andeq	r0, r0, r0
    80d8:	00000000 	andeq	r0, r0, r0
    80dc:	00000000 	andeq	r0, r0, r0
    80e0:	00000000 	andeq	r0, r0, r0
    80e4:	00000000 	andeq	r0, r0, r0
    80e8:	00000000 	andeq	r0, r0, r0
    80ec:	00000000 	andeq	r0, r0, r0
    80f0:	00000000 	andeq	r0, r0, r0
    80f4:	00000000 	andeq	r0, r0, r0
    80f8:	00000000 	andeq	r0, r0, r0
    80fc:	00000000 	andeq	r0, r0, r0
    8100:	00000000 	andeq	r0, r0, r0
    8104:	00000000 	andeq	r0, r0, r0
    8108:	00000000 	andeq	r0, r0, r0
    810c:	00000000 	andeq	r0, r0, r0
    8110:	00000000 	andeq	r0, r0, r0
    8114:	00000000 	andeq	r0, r0, r0
    8118:	00000000 	andeq	r0, r0, r0
    811c:	00000000 	andeq	r0, r0, r0
    8120:	00000000 	andeq	r0, r0, r0
    8124:	00000000 	andeq	r0, r0, r0
    8128:	00000000 	andeq	r0, r0, r0
    812c:	00000000 	andeq	r0, r0, r0
    8130:	00000000 	andeq	r0, r0, r0
    8134:	00000000 	andeq	r0, r0, r0
    8138:	00000000 	andeq	r0, r0, r0
    813c:	00000000 	andeq	r0, r0, r0
    8140:	00000000 	andeq	r0, r0, r0
    8144:	00000000 	andeq	r0, r0, r0
    8148:	00000000 	andeq	r0, r0, r0
    814c:	00000000 	andeq	r0, r0, r0
    8150:	00000000 	andeq	r0, r0, r0
    8154:	00000000 	andeq	r0, r0, r0
    8158:	00000000 	andeq	r0, r0, r0
    815c:	00000000 	andeq	r0, r0, r0
    8160:	00000000 	andeq	r0, r0, r0
    8164:	00000000 	andeq	r0, r0, r0
    8168:	00000000 	andeq	r0, r0, r0
    816c:	00000000 	andeq	r0, r0, r0
    8170:	00000000 	andeq	r0, r0, r0
    8174:	00000000 	andeq	r0, r0, r0
    8178:	00000000 	andeq	r0, r0, r0
    817c:	00000000 	andeq	r0, r0, r0
    8180:	00000000 	andeq	r0, r0, r0
    8184:	00000000 	andeq	r0, r0, r0
    8188:	00000000 	andeq	r0, r0, r0
    818c:	00000000 	andeq	r0, r0, r0
    8190:	00000000 	andeq	r0, r0, r0
    8194:	00000000 	andeq	r0, r0, r0
    8198:	00000000 	andeq	r0, r0, r0
    819c:	00000000 	andeq	r0, r0, r0
    81a0:	00000000 	andeq	r0, r0, r0
    81a4:	00000000 	andeq	r0, r0, r0
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	00000000 	andeq	r0, r0, r0
    81b0:	00000000 	andeq	r0, r0, r0
    81b4:	00000000 	andeq	r0, r0, r0
    81b8:	00000000 	andeq	r0, r0, r0
    81bc:	00000000 	andeq	r0, r0, r0
    81c0:	00000000 	andeq	r0, r0, r0
    81c4:	00000000 	andeq	r0, r0, r0
    81c8:	00000000 	andeq	r0, r0, r0
    81cc:	00000000 	andeq	r0, r0, r0
    81d0:	00000000 	andeq	r0, r0, r0
    81d4:	00000000 	andeq	r0, r0, r0
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	00000000 	andeq	r0, r0, r0
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	00000000 	andeq	r0, r0, r0
    81e8:	00000000 	andeq	r0, r0, r0
    81ec:	00000000 	andeq	r0, r0, r0
    81f0:	00000000 	andeq	r0, r0, r0
    81f4:	00000000 	andeq	r0, r0, r0
    81f8:	00000000 	andeq	r0, r0, r0
    81fc:	00000000 	andeq	r0, r0, r0
    8200:	00000000 	andeq	r0, r0, r0
    8204:	00000000 	andeq	r0, r0, r0
    8208:	00000000 	andeq	r0, r0, r0
    820c:	00000000 	andeq	r0, r0, r0
    8210:	00000000 	andeq	r0, r0, r0
    8214:	00000000 	andeq	r0, r0, r0
    8218:	00000000 	andeq	r0, r0, r0
    821c:	00000000 	andeq	r0, r0, r0
    8220:	00000000 	andeq	r0, r0, r0
    8224:	00000000 	andeq	r0, r0, r0
    8228:	00000000 	andeq	r0, r0, r0
    822c:	00000000 	andeq	r0, r0, r0
    8230:	00000000 	andeq	r0, r0, r0
    8234:	00000000 	andeq	r0, r0, r0
    8238:	00000000 	andeq	r0, r0, r0
    823c:	00000000 	andeq	r0, r0, r0
    8240:	00000000 	andeq	r0, r0, r0
    8244:	00000000 	andeq	r0, r0, r0
    8248:	00000000 	andeq	r0, r0, r0
    824c:	00000000 	andeq	r0, r0, r0
    8250:	00000000 	andeq	r0, r0, r0
    8254:	00000000 	andeq	r0, r0, r0
    8258:	00000000 	andeq	r0, r0, r0
    825c:	00000000 	andeq	r0, r0, r0
    8260:	00000000 	andeq	r0, r0, r0
    8264:	00000000 	andeq	r0, r0, r0
    8268:	00000000 	andeq	r0, r0, r0
    826c:	00000000 	andeq	r0, r0, r0
    8270:	00000000 	andeq	r0, r0, r0
    8274:	00000000 	andeq	r0, r0, r0
    8278:	00000000 	andeq	r0, r0, r0
    827c:	00000000 	andeq	r0, r0, r0
    8280:	00000000 	andeq	r0, r0, r0
    8284:	00000000 	andeq	r0, r0, r0
    8288:	00000000 	andeq	r0, r0, r0
    828c:	00000000 	andeq	r0, r0, r0
    8290:	00000000 	andeq	r0, r0, r0
    8294:	00000000 	andeq	r0, r0, r0
    8298:	00000000 	andeq	r0, r0, r0
    829c:	00000000 	andeq	r0, r0, r0
    82a0:	00000000 	andeq	r0, r0, r0
    82a4:	00000000 	andeq	r0, r0, r0
    82a8:	00000000 	andeq	r0, r0, r0
    82ac:	00000000 	andeq	r0, r0, r0
    82b0:	00000000 	andeq	r0, r0, r0
    82b4:	00000000 	andeq	r0, r0, r0
    82b8:	00000000 	andeq	r0, r0, r0
    82bc:	00000000 	andeq	r0, r0, r0
    82c0:	00000000 	andeq	r0, r0, r0
    82c4:	00000000 	andeq	r0, r0, r0
    82c8:	00000000 	andeq	r0, r0, r0
    82cc:	00000000 	andeq	r0, r0, r0
    82d0:	00000000 	andeq	r0, r0, r0
    82d4:	00000000 	andeq	r0, r0, r0
    82d8:	00000000 	andeq	r0, r0, r0
    82dc:	00000000 	andeq	r0, r0, r0
    82e0:	00000000 	andeq	r0, r0, r0
    82e4:	00000000 	andeq	r0, r0, r0
    82e8:	00000000 	andeq	r0, r0, r0
    82ec:	00000000 	andeq	r0, r0, r0
    82f0:	00000000 	andeq	r0, r0, r0
    82f4:	00000000 	andeq	r0, r0, r0
    82f8:	00000000 	andeq	r0, r0, r0
    82fc:	00000000 	andeq	r0, r0, r0
    8300:	00000000 	andeq	r0, r0, r0
    8304:	00000000 	andeq	r0, r0, r0
    8308:	00000000 	andeq	r0, r0, r0
    830c:	00000000 	andeq	r0, r0, r0
    8310:	00000000 	andeq	r0, r0, r0
    8314:	00000000 	andeq	r0, r0, r0
    8318:	00000000 	andeq	r0, r0, r0
    831c:	00000000 	andeq	r0, r0, r0
    8320:	00000000 	andeq	r0, r0, r0
    8324:	00000000 	andeq	r0, r0, r0
    8328:	00000000 	andeq	r0, r0, r0
    832c:	00000000 	andeq	r0, r0, r0
    8330:	00000000 	andeq	r0, r0, r0
    8334:	00000000 	andeq	r0, r0, r0
    8338:	00000000 	andeq	r0, r0, r0
    833c:	00000000 	andeq	r0, r0, r0
    8340:	00000000 	andeq	r0, r0, r0
    8344:	00000000 	andeq	r0, r0, r0
    8348:	00000000 	andeq	r0, r0, r0
    834c:	00000000 	andeq	r0, r0, r0
    8350:	00000000 	andeq	r0, r0, r0
    8354:	00000000 	andeq	r0, r0, r0
    8358:	00000000 	andeq	r0, r0, r0
    835c:	00000000 	andeq	r0, r0, r0
    8360:	00000000 	andeq	r0, r0, r0
    8364:	00000000 	andeq	r0, r0, r0
    8368:	00000000 	andeq	r0, r0, r0
    836c:	00000000 	andeq	r0, r0, r0
    8370:	00000000 	andeq	r0, r0, r0
    8374:	00000000 	andeq	r0, r0, r0
    8378:	00000000 	andeq	r0, r0, r0
    837c:	00000000 	andeq	r0, r0, r0
    8380:	00000000 	andeq	r0, r0, r0
    8384:	00000000 	andeq	r0, r0, r0
    8388:	00000000 	andeq	r0, r0, r0
    838c:	00000000 	andeq	r0, r0, r0
    8390:	00000000 	andeq	r0, r0, r0
    8394:	00000000 	andeq	r0, r0, r0
    8398:	00000000 	andeq	r0, r0, r0
    839c:	00000000 	andeq	r0, r0, r0
    83a0:	00000000 	andeq	r0, r0, r0
    83a4:	00000000 	andeq	r0, r0, r0
    83a8:	00000000 	andeq	r0, r0, r0
    83ac:	00000000 	andeq	r0, r0, r0
    83b0:	00000000 	andeq	r0, r0, r0
    83b4:	00000000 	andeq	r0, r0, r0
    83b8:	00000000 	andeq	r0, r0, r0
    83bc:	00000000 	andeq	r0, r0, r0
    83c0:	00000000 	andeq	r0, r0, r0
    83c4:	00000000 	andeq	r0, r0, r0
    83c8:	00000000 	andeq	r0, r0, r0
    83cc:	00000000 	andeq	r0, r0, r0
    83d0:	00000000 	andeq	r0, r0, r0
    83d4:	00000000 	andeq	r0, r0, r0
    83d8:	00000000 	andeq	r0, r0, r0
    83dc:	00000000 	andeq	r0, r0, r0
    83e0:	00000000 	andeq	r0, r0, r0
    83e4:	00000000 	andeq	r0, r0, r0
    83e8:	00000000 	andeq	r0, r0, r0
    83ec:	00000000 	andeq	r0, r0, r0
    83f0:	00000000 	andeq	r0, r0, r0
    83f4:	00000000 	andeq	r0, r0, r0
    83f8:	00000000 	andeq	r0, r0, r0
    83fc:	00000000 	andeq	r0, r0, r0
    8400:	00000000 	andeq	r0, r0, r0
    8404:	00000000 	andeq	r0, r0, r0
    8408:	00000000 	andeq	r0, r0, r0
    840c:	00000000 	andeq	r0, r0, r0
    8410:	00000000 	andeq	r0, r0, r0
    8414:	00000000 	andeq	r0, r0, r0
    8418:	00000000 	andeq	r0, r0, r0
    841c:	00000000 	andeq	r0, r0, r0
    8420:	00000000 	andeq	r0, r0, r0
    8424:	00000000 	andeq	r0, r0, r0
    8428:	00000000 	andeq	r0, r0, r0
    842c:	00000000 	andeq	r0, r0, r0
    8430:	00000000 	andeq	r0, r0, r0
    8434:	00000000 	andeq	r0, r0, r0
    8438:	00000000 	andeq	r0, r0, r0
    843c:	00000000 	andeq	r0, r0, r0
    8440:	00000000 	andeq	r0, r0, r0
    8444:	00000000 	andeq	r0, r0, r0
    8448:	00000000 	andeq	r0, r0, r0
    844c:	00000000 	andeq	r0, r0, r0
    8450:	00000000 	andeq	r0, r0, r0
    8454:	00000000 	andeq	r0, r0, r0
    8458:	00000000 	andeq	r0, r0, r0
    845c:	00000000 	andeq	r0, r0, r0
    8460:	00000000 	andeq	r0, r0, r0
    8464:	00000000 	andeq	r0, r0, r0
    8468:	00000000 	andeq	r0, r0, r0
    846c:	00000000 	andeq	r0, r0, r0
    8470:	00000000 	andeq	r0, r0, r0
    8474:	00000000 	andeq	r0, r0, r0
    8478:	00000000 	andeq	r0, r0, r0
    847c:	00000000 	andeq	r0, r0, r0
    8480:	00000000 	andeq	r0, r0, r0
    8484:	00000000 	andeq	r0, r0, r0
    8488:	00000000 	andeq	r0, r0, r0
    848c:	00000000 	andeq	r0, r0, r0
    8490:	00000000 	andeq	r0, r0, r0
    8494:	00000000 	andeq	r0, r0, r0
    8498:	00000000 	andeq	r0, r0, r0
    849c:	00000000 	andeq	r0, r0, r0
    84a0:	00000000 	andeq	r0, r0, r0
    84a4:	00000000 	andeq	r0, r0, r0
    84a8:	00000000 	andeq	r0, r0, r0
    84ac:	00000000 	andeq	r0, r0, r0
    84b0:	00000000 	andeq	r0, r0, r0
    84b4:	00000000 	andeq	r0, r0, r0
    84b8:	00000000 	andeq	r0, r0, r0
    84bc:	00000000 	andeq	r0, r0, r0
    84c0:	00000000 	andeq	r0, r0, r0
    84c4:	00000000 	andeq	r0, r0, r0
    84c8:	00000000 	andeq	r0, r0, r0
    84cc:	00000000 	andeq	r0, r0, r0
    84d0:	00000000 	andeq	r0, r0, r0
    84d4:	00000000 	andeq	r0, r0, r0
    84d8:	00000000 	andeq	r0, r0, r0
    84dc:	00000000 	andeq	r0, r0, r0
    84e0:	00000000 	andeq	r0, r0, r0
    84e4:	00000000 	andeq	r0, r0, r0
    84e8:	00000000 	andeq	r0, r0, r0
    84ec:	00000000 	andeq	r0, r0, r0
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	00000000 	andeq	r0, r0, r0
    84f8:	00000000 	andeq	r0, r0, r0
    84fc:	00000000 	andeq	r0, r0, r0
    8500:	00000000 	andeq	r0, r0, r0
    8504:	00000000 	andeq	r0, r0, r0
    8508:	00000000 	andeq	r0, r0, r0
    850c:	00000000 	andeq	r0, r0, r0
    8510:	00000000 	andeq	r0, r0, r0
    8514:	00000000 	andeq	r0, r0, r0
    8518:	00000000 	andeq	r0, r0, r0
    851c:	00000000 	andeq	r0, r0, r0
    8520:	00000000 	andeq	r0, r0, r0
    8524:	00000000 	andeq	r0, r0, r0
    8528:	00000000 	andeq	r0, r0, r0
    852c:	00000000 	andeq	r0, r0, r0
    8530:	00000000 	andeq	r0, r0, r0
    8534:	00000000 	andeq	r0, r0, r0
    8538:	00000000 	andeq	r0, r0, r0
    853c:	00000000 	andeq	r0, r0, r0
    8540:	00000000 	andeq	r0, r0, r0
    8544:	00000000 	andeq	r0, r0, r0
    8548:	00000000 	andeq	r0, r0, r0
    854c:	00000000 	andeq	r0, r0, r0
    8550:	00000000 	andeq	r0, r0, r0
    8554:	00000000 	andeq	r0, r0, r0
    8558:	00000000 	andeq	r0, r0, r0
    855c:	00000000 	andeq	r0, r0, r0
    8560:	00000000 	andeq	r0, r0, r0
    8564:	00000000 	andeq	r0, r0, r0
    8568:	00000000 	andeq	r0, r0, r0
    856c:	00000000 	andeq	r0, r0, r0
    8570:	00000000 	andeq	r0, r0, r0
    8574:	00000000 	andeq	r0, r0, r0
    8578:	00000000 	andeq	r0, r0, r0
    857c:	00000000 	andeq	r0, r0, r0
    8580:	00000000 	andeq	r0, r0, r0
    8584:	00000000 	andeq	r0, r0, r0
    8588:	00000000 	andeq	r0, r0, r0
    858c:	00000000 	andeq	r0, r0, r0
    8590:	00000000 	andeq	r0, r0, r0
    8594:	00000000 	andeq	r0, r0, r0
    8598:	00000000 	andeq	r0, r0, r0
    859c:	00000000 	andeq	r0, r0, r0
    85a0:	00000000 	andeq	r0, r0, r0
    85a4:	00000000 	andeq	r0, r0, r0
    85a8:	00000000 	andeq	r0, r0, r0
    85ac:	00000000 	andeq	r0, r0, r0
    85b0:	00000000 	andeq	r0, r0, r0
    85b4:	00000000 	andeq	r0, r0, r0
    85b8:	00000000 	andeq	r0, r0, r0
    85bc:	00000000 	andeq	r0, r0, r0
    85c0:	00000000 	andeq	r0, r0, r0
    85c4:	00000000 	andeq	r0, r0, r0
    85c8:	00000000 	andeq	r0, r0, r0
    85cc:	00000000 	andeq	r0, r0, r0
    85d0:	00000000 	andeq	r0, r0, r0
    85d4:	00000000 	andeq	r0, r0, r0
    85d8:	00000000 	andeq	r0, r0, r0
    85dc:	00000000 	andeq	r0, r0, r0
    85e0:	00000000 	andeq	r0, r0, r0
    85e4:	00000000 	andeq	r0, r0, r0
    85e8:	00000000 	andeq	r0, r0, r0
    85ec:	00000000 	andeq	r0, r0, r0
    85f0:	00000000 	andeq	r0, r0, r0
    85f4:	00000000 	andeq	r0, r0, r0
    85f8:	00000000 	andeq	r0, r0, r0
    85fc:	00000000 	andeq	r0, r0, r0
    8600:	00000000 	andeq	r0, r0, r0
    8604:	00000000 	andeq	r0, r0, r0
    8608:	00000000 	andeq	r0, r0, r0
    860c:	00000000 	andeq	r0, r0, r0
    8610:	00000000 	andeq	r0, r0, r0
    8614:	00000000 	andeq	r0, r0, r0
    8618:	00000000 	andeq	r0, r0, r0
    861c:	00000000 	andeq	r0, r0, r0
    8620:	00000000 	andeq	r0, r0, r0
    8624:	00000000 	andeq	r0, r0, r0
    8628:	00000000 	andeq	r0, r0, r0
    862c:	00000000 	andeq	r0, r0, r0
    8630:	00000000 	andeq	r0, r0, r0
    8634:	00000000 	andeq	r0, r0, r0
    8638:	00000000 	andeq	r0, r0, r0
    863c:	00000000 	andeq	r0, r0, r0
    8640:	00000000 	andeq	r0, r0, r0
    8644:	00000000 	andeq	r0, r0, r0
    8648:	00000000 	andeq	r0, r0, r0
    864c:	00000000 	andeq	r0, r0, r0
    8650:	00000000 	andeq	r0, r0, r0
    8654:	00000000 	andeq	r0, r0, r0
    8658:	00000000 	andeq	r0, r0, r0
    865c:	00000000 	andeq	r0, r0, r0
    8660:	00000000 	andeq	r0, r0, r0
    8664:	00000000 	andeq	r0, r0, r0
    8668:	00000000 	andeq	r0, r0, r0
    866c:	00000000 	andeq	r0, r0, r0
    8670:	00000000 	andeq	r0, r0, r0
    8674:	00000000 	andeq	r0, r0, r0
    8678:	00000000 	andeq	r0, r0, r0
    867c:	00000000 	andeq	r0, r0, r0
    8680:	00000000 	andeq	r0, r0, r0
    8684:	00000000 	andeq	r0, r0, r0
    8688:	00000000 	andeq	r0, r0, r0
    868c:	00000000 	andeq	r0, r0, r0
    8690:	00000000 	andeq	r0, r0, r0
    8694:	00000000 	andeq	r0, r0, r0
    8698:	00000000 	andeq	r0, r0, r0
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	00000000 	andeq	r0, r0, r0
    86a4:	00000000 	andeq	r0, r0, r0
    86a8:	00000000 	andeq	r0, r0, r0
    86ac:	00000000 	andeq	r0, r0, r0
    86b0:	00000000 	andeq	r0, r0, r0
    86b4:	00000000 	andeq	r0, r0, r0
    86b8:	00000000 	andeq	r0, r0, r0
    86bc:	00000000 	andeq	r0, r0, r0
    86c0:	00000000 	andeq	r0, r0, r0
    86c4:	00000000 	andeq	r0, r0, r0
    86c8:	00000000 	andeq	r0, r0, r0
    86cc:	00000000 	andeq	r0, r0, r0
    86d0:	00000000 	andeq	r0, r0, r0
    86d4:	00000000 	andeq	r0, r0, r0
    86d8:	00000000 	andeq	r0, r0, r0
    86dc:	00000000 	andeq	r0, r0, r0
    86e0:	00000000 	andeq	r0, r0, r0
    86e4:	00000000 	andeq	r0, r0, r0
    86e8:	00000000 	andeq	r0, r0, r0
    86ec:	00000000 	andeq	r0, r0, r0
    86f0:	00000000 	andeq	r0, r0, r0
    86f4:	00000000 	andeq	r0, r0, r0
    86f8:	00000000 	andeq	r0, r0, r0
    86fc:	00000000 	andeq	r0, r0, r0
    8700:	00000000 	andeq	r0, r0, r0
    8704:	00000000 	andeq	r0, r0, r0
    8708:	00000000 	andeq	r0, r0, r0
    870c:	00000000 	andeq	r0, r0, r0
    8710:	00000000 	andeq	r0, r0, r0
    8714:	00000000 	andeq	r0, r0, r0
    8718:	00000000 	andeq	r0, r0, r0
    871c:	00000000 	andeq	r0, r0, r0
    8720:	00000000 	andeq	r0, r0, r0
    8724:	00000000 	andeq	r0, r0, r0
    8728:	00000000 	andeq	r0, r0, r0
    872c:	00000000 	andeq	r0, r0, r0
    8730:	00000000 	andeq	r0, r0, r0
    8734:	00000000 	andeq	r0, r0, r0
    8738:	00000000 	andeq	r0, r0, r0
    873c:	00000000 	andeq	r0, r0, r0
    8740:	00000000 	andeq	r0, r0, r0
    8744:	00000000 	andeq	r0, r0, r0
    8748:	00000000 	andeq	r0, r0, r0
    874c:	00000000 	andeq	r0, r0, r0
    8750:	00000000 	andeq	r0, r0, r0
    8754:	00000000 	andeq	r0, r0, r0
    8758:	00000000 	andeq	r0, r0, r0
    875c:	00000000 	andeq	r0, r0, r0
    8760:	00000000 	andeq	r0, r0, r0
    8764:	00000000 	andeq	r0, r0, r0
    8768:	00000000 	andeq	r0, r0, r0
    876c:	00000000 	andeq	r0, r0, r0
    8770:	00000000 	andeq	r0, r0, r0
    8774:	00000000 	andeq	r0, r0, r0
    8778:	00000000 	andeq	r0, r0, r0
    877c:	00000000 	andeq	r0, r0, r0
    8780:	00000000 	andeq	r0, r0, r0
    8784:	00000000 	andeq	r0, r0, r0
    8788:	00000000 	andeq	r0, r0, r0
    878c:	00000000 	andeq	r0, r0, r0
    8790:	00000000 	andeq	r0, r0, r0
    8794:	00000000 	andeq	r0, r0, r0
    8798:	00000000 	andeq	r0, r0, r0
    879c:	00000000 	andeq	r0, r0, r0
    87a0:	00000000 	andeq	r0, r0, r0
    87a4:	00000000 	andeq	r0, r0, r0
    87a8:	00000000 	andeq	r0, r0, r0
    87ac:	00000000 	andeq	r0, r0, r0
    87b0:	00000000 	andeq	r0, r0, r0
    87b4:	00000000 	andeq	r0, r0, r0
    87b8:	00000000 	andeq	r0, r0, r0
    87bc:	00000000 	andeq	r0, r0, r0
    87c0:	00000000 	andeq	r0, r0, r0
    87c4:	00000000 	andeq	r0, r0, r0
    87c8:	00000000 	andeq	r0, r0, r0
    87cc:	00000000 	andeq	r0, r0, r0
    87d0:	00000000 	andeq	r0, r0, r0
    87d4:	00000000 	andeq	r0, r0, r0
    87d8:	00000000 	andeq	r0, r0, r0
    87dc:	00000000 	andeq	r0, r0, r0
    87e0:	00000000 	andeq	r0, r0, r0
    87e4:	00000000 	andeq	r0, r0, r0
    87e8:	00000000 	andeq	r0, r0, r0
    87ec:	00000000 	andeq	r0, r0, r0
    87f0:	00000000 	andeq	r0, r0, r0
    87f4:	00000000 	andeq	r0, r0, r0
    87f8:	00000000 	andeq	r0, r0, r0
    87fc:	00000000 	andeq	r0, r0, r0
    8800:	00000000 	andeq	r0, r0, r0
    8804:	00000000 	andeq	r0, r0, r0
    8808:	00000000 	andeq	r0, r0, r0
    880c:	00000000 	andeq	r0, r0, r0
    8810:	00000000 	andeq	r0, r0, r0
    8814:	00000000 	andeq	r0, r0, r0
    8818:	00000000 	andeq	r0, r0, r0
    881c:	00000000 	andeq	r0, r0, r0
    8820:	00000000 	andeq	r0, r0, r0
    8824:	00000000 	andeq	r0, r0, r0
    8828:	00000000 	andeq	r0, r0, r0
    882c:	00000000 	andeq	r0, r0, r0
    8830:	00000000 	andeq	r0, r0, r0
    8834:	00000000 	andeq	r0, r0, r0
    8838:	00000000 	andeq	r0, r0, r0
    883c:	00000000 	andeq	r0, r0, r0
    8840:	00000000 	andeq	r0, r0, r0
    8844:	00000000 	andeq	r0, r0, r0
    8848:	00000000 	andeq	r0, r0, r0
    884c:	00000000 	andeq	r0, r0, r0
    8850:	00000000 	andeq	r0, r0, r0
    8854:	00000000 	andeq	r0, r0, r0
    8858:	00000000 	andeq	r0, r0, r0
    885c:	00000000 	andeq	r0, r0, r0
    8860:	00000000 	andeq	r0, r0, r0
    8864:	00000000 	andeq	r0, r0, r0
    8868:	00000000 	andeq	r0, r0, r0
    886c:	00000000 	andeq	r0, r0, r0
    8870:	00000000 	andeq	r0, r0, r0
    8874:	00000000 	andeq	r0, r0, r0
    8878:	00000000 	andeq	r0, r0, r0
    887c:	00000000 	andeq	r0, r0, r0
    8880:	00000000 	andeq	r0, r0, r0
    8884:	00000000 	andeq	r0, r0, r0
    8888:	00000000 	andeq	r0, r0, r0
    888c:	00000000 	andeq	r0, r0, r0
    8890:	00000000 	andeq	r0, r0, r0
    8894:	00000000 	andeq	r0, r0, r0
    8898:	00000000 	andeq	r0, r0, r0
    889c:	00000000 	andeq	r0, r0, r0
    88a0:	00000000 	andeq	r0, r0, r0
    88a4:	00000000 	andeq	r0, r0, r0
    88a8:	00000000 	andeq	r0, r0, r0
    88ac:	00000000 	andeq	r0, r0, r0
    88b0:	00000000 	andeq	r0, r0, r0
    88b4:	00000000 	andeq	r0, r0, r0
    88b8:	00000000 	andeq	r0, r0, r0
    88bc:	00000000 	andeq	r0, r0, r0
    88c0:	00000000 	andeq	r0, r0, r0
    88c4:	00000000 	andeq	r0, r0, r0
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	00000000 	andeq	r0, r0, r0
    88d0:	00000000 	andeq	r0, r0, r0
    88d4:	00000000 	andeq	r0, r0, r0
    88d8:	00000000 	andeq	r0, r0, r0
    88dc:	00000000 	andeq	r0, r0, r0
    88e0:	00000000 	andeq	r0, r0, r0
    88e4:	00000000 	andeq	r0, r0, r0
    88e8:	00000000 	andeq	r0, r0, r0
    88ec:	00000000 	andeq	r0, r0, r0
    88f0:	00000000 	andeq	r0, r0, r0
    88f4:	00000000 	andeq	r0, r0, r0
    88f8:	00000000 	andeq	r0, r0, r0
    88fc:	00000000 	andeq	r0, r0, r0
    8900:	00000000 	andeq	r0, r0, r0
    8904:	00000000 	andeq	r0, r0, r0
    8908:	00000000 	andeq	r0, r0, r0
    890c:	00000000 	andeq	r0, r0, r0
    8910:	00000000 	andeq	r0, r0, r0
    8914:	00000000 	andeq	r0, r0, r0
    8918:	00000000 	andeq	r0, r0, r0
    891c:	00000000 	andeq	r0, r0, r0
    8920:	00000000 	andeq	r0, r0, r0
    8924:	00000000 	andeq	r0, r0, r0
    8928:	00000000 	andeq	r0, r0, r0
    892c:	00000000 	andeq	r0, r0, r0
    8930:	00000000 	andeq	r0, r0, r0
    8934:	00000000 	andeq	r0, r0, r0
    8938:	00000000 	andeq	r0, r0, r0
    893c:	00000000 	andeq	r0, r0, r0
    8940:	00000000 	andeq	r0, r0, r0
    8944:	00000000 	andeq	r0, r0, r0
    8948:	00000000 	andeq	r0, r0, r0
    894c:	00000000 	andeq	r0, r0, r0
    8950:	00000000 	andeq	r0, r0, r0
    8954:	00000000 	andeq	r0, r0, r0
    8958:	00000000 	andeq	r0, r0, r0
    895c:	00000000 	andeq	r0, r0, r0
    8960:	00000000 	andeq	r0, r0, r0
    8964:	00000000 	andeq	r0, r0, r0
    8968:	00000000 	andeq	r0, r0, r0
    896c:	00000000 	andeq	r0, r0, r0
    8970:	00000000 	andeq	r0, r0, r0
    8974:	00000000 	andeq	r0, r0, r0
    8978:	00000000 	andeq	r0, r0, r0
    897c:	00000000 	andeq	r0, r0, r0
    8980:	00000000 	andeq	r0, r0, r0
    8984:	00000000 	andeq	r0, r0, r0
    8988:	00000000 	andeq	r0, r0, r0
    898c:	00000000 	andeq	r0, r0, r0
    8990:	00000000 	andeq	r0, r0, r0
    8994:	00000000 	andeq	r0, r0, r0
    8998:	00000000 	andeq	r0, r0, r0
    899c:	00000000 	andeq	r0, r0, r0
    89a0:	00000000 	andeq	r0, r0, r0
    89a4:	00000000 	andeq	r0, r0, r0
    89a8:	00000000 	andeq	r0, r0, r0
    89ac:	00000000 	andeq	r0, r0, r0
    89b0:	00000000 	andeq	r0, r0, r0
    89b4:	00000000 	andeq	r0, r0, r0
    89b8:	00000000 	andeq	r0, r0, r0
    89bc:	00000000 	andeq	r0, r0, r0
    89c0:	00000000 	andeq	r0, r0, r0
    89c4:	00000000 	andeq	r0, r0, r0
    89c8:	00000000 	andeq	r0, r0, r0
    89cc:	00000000 	andeq	r0, r0, r0
    89d0:	00000000 	andeq	r0, r0, r0
    89d4:	00000000 	andeq	r0, r0, r0
    89d8:	00000000 	andeq	r0, r0, r0
    89dc:	00000000 	andeq	r0, r0, r0
    89e0:	00000000 	andeq	r0, r0, r0
    89e4:	00000000 	andeq	r0, r0, r0
    89e8:	00000000 	andeq	r0, r0, r0
    89ec:	00000000 	andeq	r0, r0, r0
    89f0:	00000000 	andeq	r0, r0, r0
    89f4:	00000000 	andeq	r0, r0, r0
    89f8:	00000000 	andeq	r0, r0, r0
    89fc:	00000000 	andeq	r0, r0, r0
    8a00:	00000000 	andeq	r0, r0, r0
    8a04:	00000000 	andeq	r0, r0, r0
    8a08:	00000000 	andeq	r0, r0, r0
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	00000000 	andeq	r0, r0, r0
    8a14:	00000000 	andeq	r0, r0, r0
    8a18:	00000000 	andeq	r0, r0, r0
    8a1c:	00000000 	andeq	r0, r0, r0
    8a20:	00000000 	andeq	r0, r0, r0
    8a24:	00000000 	andeq	r0, r0, r0
    8a28:	00000000 	andeq	r0, r0, r0
    8a2c:	00000000 	andeq	r0, r0, r0
    8a30:	00000000 	andeq	r0, r0, r0
    8a34:	00000000 	andeq	r0, r0, r0
    8a38:	00000000 	andeq	r0, r0, r0
    8a3c:	00000000 	andeq	r0, r0, r0
    8a40:	00000000 	andeq	r0, r0, r0
    8a44:	00000000 	andeq	r0, r0, r0
    8a48:	00000000 	andeq	r0, r0, r0
    8a4c:	00000000 	andeq	r0, r0, r0
    8a50:	00000000 	andeq	r0, r0, r0
    8a54:	00000000 	andeq	r0, r0, r0
    8a58:	00000000 	andeq	r0, r0, r0
    8a5c:	00000000 	andeq	r0, r0, r0
    8a60:	00000000 	andeq	r0, r0, r0
    8a64:	00000000 	andeq	r0, r0, r0
    8a68:	00000000 	andeq	r0, r0, r0
    8a6c:	00000000 	andeq	r0, r0, r0
    8a70:	00000000 	andeq	r0, r0, r0
    8a74:	00000000 	andeq	r0, r0, r0
    8a78:	00000000 	andeq	r0, r0, r0
    8a7c:	00000000 	andeq	r0, r0, r0
    8a80:	00000000 	andeq	r0, r0, r0
    8a84:	00000000 	andeq	r0, r0, r0
    8a88:	00000000 	andeq	r0, r0, r0
    8a8c:	00000000 	andeq	r0, r0, r0
    8a90:	00000000 	andeq	r0, r0, r0
    8a94:	00000000 	andeq	r0, r0, r0
    8a98:	00000000 	andeq	r0, r0, r0
    8a9c:	00000000 	andeq	r0, r0, r0
    8aa0:	00000000 	andeq	r0, r0, r0
    8aa4:	00000000 	andeq	r0, r0, r0
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	00000000 	andeq	r0, r0, r0
    8ab0:	00000000 	andeq	r0, r0, r0
    8ab4:	00000000 	andeq	r0, r0, r0
    8ab8:	00000000 	andeq	r0, r0, r0
    8abc:	00000000 	andeq	r0, r0, r0
    8ac0:	00000000 	andeq	r0, r0, r0
    8ac4:	00000000 	andeq	r0, r0, r0
    8ac8:	00000000 	andeq	r0, r0, r0
    8acc:	00000000 	andeq	r0, r0, r0
    8ad0:	00000000 	andeq	r0, r0, r0
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	00000000 	andeq	r0, r0, r0
    8adc:	00000000 	andeq	r0, r0, r0
    8ae0:	00000000 	andeq	r0, r0, r0
    8ae4:	00000000 	andeq	r0, r0, r0
    8ae8:	00000000 	andeq	r0, r0, r0
    8aec:	00000000 	andeq	r0, r0, r0
    8af0:	00000000 	andeq	r0, r0, r0
    8af4:	00000000 	andeq	r0, r0, r0
    8af8:	00000000 	andeq	r0, r0, r0
    8afc:	00000000 	andeq	r0, r0, r0
    8b00:	00000000 	andeq	r0, r0, r0
    8b04:	00000000 	andeq	r0, r0, r0
    8b08:	00000000 	andeq	r0, r0, r0
    8b0c:	00000000 	andeq	r0, r0, r0
    8b10:	00000000 	andeq	r0, r0, r0
    8b14:	00000000 	andeq	r0, r0, r0
    8b18:	00000000 	andeq	r0, r0, r0
    8b1c:	00000000 	andeq	r0, r0, r0
    8b20:	00000000 	andeq	r0, r0, r0
    8b24:	00000000 	andeq	r0, r0, r0
    8b28:	00000000 	andeq	r0, r0, r0
    8b2c:	00000000 	andeq	r0, r0, r0
    8b30:	00000000 	andeq	r0, r0, r0
    8b34:	00000000 	andeq	r0, r0, r0
    8b38:	00000000 	andeq	r0, r0, r0
    8b3c:	00000000 	andeq	r0, r0, r0
    8b40:	00000000 	andeq	r0, r0, r0
    8b44:	00000000 	andeq	r0, r0, r0
    8b48:	00000000 	andeq	r0, r0, r0
    8b4c:	00000000 	andeq	r0, r0, r0
    8b50:	00000000 	andeq	r0, r0, r0
    8b54:	00000000 	andeq	r0, r0, r0
    8b58:	00000000 	andeq	r0, r0, r0
    8b5c:	00000000 	andeq	r0, r0, r0
    8b60:	00000000 	andeq	r0, r0, r0
    8b64:	00000000 	andeq	r0, r0, r0
    8b68:	00000000 	andeq	r0, r0, r0
    8b6c:	00000000 	andeq	r0, r0, r0
    8b70:	00000000 	andeq	r0, r0, r0
    8b74:	00000000 	andeq	r0, r0, r0
    8b78:	00000000 	andeq	r0, r0, r0
    8b7c:	00000000 	andeq	r0, r0, r0
    8b80:	00000000 	andeq	r0, r0, r0
    8b84:	00000000 	andeq	r0, r0, r0
    8b88:	00000000 	andeq	r0, r0, r0
    8b8c:	00000000 	andeq	r0, r0, r0
    8b90:	00000000 	andeq	r0, r0, r0
    8b94:	00000000 	andeq	r0, r0, r0
    8b98:	00000000 	andeq	r0, r0, r0
    8b9c:	00000000 	andeq	r0, r0, r0
    8ba0:	00000000 	andeq	r0, r0, r0
    8ba4:	00000000 	andeq	r0, r0, r0
    8ba8:	00000000 	andeq	r0, r0, r0
    8bac:	00000000 	andeq	r0, r0, r0
    8bb0:	00000000 	andeq	r0, r0, r0
    8bb4:	00000000 	andeq	r0, r0, r0
    8bb8:	00000000 	andeq	r0, r0, r0
    8bbc:	00000000 	andeq	r0, r0, r0
    8bc0:	00000000 	andeq	r0, r0, r0
    8bc4:	00000000 	andeq	r0, r0, r0
    8bc8:	00000000 	andeq	r0, r0, r0
    8bcc:	00000000 	andeq	r0, r0, r0
    8bd0:	00000000 	andeq	r0, r0, r0
    8bd4:	00000000 	andeq	r0, r0, r0
    8bd8:	00000000 	andeq	r0, r0, r0
    8bdc:	00000000 	andeq	r0, r0, r0
    8be0:	00000000 	andeq	r0, r0, r0
    8be4:	00000000 	andeq	r0, r0, r0
    8be8:	00000000 	andeq	r0, r0, r0
    8bec:	00000000 	andeq	r0, r0, r0
    8bf0:	00000000 	andeq	r0, r0, r0
    8bf4:	00000000 	andeq	r0, r0, r0
    8bf8:	00000000 	andeq	r0, r0, r0
    8bfc:	00000000 	andeq	r0, r0, r0
    8c00:	00000000 	andeq	r0, r0, r0
    8c04:	00000000 	andeq	r0, r0, r0
    8c08:	00000000 	andeq	r0, r0, r0
    8c0c:	00000000 	andeq	r0, r0, r0
    8c10:	00000000 	andeq	r0, r0, r0
    8c14:	00000000 	andeq	r0, r0, r0
    8c18:	00000000 	andeq	r0, r0, r0
    8c1c:	00000000 	andeq	r0, r0, r0
    8c20:	00000000 	andeq	r0, r0, r0
    8c24:	00000000 	andeq	r0, r0, r0
    8c28:	00000000 	andeq	r0, r0, r0
    8c2c:	00000000 	andeq	r0, r0, r0
    8c30:	00000000 	andeq	r0, r0, r0
    8c34:	00000000 	andeq	r0, r0, r0
    8c38:	00000000 	andeq	r0, r0, r0
    8c3c:	00000000 	andeq	r0, r0, r0
    8c40:	00000000 	andeq	r0, r0, r0
    8c44:	00000000 	andeq	r0, r0, r0
    8c48:	00000000 	andeq	r0, r0, r0
    8c4c:	00000000 	andeq	r0, r0, r0
    8c50:	00000000 	andeq	r0, r0, r0
    8c54:	00000000 	andeq	r0, r0, r0
    8c58:	00000000 	andeq	r0, r0, r0
    8c5c:	00000000 	andeq	r0, r0, r0
    8c60:	00000000 	andeq	r0, r0, r0
    8c64:	00000000 	andeq	r0, r0, r0
    8c68:	00000000 	andeq	r0, r0, r0
    8c6c:	00000000 	andeq	r0, r0, r0
    8c70:	00000000 	andeq	r0, r0, r0
    8c74:	00000000 	andeq	r0, r0, r0
    8c78:	00000000 	andeq	r0, r0, r0
    8c7c:	00000000 	andeq	r0, r0, r0
    8c80:	00000000 	andeq	r0, r0, r0
    8c84:	00000000 	andeq	r0, r0, r0
    8c88:	00000000 	andeq	r0, r0, r0
    8c8c:	00000000 	andeq	r0, r0, r0
    8c90:	00000000 	andeq	r0, r0, r0
    8c94:	00000000 	andeq	r0, r0, r0
    8c98:	00000000 	andeq	r0, r0, r0
    8c9c:	00000000 	andeq	r0, r0, r0
    8ca0:	00000000 	andeq	r0, r0, r0
    8ca4:	00000000 	andeq	r0, r0, r0
    8ca8:	00000000 	andeq	r0, r0, r0
    8cac:	00000000 	andeq	r0, r0, r0
    8cb0:	00000000 	andeq	r0, r0, r0
    8cb4:	00000000 	andeq	r0, r0, r0
    8cb8:	00000000 	andeq	r0, r0, r0
    8cbc:	00000000 	andeq	r0, r0, r0
    8cc0:	00000000 	andeq	r0, r0, r0
    8cc4:	00000000 	andeq	r0, r0, r0
    8cc8:	00000000 	andeq	r0, r0, r0
    8ccc:	00000000 	andeq	r0, r0, r0
    8cd0:	00000000 	andeq	r0, r0, r0
    8cd4:	00000000 	andeq	r0, r0, r0
    8cd8:	00000000 	andeq	r0, r0, r0
    8cdc:	00000000 	andeq	r0, r0, r0
    8ce0:	00000000 	andeq	r0, r0, r0
    8ce4:	00000000 	andeq	r0, r0, r0
    8ce8:	00000000 	andeq	r0, r0, r0
    8cec:	00000000 	andeq	r0, r0, r0
    8cf0:	00000000 	andeq	r0, r0, r0
    8cf4:	00000000 	andeq	r0, r0, r0
    8cf8:	00000000 	andeq	r0, r0, r0
    8cfc:	00000000 	andeq	r0, r0, r0
    8d00:	00000000 	andeq	r0, r0, r0
    8d04:	00000000 	andeq	r0, r0, r0
    8d08:	00000000 	andeq	r0, r0, r0
    8d0c:	00000000 	andeq	r0, r0, r0
    8d10:	00000000 	andeq	r0, r0, r0
    8d14:	00000000 	andeq	r0, r0, r0
    8d18:	00000000 	andeq	r0, r0, r0
    8d1c:	00000000 	andeq	r0, r0, r0
    8d20:	00000000 	andeq	r0, r0, r0
    8d24:	00000000 	andeq	r0, r0, r0
    8d28:	00000000 	andeq	r0, r0, r0
    8d2c:	00000000 	andeq	r0, r0, r0
    8d30:	00000000 	andeq	r0, r0, r0
    8d34:	00000000 	andeq	r0, r0, r0
    8d38:	00000000 	andeq	r0, r0, r0
    8d3c:	00000000 	andeq	r0, r0, r0
    8d40:	00000000 	andeq	r0, r0, r0
    8d44:	00000000 	andeq	r0, r0, r0
    8d48:	00000000 	andeq	r0, r0, r0
    8d4c:	00000000 	andeq	r0, r0, r0
    8d50:	00000000 	andeq	r0, r0, r0
    8d54:	00000000 	andeq	r0, r0, r0
    8d58:	00000000 	andeq	r0, r0, r0
    8d5c:	00000000 	andeq	r0, r0, r0
    8d60:	00000000 	andeq	r0, r0, r0
    8d64:	00000000 	andeq	r0, r0, r0
    8d68:	00000000 	andeq	r0, r0, r0
    8d6c:	00000000 	andeq	r0, r0, r0
    8d70:	00000000 	andeq	r0, r0, r0
    8d74:	00000000 	andeq	r0, r0, r0
    8d78:	00000000 	andeq	r0, r0, r0
    8d7c:	00000000 	andeq	r0, r0, r0
    8d80:	00000000 	andeq	r0, r0, r0
    8d84:	00000000 	andeq	r0, r0, r0
    8d88:	00000000 	andeq	r0, r0, r0
    8d8c:	00000000 	andeq	r0, r0, r0
    8d90:	00000000 	andeq	r0, r0, r0
    8d94:	00000000 	andeq	r0, r0, r0
    8d98:	00000000 	andeq	r0, r0, r0
    8d9c:	00000000 	andeq	r0, r0, r0
    8da0:	00000000 	andeq	r0, r0, r0
    8da4:	00000000 	andeq	r0, r0, r0
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	00000000 	andeq	r0, r0, r0
    8db0:	00000000 	andeq	r0, r0, r0
    8db4:	00000000 	andeq	r0, r0, r0
    8db8:	00000000 	andeq	r0, r0, r0
    8dbc:	00000000 	andeq	r0, r0, r0
    8dc0:	00000000 	andeq	r0, r0, r0
    8dc4:	00000000 	andeq	r0, r0, r0
    8dc8:	00000000 	andeq	r0, r0, r0
    8dcc:	00000000 	andeq	r0, r0, r0
    8dd0:	00000000 	andeq	r0, r0, r0
    8dd4:	00000000 	andeq	r0, r0, r0
    8dd8:	00000000 	andeq	r0, r0, r0
    8ddc:	00000000 	andeq	r0, r0, r0
    8de0:	00000000 	andeq	r0, r0, r0
    8de4:	00000000 	andeq	r0, r0, r0
    8de8:	00000000 	andeq	r0, r0, r0
    8dec:	00000000 	andeq	r0, r0, r0
    8df0:	00000000 	andeq	r0, r0, r0
    8df4:	00000000 	andeq	r0, r0, r0
    8df8:	00000000 	andeq	r0, r0, r0
    8dfc:	00000000 	andeq	r0, r0, r0
    8e00:	00000000 	andeq	r0, r0, r0
    8e04:	00000000 	andeq	r0, r0, r0
    8e08:	00000000 	andeq	r0, r0, r0
    8e0c:	00000000 	andeq	r0, r0, r0
    8e10:	00000000 	andeq	r0, r0, r0
    8e14:	00000000 	andeq	r0, r0, r0
    8e18:	00000000 	andeq	r0, r0, r0
    8e1c:	00000000 	andeq	r0, r0, r0
    8e20:	00000000 	andeq	r0, r0, r0
    8e24:	00000000 	andeq	r0, r0, r0
    8e28:	00000000 	andeq	r0, r0, r0
    8e2c:	00000000 	andeq	r0, r0, r0
    8e30:	00000000 	andeq	r0, r0, r0
    8e34:	00000000 	andeq	r0, r0, r0
    8e38:	00000000 	andeq	r0, r0, r0
    8e3c:	00000000 	andeq	r0, r0, r0
    8e40:	00000000 	andeq	r0, r0, r0
    8e44:	00000000 	andeq	r0, r0, r0
    8e48:	00000000 	andeq	r0, r0, r0
    8e4c:	00000000 	andeq	r0, r0, r0
    8e50:	00000000 	andeq	r0, r0, r0
    8e54:	00000000 	andeq	r0, r0, r0
    8e58:	00000000 	andeq	r0, r0, r0
    8e5c:	00000000 	andeq	r0, r0, r0
    8e60:	00000000 	andeq	r0, r0, r0
    8e64:	00000000 	andeq	r0, r0, r0
    8e68:	00000000 	andeq	r0, r0, r0
    8e6c:	00000000 	andeq	r0, r0, r0
    8e70:	00000000 	andeq	r0, r0, r0
    8e74:	00000000 	andeq	r0, r0, r0
    8e78:	00000000 	andeq	r0, r0, r0
    8e7c:	00000000 	andeq	r0, r0, r0
    8e80:	00000000 	andeq	r0, r0, r0
    8e84:	00000000 	andeq	r0, r0, r0
    8e88:	00000000 	andeq	r0, r0, r0
    8e8c:	00000000 	andeq	r0, r0, r0
    8e90:	00000000 	andeq	r0, r0, r0
    8e94:	00000000 	andeq	r0, r0, r0
    8e98:	00000000 	andeq	r0, r0, r0
    8e9c:	00000000 	andeq	r0, r0, r0
    8ea0:	00000000 	andeq	r0, r0, r0
    8ea4:	00000000 	andeq	r0, r0, r0
    8ea8:	00000000 	andeq	r0, r0, r0
    8eac:	00000000 	andeq	r0, r0, r0
    8eb0:	00000000 	andeq	r0, r0, r0
    8eb4:	00000000 	andeq	r0, r0, r0
    8eb8:	00000000 	andeq	r0, r0, r0
    8ebc:	00000000 	andeq	r0, r0, r0
    8ec0:	00000000 	andeq	r0, r0, r0
    8ec4:	00000000 	andeq	r0, r0, r0
    8ec8:	00000000 	andeq	r0, r0, r0
    8ecc:	00000000 	andeq	r0, r0, r0
    8ed0:	00000000 	andeq	r0, r0, r0
    8ed4:	00000000 	andeq	r0, r0, r0
    8ed8:	00000000 	andeq	r0, r0, r0
    8edc:	00000000 	andeq	r0, r0, r0
    8ee0:	00000000 	andeq	r0, r0, r0
    8ee4:	00000000 	andeq	r0, r0, r0
    8ee8:	00000000 	andeq	r0, r0, r0
    8eec:	00000000 	andeq	r0, r0, r0
    8ef0:	00000000 	andeq	r0, r0, r0
    8ef4:	00000000 	andeq	r0, r0, r0
    8ef8:	00000000 	andeq	r0, r0, r0
    8efc:	00000000 	andeq	r0, r0, r0
    8f00:	00000000 	andeq	r0, r0, r0
    8f04:	00000000 	andeq	r0, r0, r0
    8f08:	00000000 	andeq	r0, r0, r0
    8f0c:	00000000 	andeq	r0, r0, r0
    8f10:	00000000 	andeq	r0, r0, r0
    8f14:	00000000 	andeq	r0, r0, r0
    8f18:	00000000 	andeq	r0, r0, r0
    8f1c:	00000000 	andeq	r0, r0, r0
    8f20:	00000000 	andeq	r0, r0, r0
    8f24:	00000000 	andeq	r0, r0, r0
    8f28:	00000000 	andeq	r0, r0, r0
    8f2c:	00000000 	andeq	r0, r0, r0
    8f30:	00000000 	andeq	r0, r0, r0
    8f34:	00000000 	andeq	r0, r0, r0
    8f38:	00000000 	andeq	r0, r0, r0
    8f3c:	00000000 	andeq	r0, r0, r0
    8f40:	00000000 	andeq	r0, r0, r0
    8f44:	00000000 	andeq	r0, r0, r0
    8f48:	00000000 	andeq	r0, r0, r0
    8f4c:	00000000 	andeq	r0, r0, r0
    8f50:	00000000 	andeq	r0, r0, r0
    8f54:	00000000 	andeq	r0, r0, r0
    8f58:	00000000 	andeq	r0, r0, r0
    8f5c:	00000000 	andeq	r0, r0, r0
    8f60:	00000000 	andeq	r0, r0, r0
    8f64:	00000000 	andeq	r0, r0, r0
    8f68:	00000000 	andeq	r0, r0, r0
    8f6c:	00000000 	andeq	r0, r0, r0
    8f70:	00000000 	andeq	r0, r0, r0
    8f74:	00000000 	andeq	r0, r0, r0
    8f78:	00000000 	andeq	r0, r0, r0
    8f7c:	00000000 	andeq	r0, r0, r0
    8f80:	00000000 	andeq	r0, r0, r0
    8f84:	00000000 	andeq	r0, r0, r0
    8f88:	00000000 	andeq	r0, r0, r0
    8f8c:	00000000 	andeq	r0, r0, r0
    8f90:	00000000 	andeq	r0, r0, r0
    8f94:	00000000 	andeq	r0, r0, r0
    8f98:	00000000 	andeq	r0, r0, r0
    8f9c:	00000000 	andeq	r0, r0, r0
    8fa0:	00000000 	andeq	r0, r0, r0
    8fa4:	00000000 	andeq	r0, r0, r0
    8fa8:	00000000 	andeq	r0, r0, r0
    8fac:	00000000 	andeq	r0, r0, r0
    8fb0:	00000000 	andeq	r0, r0, r0
    8fb4:	00000000 	andeq	r0, r0, r0
    8fb8:	00000000 	andeq	r0, r0, r0
    8fbc:	00000000 	andeq	r0, r0, r0
    8fc0:	00000000 	andeq	r0, r0, r0
    8fc4:	00000000 	andeq	r0, r0, r0
    8fc8:	00000000 	andeq	r0, r0, r0
    8fcc:	00000000 	andeq	r0, r0, r0
    8fd0:	00000000 	andeq	r0, r0, r0
    8fd4:	00000000 	andeq	r0, r0, r0
    8fd8:	00000000 	andeq	r0, r0, r0
    8fdc:	00000000 	andeq	r0, r0, r0
    8fe0:	00000000 	andeq	r0, r0, r0
    8fe4:	00000000 	andeq	r0, r0, r0
    8fe8:	00000000 	andeq	r0, r0, r0
    8fec:	00000000 	andeq	r0, r0, r0
    8ff0:	00000000 	andeq	r0, r0, r0
    8ff4:	00000000 	andeq	r0, r0, r0
    8ff8:	00000000 	andeq	r0, r0, r0
    8ffc:	00000000 	andeq	r0, r0, r0
    9000:	00000000 	andeq	r0, r0, r0
    9004:	00000000 	andeq	r0, r0, r0
    9008:	00000000 	andeq	r0, r0, r0
    900c:	00000000 	andeq	r0, r0, r0
    9010:	00000000 	andeq	r0, r0, r0
    9014:	00000000 	andeq	r0, r0, r0
    9018:	00000000 	andeq	r0, r0, r0
    901c:	00000000 	andeq	r0, r0, r0
    9020:	00000000 	andeq	r0, r0, r0
    9024:	00000000 	andeq	r0, r0, r0
    9028:	00000000 	andeq	r0, r0, r0
    902c:	00000000 	andeq	r0, r0, r0
    9030:	00000000 	andeq	r0, r0, r0
    9034:	00000000 	andeq	r0, r0, r0
    9038:	00000000 	andeq	r0, r0, r0
    903c:	00000000 	andeq	r0, r0, r0
    9040:	00000000 	andeq	r0, r0, r0
    9044:	00000000 	andeq	r0, r0, r0
    9048:	00000000 	andeq	r0, r0, r0
    904c:	00000000 	andeq	r0, r0, r0
    9050:	00000000 	andeq	r0, r0, r0
    9054:	00000000 	andeq	r0, r0, r0
    9058:	00000000 	andeq	r0, r0, r0
    905c:	00000000 	andeq	r0, r0, r0
    9060:	00000000 	andeq	r0, r0, r0
    9064:	00000000 	andeq	r0, r0, r0
    9068:	00000000 	andeq	r0, r0, r0
    906c:	00000000 	andeq	r0, r0, r0
    9070:	00000000 	andeq	r0, r0, r0
    9074:	00000000 	andeq	r0, r0, r0
    9078:	00000000 	andeq	r0, r0, r0
    907c:	00000000 	andeq	r0, r0, r0
    9080:	00000000 	andeq	r0, r0, r0
    9084:	00000000 	andeq	r0, r0, r0
    9088:	00000000 	andeq	r0, r0, r0
    908c:	00000000 	andeq	r0, r0, r0
    9090:	00000000 	andeq	r0, r0, r0
    9094:	00000000 	andeq	r0, r0, r0
    9098:	00000000 	andeq	r0, r0, r0
    909c:	00000000 	andeq	r0, r0, r0
    90a0:	00000000 	andeq	r0, r0, r0
    90a4:	00000000 	andeq	r0, r0, r0
    90a8:	00000000 	andeq	r0, r0, r0
    90ac:	00000000 	andeq	r0, r0, r0
    90b0:	00000000 	andeq	r0, r0, r0
    90b4:	00000000 	andeq	r0, r0, r0
    90b8:	00000000 	andeq	r0, r0, r0
    90bc:	00000000 	andeq	r0, r0, r0
    90c0:	00000000 	andeq	r0, r0, r0
    90c4:	00000000 	andeq	r0, r0, r0
    90c8:	00000000 	andeq	r0, r0, r0
    90cc:	00000000 	andeq	r0, r0, r0
    90d0:	00000000 	andeq	r0, r0, r0
    90d4:	00000000 	andeq	r0, r0, r0
    90d8:	00000000 	andeq	r0, r0, r0
    90dc:	00000000 	andeq	r0, r0, r0
    90e0:	00000000 	andeq	r0, r0, r0
    90e4:	00000000 	andeq	r0, r0, r0
    90e8:	00000000 	andeq	r0, r0, r0
    90ec:	00000000 	andeq	r0, r0, r0
    90f0:	00000000 	andeq	r0, r0, r0
    90f4:	00000000 	andeq	r0, r0, r0
    90f8:	00000000 	andeq	r0, r0, r0
    90fc:	00000000 	andeq	r0, r0, r0
    9100:	00000000 	andeq	r0, r0, r0
    9104:	00000000 	andeq	r0, r0, r0
    9108:	00000000 	andeq	r0, r0, r0
    910c:	00000000 	andeq	r0, r0, r0
    9110:	00000000 	andeq	r0, r0, r0
    9114:	00000000 	andeq	r0, r0, r0
    9118:	00000000 	andeq	r0, r0, r0
    911c:	00000000 	andeq	r0, r0, r0
    9120:	00000000 	andeq	r0, r0, r0
    9124:	00000000 	andeq	r0, r0, r0
    9128:	00000000 	andeq	r0, r0, r0
    912c:	00000000 	andeq	r0, r0, r0
    9130:	00000000 	andeq	r0, r0, r0
    9134:	00000000 	andeq	r0, r0, r0
    9138:	00000000 	andeq	r0, r0, r0
    913c:	00000000 	andeq	r0, r0, r0
    9140:	00000000 	andeq	r0, r0, r0
    9144:	00000000 	andeq	r0, r0, r0
    9148:	00000000 	andeq	r0, r0, r0
    914c:	00000000 	andeq	r0, r0, r0
    9150:	00000000 	andeq	r0, r0, r0
    9154:	00000000 	andeq	r0, r0, r0
    9158:	00000000 	andeq	r0, r0, r0
    915c:	00000000 	andeq	r0, r0, r0
    9160:	00000000 	andeq	r0, r0, r0
    9164:	00000000 	andeq	r0, r0, r0
    9168:	00000000 	andeq	r0, r0, r0
    916c:	00000000 	andeq	r0, r0, r0
    9170:	00000000 	andeq	r0, r0, r0
    9174:	00000000 	andeq	r0, r0, r0
    9178:	00000000 	andeq	r0, r0, r0
    917c:	00000000 	andeq	r0, r0, r0
    9180:	00000000 	andeq	r0, r0, r0
    9184:	00000000 	andeq	r0, r0, r0
    9188:	00000000 	andeq	r0, r0, r0
    918c:	00000000 	andeq	r0, r0, r0
    9190:	00000000 	andeq	r0, r0, r0
    9194:	00000000 	andeq	r0, r0, r0
    9198:	00000000 	andeq	r0, r0, r0
    919c:	00000000 	andeq	r0, r0, r0
    91a0:	00000000 	andeq	r0, r0, r0
    91a4:	00000000 	andeq	r0, r0, r0
    91a8:	00000000 	andeq	r0, r0, r0
    91ac:	00000000 	andeq	r0, r0, r0
    91b0:	00000000 	andeq	r0, r0, r0
    91b4:	00000000 	andeq	r0, r0, r0
    91b8:	00000000 	andeq	r0, r0, r0
    91bc:	00000000 	andeq	r0, r0, r0
    91c0:	00000000 	andeq	r0, r0, r0
    91c4:	00000000 	andeq	r0, r0, r0
    91c8:	00000000 	andeq	r0, r0, r0
    91cc:	00000000 	andeq	r0, r0, r0
    91d0:	00000000 	andeq	r0, r0, r0
    91d4:	00000000 	andeq	r0, r0, r0
    91d8:	00000000 	andeq	r0, r0, r0
    91dc:	00000000 	andeq	r0, r0, r0
    91e0:	00000000 	andeq	r0, r0, r0
    91e4:	00000000 	andeq	r0, r0, r0
    91e8:	00000000 	andeq	r0, r0, r0
    91ec:	00000000 	andeq	r0, r0, r0
    91f0:	00000000 	andeq	r0, r0, r0
    91f4:	00000000 	andeq	r0, r0, r0
    91f8:	00000000 	andeq	r0, r0, r0
    91fc:	00000000 	andeq	r0, r0, r0
    9200:	00000000 	andeq	r0, r0, r0
    9204:	00000000 	andeq	r0, r0, r0
    9208:	00000000 	andeq	r0, r0, r0
    920c:	00000000 	andeq	r0, r0, r0
    9210:	00000000 	andeq	r0, r0, r0
    9214:	00000000 	andeq	r0, r0, r0
    9218:	00000000 	andeq	r0, r0, r0
    921c:	00000000 	andeq	r0, r0, r0
    9220:	00000000 	andeq	r0, r0, r0
    9224:	00000000 	andeq	r0, r0, r0
    9228:	00000000 	andeq	r0, r0, r0
    922c:	00000000 	andeq	r0, r0, r0
    9230:	00000000 	andeq	r0, r0, r0
    9234:	00000000 	andeq	r0, r0, r0
    9238:	00000000 	andeq	r0, r0, r0
    923c:	00000000 	andeq	r0, r0, r0
    9240:	00000000 	andeq	r0, r0, r0
    9244:	00000000 	andeq	r0, r0, r0
    9248:	00000000 	andeq	r0, r0, r0
    924c:	00000000 	andeq	r0, r0, r0
    9250:	00000000 	andeq	r0, r0, r0
    9254:	00000000 	andeq	r0, r0, r0
    9258:	00000000 	andeq	r0, r0, r0
    925c:	00000000 	andeq	r0, r0, r0
    9260:	00000000 	andeq	r0, r0, r0
    9264:	00000000 	andeq	r0, r0, r0
    9268:	00000000 	andeq	r0, r0, r0
    926c:	00000000 	andeq	r0, r0, r0
    9270:	00000000 	andeq	r0, r0, r0
    9274:	00000000 	andeq	r0, r0, r0
    9278:	00000000 	andeq	r0, r0, r0
    927c:	00000000 	andeq	r0, r0, r0
    9280:	00000000 	andeq	r0, r0, r0
    9284:	00000000 	andeq	r0, r0, r0
    9288:	00000000 	andeq	r0, r0, r0
    928c:	00000000 	andeq	r0, r0, r0
    9290:	00000000 	andeq	r0, r0, r0
    9294:	00000000 	andeq	r0, r0, r0
    9298:	00000000 	andeq	r0, r0, r0
    929c:	00000000 	andeq	r0, r0, r0
    92a0:	00000000 	andeq	r0, r0, r0
    92a4:	00000000 	andeq	r0, r0, r0
    92a8:	00000000 	andeq	r0, r0, r0
    92ac:	00000000 	andeq	r0, r0, r0
    92b0:	00000000 	andeq	r0, r0, r0
    92b4:	00000000 	andeq	r0, r0, r0
    92b8:	00000000 	andeq	r0, r0, r0
    92bc:	00000000 	andeq	r0, r0, r0
    92c0:	00000000 	andeq	r0, r0, r0
    92c4:	00000000 	andeq	r0, r0, r0
    92c8:	00000000 	andeq	r0, r0, r0
    92cc:	00000000 	andeq	r0, r0, r0
    92d0:	00000000 	andeq	r0, r0, r0
    92d4:	00000000 	andeq	r0, r0, r0
    92d8:	00000000 	andeq	r0, r0, r0
    92dc:	00000000 	andeq	r0, r0, r0
    92e0:	00000000 	andeq	r0, r0, r0
    92e4:	00000000 	andeq	r0, r0, r0
    92e8:	00000000 	andeq	r0, r0, r0
    92ec:	00000000 	andeq	r0, r0, r0
    92f0:	00000000 	andeq	r0, r0, r0
    92f4:	00000000 	andeq	r0, r0, r0
    92f8:	00000000 	andeq	r0, r0, r0
    92fc:	00000000 	andeq	r0, r0, r0
    9300:	00000000 	andeq	r0, r0, r0
    9304:	00000000 	andeq	r0, r0, r0
    9308:	00000000 	andeq	r0, r0, r0
    930c:	00000000 	andeq	r0, r0, r0
    9310:	00000000 	andeq	r0, r0, r0
    9314:	00000000 	andeq	r0, r0, r0
    9318:	00000000 	andeq	r0, r0, r0
    931c:	00000000 	andeq	r0, r0, r0
    9320:	00000000 	andeq	r0, r0, r0
    9324:	00000000 	andeq	r0, r0, r0
    9328:	00000000 	andeq	r0, r0, r0
    932c:	00000000 	andeq	r0, r0, r0
    9330:	00000000 	andeq	r0, r0, r0
    9334:	00000000 	andeq	r0, r0, r0
    9338:	00000000 	andeq	r0, r0, r0
    933c:	00000000 	andeq	r0, r0, r0
    9340:	00000000 	andeq	r0, r0, r0
    9344:	00000000 	andeq	r0, r0, r0
    9348:	00000000 	andeq	r0, r0, r0
    934c:	00000000 	andeq	r0, r0, r0
    9350:	00000000 	andeq	r0, r0, r0
    9354:	00000000 	andeq	r0, r0, r0
    9358:	00000000 	andeq	r0, r0, r0
    935c:	00000000 	andeq	r0, r0, r0
    9360:	00000000 	andeq	r0, r0, r0
    9364:	00000000 	andeq	r0, r0, r0
    9368:	00000000 	andeq	r0, r0, r0
    936c:	00000000 	andeq	r0, r0, r0
    9370:	00000000 	andeq	r0, r0, r0
    9374:	00000000 	andeq	r0, r0, r0
    9378:	00000000 	andeq	r0, r0, r0
    937c:	00000000 	andeq	r0, r0, r0
    9380:	00000000 	andeq	r0, r0, r0
    9384:	00000000 	andeq	r0, r0, r0
    9388:	00000000 	andeq	r0, r0, r0
    938c:	00000000 	andeq	r0, r0, r0
    9390:	00000000 	andeq	r0, r0, r0
    9394:	00000000 	andeq	r0, r0, r0
    9398:	00000000 	andeq	r0, r0, r0
    939c:	00000000 	andeq	r0, r0, r0
    93a0:	00000000 	andeq	r0, r0, r0
    93a4:	00000000 	andeq	r0, r0, r0
    93a8:	00000000 	andeq	r0, r0, r0
    93ac:	00000000 	andeq	r0, r0, r0
    93b0:	00000000 	andeq	r0, r0, r0
    93b4:	00000000 	andeq	r0, r0, r0
    93b8:	00000000 	andeq	r0, r0, r0
    93bc:	00000000 	andeq	r0, r0, r0
    93c0:	00000000 	andeq	r0, r0, r0
    93c4:	00000000 	andeq	r0, r0, r0
    93c8:	00000000 	andeq	r0, r0, r0
    93cc:	00000000 	andeq	r0, r0, r0
    93d0:	00000000 	andeq	r0, r0, r0
    93d4:	00000000 	andeq	r0, r0, r0
    93d8:	00000000 	andeq	r0, r0, r0
    93dc:	00000000 	andeq	r0, r0, r0
    93e0:	00000000 	andeq	r0, r0, r0
    93e4:	00000000 	andeq	r0, r0, r0
    93e8:	00000000 	andeq	r0, r0, r0
    93ec:	00000000 	andeq	r0, r0, r0
    93f0:	00000000 	andeq	r0, r0, r0
    93f4:	00000000 	andeq	r0, r0, r0
    93f8:	00000000 	andeq	r0, r0, r0
    93fc:	00000000 	andeq	r0, r0, r0
    9400:	00000000 	andeq	r0, r0, r0
    9404:	00000000 	andeq	r0, r0, r0
    9408:	00000000 	andeq	r0, r0, r0
    940c:	00000000 	andeq	r0, r0, r0
    9410:	00000000 	andeq	r0, r0, r0
    9414:	00000000 	andeq	r0, r0, r0
    9418:	00000000 	andeq	r0, r0, r0
    941c:	00000000 	andeq	r0, r0, r0
    9420:	00000000 	andeq	r0, r0, r0
    9424:	00000000 	andeq	r0, r0, r0
    9428:	00000000 	andeq	r0, r0, r0
    942c:	00000000 	andeq	r0, r0, r0
    9430:	00000000 	andeq	r0, r0, r0
    9434:	00000000 	andeq	r0, r0, r0
    9438:	00000000 	andeq	r0, r0, r0
    943c:	00000000 	andeq	r0, r0, r0
    9440:	00000000 	andeq	r0, r0, r0
    9444:	00000000 	andeq	r0, r0, r0
    9448:	00000000 	andeq	r0, r0, r0
    944c:	00000000 	andeq	r0, r0, r0
    9450:	00000000 	andeq	r0, r0, r0
    9454:	00000000 	andeq	r0, r0, r0
    9458:	00000000 	andeq	r0, r0, r0
    945c:	00000000 	andeq	r0, r0, r0
    9460:	00000000 	andeq	r0, r0, r0
    9464:	00000000 	andeq	r0, r0, r0
    9468:	00000000 	andeq	r0, r0, r0
    946c:	00000000 	andeq	r0, r0, r0
    9470:	00000000 	andeq	r0, r0, r0
    9474:	00000000 	andeq	r0, r0, r0
    9478:	00000000 	andeq	r0, r0, r0
    947c:	00000000 	andeq	r0, r0, r0
    9480:	00000000 	andeq	r0, r0, r0
    9484:	00000000 	andeq	r0, r0, r0
    9488:	00000000 	andeq	r0, r0, r0
    948c:	00000000 	andeq	r0, r0, r0
    9490:	00000000 	andeq	r0, r0, r0
    9494:	00000000 	andeq	r0, r0, r0
    9498:	00000000 	andeq	r0, r0, r0
    949c:	00000000 	andeq	r0, r0, r0
    94a0:	00000000 	andeq	r0, r0, r0
    94a4:	00000000 	andeq	r0, r0, r0
    94a8:	00000000 	andeq	r0, r0, r0
    94ac:	00000000 	andeq	r0, r0, r0
    94b0:	00000000 	andeq	r0, r0, r0
    94b4:	00000000 	andeq	r0, r0, r0
    94b8:	00000000 	andeq	r0, r0, r0
    94bc:	00000000 	andeq	r0, r0, r0
    94c0:	00000000 	andeq	r0, r0, r0
    94c4:	00000000 	andeq	r0, r0, r0
    94c8:	00000000 	andeq	r0, r0, r0
    94cc:	00000000 	andeq	r0, r0, r0
    94d0:	00000000 	andeq	r0, r0, r0
    94d4:	00000000 	andeq	r0, r0, r0
    94d8:	00000000 	andeq	r0, r0, r0
    94dc:	00000000 	andeq	r0, r0, r0
    94e0:	00000000 	andeq	r0, r0, r0
    94e4:	00000000 	andeq	r0, r0, r0
    94e8:	00000000 	andeq	r0, r0, r0
    94ec:	00000000 	andeq	r0, r0, r0
    94f0:	00000000 	andeq	r0, r0, r0
    94f4:	00000000 	andeq	r0, r0, r0
    94f8:	00000000 	andeq	r0, r0, r0
    94fc:	00000000 	andeq	r0, r0, r0
    9500:	00000000 	andeq	r0, r0, r0
    9504:	00000000 	andeq	r0, r0, r0
    9508:	00000000 	andeq	r0, r0, r0
    950c:	00000000 	andeq	r0, r0, r0
    9510:	00000000 	andeq	r0, r0, r0
    9514:	00000000 	andeq	r0, r0, r0
    9518:	00000000 	andeq	r0, r0, r0
    951c:	00000000 	andeq	r0, r0, r0
    9520:	00000000 	andeq	r0, r0, r0
    9524:	00000000 	andeq	r0, r0, r0
    9528:	00000000 	andeq	r0, r0, r0
    952c:	00000000 	andeq	r0, r0, r0
    9530:	00000000 	andeq	r0, r0, r0
    9534:	00000000 	andeq	r0, r0, r0
    9538:	00000000 	andeq	r0, r0, r0
    953c:	00000000 	andeq	r0, r0, r0
    9540:	00000000 	andeq	r0, r0, r0
    9544:	00000000 	andeq	r0, r0, r0
    9548:	00000000 	andeq	r0, r0, r0
    954c:	00000000 	andeq	r0, r0, r0
    9550:	00000000 	andeq	r0, r0, r0
    9554:	00000000 	andeq	r0, r0, r0
    9558:	00000000 	andeq	r0, r0, r0
    955c:	00000000 	andeq	r0, r0, r0
    9560:	00000000 	andeq	r0, r0, r0
    9564:	00000000 	andeq	r0, r0, r0
    9568:	00000000 	andeq	r0, r0, r0
    956c:	00000000 	andeq	r0, r0, r0
    9570:	00000000 	andeq	r0, r0, r0
    9574:	00000000 	andeq	r0, r0, r0
    9578:	00000000 	andeq	r0, r0, r0
    957c:	00000000 	andeq	r0, r0, r0
    9580:	00000000 	andeq	r0, r0, r0
    9584:	00000000 	andeq	r0, r0, r0
    9588:	00000000 	andeq	r0, r0, r0
    958c:	00000000 	andeq	r0, r0, r0
    9590:	00000000 	andeq	r0, r0, r0
    9594:	00000000 	andeq	r0, r0, r0
    9598:	00000000 	andeq	r0, r0, r0
    959c:	00000000 	andeq	r0, r0, r0
    95a0:	00000000 	andeq	r0, r0, r0
    95a4:	00000000 	andeq	r0, r0, r0
    95a8:	00000000 	andeq	r0, r0, r0
    95ac:	00000000 	andeq	r0, r0, r0
    95b0:	00000000 	andeq	r0, r0, r0
    95b4:	00000000 	andeq	r0, r0, r0
    95b8:	00000000 	andeq	r0, r0, r0
    95bc:	00000000 	andeq	r0, r0, r0
    95c0:	00000000 	andeq	r0, r0, r0
    95c4:	00000000 	andeq	r0, r0, r0
    95c8:	00000000 	andeq	r0, r0, r0
    95cc:	00000000 	andeq	r0, r0, r0
    95d0:	00000000 	andeq	r0, r0, r0
    95d4:	00000000 	andeq	r0, r0, r0
    95d8:	00000000 	andeq	r0, r0, r0
    95dc:	00000000 	andeq	r0, r0, r0
    95e0:	00000000 	andeq	r0, r0, r0
    95e4:	00000000 	andeq	r0, r0, r0
    95e8:	00000000 	andeq	r0, r0, r0
    95ec:	00000000 	andeq	r0, r0, r0
    95f0:	00000000 	andeq	r0, r0, r0
    95f4:	00000000 	andeq	r0, r0, r0
    95f8:	00000000 	andeq	r0, r0, r0
    95fc:	00000000 	andeq	r0, r0, r0
    9600:	00000000 	andeq	r0, r0, r0
    9604:	00000000 	andeq	r0, r0, r0
    9608:	00000000 	andeq	r0, r0, r0
    960c:	00000000 	andeq	r0, r0, r0
    9610:	00000000 	andeq	r0, r0, r0
    9614:	00000000 	andeq	r0, r0, r0
    9618:	00000000 	andeq	r0, r0, r0
    961c:	00000000 	andeq	r0, r0, r0
    9620:	00000000 	andeq	r0, r0, r0
    9624:	00000000 	andeq	r0, r0, r0
    9628:	00000000 	andeq	r0, r0, r0
    962c:	00000000 	andeq	r0, r0, r0
    9630:	00000000 	andeq	r0, r0, r0
    9634:	00000000 	andeq	r0, r0, r0
    9638:	00000000 	andeq	r0, r0, r0
    963c:	00000000 	andeq	r0, r0, r0
    9640:	00000000 	andeq	r0, r0, r0
    9644:	00000000 	andeq	r0, r0, r0
    9648:	00000000 	andeq	r0, r0, r0
    964c:	00000000 	andeq	r0, r0, r0
    9650:	00000000 	andeq	r0, r0, r0
    9654:	00000000 	andeq	r0, r0, r0
    9658:	00000000 	andeq	r0, r0, r0
    965c:	00000000 	andeq	r0, r0, r0
    9660:	00000000 	andeq	r0, r0, r0
    9664:	00000000 	andeq	r0, r0, r0
    9668:	00000000 	andeq	r0, r0, r0
    966c:	00000000 	andeq	r0, r0, r0
    9670:	00000000 	andeq	r0, r0, r0
    9674:	00000000 	andeq	r0, r0, r0
    9678:	00000000 	andeq	r0, r0, r0
    967c:	00000000 	andeq	r0, r0, r0
    9680:	00000000 	andeq	r0, r0, r0
    9684:	00000000 	andeq	r0, r0, r0
    9688:	00000000 	andeq	r0, r0, r0
    968c:	00000000 	andeq	r0, r0, r0
    9690:	00000000 	andeq	r0, r0, r0
    9694:	00000000 	andeq	r0, r0, r0
    9698:	00000000 	andeq	r0, r0, r0
    969c:	00000000 	andeq	r0, r0, r0
    96a0:	00000000 	andeq	r0, r0, r0
    96a4:	00000000 	andeq	r0, r0, r0
    96a8:	00000000 	andeq	r0, r0, r0
    96ac:	00000000 	andeq	r0, r0, r0
    96b0:	00000000 	andeq	r0, r0, r0
    96b4:	00000000 	andeq	r0, r0, r0
    96b8:	00000000 	andeq	r0, r0, r0
    96bc:	00000000 	andeq	r0, r0, r0
    96c0:	00000000 	andeq	r0, r0, r0
    96c4:	00000000 	andeq	r0, r0, r0
    96c8:	00000000 	andeq	r0, r0, r0
    96cc:	00000000 	andeq	r0, r0, r0
    96d0:	00000000 	andeq	r0, r0, r0
    96d4:	00000000 	andeq	r0, r0, r0
    96d8:	00000000 	andeq	r0, r0, r0
    96dc:	00000000 	andeq	r0, r0, r0
    96e0:	00000000 	andeq	r0, r0, r0
    96e4:	00000000 	andeq	r0, r0, r0
    96e8:	00000000 	andeq	r0, r0, r0
    96ec:	00000000 	andeq	r0, r0, r0
    96f0:	00000000 	andeq	r0, r0, r0
    96f4:	00000000 	andeq	r0, r0, r0
    96f8:	00000000 	andeq	r0, r0, r0
    96fc:	00000000 	andeq	r0, r0, r0
    9700:	00000000 	andeq	r0, r0, r0
    9704:	00000000 	andeq	r0, r0, r0
    9708:	00000000 	andeq	r0, r0, r0
    970c:	00000000 	andeq	r0, r0, r0
    9710:	00000000 	andeq	r0, r0, r0
    9714:	00000000 	andeq	r0, r0, r0
    9718:	00000000 	andeq	r0, r0, r0
    971c:	00000000 	andeq	r0, r0, r0
    9720:	00000000 	andeq	r0, r0, r0
    9724:	00000000 	andeq	r0, r0, r0
    9728:	00000000 	andeq	r0, r0, r0
    972c:	00000000 	andeq	r0, r0, r0
    9730:	00000000 	andeq	r0, r0, r0
    9734:	00000000 	andeq	r0, r0, r0
    9738:	00000000 	andeq	r0, r0, r0
    973c:	00000000 	andeq	r0, r0, r0
    9740:	00000000 	andeq	r0, r0, r0
    9744:	00000000 	andeq	r0, r0, r0
    9748:	00000000 	andeq	r0, r0, r0
    974c:	00000000 	andeq	r0, r0, r0
    9750:	00000000 	andeq	r0, r0, r0
    9754:	00000000 	andeq	r0, r0, r0
    9758:	00000000 	andeq	r0, r0, r0
    975c:	00000000 	andeq	r0, r0, r0
    9760:	00000000 	andeq	r0, r0, r0
    9764:	00000000 	andeq	r0, r0, r0
    9768:	00000000 	andeq	r0, r0, r0
    976c:	00000000 	andeq	r0, r0, r0
    9770:	00000000 	andeq	r0, r0, r0
    9774:	00000000 	andeq	r0, r0, r0
    9778:	00000000 	andeq	r0, r0, r0
    977c:	00000000 	andeq	r0, r0, r0
    9780:	00000000 	andeq	r0, r0, r0
    9784:	00000000 	andeq	r0, r0, r0
    9788:	00000000 	andeq	r0, r0, r0
    978c:	00000000 	andeq	r0, r0, r0
    9790:	00000000 	andeq	r0, r0, r0
    9794:	00000000 	andeq	r0, r0, r0
    9798:	00000000 	andeq	r0, r0, r0
    979c:	00000000 	andeq	r0, r0, r0
    97a0:	00000000 	andeq	r0, r0, r0
    97a4:	00000000 	andeq	r0, r0, r0
    97a8:	00000000 	andeq	r0, r0, r0
    97ac:	00000000 	andeq	r0, r0, r0
    97b0:	00000000 	andeq	r0, r0, r0
    97b4:	00000000 	andeq	r0, r0, r0
    97b8:	00000000 	andeq	r0, r0, r0
    97bc:	00000000 	andeq	r0, r0, r0
    97c0:	00000000 	andeq	r0, r0, r0
    97c4:	00000000 	andeq	r0, r0, r0
    97c8:	00000000 	andeq	r0, r0, r0
    97cc:	00000000 	andeq	r0, r0, r0
    97d0:	00000000 	andeq	r0, r0, r0
    97d4:	00000000 	andeq	r0, r0, r0
    97d8:	00000000 	andeq	r0, r0, r0
    97dc:	00000000 	andeq	r0, r0, r0
    97e0:	00000000 	andeq	r0, r0, r0
    97e4:	00000000 	andeq	r0, r0, r0
    97e8:	00000000 	andeq	r0, r0, r0
    97ec:	00000000 	andeq	r0, r0, r0
    97f0:	00000000 	andeq	r0, r0, r0
    97f4:	00000000 	andeq	r0, r0, r0
    97f8:	00000000 	andeq	r0, r0, r0
    97fc:	00000000 	andeq	r0, r0, r0
    9800:	00000000 	andeq	r0, r0, r0
    9804:	00000000 	andeq	r0, r0, r0
    9808:	00000000 	andeq	r0, r0, r0
    980c:	00000000 	andeq	r0, r0, r0
    9810:	00000000 	andeq	r0, r0, r0
    9814:	00000000 	andeq	r0, r0, r0
    9818:	00000000 	andeq	r0, r0, r0
    981c:	00000000 	andeq	r0, r0, r0
    9820:	00000000 	andeq	r0, r0, r0
    9824:	00000000 	andeq	r0, r0, r0
    9828:	00000000 	andeq	r0, r0, r0
    982c:	00000000 	andeq	r0, r0, r0
    9830:	00000000 	andeq	r0, r0, r0
    9834:	00000000 	andeq	r0, r0, r0
    9838:	00000000 	andeq	r0, r0, r0
    983c:	00000000 	andeq	r0, r0, r0
    9840:	00000000 	andeq	r0, r0, r0
    9844:	00000000 	andeq	r0, r0, r0
    9848:	00000000 	andeq	r0, r0, r0
    984c:	00000000 	andeq	r0, r0, r0
    9850:	00000000 	andeq	r0, r0, r0
    9854:	00000000 	andeq	r0, r0, r0
    9858:	00000000 	andeq	r0, r0, r0
    985c:	00000000 	andeq	r0, r0, r0
    9860:	00000000 	andeq	r0, r0, r0
    9864:	00000000 	andeq	r0, r0, r0
    9868:	00000000 	andeq	r0, r0, r0
    986c:	00000000 	andeq	r0, r0, r0
    9870:	00000000 	andeq	r0, r0, r0
    9874:	00000000 	andeq	r0, r0, r0
    9878:	00000000 	andeq	r0, r0, r0
    987c:	00000000 	andeq	r0, r0, r0
    9880:	00000000 	andeq	r0, r0, r0
    9884:	00000000 	andeq	r0, r0, r0
    9888:	00000000 	andeq	r0, r0, r0
    988c:	00000000 	andeq	r0, r0, r0
    9890:	00000000 	andeq	r0, r0, r0
    9894:	00000000 	andeq	r0, r0, r0
    9898:	00000000 	andeq	r0, r0, r0
    989c:	00000000 	andeq	r0, r0, r0
    98a0:	00000000 	andeq	r0, r0, r0
    98a4:	00000000 	andeq	r0, r0, r0
    98a8:	00000000 	andeq	r0, r0, r0
    98ac:	00000000 	andeq	r0, r0, r0
    98b0:	00000000 	andeq	r0, r0, r0
    98b4:	00000000 	andeq	r0, r0, r0
    98b8:	00000000 	andeq	r0, r0, r0
    98bc:	00000000 	andeq	r0, r0, r0
    98c0:	00000000 	andeq	r0, r0, r0
    98c4:	00000000 	andeq	r0, r0, r0
    98c8:	00000000 	andeq	r0, r0, r0
    98cc:	00000000 	andeq	r0, r0, r0
    98d0:	00000000 	andeq	r0, r0, r0
    98d4:	00000000 	andeq	r0, r0, r0
    98d8:	00000000 	andeq	r0, r0, r0
    98dc:	00000000 	andeq	r0, r0, r0
    98e0:	00000000 	andeq	r0, r0, r0
    98e4:	00000000 	andeq	r0, r0, r0
    98e8:	00000000 	andeq	r0, r0, r0
    98ec:	00000000 	andeq	r0, r0, r0
    98f0:	00000000 	andeq	r0, r0, r0
    98f4:	00000000 	andeq	r0, r0, r0
    98f8:	00000000 	andeq	r0, r0, r0
    98fc:	00000000 	andeq	r0, r0, r0
    9900:	00000000 	andeq	r0, r0, r0
    9904:	00000000 	andeq	r0, r0, r0
    9908:	00000000 	andeq	r0, r0, r0
    990c:	00000000 	andeq	r0, r0, r0
    9910:	00000000 	andeq	r0, r0, r0
    9914:	00000000 	andeq	r0, r0, r0
    9918:	00000000 	andeq	r0, r0, r0
    991c:	00000000 	andeq	r0, r0, r0
    9920:	00000000 	andeq	r0, r0, r0
    9924:	00000000 	andeq	r0, r0, r0
    9928:	00000000 	andeq	r0, r0, r0
    992c:	00000000 	andeq	r0, r0, r0
    9930:	00000000 	andeq	r0, r0, r0
    9934:	00000000 	andeq	r0, r0, r0
    9938:	00000000 	andeq	r0, r0, r0
    993c:	00000000 	andeq	r0, r0, r0
    9940:	00000000 	andeq	r0, r0, r0
    9944:	00000000 	andeq	r0, r0, r0
    9948:	00000000 	andeq	r0, r0, r0
    994c:	00000000 	andeq	r0, r0, r0
    9950:	00000000 	andeq	r0, r0, r0
    9954:	00000000 	andeq	r0, r0, r0
    9958:	00000000 	andeq	r0, r0, r0
    995c:	00000000 	andeq	r0, r0, r0
    9960:	00000000 	andeq	r0, r0, r0
    9964:	00000000 	andeq	r0, r0, r0
    9968:	00000000 	andeq	r0, r0, r0
    996c:	00000000 	andeq	r0, r0, r0
    9970:	00000000 	andeq	r0, r0, r0
    9974:	00000000 	andeq	r0, r0, r0
    9978:	00000000 	andeq	r0, r0, r0
    997c:	00000000 	andeq	r0, r0, r0
    9980:	00000000 	andeq	r0, r0, r0
    9984:	00000000 	andeq	r0, r0, r0
    9988:	00000000 	andeq	r0, r0, r0
    998c:	00000000 	andeq	r0, r0, r0
    9990:	00000000 	andeq	r0, r0, r0
    9994:	00000000 	andeq	r0, r0, r0
    9998:	00000000 	andeq	r0, r0, r0
    999c:	00000000 	andeq	r0, r0, r0
    99a0:	00000000 	andeq	r0, r0, r0
    99a4:	00000000 	andeq	r0, r0, r0
    99a8:	00000000 	andeq	r0, r0, r0
    99ac:	00000000 	andeq	r0, r0, r0
    99b0:	00000000 	andeq	r0, r0, r0
    99b4:	00000000 	andeq	r0, r0, r0
    99b8:	00000000 	andeq	r0, r0, r0
    99bc:	00000000 	andeq	r0, r0, r0
    99c0:	00000000 	andeq	r0, r0, r0
    99c4:	00000000 	andeq	r0, r0, r0
    99c8:	00000000 	andeq	r0, r0, r0
    99cc:	00000000 	andeq	r0, r0, r0
    99d0:	00000000 	andeq	r0, r0, r0
    99d4:	00000000 	andeq	r0, r0, r0
    99d8:	00000000 	andeq	r0, r0, r0
    99dc:	00000000 	andeq	r0, r0, r0
    99e0:	00000000 	andeq	r0, r0, r0
    99e4:	00000000 	andeq	r0, r0, r0
    99e8:	00000000 	andeq	r0, r0, r0
    99ec:	00000000 	andeq	r0, r0, r0
    99f0:	00000000 	andeq	r0, r0, r0
    99f4:	00000000 	andeq	r0, r0, r0
    99f8:	00000000 	andeq	r0, r0, r0
    99fc:	00000000 	andeq	r0, r0, r0
    9a00:	00000000 	andeq	r0, r0, r0
    9a04:	00000000 	andeq	r0, r0, r0
    9a08:	00000000 	andeq	r0, r0, r0
    9a0c:	00000000 	andeq	r0, r0, r0
    9a10:	00000000 	andeq	r0, r0, r0
    9a14:	00000000 	andeq	r0, r0, r0
    9a18:	00000000 	andeq	r0, r0, r0
    9a1c:	00000000 	andeq	r0, r0, r0
    9a20:	00000000 	andeq	r0, r0, r0
    9a24:	00000000 	andeq	r0, r0, r0
    9a28:	00000000 	andeq	r0, r0, r0
    9a2c:	00000000 	andeq	r0, r0, r0
    9a30:	00000000 	andeq	r0, r0, r0
    9a34:	00000000 	andeq	r0, r0, r0
    9a38:	00000000 	andeq	r0, r0, r0
    9a3c:	00000000 	andeq	r0, r0, r0
    9a40:	00000000 	andeq	r0, r0, r0
    9a44:	00000000 	andeq	r0, r0, r0
    9a48:	00000000 	andeq	r0, r0, r0
    9a4c:	00000000 	andeq	r0, r0, r0
    9a50:	00000000 	andeq	r0, r0, r0
    9a54:	00000000 	andeq	r0, r0, r0
    9a58:	00000000 	andeq	r0, r0, r0
    9a5c:	00000000 	andeq	r0, r0, r0
    9a60:	00000000 	andeq	r0, r0, r0
    9a64:	00000000 	andeq	r0, r0, r0
    9a68:	00000000 	andeq	r0, r0, r0
    9a6c:	00000000 	andeq	r0, r0, r0
    9a70:	00000000 	andeq	r0, r0, r0
    9a74:	00000000 	andeq	r0, r0, r0
    9a78:	00000000 	andeq	r0, r0, r0
    9a7c:	00000000 	andeq	r0, r0, r0
    9a80:	00000000 	andeq	r0, r0, r0
    9a84:	00000000 	andeq	r0, r0, r0
    9a88:	00000000 	andeq	r0, r0, r0
    9a8c:	00000000 	andeq	r0, r0, r0
    9a90:	00000000 	andeq	r0, r0, r0
    9a94:	00000000 	andeq	r0, r0, r0
    9a98:	00000000 	andeq	r0, r0, r0
    9a9c:	00000000 	andeq	r0, r0, r0
    9aa0:	00000000 	andeq	r0, r0, r0
    9aa4:	00000000 	andeq	r0, r0, r0
    9aa8:	00000000 	andeq	r0, r0, r0
    9aac:	00000000 	andeq	r0, r0, r0
    9ab0:	00000000 	andeq	r0, r0, r0
    9ab4:	00000000 	andeq	r0, r0, r0
    9ab8:	00000000 	andeq	r0, r0, r0
    9abc:	00000000 	andeq	r0, r0, r0
    9ac0:	00000000 	andeq	r0, r0, r0
    9ac4:	00000000 	andeq	r0, r0, r0
    9ac8:	00000000 	andeq	r0, r0, r0
    9acc:	00000000 	andeq	r0, r0, r0
    9ad0:	00000000 	andeq	r0, r0, r0
    9ad4:	00000000 	andeq	r0, r0, r0
    9ad8:	00000000 	andeq	r0, r0, r0
    9adc:	00000000 	andeq	r0, r0, r0
    9ae0:	00000000 	andeq	r0, r0, r0
    9ae4:	00000000 	andeq	r0, r0, r0
    9ae8:	00000000 	andeq	r0, r0, r0
    9aec:	00000000 	andeq	r0, r0, r0
    9af0:	00000000 	andeq	r0, r0, r0
    9af4:	00000000 	andeq	r0, r0, r0
    9af8:	00000000 	andeq	r0, r0, r0
    9afc:	00000000 	andeq	r0, r0, r0
    9b00:	00000000 	andeq	r0, r0, r0
    9b04:	00000000 	andeq	r0, r0, r0
    9b08:	00000000 	andeq	r0, r0, r0
    9b0c:	00000000 	andeq	r0, r0, r0
    9b10:	00000000 	andeq	r0, r0, r0
    9b14:	00000000 	andeq	r0, r0, r0
    9b18:	00000000 	andeq	r0, r0, r0
    9b1c:	00000000 	andeq	r0, r0, r0
    9b20:	00000000 	andeq	r0, r0, r0
    9b24:	00000000 	andeq	r0, r0, r0
    9b28:	00000000 	andeq	r0, r0, r0
    9b2c:	00000000 	andeq	r0, r0, r0
    9b30:	00000000 	andeq	r0, r0, r0
    9b34:	00000000 	andeq	r0, r0, r0
    9b38:	00000000 	andeq	r0, r0, r0
    9b3c:	00000000 	andeq	r0, r0, r0
    9b40:	00000000 	andeq	r0, r0, r0
    9b44:	00000000 	andeq	r0, r0, r0
    9b48:	00000000 	andeq	r0, r0, r0
    9b4c:	00000000 	andeq	r0, r0, r0
    9b50:	00000000 	andeq	r0, r0, r0
    9b54:	00000000 	andeq	r0, r0, r0
    9b58:	00000000 	andeq	r0, r0, r0
    9b5c:	00000000 	andeq	r0, r0, r0
    9b60:	00000000 	andeq	r0, r0, r0
    9b64:	00000000 	andeq	r0, r0, r0
    9b68:	00000000 	andeq	r0, r0, r0
    9b6c:	00000000 	andeq	r0, r0, r0
    9b70:	00000000 	andeq	r0, r0, r0
    9b74:	00000000 	andeq	r0, r0, r0
    9b78:	00000000 	andeq	r0, r0, r0
    9b7c:	00000000 	andeq	r0, r0, r0
    9b80:	00000000 	andeq	r0, r0, r0
    9b84:	00000000 	andeq	r0, r0, r0
    9b88:	00000000 	andeq	r0, r0, r0
    9b8c:	00000000 	andeq	r0, r0, r0
    9b90:	00000000 	andeq	r0, r0, r0
    9b94:	00000000 	andeq	r0, r0, r0
    9b98:	00000000 	andeq	r0, r0, r0
    9b9c:	00000000 	andeq	r0, r0, r0
    9ba0:	00000000 	andeq	r0, r0, r0
    9ba4:	00000000 	andeq	r0, r0, r0
    9ba8:	00000000 	andeq	r0, r0, r0
    9bac:	00000000 	andeq	r0, r0, r0
    9bb0:	00000000 	andeq	r0, r0, r0
    9bb4:	00000000 	andeq	r0, r0, r0
    9bb8:	00000000 	andeq	r0, r0, r0
    9bbc:	00000000 	andeq	r0, r0, r0
    9bc0:	00000000 	andeq	r0, r0, r0
    9bc4:	00000000 	andeq	r0, r0, r0
    9bc8:	00000000 	andeq	r0, r0, r0
    9bcc:	00000000 	andeq	r0, r0, r0
    9bd0:	00000000 	andeq	r0, r0, r0
    9bd4:	00000000 	andeq	r0, r0, r0
    9bd8:	00000000 	andeq	r0, r0, r0
    9bdc:	00000000 	andeq	r0, r0, r0
    9be0:	00000000 	andeq	r0, r0, r0
    9be4:	00000000 	andeq	r0, r0, r0
    9be8:	00000000 	andeq	r0, r0, r0
    9bec:	00000000 	andeq	r0, r0, r0
    9bf0:	00000000 	andeq	r0, r0, r0
    9bf4:	00000000 	andeq	r0, r0, r0
    9bf8:	00000000 	andeq	r0, r0, r0
    9bfc:	00000000 	andeq	r0, r0, r0
    9c00:	00000000 	andeq	r0, r0, r0
    9c04:	00000000 	andeq	r0, r0, r0
    9c08:	00000000 	andeq	r0, r0, r0
    9c0c:	00000000 	andeq	r0, r0, r0
    9c10:	00000000 	andeq	r0, r0, r0
    9c14:	00000000 	andeq	r0, r0, r0
    9c18:	00000000 	andeq	r0, r0, r0
    9c1c:	00000000 	andeq	r0, r0, r0
    9c20:	00000000 	andeq	r0, r0, r0
    9c24:	00000000 	andeq	r0, r0, r0
    9c28:	00000000 	andeq	r0, r0, r0
    9c2c:	00000000 	andeq	r0, r0, r0
    9c30:	00000000 	andeq	r0, r0, r0
    9c34:	00000000 	andeq	r0, r0, r0
    9c38:	00000000 	andeq	r0, r0, r0
    9c3c:	00000000 	andeq	r0, r0, r0
    9c40:	00000000 	andeq	r0, r0, r0
    9c44:	00000000 	andeq	r0, r0, r0
    9c48:	00000000 	andeq	r0, r0, r0
    9c4c:	00000000 	andeq	r0, r0, r0
    9c50:	00000000 	andeq	r0, r0, r0
    9c54:	00000000 	andeq	r0, r0, r0
    9c58:	00000000 	andeq	r0, r0, r0
    9c5c:	00000000 	andeq	r0, r0, r0
    9c60:	00000000 	andeq	r0, r0, r0
    9c64:	00000000 	andeq	r0, r0, r0
    9c68:	00000000 	andeq	r0, r0, r0
    9c6c:	00000000 	andeq	r0, r0, r0
    9c70:	00000000 	andeq	r0, r0, r0
    9c74:	00000000 	andeq	r0, r0, r0
    9c78:	00000000 	andeq	r0, r0, r0
    9c7c:	00000000 	andeq	r0, r0, r0
    9c80:	00000000 	andeq	r0, r0, r0
    9c84:	00000000 	andeq	r0, r0, r0
    9c88:	00000000 	andeq	r0, r0, r0
    9c8c:	00000000 	andeq	r0, r0, r0
    9c90:	00000000 	andeq	r0, r0, r0
    9c94:	00000000 	andeq	r0, r0, r0
    9c98:	00000000 	andeq	r0, r0, r0
    9c9c:	00000000 	andeq	r0, r0, r0
    9ca0:	00000000 	andeq	r0, r0, r0
    9ca4:	00000000 	andeq	r0, r0, r0
    9ca8:	00000000 	andeq	r0, r0, r0
    9cac:	00000000 	andeq	r0, r0, r0
    9cb0:	00000000 	andeq	r0, r0, r0
    9cb4:	00000000 	andeq	r0, r0, r0
    9cb8:	00000000 	andeq	r0, r0, r0
    9cbc:	00000000 	andeq	r0, r0, r0
    9cc0:	00000000 	andeq	r0, r0, r0
    9cc4:	00000000 	andeq	r0, r0, r0
    9cc8:	00000000 	andeq	r0, r0, r0
    9ccc:	00000000 	andeq	r0, r0, r0
    9cd0:	00000000 	andeq	r0, r0, r0
    9cd4:	00000000 	andeq	r0, r0, r0
    9cd8:	00000000 	andeq	r0, r0, r0
    9cdc:	00000000 	andeq	r0, r0, r0
    9ce0:	00000000 	andeq	r0, r0, r0
    9ce4:	00000000 	andeq	r0, r0, r0
    9ce8:	00000000 	andeq	r0, r0, r0
    9cec:	00000000 	andeq	r0, r0, r0
    9cf0:	00000000 	andeq	r0, r0, r0
    9cf4:	00000000 	andeq	r0, r0, r0
    9cf8:	00000000 	andeq	r0, r0, r0
    9cfc:	00000000 	andeq	r0, r0, r0
    9d00:	00000000 	andeq	r0, r0, r0
    9d04:	00000000 	andeq	r0, r0, r0
    9d08:	00000000 	andeq	r0, r0, r0
    9d0c:	00000000 	andeq	r0, r0, r0
    9d10:	00000000 	andeq	r0, r0, r0
    9d14:	00000000 	andeq	r0, r0, r0
    9d18:	00000000 	andeq	r0, r0, r0
    9d1c:	00000000 	andeq	r0, r0, r0
    9d20:	00000000 	andeq	r0, r0, r0
    9d24:	00000000 	andeq	r0, r0, r0
    9d28:	00000000 	andeq	r0, r0, r0
    9d2c:	00000000 	andeq	r0, r0, r0
    9d30:	00000000 	andeq	r0, r0, r0
    9d34:	00000000 	andeq	r0, r0, r0
    9d38:	00000000 	andeq	r0, r0, r0
    9d3c:	00000000 	andeq	r0, r0, r0
    9d40:	00000000 	andeq	r0, r0, r0
    9d44:	00000000 	andeq	r0, r0, r0
    9d48:	00000000 	andeq	r0, r0, r0
    9d4c:	00000000 	andeq	r0, r0, r0
    9d50:	00000000 	andeq	r0, r0, r0
    9d54:	00000000 	andeq	r0, r0, r0
    9d58:	00000000 	andeq	r0, r0, r0
    9d5c:	00000000 	andeq	r0, r0, r0
    9d60:	00000000 	andeq	r0, r0, r0
    9d64:	00000000 	andeq	r0, r0, r0
    9d68:	00000000 	andeq	r0, r0, r0
    9d6c:	00000000 	andeq	r0, r0, r0
    9d70:	00000000 	andeq	r0, r0, r0
    9d74:	00000000 	andeq	r0, r0, r0
    9d78:	00000000 	andeq	r0, r0, r0
    9d7c:	00000000 	andeq	r0, r0, r0
    9d80:	00000000 	andeq	r0, r0, r0
    9d84:	00000000 	andeq	r0, r0, r0
    9d88:	00000000 	andeq	r0, r0, r0
    9d8c:	00000000 	andeq	r0, r0, r0
    9d90:	00000000 	andeq	r0, r0, r0
    9d94:	00000000 	andeq	r0, r0, r0
    9d98:	00000000 	andeq	r0, r0, r0
    9d9c:	00000000 	andeq	r0, r0, r0
    9da0:	00000000 	andeq	r0, r0, r0
    9da4:	00000000 	andeq	r0, r0, r0
    9da8:	00000000 	andeq	r0, r0, r0
    9dac:	00000000 	andeq	r0, r0, r0
    9db0:	00000000 	andeq	r0, r0, r0
    9db4:	00000000 	andeq	r0, r0, r0
    9db8:	00000000 	andeq	r0, r0, r0
    9dbc:	00000000 	andeq	r0, r0, r0
    9dc0:	00000000 	andeq	r0, r0, r0
    9dc4:	00000000 	andeq	r0, r0, r0
    9dc8:	00000000 	andeq	r0, r0, r0
    9dcc:	00000000 	andeq	r0, r0, r0
    9dd0:	00000000 	andeq	r0, r0, r0
    9dd4:	00000000 	andeq	r0, r0, r0
    9dd8:	00000000 	andeq	r0, r0, r0
    9ddc:	00000000 	andeq	r0, r0, r0
    9de0:	00000000 	andeq	r0, r0, r0
    9de4:	00000000 	andeq	r0, r0, r0
    9de8:	00000000 	andeq	r0, r0, r0
    9dec:	00000000 	andeq	r0, r0, r0
    9df0:	00000000 	andeq	r0, r0, r0
    9df4:	00000000 	andeq	r0, r0, r0
    9df8:	00000000 	andeq	r0, r0, r0
    9dfc:	00000000 	andeq	r0, r0, r0
    9e00:	00000000 	andeq	r0, r0, r0
    9e04:	00000000 	andeq	r0, r0, r0
    9e08:	00000000 	andeq	r0, r0, r0
    9e0c:	00000000 	andeq	r0, r0, r0
    9e10:	00000000 	andeq	r0, r0, r0
    9e14:	00000000 	andeq	r0, r0, r0
    9e18:	00000000 	andeq	r0, r0, r0
    9e1c:	00000000 	andeq	r0, r0, r0
    9e20:	00000000 	andeq	r0, r0, r0
    9e24:	00000000 	andeq	r0, r0, r0
    9e28:	00000000 	andeq	r0, r0, r0
    9e2c:	00000000 	andeq	r0, r0, r0
    9e30:	00000000 	andeq	r0, r0, r0
    9e34:	00000000 	andeq	r0, r0, r0
    9e38:	00000000 	andeq	r0, r0, r0
    9e3c:	00000000 	andeq	r0, r0, r0
    9e40:	00000000 	andeq	r0, r0, r0
    9e44:	00000000 	andeq	r0, r0, r0
    9e48:	00000000 	andeq	r0, r0, r0
    9e4c:	00000000 	andeq	r0, r0, r0
    9e50:	00000000 	andeq	r0, r0, r0
    9e54:	00000000 	andeq	r0, r0, r0
    9e58:	00000000 	andeq	r0, r0, r0
    9e5c:	00000000 	andeq	r0, r0, r0
    9e60:	00000000 	andeq	r0, r0, r0
    9e64:	00000000 	andeq	r0, r0, r0
    9e68:	00000000 	andeq	r0, r0, r0
    9e6c:	00000000 	andeq	r0, r0, r0
    9e70:	00000000 	andeq	r0, r0, r0
    9e74:	00000000 	andeq	r0, r0, r0
    9e78:	00000000 	andeq	r0, r0, r0
    9e7c:	00000000 	andeq	r0, r0, r0
    9e80:	00000000 	andeq	r0, r0, r0
    9e84:	00000000 	andeq	r0, r0, r0
    9e88:	00000000 	andeq	r0, r0, r0
    9e8c:	00000000 	andeq	r0, r0, r0
    9e90:	00000000 	andeq	r0, r0, r0
    9e94:	00000000 	andeq	r0, r0, r0
    9e98:	00000000 	andeq	r0, r0, r0
    9e9c:	00000000 	andeq	r0, r0, r0
    9ea0:	00000000 	andeq	r0, r0, r0
    9ea4:	00000000 	andeq	r0, r0, r0
    9ea8:	00000000 	andeq	r0, r0, r0
    9eac:	00000000 	andeq	r0, r0, r0
    9eb0:	00000000 	andeq	r0, r0, r0
    9eb4:	00000000 	andeq	r0, r0, r0
    9eb8:	00000000 	andeq	r0, r0, r0
    9ebc:	00000000 	andeq	r0, r0, r0
    9ec0:	00000000 	andeq	r0, r0, r0
    9ec4:	00000000 	andeq	r0, r0, r0
    9ec8:	00000000 	andeq	r0, r0, r0
    9ecc:	00000000 	andeq	r0, r0, r0
    9ed0:	00000000 	andeq	r0, r0, r0
    9ed4:	00000000 	andeq	r0, r0, r0
    9ed8:	00000000 	andeq	r0, r0, r0
    9edc:	00000000 	andeq	r0, r0, r0
    9ee0:	00000000 	andeq	r0, r0, r0
    9ee4:	00000000 	andeq	r0, r0, r0
    9ee8:	00000000 	andeq	r0, r0, r0
    9eec:	00000000 	andeq	r0, r0, r0
    9ef0:	00000000 	andeq	r0, r0, r0
    9ef4:	00000000 	andeq	r0, r0, r0
    9ef8:	00000000 	andeq	r0, r0, r0
    9efc:	00000000 	andeq	r0, r0, r0
    9f00:	00000000 	andeq	r0, r0, r0
    9f04:	00000000 	andeq	r0, r0, r0
    9f08:	00000000 	andeq	r0, r0, r0
    9f0c:	00000000 	andeq	r0, r0, r0
    9f10:	00000000 	andeq	r0, r0, r0
    9f14:	00000000 	andeq	r0, r0, r0
    9f18:	00000000 	andeq	r0, r0, r0
    9f1c:	00000000 	andeq	r0, r0, r0
    9f20:	00000000 	andeq	r0, r0, r0
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	00000000 	andeq	r0, r0, r0
    9f2c:	00000000 	andeq	r0, r0, r0
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	00000000 	andeq	r0, r0, r0
    9f38:	00000000 	andeq	r0, r0, r0
    9f3c:	00000000 	andeq	r0, r0, r0
    9f40:	00000000 	andeq	r0, r0, r0
    9f44:	00000000 	andeq	r0, r0, r0
    9f48:	00000000 	andeq	r0, r0, r0
    9f4c:	00000000 	andeq	r0, r0, r0
    9f50:	00000000 	andeq	r0, r0, r0
    9f54:	00000000 	andeq	r0, r0, r0
    9f58:	00000000 	andeq	r0, r0, r0
    9f5c:	00000000 	andeq	r0, r0, r0
    9f60:	00000000 	andeq	r0, r0, r0
    9f64:	00000000 	andeq	r0, r0, r0
    9f68:	00000000 	andeq	r0, r0, r0
    9f6c:	00000000 	andeq	r0, r0, r0
    9f70:	00000000 	andeq	r0, r0, r0
    9f74:	00000000 	andeq	r0, r0, r0
    9f78:	00000000 	andeq	r0, r0, r0
    9f7c:	00000000 	andeq	r0, r0, r0
    9f80:	00000000 	andeq	r0, r0, r0
    9f84:	00000000 	andeq	r0, r0, r0
    9f88:	00000000 	andeq	r0, r0, r0
    9f8c:	00000000 	andeq	r0, r0, r0
    9f90:	00000000 	andeq	r0, r0, r0
    9f94:	00000000 	andeq	r0, r0, r0
    9f98:	00000000 	andeq	r0, r0, r0
    9f9c:	00000000 	andeq	r0, r0, r0
    9fa0:	00000000 	andeq	r0, r0, r0
    9fa4:	00000000 	andeq	r0, r0, r0
    9fa8:	00000000 	andeq	r0, r0, r0
    9fac:	00000000 	andeq	r0, r0, r0
    9fb0:	00000000 	andeq	r0, r0, r0
    9fb4:	00000000 	andeq	r0, r0, r0
    9fb8:	00000000 	andeq	r0, r0, r0
    9fbc:	00000000 	andeq	r0, r0, r0
    9fc0:	00000000 	andeq	r0, r0, r0
    9fc4:	00000000 	andeq	r0, r0, r0
    9fc8:	00000000 	andeq	r0, r0, r0
    9fcc:	00000000 	andeq	r0, r0, r0
    9fd0:	00000000 	andeq	r0, r0, r0
    9fd4:	00000000 	andeq	r0, r0, r0
    9fd8:	00000000 	andeq	r0, r0, r0
    9fdc:	00000000 	andeq	r0, r0, r0
    9fe0:	00000000 	andeq	r0, r0, r0
    9fe4:	00000000 	andeq	r0, r0, r0
    9fe8:	00000000 	andeq	r0, r0, r0
    9fec:	00000000 	andeq	r0, r0, r0
    9ff0:	00000000 	andeq	r0, r0, r0
    9ff4:	00000000 	andeq	r0, r0, r0
    9ff8:	00000000 	andeq	r0, r0, r0
    9ffc:	00000000 	andeq	r0, r0, r0
    a000:	00000000 	andeq	r0, r0, r0
    a004:	00000000 	andeq	r0, r0, r0
    a008:	00000000 	andeq	r0, r0, r0
    a00c:	00000000 	andeq	r0, r0, r0
    a010:	00000000 	andeq	r0, r0, r0
    a014:	00000000 	andeq	r0, r0, r0
    a018:	00000000 	andeq	r0, r0, r0
    a01c:	00000000 	andeq	r0, r0, r0
    a020:	00000000 	andeq	r0, r0, r0
    a024:	00000000 	andeq	r0, r0, r0
    a028:	00000000 	andeq	r0, r0, r0
    a02c:	00000000 	andeq	r0, r0, r0
    a030:	00000000 	andeq	r0, r0, r0
    a034:	00000000 	andeq	r0, r0, r0
    a038:	00000000 	andeq	r0, r0, r0
    a03c:	00000000 	andeq	r0, r0, r0
    a040:	00000000 	andeq	r0, r0, r0
    a044:	00000000 	andeq	r0, r0, r0
    a048:	00000000 	andeq	r0, r0, r0
    a04c:	00000000 	andeq	r0, r0, r0
    a050:	00000000 	andeq	r0, r0, r0
    a054:	00000000 	andeq	r0, r0, r0
    a058:	00000000 	andeq	r0, r0, r0
    a05c:	00000000 	andeq	r0, r0, r0
    a060:	00000000 	andeq	r0, r0, r0
    a064:	00000000 	andeq	r0, r0, r0
    a068:	00000000 	andeq	r0, r0, r0
    a06c:	00000000 	andeq	r0, r0, r0
    a070:	00000000 	andeq	r0, r0, r0
    a074:	00000000 	andeq	r0, r0, r0
    a078:	00000000 	andeq	r0, r0, r0
    a07c:	00000000 	andeq	r0, r0, r0
    a080:	00000000 	andeq	r0, r0, r0
    a084:	00000000 	andeq	r0, r0, r0
    a088:	00000000 	andeq	r0, r0, r0
    a08c:	00000000 	andeq	r0, r0, r0
    a090:	00000000 	andeq	r0, r0, r0
    a094:	00000000 	andeq	r0, r0, r0
    a098:	00000000 	andeq	r0, r0, r0
    a09c:	00000000 	andeq	r0, r0, r0
    a0a0:	00000000 	andeq	r0, r0, r0
    a0a4:	00000000 	andeq	r0, r0, r0
    a0a8:	00000000 	andeq	r0, r0, r0
    a0ac:	00000000 	andeq	r0, r0, r0
    a0b0:	00000000 	andeq	r0, r0, r0
    a0b4:	00000000 	andeq	r0, r0, r0
    a0b8:	00000000 	andeq	r0, r0, r0
    a0bc:	00000000 	andeq	r0, r0, r0
    a0c0:	00000000 	andeq	r0, r0, r0
    a0c4:	00000000 	andeq	r0, r0, r0
    a0c8:	00000000 	andeq	r0, r0, r0
    a0cc:	00000000 	andeq	r0, r0, r0
    a0d0:	00000000 	andeq	r0, r0, r0
    a0d4:	00000000 	andeq	r0, r0, r0
    a0d8:	00000000 	andeq	r0, r0, r0
    a0dc:	00000000 	andeq	r0, r0, r0
    a0e0:	00000000 	andeq	r0, r0, r0
    a0e4:	00000000 	andeq	r0, r0, r0
    a0e8:	00000000 	andeq	r0, r0, r0
    a0ec:	00000000 	andeq	r0, r0, r0
    a0f0:	00000000 	andeq	r0, r0, r0
    a0f4:	00000000 	andeq	r0, r0, r0
    a0f8:	00000000 	andeq	r0, r0, r0
    a0fc:	00000000 	andeq	r0, r0, r0
    a100:	00000000 	andeq	r0, r0, r0
    a104:	00000000 	andeq	r0, r0, r0
    a108:	00000000 	andeq	r0, r0, r0
    a10c:	00000000 	andeq	r0, r0, r0
    a110:	00000000 	andeq	r0, r0, r0
    a114:	00000000 	andeq	r0, r0, r0
    a118:	00000000 	andeq	r0, r0, r0
    a11c:	00000000 	andeq	r0, r0, r0
    a120:	00000000 	andeq	r0, r0, r0
    a124:	00000000 	andeq	r0, r0, r0
    a128:	00000000 	andeq	r0, r0, r0
    a12c:	00000000 	andeq	r0, r0, r0
    a130:	00000000 	andeq	r0, r0, r0
    a134:	00000000 	andeq	r0, r0, r0
    a138:	00000000 	andeq	r0, r0, r0
    a13c:	00000000 	andeq	r0, r0, r0
    a140:	00000000 	andeq	r0, r0, r0
    a144:	00000000 	andeq	r0, r0, r0
    a148:	00000000 	andeq	r0, r0, r0
    a14c:	00000000 	andeq	r0, r0, r0
    a150:	00000000 	andeq	r0, r0, r0
    a154:	00000000 	andeq	r0, r0, r0
    a158:	00000000 	andeq	r0, r0, r0
    a15c:	00000000 	andeq	r0, r0, r0
    a160:	00000000 	andeq	r0, r0, r0
    a164:	00000000 	andeq	r0, r0, r0
    a168:	00000000 	andeq	r0, r0, r0
    a16c:	00000000 	andeq	r0, r0, r0
    a170:	00000000 	andeq	r0, r0, r0
    a174:	00000000 	andeq	r0, r0, r0
    a178:	00000000 	andeq	r0, r0, r0
    a17c:	00000000 	andeq	r0, r0, r0
    a180:	00000000 	andeq	r0, r0, r0
    a184:	00000000 	andeq	r0, r0, r0
    a188:	00000000 	andeq	r0, r0, r0
    a18c:	00000000 	andeq	r0, r0, r0
    a190:	00000000 	andeq	r0, r0, r0
    a194:	00000000 	andeq	r0, r0, r0
    a198:	00000000 	andeq	r0, r0, r0
    a19c:	00000000 	andeq	r0, r0, r0
    a1a0:	00000000 	andeq	r0, r0, r0
    a1a4:	00000000 	andeq	r0, r0, r0
    a1a8:	00000000 	andeq	r0, r0, r0
    a1ac:	00000000 	andeq	r0, r0, r0
    a1b0:	00000000 	andeq	r0, r0, r0
    a1b4:	00000000 	andeq	r0, r0, r0
    a1b8:	00000000 	andeq	r0, r0, r0
    a1bc:	00000000 	andeq	r0, r0, r0
    a1c0:	00000000 	andeq	r0, r0, r0
    a1c4:	00000000 	andeq	r0, r0, r0
    a1c8:	00000000 	andeq	r0, r0, r0
    a1cc:	00000000 	andeq	r0, r0, r0
    a1d0:	00000000 	andeq	r0, r0, r0
    a1d4:	00000000 	andeq	r0, r0, r0
    a1d8:	00000000 	andeq	r0, r0, r0
    a1dc:	00000000 	andeq	r0, r0, r0
    a1e0:	00000000 	andeq	r0, r0, r0
    a1e4:	00000000 	andeq	r0, r0, r0
    a1e8:	00000000 	andeq	r0, r0, r0
    a1ec:	00000000 	andeq	r0, r0, r0
    a1f0:	00000000 	andeq	r0, r0, r0
    a1f4:	00000000 	andeq	r0, r0, r0
    a1f8:	00000000 	andeq	r0, r0, r0
    a1fc:	00000000 	andeq	r0, r0, r0
    a200:	00000000 	andeq	r0, r0, r0
    a204:	00000000 	andeq	r0, r0, r0
    a208:	00000000 	andeq	r0, r0, r0
    a20c:	00000000 	andeq	r0, r0, r0
    a210:	00000000 	andeq	r0, r0, r0
    a214:	00000000 	andeq	r0, r0, r0
    a218:	00000000 	andeq	r0, r0, r0
    a21c:	00000000 	andeq	r0, r0, r0
    a220:	00000000 	andeq	r0, r0, r0
    a224:	00000000 	andeq	r0, r0, r0
    a228:	00000000 	andeq	r0, r0, r0
    a22c:	00000000 	andeq	r0, r0, r0
    a230:	00000000 	andeq	r0, r0, r0
    a234:	00000000 	andeq	r0, r0, r0
    a238:	00000000 	andeq	r0, r0, r0
    a23c:	00000000 	andeq	r0, r0, r0
    a240:	00000000 	andeq	r0, r0, r0
    a244:	00000000 	andeq	r0, r0, r0
    a248:	00000000 	andeq	r0, r0, r0
    a24c:	00000000 	andeq	r0, r0, r0
    a250:	00000000 	andeq	r0, r0, r0
    a254:	00000000 	andeq	r0, r0, r0
    a258:	00000000 	andeq	r0, r0, r0
    a25c:	00000000 	andeq	r0, r0, r0
    a260:	00000000 	andeq	r0, r0, r0
    a264:	00000000 	andeq	r0, r0, r0
    a268:	00000000 	andeq	r0, r0, r0
    a26c:	00000000 	andeq	r0, r0, r0
    a270:	00000000 	andeq	r0, r0, r0
    a274:	00000000 	andeq	r0, r0, r0
    a278:	00000000 	andeq	r0, r0, r0
    a27c:	00000000 	andeq	r0, r0, r0
    a280:	00000000 	andeq	r0, r0, r0
    a284:	00000000 	andeq	r0, r0, r0
    a288:	00000000 	andeq	r0, r0, r0
    a28c:	00000000 	andeq	r0, r0, r0
    a290:	00000000 	andeq	r0, r0, r0
    a294:	00000000 	andeq	r0, r0, r0
    a298:	00000000 	andeq	r0, r0, r0
    a29c:	00000000 	andeq	r0, r0, r0
    a2a0:	00000000 	andeq	r0, r0, r0
    a2a4:	00000000 	andeq	r0, r0, r0
    a2a8:	00000000 	andeq	r0, r0, r0
    a2ac:	00000000 	andeq	r0, r0, r0
    a2b0:	00000000 	andeq	r0, r0, r0
    a2b4:	00000000 	andeq	r0, r0, r0
    a2b8:	00000000 	andeq	r0, r0, r0
    a2bc:	00000000 	andeq	r0, r0, r0
    a2c0:	00000000 	andeq	r0, r0, r0
    a2c4:	00000000 	andeq	r0, r0, r0
    a2c8:	00000000 	andeq	r0, r0, r0
    a2cc:	00000000 	andeq	r0, r0, r0
    a2d0:	00000000 	andeq	r0, r0, r0
    a2d4:	00000000 	andeq	r0, r0, r0
    a2d8:	00000000 	andeq	r0, r0, r0
    a2dc:	00000000 	andeq	r0, r0, r0
    a2e0:	00000000 	andeq	r0, r0, r0
    a2e4:	00000000 	andeq	r0, r0, r0
    a2e8:	00000000 	andeq	r0, r0, r0
    a2ec:	00000000 	andeq	r0, r0, r0
    a2f0:	00000000 	andeq	r0, r0, r0
    a2f4:	00000000 	andeq	r0, r0, r0
    a2f8:	00000000 	andeq	r0, r0, r0
    a2fc:	00000000 	andeq	r0, r0, r0
    a300:	00000000 	andeq	r0, r0, r0
    a304:	00000000 	andeq	r0, r0, r0
    a308:	00000000 	andeq	r0, r0, r0
    a30c:	00000000 	andeq	r0, r0, r0
    a310:	00000000 	andeq	r0, r0, r0
    a314:	00000000 	andeq	r0, r0, r0
    a318:	00000000 	andeq	r0, r0, r0
    a31c:	00000000 	andeq	r0, r0, r0
    a320:	00000000 	andeq	r0, r0, r0
    a324:	00000000 	andeq	r0, r0, r0
    a328:	00000000 	andeq	r0, r0, r0
    a32c:	00000000 	andeq	r0, r0, r0
    a330:	00000000 	andeq	r0, r0, r0
    a334:	00000000 	andeq	r0, r0, r0
    a338:	00000000 	andeq	r0, r0, r0
    a33c:	00000000 	andeq	r0, r0, r0
    a340:	00000000 	andeq	r0, r0, r0
    a344:	00000000 	andeq	r0, r0, r0
    a348:	00000000 	andeq	r0, r0, r0
    a34c:	00000000 	andeq	r0, r0, r0
    a350:	00000000 	andeq	r0, r0, r0
    a354:	00000000 	andeq	r0, r0, r0
    a358:	00000000 	andeq	r0, r0, r0
    a35c:	00000000 	andeq	r0, r0, r0
    a360:	00000000 	andeq	r0, r0, r0
    a364:	00000000 	andeq	r0, r0, r0
    a368:	00000000 	andeq	r0, r0, r0
    a36c:	00000000 	andeq	r0, r0, r0
    a370:	00000000 	andeq	r0, r0, r0
    a374:	00000000 	andeq	r0, r0, r0
    a378:	00000000 	andeq	r0, r0, r0
    a37c:	00000000 	andeq	r0, r0, r0
    a380:	00000000 	andeq	r0, r0, r0
    a384:	00000000 	andeq	r0, r0, r0
    a388:	00000000 	andeq	r0, r0, r0
    a38c:	00000000 	andeq	r0, r0, r0
    a390:	00000000 	andeq	r0, r0, r0
    a394:	00000000 	andeq	r0, r0, r0
    a398:	00000000 	andeq	r0, r0, r0
    a39c:	00000000 	andeq	r0, r0, r0
    a3a0:	00000000 	andeq	r0, r0, r0
    a3a4:	00000000 	andeq	r0, r0, r0
    a3a8:	00000000 	andeq	r0, r0, r0
    a3ac:	00000000 	andeq	r0, r0, r0
    a3b0:	00000000 	andeq	r0, r0, r0
    a3b4:	00000000 	andeq	r0, r0, r0
    a3b8:	00000000 	andeq	r0, r0, r0
    a3bc:	00000000 	andeq	r0, r0, r0
    a3c0:	00000000 	andeq	r0, r0, r0
    a3c4:	00000000 	andeq	r0, r0, r0
    a3c8:	00000000 	andeq	r0, r0, r0
    a3cc:	00000000 	andeq	r0, r0, r0
    a3d0:	00000000 	andeq	r0, r0, r0
    a3d4:	00000000 	andeq	r0, r0, r0
    a3d8:	00000000 	andeq	r0, r0, r0
    a3dc:	00000000 	andeq	r0, r0, r0
    a3e0:	00000000 	andeq	r0, r0, r0
    a3e4:	00000000 	andeq	r0, r0, r0
    a3e8:	00000000 	andeq	r0, r0, r0
    a3ec:	00000000 	andeq	r0, r0, r0
    a3f0:	00000000 	andeq	r0, r0, r0
    a3f4:	00000000 	andeq	r0, r0, r0
    a3f8:	00000000 	andeq	r0, r0, r0
    a3fc:	00000000 	andeq	r0, r0, r0
    a400:	00000000 	andeq	r0, r0, r0
    a404:	00000000 	andeq	r0, r0, r0
    a408:	00000000 	andeq	r0, r0, r0
    a40c:	00000000 	andeq	r0, r0, r0
    a410:	00000000 	andeq	r0, r0, r0
    a414:	00000000 	andeq	r0, r0, r0
    a418:	00000000 	andeq	r0, r0, r0
    a41c:	00000000 	andeq	r0, r0, r0
    a420:	00000000 	andeq	r0, r0, r0
    a424:	00000000 	andeq	r0, r0, r0
    a428:	00000000 	andeq	r0, r0, r0
    a42c:	00000000 	andeq	r0, r0, r0
    a430:	00000000 	andeq	r0, r0, r0
    a434:	00000000 	andeq	r0, r0, r0
    a438:	00000000 	andeq	r0, r0, r0
    a43c:	00000000 	andeq	r0, r0, r0
    a440:	00000000 	andeq	r0, r0, r0
    a444:	00000000 	andeq	r0, r0, r0
    a448:	00000000 	andeq	r0, r0, r0
    a44c:	00000000 	andeq	r0, r0, r0
    a450:	00000000 	andeq	r0, r0, r0
    a454:	00000000 	andeq	r0, r0, r0
    a458:	00000000 	andeq	r0, r0, r0
    a45c:	00000000 	andeq	r0, r0, r0
    a460:	00000000 	andeq	r0, r0, r0
    a464:	00000000 	andeq	r0, r0, r0
    a468:	00000000 	andeq	r0, r0, r0
    a46c:	00000000 	andeq	r0, r0, r0
    a470:	00000000 	andeq	r0, r0, r0
    a474:	00000000 	andeq	r0, r0, r0
    a478:	00000000 	andeq	r0, r0, r0
    a47c:	00000000 	andeq	r0, r0, r0
    a480:	00000000 	andeq	r0, r0, r0
    a484:	00000000 	andeq	r0, r0, r0
    a488:	00000000 	andeq	r0, r0, r0
    a48c:	00000000 	andeq	r0, r0, r0
    a490:	00000000 	andeq	r0, r0, r0
    a494:	00000000 	andeq	r0, r0, r0
    a498:	00000000 	andeq	r0, r0, r0
    a49c:	00000000 	andeq	r0, r0, r0
    a4a0:	00000000 	andeq	r0, r0, r0
    a4a4:	00000000 	andeq	r0, r0, r0
    a4a8:	00000000 	andeq	r0, r0, r0
    a4ac:	00000000 	andeq	r0, r0, r0
    a4b0:	00000000 	andeq	r0, r0, r0
    a4b4:	00000000 	andeq	r0, r0, r0
    a4b8:	00000000 	andeq	r0, r0, r0
    a4bc:	00000000 	andeq	r0, r0, r0
    a4c0:	00000000 	andeq	r0, r0, r0
    a4c4:	00000000 	andeq	r0, r0, r0
    a4c8:	00000000 	andeq	r0, r0, r0
    a4cc:	00000000 	andeq	r0, r0, r0
    a4d0:	00000000 	andeq	r0, r0, r0
    a4d4:	00000000 	andeq	r0, r0, r0
    a4d8:	00000000 	andeq	r0, r0, r0
    a4dc:	00000000 	andeq	r0, r0, r0
    a4e0:	00000000 	andeq	r0, r0, r0
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	00000000 	andeq	r0, r0, r0
    a4ec:	00000000 	andeq	r0, r0, r0
    a4f0:	00000000 	andeq	r0, r0, r0
    a4f4:	00000000 	andeq	r0, r0, r0
    a4f8:	00000000 	andeq	r0, r0, r0
    a4fc:	00000000 	andeq	r0, r0, r0
    a500:	00000000 	andeq	r0, r0, r0
    a504:	00000000 	andeq	r0, r0, r0
    a508:	00000000 	andeq	r0, r0, r0
    a50c:	00000000 	andeq	r0, r0, r0
    a510:	00000000 	andeq	r0, r0, r0
    a514:	00000000 	andeq	r0, r0, r0
    a518:	00000000 	andeq	r0, r0, r0
    a51c:	00000000 	andeq	r0, r0, r0
    a520:	00000000 	andeq	r0, r0, r0
    a524:	00000000 	andeq	r0, r0, r0
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	00000000 	andeq	r0, r0, r0
    a530:	00000000 	andeq	r0, r0, r0
    a534:	00000000 	andeq	r0, r0, r0
    a538:	00000000 	andeq	r0, r0, r0
    a53c:	00000000 	andeq	r0, r0, r0
    a540:	00000000 	andeq	r0, r0, r0
    a544:	00000000 	andeq	r0, r0, r0
    a548:	00000000 	andeq	r0, r0, r0
    a54c:	00000000 	andeq	r0, r0, r0
    a550:	00000000 	andeq	r0, r0, r0
    a554:	00000000 	andeq	r0, r0, r0
    a558:	00000000 	andeq	r0, r0, r0
    a55c:	00000000 	andeq	r0, r0, r0
    a560:	00000000 	andeq	r0, r0, r0
    a564:	00000000 	andeq	r0, r0, r0
    a568:	00000000 	andeq	r0, r0, r0
    a56c:	00000000 	andeq	r0, r0, r0
    a570:	00000000 	andeq	r0, r0, r0
    a574:	00000000 	andeq	r0, r0, r0
    a578:	00000000 	andeq	r0, r0, r0
    a57c:	00000000 	andeq	r0, r0, r0
    a580:	00000000 	andeq	r0, r0, r0
    a584:	00000000 	andeq	r0, r0, r0
    a588:	00000000 	andeq	r0, r0, r0
    a58c:	00000000 	andeq	r0, r0, r0
    a590:	00000000 	andeq	r0, r0, r0
    a594:	00000000 	andeq	r0, r0, r0
    a598:	00000000 	andeq	r0, r0, r0
    a59c:	00000000 	andeq	r0, r0, r0
    a5a0:	00000000 	andeq	r0, r0, r0
    a5a4:	00000000 	andeq	r0, r0, r0
    a5a8:	00000000 	andeq	r0, r0, r0
    a5ac:	00000000 	andeq	r0, r0, r0
    a5b0:	00000000 	andeq	r0, r0, r0
    a5b4:	00000000 	andeq	r0, r0, r0
    a5b8:	00000000 	andeq	r0, r0, r0
    a5bc:	00000000 	andeq	r0, r0, r0
    a5c0:	00000000 	andeq	r0, r0, r0
    a5c4:	00000000 	andeq	r0, r0, r0
    a5c8:	00000000 	andeq	r0, r0, r0
    a5cc:	00000000 	andeq	r0, r0, r0
    a5d0:	00000000 	andeq	r0, r0, r0
    a5d4:	00000000 	andeq	r0, r0, r0
    a5d8:	00000000 	andeq	r0, r0, r0
    a5dc:	00000000 	andeq	r0, r0, r0
    a5e0:	00000000 	andeq	r0, r0, r0
    a5e4:	00000000 	andeq	r0, r0, r0
    a5e8:	00000000 	andeq	r0, r0, r0
    a5ec:	00000000 	andeq	r0, r0, r0
    a5f0:	00000000 	andeq	r0, r0, r0
    a5f4:	00000000 	andeq	r0, r0, r0
    a5f8:	00000000 	andeq	r0, r0, r0
    a5fc:	00000000 	andeq	r0, r0, r0
    a600:	00000000 	andeq	r0, r0, r0
    a604:	00000000 	andeq	r0, r0, r0
    a608:	00000000 	andeq	r0, r0, r0
    a60c:	00000000 	andeq	r0, r0, r0
    a610:	00000000 	andeq	r0, r0, r0
    a614:	00000000 	andeq	r0, r0, r0
    a618:	00000000 	andeq	r0, r0, r0
    a61c:	00000000 	andeq	r0, r0, r0
    a620:	00000000 	andeq	r0, r0, r0
    a624:	00000000 	andeq	r0, r0, r0
    a628:	00000000 	andeq	r0, r0, r0
    a62c:	00000000 	andeq	r0, r0, r0
    a630:	00000000 	andeq	r0, r0, r0
    a634:	00000000 	andeq	r0, r0, r0
    a638:	00000000 	andeq	r0, r0, r0
    a63c:	00000000 	andeq	r0, r0, r0
    a640:	00000000 	andeq	r0, r0, r0
    a644:	00000000 	andeq	r0, r0, r0
    a648:	00000000 	andeq	r0, r0, r0
    a64c:	00000000 	andeq	r0, r0, r0
    a650:	00000000 	andeq	r0, r0, r0
    a654:	00000000 	andeq	r0, r0, r0
    a658:	00000000 	andeq	r0, r0, r0
    a65c:	00000000 	andeq	r0, r0, r0
    a660:	00000000 	andeq	r0, r0, r0
    a664:	00000000 	andeq	r0, r0, r0
    a668:	00000000 	andeq	r0, r0, r0
    a66c:	00000000 	andeq	r0, r0, r0
    a670:	00000000 	andeq	r0, r0, r0
    a674:	00000000 	andeq	r0, r0, r0
    a678:	00000000 	andeq	r0, r0, r0
    a67c:	00000000 	andeq	r0, r0, r0
    a680:	00000000 	andeq	r0, r0, r0
    a684:	00000000 	andeq	r0, r0, r0
    a688:	00000000 	andeq	r0, r0, r0
    a68c:	00000000 	andeq	r0, r0, r0
    a690:	00000000 	andeq	r0, r0, r0
    a694:	00000000 	andeq	r0, r0, r0
    a698:	00000000 	andeq	r0, r0, r0
    a69c:	00000000 	andeq	r0, r0, r0
    a6a0:	00000000 	andeq	r0, r0, r0
    a6a4:	00000000 	andeq	r0, r0, r0
    a6a8:	00000000 	andeq	r0, r0, r0
    a6ac:	00000000 	andeq	r0, r0, r0
    a6b0:	00000000 	andeq	r0, r0, r0
    a6b4:	00000000 	andeq	r0, r0, r0
    a6b8:	00000000 	andeq	r0, r0, r0
    a6bc:	00000000 	andeq	r0, r0, r0
    a6c0:	00000000 	andeq	r0, r0, r0
    a6c4:	00000000 	andeq	r0, r0, r0
    a6c8:	00000000 	andeq	r0, r0, r0
    a6cc:	00000000 	andeq	r0, r0, r0
    a6d0:	00000000 	andeq	r0, r0, r0
    a6d4:	00000000 	andeq	r0, r0, r0
    a6d8:	00000000 	andeq	r0, r0, r0
    a6dc:	00000000 	andeq	r0, r0, r0
    a6e0:	00000000 	andeq	r0, r0, r0
    a6e4:	00000000 	andeq	r0, r0, r0
    a6e8:	00000000 	andeq	r0, r0, r0
    a6ec:	00000000 	andeq	r0, r0, r0
    a6f0:	00000000 	andeq	r0, r0, r0
    a6f4:	00000000 	andeq	r0, r0, r0
    a6f8:	00000000 	andeq	r0, r0, r0
    a6fc:	00000000 	andeq	r0, r0, r0
    a700:	00000000 	andeq	r0, r0, r0
    a704:	00000000 	andeq	r0, r0, r0
    a708:	00000000 	andeq	r0, r0, r0
    a70c:	00000000 	andeq	r0, r0, r0
    a710:	00000000 	andeq	r0, r0, r0
    a714:	00000000 	andeq	r0, r0, r0
    a718:	00000000 	andeq	r0, r0, r0
    a71c:	00000000 	andeq	r0, r0, r0
    a720:	00000000 	andeq	r0, r0, r0
    a724:	00000000 	andeq	r0, r0, r0
    a728:	00000000 	andeq	r0, r0, r0
    a72c:	00000000 	andeq	r0, r0, r0
    a730:	00000000 	andeq	r0, r0, r0
    a734:	00000000 	andeq	r0, r0, r0
    a738:	00000000 	andeq	r0, r0, r0
    a73c:	00000000 	andeq	r0, r0, r0
    a740:	00000000 	andeq	r0, r0, r0
    a744:	00000000 	andeq	r0, r0, r0
    a748:	00000000 	andeq	r0, r0, r0
    a74c:	00000000 	andeq	r0, r0, r0
    a750:	00000000 	andeq	r0, r0, r0
    a754:	00000000 	andeq	r0, r0, r0
    a758:	00000000 	andeq	r0, r0, r0
    a75c:	00000000 	andeq	r0, r0, r0
    a760:	00000000 	andeq	r0, r0, r0
    a764:	00000000 	andeq	r0, r0, r0
    a768:	00000000 	andeq	r0, r0, r0
    a76c:	00000000 	andeq	r0, r0, r0
    a770:	00000000 	andeq	r0, r0, r0
    a774:	00000000 	andeq	r0, r0, r0
    a778:	00000000 	andeq	r0, r0, r0
    a77c:	00000000 	andeq	r0, r0, r0
    a780:	00000000 	andeq	r0, r0, r0
    a784:	00000000 	andeq	r0, r0, r0
    a788:	00000000 	andeq	r0, r0, r0
    a78c:	00000000 	andeq	r0, r0, r0
    a790:	00000000 	andeq	r0, r0, r0
    a794:	00000000 	andeq	r0, r0, r0
    a798:	00000000 	andeq	r0, r0, r0
    a79c:	00000000 	andeq	r0, r0, r0
    a7a0:	00000000 	andeq	r0, r0, r0
    a7a4:	00000000 	andeq	r0, r0, r0
    a7a8:	00000000 	andeq	r0, r0, r0
    a7ac:	00000000 	andeq	r0, r0, r0
    a7b0:	00000000 	andeq	r0, r0, r0
    a7b4:	00000000 	andeq	r0, r0, r0
    a7b8:	00000000 	andeq	r0, r0, r0
    a7bc:	00000000 	andeq	r0, r0, r0
    a7c0:	00000000 	andeq	r0, r0, r0
    a7c4:	00000000 	andeq	r0, r0, r0
    a7c8:	00000000 	andeq	r0, r0, r0
    a7cc:	00000000 	andeq	r0, r0, r0
    a7d0:	00000000 	andeq	r0, r0, r0
    a7d4:	00000000 	andeq	r0, r0, r0
    a7d8:	00000000 	andeq	r0, r0, r0
    a7dc:	00000000 	andeq	r0, r0, r0
    a7e0:	00000000 	andeq	r0, r0, r0
    a7e4:	00000000 	andeq	r0, r0, r0
    a7e8:	00000000 	andeq	r0, r0, r0
    a7ec:	00000000 	andeq	r0, r0, r0
    a7f0:	00000000 	andeq	r0, r0, r0
    a7f4:	00000000 	andeq	r0, r0, r0
    a7f8:	00000000 	andeq	r0, r0, r0
    a7fc:	00000000 	andeq	r0, r0, r0
    a800:	00000000 	andeq	r0, r0, r0
    a804:	00000000 	andeq	r0, r0, r0
    a808:	00000000 	andeq	r0, r0, r0
    a80c:	00000000 	andeq	r0, r0, r0
    a810:	00000000 	andeq	r0, r0, r0
    a814:	00000000 	andeq	r0, r0, r0
    a818:	00000000 	andeq	r0, r0, r0
    a81c:	00000000 	andeq	r0, r0, r0
    a820:	00000000 	andeq	r0, r0, r0
    a824:	00000000 	andeq	r0, r0, r0
    a828:	00000000 	andeq	r0, r0, r0
    a82c:	00000000 	andeq	r0, r0, r0
    a830:	00000000 	andeq	r0, r0, r0
    a834:	00000000 	andeq	r0, r0, r0
    a838:	00000000 	andeq	r0, r0, r0
    a83c:	00000000 	andeq	r0, r0, r0
    a840:	00000000 	andeq	r0, r0, r0
    a844:	00000000 	andeq	r0, r0, r0
    a848:	00000000 	andeq	r0, r0, r0
    a84c:	00000000 	andeq	r0, r0, r0
    a850:	00000000 	andeq	r0, r0, r0
    a854:	00000000 	andeq	r0, r0, r0
    a858:	00000000 	andeq	r0, r0, r0
    a85c:	00000000 	andeq	r0, r0, r0
    a860:	00000000 	andeq	r0, r0, r0
    a864:	00000000 	andeq	r0, r0, r0
    a868:	00000000 	andeq	r0, r0, r0
    a86c:	00000000 	andeq	r0, r0, r0
    a870:	00000000 	andeq	r0, r0, r0
    a874:	00000000 	andeq	r0, r0, r0
    a878:	00000000 	andeq	r0, r0, r0
    a87c:	00000000 	andeq	r0, r0, r0
    a880:	00000000 	andeq	r0, r0, r0
    a884:	00000000 	andeq	r0, r0, r0
    a888:	00000000 	andeq	r0, r0, r0
    a88c:	00000000 	andeq	r0, r0, r0
    a890:	00000000 	andeq	r0, r0, r0
    a894:	00000000 	andeq	r0, r0, r0
    a898:	00000000 	andeq	r0, r0, r0
    a89c:	00000000 	andeq	r0, r0, r0
    a8a0:	00000000 	andeq	r0, r0, r0
    a8a4:	00000000 	andeq	r0, r0, r0
    a8a8:	00000000 	andeq	r0, r0, r0
    a8ac:	00000000 	andeq	r0, r0, r0
    a8b0:	00000000 	andeq	r0, r0, r0
    a8b4:	00000000 	andeq	r0, r0, r0
    a8b8:	00000000 	andeq	r0, r0, r0
    a8bc:	00000000 	andeq	r0, r0, r0
    a8c0:	00000000 	andeq	r0, r0, r0
    a8c4:	00000000 	andeq	r0, r0, r0
    a8c8:	00000000 	andeq	r0, r0, r0
    a8cc:	00000000 	andeq	r0, r0, r0
    a8d0:	00000000 	andeq	r0, r0, r0
    a8d4:	00000000 	andeq	r0, r0, r0
    a8d8:	00000000 	andeq	r0, r0, r0
    a8dc:	00000000 	andeq	r0, r0, r0
    a8e0:	00000000 	andeq	r0, r0, r0
    a8e4:	00000000 	andeq	r0, r0, r0
    a8e8:	00000000 	andeq	r0, r0, r0
    a8ec:	00000000 	andeq	r0, r0, r0
    a8f0:	00000000 	andeq	r0, r0, r0
    a8f4:	00000000 	andeq	r0, r0, r0
    a8f8:	00000000 	andeq	r0, r0, r0
    a8fc:	00000000 	andeq	r0, r0, r0
    a900:	00000000 	andeq	r0, r0, r0
    a904:	00000000 	andeq	r0, r0, r0
    a908:	00000000 	andeq	r0, r0, r0
    a90c:	00000000 	andeq	r0, r0, r0
    a910:	00000000 	andeq	r0, r0, r0
    a914:	00000000 	andeq	r0, r0, r0
    a918:	00000000 	andeq	r0, r0, r0
    a91c:	00000000 	andeq	r0, r0, r0
    a920:	00000000 	andeq	r0, r0, r0
    a924:	00000000 	andeq	r0, r0, r0
    a928:	00000000 	andeq	r0, r0, r0
    a92c:	00000000 	andeq	r0, r0, r0
    a930:	00000000 	andeq	r0, r0, r0
    a934:	00000000 	andeq	r0, r0, r0
    a938:	00000000 	andeq	r0, r0, r0
    a93c:	00000000 	andeq	r0, r0, r0
    a940:	00000000 	andeq	r0, r0, r0
    a944:	00000000 	andeq	r0, r0, r0
    a948:	00000000 	andeq	r0, r0, r0
    a94c:	00000000 	andeq	r0, r0, r0
    a950:	00000000 	andeq	r0, r0, r0
    a954:	00000000 	andeq	r0, r0, r0
    a958:	00000000 	andeq	r0, r0, r0
    a95c:	00000000 	andeq	r0, r0, r0
    a960:	00000000 	andeq	r0, r0, r0
    a964:	00000000 	andeq	r0, r0, r0
    a968:	00000000 	andeq	r0, r0, r0
    a96c:	00000000 	andeq	r0, r0, r0
    a970:	00000000 	andeq	r0, r0, r0
    a974:	00000000 	andeq	r0, r0, r0
    a978:	00000000 	andeq	r0, r0, r0
    a97c:	00000000 	andeq	r0, r0, r0
    a980:	00000000 	andeq	r0, r0, r0
    a984:	00000000 	andeq	r0, r0, r0
    a988:	00000000 	andeq	r0, r0, r0
    a98c:	00000000 	andeq	r0, r0, r0
    a990:	00000000 	andeq	r0, r0, r0
    a994:	00000000 	andeq	r0, r0, r0
    a998:	00000000 	andeq	r0, r0, r0
    a99c:	00000000 	andeq	r0, r0, r0
    a9a0:	00000000 	andeq	r0, r0, r0
    a9a4:	00000000 	andeq	r0, r0, r0
    a9a8:	00000000 	andeq	r0, r0, r0
    a9ac:	00000000 	andeq	r0, r0, r0
    a9b0:	00000000 	andeq	r0, r0, r0
    a9b4:	00000000 	andeq	r0, r0, r0
    a9b8:	00000000 	andeq	r0, r0, r0
    a9bc:	00000000 	andeq	r0, r0, r0
    a9c0:	00000000 	andeq	r0, r0, r0
    a9c4:	00000000 	andeq	r0, r0, r0
    a9c8:	00000000 	andeq	r0, r0, r0
    a9cc:	00000000 	andeq	r0, r0, r0
    a9d0:	00000000 	andeq	r0, r0, r0
    a9d4:	00000000 	andeq	r0, r0, r0
    a9d8:	00000000 	andeq	r0, r0, r0
    a9dc:	00000000 	andeq	r0, r0, r0
    a9e0:	00000000 	andeq	r0, r0, r0
    a9e4:	00000000 	andeq	r0, r0, r0
    a9e8:	00000000 	andeq	r0, r0, r0
    a9ec:	00000000 	andeq	r0, r0, r0
    a9f0:	00000000 	andeq	r0, r0, r0
    a9f4:	00000000 	andeq	r0, r0, r0
    a9f8:	00000000 	andeq	r0, r0, r0
    a9fc:	00000000 	andeq	r0, r0, r0
    aa00:	00000000 	andeq	r0, r0, r0
    aa04:	00000000 	andeq	r0, r0, r0
    aa08:	00000000 	andeq	r0, r0, r0
    aa0c:	00000000 	andeq	r0, r0, r0
    aa10:	00000000 	andeq	r0, r0, r0
    aa14:	00000000 	andeq	r0, r0, r0
    aa18:	00000000 	andeq	r0, r0, r0
    aa1c:	00000000 	andeq	r0, r0, r0
    aa20:	00000000 	andeq	r0, r0, r0
    aa24:	00000000 	andeq	r0, r0, r0
    aa28:	00000000 	andeq	r0, r0, r0
    aa2c:	00000000 	andeq	r0, r0, r0
    aa30:	00000000 	andeq	r0, r0, r0
    aa34:	00000000 	andeq	r0, r0, r0
    aa38:	00000000 	andeq	r0, r0, r0
    aa3c:	00000000 	andeq	r0, r0, r0
    aa40:	00000000 	andeq	r0, r0, r0
    aa44:	00000000 	andeq	r0, r0, r0
    aa48:	00000000 	andeq	r0, r0, r0
    aa4c:	00000000 	andeq	r0, r0, r0
    aa50:	00000000 	andeq	r0, r0, r0
    aa54:	00000000 	andeq	r0, r0, r0
    aa58:	00000000 	andeq	r0, r0, r0
    aa5c:	00000000 	andeq	r0, r0, r0
    aa60:	00000000 	andeq	r0, r0, r0
    aa64:	00000000 	andeq	r0, r0, r0
    aa68:	00000000 	andeq	r0, r0, r0
    aa6c:	00000000 	andeq	r0, r0, r0
    aa70:	00000000 	andeq	r0, r0, r0
    aa74:	00000000 	andeq	r0, r0, r0
    aa78:	00000000 	andeq	r0, r0, r0
    aa7c:	00000000 	andeq	r0, r0, r0
    aa80:	00000000 	andeq	r0, r0, r0
    aa84:	00000000 	andeq	r0, r0, r0
    aa88:	00000000 	andeq	r0, r0, r0
    aa8c:	00000000 	andeq	r0, r0, r0
    aa90:	00000000 	andeq	r0, r0, r0
    aa94:	00000000 	andeq	r0, r0, r0
    aa98:	00000000 	andeq	r0, r0, r0
    aa9c:	00000000 	andeq	r0, r0, r0
    aaa0:	00000000 	andeq	r0, r0, r0
    aaa4:	00000000 	andeq	r0, r0, r0
    aaa8:	00000000 	andeq	r0, r0, r0
    aaac:	00000000 	andeq	r0, r0, r0
    aab0:	00000000 	andeq	r0, r0, r0
    aab4:	00000000 	andeq	r0, r0, r0
    aab8:	00000000 	andeq	r0, r0, r0
    aabc:	00000000 	andeq	r0, r0, r0
    aac0:	00000000 	andeq	r0, r0, r0
    aac4:	00000000 	andeq	r0, r0, r0
    aac8:	00000000 	andeq	r0, r0, r0
    aacc:	00000000 	andeq	r0, r0, r0
    aad0:	00000000 	andeq	r0, r0, r0
    aad4:	00000000 	andeq	r0, r0, r0
    aad8:	00000000 	andeq	r0, r0, r0
    aadc:	00000000 	andeq	r0, r0, r0
    aae0:	00000000 	andeq	r0, r0, r0
    aae4:	00000000 	andeq	r0, r0, r0
    aae8:	00000000 	andeq	r0, r0, r0
    aaec:	00000000 	andeq	r0, r0, r0
    aaf0:	00000000 	andeq	r0, r0, r0
    aaf4:	00000000 	andeq	r0, r0, r0
    aaf8:	00000000 	andeq	r0, r0, r0
    aafc:	00000000 	andeq	r0, r0, r0
    ab00:	00000000 	andeq	r0, r0, r0
    ab04:	00000000 	andeq	r0, r0, r0
    ab08:	00000000 	andeq	r0, r0, r0
    ab0c:	00000000 	andeq	r0, r0, r0
    ab10:	00000000 	andeq	r0, r0, r0
    ab14:	00000000 	andeq	r0, r0, r0
    ab18:	00000000 	andeq	r0, r0, r0
    ab1c:	00000000 	andeq	r0, r0, r0
    ab20:	00000000 	andeq	r0, r0, r0
    ab24:	00000000 	andeq	r0, r0, r0
    ab28:	00000000 	andeq	r0, r0, r0
    ab2c:	00000000 	andeq	r0, r0, r0
    ab30:	00000000 	andeq	r0, r0, r0
    ab34:	00000000 	andeq	r0, r0, r0
    ab38:	00000000 	andeq	r0, r0, r0
    ab3c:	00000000 	andeq	r0, r0, r0
    ab40:	00000000 	andeq	r0, r0, r0
    ab44:	00000000 	andeq	r0, r0, r0
    ab48:	00000000 	andeq	r0, r0, r0
    ab4c:	00000000 	andeq	r0, r0, r0
    ab50:	00000000 	andeq	r0, r0, r0
    ab54:	00000000 	andeq	r0, r0, r0
    ab58:	00000000 	andeq	r0, r0, r0
    ab5c:	00000000 	andeq	r0, r0, r0
    ab60:	00000000 	andeq	r0, r0, r0
    ab64:	00000000 	andeq	r0, r0, r0
    ab68:	00000000 	andeq	r0, r0, r0
    ab6c:	00000000 	andeq	r0, r0, r0
    ab70:	00000000 	andeq	r0, r0, r0
    ab74:	00000000 	andeq	r0, r0, r0
    ab78:	00000000 	andeq	r0, r0, r0
    ab7c:	00000000 	andeq	r0, r0, r0
    ab80:	00000000 	andeq	r0, r0, r0
    ab84:	00000000 	andeq	r0, r0, r0
    ab88:	00000000 	andeq	r0, r0, r0
    ab8c:	00000000 	andeq	r0, r0, r0
    ab90:	00000000 	andeq	r0, r0, r0
    ab94:	00000000 	andeq	r0, r0, r0
    ab98:	00000000 	andeq	r0, r0, r0
    ab9c:	00000000 	andeq	r0, r0, r0
    aba0:	00000000 	andeq	r0, r0, r0
    aba4:	00000000 	andeq	r0, r0, r0
    aba8:	00000000 	andeq	r0, r0, r0
    abac:	00000000 	andeq	r0, r0, r0
    abb0:	00000000 	andeq	r0, r0, r0
    abb4:	00000000 	andeq	r0, r0, r0
    abb8:	00000000 	andeq	r0, r0, r0
    abbc:	00000000 	andeq	r0, r0, r0
    abc0:	00000000 	andeq	r0, r0, r0
    abc4:	00000000 	andeq	r0, r0, r0
    abc8:	00000000 	andeq	r0, r0, r0
    abcc:	00000000 	andeq	r0, r0, r0
    abd0:	00000000 	andeq	r0, r0, r0
    abd4:	00000000 	andeq	r0, r0, r0
    abd8:	00000000 	andeq	r0, r0, r0
    abdc:	00000000 	andeq	r0, r0, r0
    abe0:	00000000 	andeq	r0, r0, r0
    abe4:	00000000 	andeq	r0, r0, r0
    abe8:	00000000 	andeq	r0, r0, r0
    abec:	00000000 	andeq	r0, r0, r0
    abf0:	00000000 	andeq	r0, r0, r0
    abf4:	00000000 	andeq	r0, r0, r0
    abf8:	00000000 	andeq	r0, r0, r0
    abfc:	00000000 	andeq	r0, r0, r0
    ac00:	00000000 	andeq	r0, r0, r0
    ac04:	00000000 	andeq	r0, r0, r0
    ac08:	00000000 	andeq	r0, r0, r0
    ac0c:	00000000 	andeq	r0, r0, r0
    ac10:	00000000 	andeq	r0, r0, r0
    ac14:	00000000 	andeq	r0, r0, r0
    ac18:	00000000 	andeq	r0, r0, r0
    ac1c:	00000000 	andeq	r0, r0, r0
    ac20:	00000000 	andeq	r0, r0, r0
    ac24:	00000000 	andeq	r0, r0, r0
    ac28:	00000000 	andeq	r0, r0, r0
    ac2c:	00000000 	andeq	r0, r0, r0
    ac30:	00000000 	andeq	r0, r0, r0
    ac34:	00000000 	andeq	r0, r0, r0
    ac38:	00000000 	andeq	r0, r0, r0
    ac3c:	00000000 	andeq	r0, r0, r0
    ac40:	00000000 	andeq	r0, r0, r0
    ac44:	00000000 	andeq	r0, r0, r0
    ac48:	00000000 	andeq	r0, r0, r0
    ac4c:	00000000 	andeq	r0, r0, r0
    ac50:	00000000 	andeq	r0, r0, r0
    ac54:	00000000 	andeq	r0, r0, r0
    ac58:	00000000 	andeq	r0, r0, r0
    ac5c:	00000000 	andeq	r0, r0, r0
    ac60:	00000000 	andeq	r0, r0, r0
    ac64:	00000000 	andeq	r0, r0, r0
    ac68:	00000000 	andeq	r0, r0, r0
    ac6c:	00000000 	andeq	r0, r0, r0
    ac70:	00000000 	andeq	r0, r0, r0
    ac74:	00000000 	andeq	r0, r0, r0
    ac78:	00000000 	andeq	r0, r0, r0
    ac7c:	00000000 	andeq	r0, r0, r0
    ac80:	00000000 	andeq	r0, r0, r0
    ac84:	00000000 	andeq	r0, r0, r0
    ac88:	00000000 	andeq	r0, r0, r0
    ac8c:	00000000 	andeq	r0, r0, r0
    ac90:	00000000 	andeq	r0, r0, r0
    ac94:	00000000 	andeq	r0, r0, r0
    ac98:	00000000 	andeq	r0, r0, r0
    ac9c:	00000000 	andeq	r0, r0, r0
    aca0:	00000000 	andeq	r0, r0, r0
    aca4:	00000000 	andeq	r0, r0, r0
    aca8:	00000000 	andeq	r0, r0, r0
    acac:	00000000 	andeq	r0, r0, r0
    acb0:	00000000 	andeq	r0, r0, r0
    acb4:	00000000 	andeq	r0, r0, r0
    acb8:	00000000 	andeq	r0, r0, r0
    acbc:	00000000 	andeq	r0, r0, r0
    acc0:	00000000 	andeq	r0, r0, r0
    acc4:	00000000 	andeq	r0, r0, r0
    acc8:	00000000 	andeq	r0, r0, r0
    accc:	00000000 	andeq	r0, r0, r0
    acd0:	00000000 	andeq	r0, r0, r0
    acd4:	00000000 	andeq	r0, r0, r0
    acd8:	00000000 	andeq	r0, r0, r0
    acdc:	00000000 	andeq	r0, r0, r0
    ace0:	00000000 	andeq	r0, r0, r0
    ace4:	00000000 	andeq	r0, r0, r0
    ace8:	00000000 	andeq	r0, r0, r0
    acec:	00000000 	andeq	r0, r0, r0
    acf0:	00000000 	andeq	r0, r0, r0
    acf4:	00000000 	andeq	r0, r0, r0
    acf8:	00000000 	andeq	r0, r0, r0
    acfc:	00000000 	andeq	r0, r0, r0
    ad00:	00000000 	andeq	r0, r0, r0
    ad04:	00000000 	andeq	r0, r0, r0
    ad08:	00000000 	andeq	r0, r0, r0
    ad0c:	00000000 	andeq	r0, r0, r0
    ad10:	00000000 	andeq	r0, r0, r0
    ad14:	00000000 	andeq	r0, r0, r0
    ad18:	00000000 	andeq	r0, r0, r0
    ad1c:	00000000 	andeq	r0, r0, r0
    ad20:	00000000 	andeq	r0, r0, r0
    ad24:	00000000 	andeq	r0, r0, r0
    ad28:	00000000 	andeq	r0, r0, r0
    ad2c:	00000000 	andeq	r0, r0, r0
    ad30:	00000000 	andeq	r0, r0, r0
    ad34:	00000000 	andeq	r0, r0, r0
    ad38:	00000000 	andeq	r0, r0, r0
    ad3c:	00000000 	andeq	r0, r0, r0
    ad40:	00000000 	andeq	r0, r0, r0
    ad44:	00000000 	andeq	r0, r0, r0
    ad48:	00000000 	andeq	r0, r0, r0
    ad4c:	00000000 	andeq	r0, r0, r0
    ad50:	00000000 	andeq	r0, r0, r0
    ad54:	00000000 	andeq	r0, r0, r0
    ad58:	00000000 	andeq	r0, r0, r0
    ad5c:	00000000 	andeq	r0, r0, r0
    ad60:	00000000 	andeq	r0, r0, r0
    ad64:	00000000 	andeq	r0, r0, r0
    ad68:	00000000 	andeq	r0, r0, r0
    ad6c:	00000000 	andeq	r0, r0, r0
    ad70:	00000000 	andeq	r0, r0, r0
    ad74:	00000000 	andeq	r0, r0, r0
    ad78:	00000000 	andeq	r0, r0, r0
    ad7c:	00000000 	andeq	r0, r0, r0
    ad80:	00000000 	andeq	r0, r0, r0
    ad84:	00000000 	andeq	r0, r0, r0
    ad88:	00000000 	andeq	r0, r0, r0
    ad8c:	00000000 	andeq	r0, r0, r0
    ad90:	00000000 	andeq	r0, r0, r0
    ad94:	00000000 	andeq	r0, r0, r0
    ad98:	00000000 	andeq	r0, r0, r0
    ad9c:	00000000 	andeq	r0, r0, r0
    ada0:	00000000 	andeq	r0, r0, r0
    ada4:	00000000 	andeq	r0, r0, r0
    ada8:	00000000 	andeq	r0, r0, r0
    adac:	00000000 	andeq	r0, r0, r0
    adb0:	00000000 	andeq	r0, r0, r0
    adb4:	00000000 	andeq	r0, r0, r0
    adb8:	00000000 	andeq	r0, r0, r0
    adbc:	00000000 	andeq	r0, r0, r0
    adc0:	00000000 	andeq	r0, r0, r0
    adc4:	00000000 	andeq	r0, r0, r0
    adc8:	00000000 	andeq	r0, r0, r0
    adcc:	00000000 	andeq	r0, r0, r0
    add0:	00000000 	andeq	r0, r0, r0
    add4:	00000000 	andeq	r0, r0, r0
    add8:	00000000 	andeq	r0, r0, r0
    addc:	00000000 	andeq	r0, r0, r0
    ade0:	00000000 	andeq	r0, r0, r0
    ade4:	00000000 	andeq	r0, r0, r0
    ade8:	00000000 	andeq	r0, r0, r0
    adec:	00000000 	andeq	r0, r0, r0
    adf0:	00000000 	andeq	r0, r0, r0
    adf4:	00000000 	andeq	r0, r0, r0
    adf8:	00000000 	andeq	r0, r0, r0
    adfc:	00000000 	andeq	r0, r0, r0
    ae00:	00000000 	andeq	r0, r0, r0
    ae04:	00000000 	andeq	r0, r0, r0
    ae08:	00000000 	andeq	r0, r0, r0
    ae0c:	00000000 	andeq	r0, r0, r0
    ae10:	00000000 	andeq	r0, r0, r0
    ae14:	00000000 	andeq	r0, r0, r0
    ae18:	00000000 	andeq	r0, r0, r0
    ae1c:	00000000 	andeq	r0, r0, r0
    ae20:	00000000 	andeq	r0, r0, r0
    ae24:	00000000 	andeq	r0, r0, r0
    ae28:	00000000 	andeq	r0, r0, r0
    ae2c:	00000000 	andeq	r0, r0, r0
    ae30:	00000000 	andeq	r0, r0, r0
    ae34:	00000000 	andeq	r0, r0, r0
    ae38:	00000000 	andeq	r0, r0, r0
    ae3c:	00000000 	andeq	r0, r0, r0
    ae40:	00000000 	andeq	r0, r0, r0
    ae44:	00000000 	andeq	r0, r0, r0
    ae48:	00000000 	andeq	r0, r0, r0
    ae4c:	00000000 	andeq	r0, r0, r0
    ae50:	00000000 	andeq	r0, r0, r0
    ae54:	00000000 	andeq	r0, r0, r0
    ae58:	00000000 	andeq	r0, r0, r0
    ae5c:	00000000 	andeq	r0, r0, r0
    ae60:	00000000 	andeq	r0, r0, r0
    ae64:	00000000 	andeq	r0, r0, r0
    ae68:	00000000 	andeq	r0, r0, r0
    ae6c:	00000000 	andeq	r0, r0, r0
    ae70:	00000000 	andeq	r0, r0, r0
    ae74:	00000000 	andeq	r0, r0, r0
    ae78:	00000000 	andeq	r0, r0, r0
    ae7c:	00000000 	andeq	r0, r0, r0
    ae80:	00000000 	andeq	r0, r0, r0
    ae84:	00000000 	andeq	r0, r0, r0
    ae88:	00000000 	andeq	r0, r0, r0
    ae8c:	00000000 	andeq	r0, r0, r0
    ae90:	00000000 	andeq	r0, r0, r0
    ae94:	00000000 	andeq	r0, r0, r0
    ae98:	00000000 	andeq	r0, r0, r0
    ae9c:	00000000 	andeq	r0, r0, r0
    aea0:	00000000 	andeq	r0, r0, r0
    aea4:	00000000 	andeq	r0, r0, r0
    aea8:	00000000 	andeq	r0, r0, r0
    aeac:	00000000 	andeq	r0, r0, r0
    aeb0:	00000000 	andeq	r0, r0, r0
    aeb4:	00000000 	andeq	r0, r0, r0
    aeb8:	00000000 	andeq	r0, r0, r0
    aebc:	00000000 	andeq	r0, r0, r0
    aec0:	00000000 	andeq	r0, r0, r0
    aec4:	00000000 	andeq	r0, r0, r0
    aec8:	00000000 	andeq	r0, r0, r0
    aecc:	00000000 	andeq	r0, r0, r0
    aed0:	00000000 	andeq	r0, r0, r0
    aed4:	00000000 	andeq	r0, r0, r0
    aed8:	00000000 	andeq	r0, r0, r0
    aedc:	00000000 	andeq	r0, r0, r0
    aee0:	00000000 	andeq	r0, r0, r0
    aee4:	00000000 	andeq	r0, r0, r0
    aee8:	00000000 	andeq	r0, r0, r0
    aeec:	00000000 	andeq	r0, r0, r0
    aef0:	00000000 	andeq	r0, r0, r0
    aef4:	00000000 	andeq	r0, r0, r0
    aef8:	00000000 	andeq	r0, r0, r0
    aefc:	00000000 	andeq	r0, r0, r0
    af00:	00000000 	andeq	r0, r0, r0
    af04:	00000000 	andeq	r0, r0, r0
    af08:	00000000 	andeq	r0, r0, r0
    af0c:	00000000 	andeq	r0, r0, r0
    af10:	00000000 	andeq	r0, r0, r0
    af14:	00000000 	andeq	r0, r0, r0
    af18:	00000000 	andeq	r0, r0, r0
    af1c:	00000000 	andeq	r0, r0, r0
    af20:	00000000 	andeq	r0, r0, r0
    af24:	00000000 	andeq	r0, r0, r0
    af28:	00000000 	andeq	r0, r0, r0
    af2c:	00000000 	andeq	r0, r0, r0
    af30:	00000000 	andeq	r0, r0, r0
    af34:	00000000 	andeq	r0, r0, r0
    af38:	00000000 	andeq	r0, r0, r0
    af3c:	00000000 	andeq	r0, r0, r0
    af40:	00000000 	andeq	r0, r0, r0
    af44:	00000000 	andeq	r0, r0, r0
    af48:	00000000 	andeq	r0, r0, r0
    af4c:	00000000 	andeq	r0, r0, r0
    af50:	00000000 	andeq	r0, r0, r0
    af54:	00000000 	andeq	r0, r0, r0
    af58:	00000000 	andeq	r0, r0, r0
    af5c:	00000000 	andeq	r0, r0, r0
    af60:	00000000 	andeq	r0, r0, r0
    af64:	00000000 	andeq	r0, r0, r0
    af68:	00000000 	andeq	r0, r0, r0
    af6c:	00000000 	andeq	r0, r0, r0
    af70:	00000000 	andeq	r0, r0, r0
    af74:	00000000 	andeq	r0, r0, r0
    af78:	00000000 	andeq	r0, r0, r0
    af7c:	00000000 	andeq	r0, r0, r0
    af80:	00000000 	andeq	r0, r0, r0
    af84:	00000000 	andeq	r0, r0, r0
    af88:	00000000 	andeq	r0, r0, r0
    af8c:	00000000 	andeq	r0, r0, r0
    af90:	00000000 	andeq	r0, r0, r0
    af94:	00000000 	andeq	r0, r0, r0
    af98:	00000000 	andeq	r0, r0, r0
    af9c:	00000000 	andeq	r0, r0, r0
    afa0:	00000000 	andeq	r0, r0, r0
    afa4:	00000000 	andeq	r0, r0, r0
    afa8:	00000000 	andeq	r0, r0, r0
    afac:	00000000 	andeq	r0, r0, r0
    afb0:	00000000 	andeq	r0, r0, r0
    afb4:	00000000 	andeq	r0, r0, r0
    afb8:	00000000 	andeq	r0, r0, r0
    afbc:	00000000 	andeq	r0, r0, r0
    afc0:	00000000 	andeq	r0, r0, r0
    afc4:	00000000 	andeq	r0, r0, r0
    afc8:	00000000 	andeq	r0, r0, r0
    afcc:	00000000 	andeq	r0, r0, r0
    afd0:	00000000 	andeq	r0, r0, r0
    afd4:	00000000 	andeq	r0, r0, r0
    afd8:	00000000 	andeq	r0, r0, r0
    afdc:	00000000 	andeq	r0, r0, r0
    afe0:	00000000 	andeq	r0, r0, r0
    afe4:	00000000 	andeq	r0, r0, r0
    afe8:	00000000 	andeq	r0, r0, r0
    afec:	00000000 	andeq	r0, r0, r0
    aff0:	00000000 	andeq	r0, r0, r0
    aff4:	00000000 	andeq	r0, r0, r0
    aff8:	00000000 	andeq	r0, r0, r0
    affc:	00000000 	andeq	r0, r0, r0
    b000:	00000000 	andeq	r0, r0, r0
    b004:	00000000 	andeq	r0, r0, r0
    b008:	00000000 	andeq	r0, r0, r0
    b00c:	00000000 	andeq	r0, r0, r0
    b010:	00000000 	andeq	r0, r0, r0
    b014:	00000000 	andeq	r0, r0, r0
    b018:	00000000 	andeq	r0, r0, r0
    b01c:	00000000 	andeq	r0, r0, r0
    b020:	00000000 	andeq	r0, r0, r0
    b024:	00000000 	andeq	r0, r0, r0
    b028:	00000000 	andeq	r0, r0, r0
    b02c:	00000000 	andeq	r0, r0, r0
    b030:	00000000 	andeq	r0, r0, r0
    b034:	00000000 	andeq	r0, r0, r0
    b038:	00000000 	andeq	r0, r0, r0
    b03c:	00000000 	andeq	r0, r0, r0
    b040:	00000000 	andeq	r0, r0, r0
    b044:	00000000 	andeq	r0, r0, r0
    b048:	00000000 	andeq	r0, r0, r0
    b04c:	00000000 	andeq	r0, r0, r0
    b050:	00000000 	andeq	r0, r0, r0
    b054:	00000000 	andeq	r0, r0, r0
    b058:	00000000 	andeq	r0, r0, r0
    b05c:	00000000 	andeq	r0, r0, r0
    b060:	00000000 	andeq	r0, r0, r0
    b064:	00000000 	andeq	r0, r0, r0
    b068:	00000000 	andeq	r0, r0, r0
    b06c:	00000000 	andeq	r0, r0, r0
    b070:	00000000 	andeq	r0, r0, r0
    b074:	00000000 	andeq	r0, r0, r0
    b078:	00000000 	andeq	r0, r0, r0
    b07c:	00000000 	andeq	r0, r0, r0
    b080:	00000000 	andeq	r0, r0, r0
    b084:	00000000 	andeq	r0, r0, r0
    b088:	00000000 	andeq	r0, r0, r0
    b08c:	00000000 	andeq	r0, r0, r0
    b090:	00000000 	andeq	r0, r0, r0
    b094:	00000000 	andeq	r0, r0, r0
    b098:	00000000 	andeq	r0, r0, r0
    b09c:	00000000 	andeq	r0, r0, r0
    b0a0:	00000000 	andeq	r0, r0, r0
    b0a4:	00000000 	andeq	r0, r0, r0
    b0a8:	00000000 	andeq	r0, r0, r0
    b0ac:	00000000 	andeq	r0, r0, r0
    b0b0:	00000000 	andeq	r0, r0, r0
    b0b4:	00000000 	andeq	r0, r0, r0
    b0b8:	00000000 	andeq	r0, r0, r0
    b0bc:	00000000 	andeq	r0, r0, r0
    b0c0:	00000000 	andeq	r0, r0, r0
    b0c4:	00000000 	andeq	r0, r0, r0
    b0c8:	00000000 	andeq	r0, r0, r0
    b0cc:	00000000 	andeq	r0, r0, r0
    b0d0:	00000000 	andeq	r0, r0, r0
    b0d4:	00000000 	andeq	r0, r0, r0
    b0d8:	00000000 	andeq	r0, r0, r0
    b0dc:	00000000 	andeq	r0, r0, r0
    b0e0:	00000000 	andeq	r0, r0, r0
    b0e4:	00000000 	andeq	r0, r0, r0
    b0e8:	00000000 	andeq	r0, r0, r0
    b0ec:	00000000 	andeq	r0, r0, r0
    b0f0:	00000000 	andeq	r0, r0, r0
    b0f4:	00000000 	andeq	r0, r0, r0
    b0f8:	00000000 	andeq	r0, r0, r0
    b0fc:	00000000 	andeq	r0, r0, r0
    b100:	00000000 	andeq	r0, r0, r0
    b104:	00000000 	andeq	r0, r0, r0
    b108:	00000000 	andeq	r0, r0, r0
    b10c:	00000000 	andeq	r0, r0, r0
    b110:	00000000 	andeq	r0, r0, r0
    b114:	00000000 	andeq	r0, r0, r0
    b118:	00000000 	andeq	r0, r0, r0
    b11c:	00000000 	andeq	r0, r0, r0
    b120:	00000000 	andeq	r0, r0, r0
    b124:	00000000 	andeq	r0, r0, r0
    b128:	00000000 	andeq	r0, r0, r0
    b12c:	00000000 	andeq	r0, r0, r0
    b130:	00000000 	andeq	r0, r0, r0
    b134:	00000000 	andeq	r0, r0, r0
    b138:	00000000 	andeq	r0, r0, r0
    b13c:	00000000 	andeq	r0, r0, r0
    b140:	00000000 	andeq	r0, r0, r0
    b144:	00000000 	andeq	r0, r0, r0
    b148:	00000000 	andeq	r0, r0, r0
    b14c:	00000000 	andeq	r0, r0, r0
    b150:	00000000 	andeq	r0, r0, r0
    b154:	00000000 	andeq	r0, r0, r0
    b158:	00000000 	andeq	r0, r0, r0
    b15c:	00000000 	andeq	r0, r0, r0
    b160:	00000000 	andeq	r0, r0, r0
    b164:	00000000 	andeq	r0, r0, r0
    b168:	00000000 	andeq	r0, r0, r0
    b16c:	00000000 	andeq	r0, r0, r0
    b170:	00000000 	andeq	r0, r0, r0
    b174:	00000000 	andeq	r0, r0, r0
    b178:	00000000 	andeq	r0, r0, r0
    b17c:	00000000 	andeq	r0, r0, r0
    b180:	00000000 	andeq	r0, r0, r0
    b184:	00000000 	andeq	r0, r0, r0
    b188:	00000000 	andeq	r0, r0, r0
    b18c:	00000000 	andeq	r0, r0, r0
    b190:	00000000 	andeq	r0, r0, r0
    b194:	00000000 	andeq	r0, r0, r0
    b198:	00000000 	andeq	r0, r0, r0
    b19c:	00000000 	andeq	r0, r0, r0
    b1a0:	00000000 	andeq	r0, r0, r0
    b1a4:	00000000 	andeq	r0, r0, r0
    b1a8:	00000000 	andeq	r0, r0, r0
    b1ac:	00000000 	andeq	r0, r0, r0
    b1b0:	00000000 	andeq	r0, r0, r0
    b1b4:	00000000 	andeq	r0, r0, r0
    b1b8:	00000000 	andeq	r0, r0, r0
    b1bc:	00000000 	andeq	r0, r0, r0
    b1c0:	00000000 	andeq	r0, r0, r0
    b1c4:	00000000 	andeq	r0, r0, r0
    b1c8:	00000000 	andeq	r0, r0, r0
    b1cc:	00000000 	andeq	r0, r0, r0
    b1d0:	00000000 	andeq	r0, r0, r0
    b1d4:	00000000 	andeq	r0, r0, r0
    b1d8:	00000000 	andeq	r0, r0, r0
    b1dc:	00000000 	andeq	r0, r0, r0
    b1e0:	00000000 	andeq	r0, r0, r0
    b1e4:	00000000 	andeq	r0, r0, r0
    b1e8:	00000000 	andeq	r0, r0, r0
    b1ec:	00000000 	andeq	r0, r0, r0
    b1f0:	00000000 	andeq	r0, r0, r0
    b1f4:	00000000 	andeq	r0, r0, r0
    b1f8:	00000000 	andeq	r0, r0, r0
    b1fc:	00000000 	andeq	r0, r0, r0
    b200:	00000000 	andeq	r0, r0, r0
    b204:	00000000 	andeq	r0, r0, r0
    b208:	00000000 	andeq	r0, r0, r0
    b20c:	00000000 	andeq	r0, r0, r0
    b210:	00000000 	andeq	r0, r0, r0
    b214:	00000000 	andeq	r0, r0, r0
    b218:	00000000 	andeq	r0, r0, r0
    b21c:	00000000 	andeq	r0, r0, r0
    b220:	00000000 	andeq	r0, r0, r0
    b224:	00000000 	andeq	r0, r0, r0
    b228:	00000000 	andeq	r0, r0, r0
    b22c:	00000000 	andeq	r0, r0, r0
    b230:	00000000 	andeq	r0, r0, r0
    b234:	00000000 	andeq	r0, r0, r0
    b238:	00000000 	andeq	r0, r0, r0
    b23c:	00000000 	andeq	r0, r0, r0
    b240:	00000000 	andeq	r0, r0, r0
    b244:	00000000 	andeq	r0, r0, r0
    b248:	00000000 	andeq	r0, r0, r0
    b24c:	00000000 	andeq	r0, r0, r0
    b250:	00000000 	andeq	r0, r0, r0
    b254:	00000000 	andeq	r0, r0, r0
    b258:	00000000 	andeq	r0, r0, r0
    b25c:	00000000 	andeq	r0, r0, r0
    b260:	00000000 	andeq	r0, r0, r0
    b264:	00000000 	andeq	r0, r0, r0
    b268:	00000000 	andeq	r0, r0, r0
    b26c:	00000000 	andeq	r0, r0, r0
    b270:	00000000 	andeq	r0, r0, r0
    b274:	00000000 	andeq	r0, r0, r0
    b278:	00000000 	andeq	r0, r0, r0
    b27c:	00000000 	andeq	r0, r0, r0
    b280:	00000000 	andeq	r0, r0, r0
    b284:	00000000 	andeq	r0, r0, r0
    b288:	00000000 	andeq	r0, r0, r0
    b28c:	00000000 	andeq	r0, r0, r0
    b290:	00000000 	andeq	r0, r0, r0
    b294:	00000000 	andeq	r0, r0, r0
    b298:	00000000 	andeq	r0, r0, r0
    b29c:	00000000 	andeq	r0, r0, r0
    b2a0:	00000000 	andeq	r0, r0, r0
    b2a4:	00000000 	andeq	r0, r0, r0
    b2a8:	00000000 	andeq	r0, r0, r0
    b2ac:	00000000 	andeq	r0, r0, r0
    b2b0:	00000000 	andeq	r0, r0, r0
    b2b4:	00000000 	andeq	r0, r0, r0
    b2b8:	00000000 	andeq	r0, r0, r0
    b2bc:	00000000 	andeq	r0, r0, r0
    b2c0:	00000000 	andeq	r0, r0, r0
    b2c4:	00000000 	andeq	r0, r0, r0
    b2c8:	00000000 	andeq	r0, r0, r0
    b2cc:	00000000 	andeq	r0, r0, r0
    b2d0:	00000000 	andeq	r0, r0, r0
    b2d4:	00000000 	andeq	r0, r0, r0
    b2d8:	00000000 	andeq	r0, r0, r0
    b2dc:	00000000 	andeq	r0, r0, r0
    b2e0:	00000000 	andeq	r0, r0, r0
    b2e4:	00000000 	andeq	r0, r0, r0
    b2e8:	00000000 	andeq	r0, r0, r0
    b2ec:	00000000 	andeq	r0, r0, r0
    b2f0:	00000000 	andeq	r0, r0, r0
    b2f4:	00000000 	andeq	r0, r0, r0
    b2f8:	00000000 	andeq	r0, r0, r0
    b2fc:	00000000 	andeq	r0, r0, r0
    b300:	00000000 	andeq	r0, r0, r0
    b304:	00000000 	andeq	r0, r0, r0
    b308:	00000000 	andeq	r0, r0, r0
    b30c:	00000000 	andeq	r0, r0, r0
    b310:	00000000 	andeq	r0, r0, r0
    b314:	00000000 	andeq	r0, r0, r0
    b318:	00000000 	andeq	r0, r0, r0
    b31c:	00000000 	andeq	r0, r0, r0
    b320:	00000000 	andeq	r0, r0, r0
    b324:	00000000 	andeq	r0, r0, r0
    b328:	00000000 	andeq	r0, r0, r0
    b32c:	00000000 	andeq	r0, r0, r0
    b330:	00000000 	andeq	r0, r0, r0
    b334:	00000000 	andeq	r0, r0, r0
    b338:	00000000 	andeq	r0, r0, r0
    b33c:	00000000 	andeq	r0, r0, r0
    b340:	00000000 	andeq	r0, r0, r0
    b344:	00000000 	andeq	r0, r0, r0
    b348:	00000000 	andeq	r0, r0, r0
    b34c:	00000000 	andeq	r0, r0, r0
    b350:	00000000 	andeq	r0, r0, r0
    b354:	00000000 	andeq	r0, r0, r0
    b358:	00000000 	andeq	r0, r0, r0
    b35c:	00000000 	andeq	r0, r0, r0
    b360:	00000000 	andeq	r0, r0, r0
    b364:	00000000 	andeq	r0, r0, r0
    b368:	00000000 	andeq	r0, r0, r0
    b36c:	00000000 	andeq	r0, r0, r0
    b370:	00000000 	andeq	r0, r0, r0
    b374:	00000000 	andeq	r0, r0, r0
    b378:	00000000 	andeq	r0, r0, r0
    b37c:	00000000 	andeq	r0, r0, r0
    b380:	00000000 	andeq	r0, r0, r0
    b384:	00000000 	andeq	r0, r0, r0
    b388:	00000000 	andeq	r0, r0, r0
    b38c:	00000000 	andeq	r0, r0, r0
    b390:	00000000 	andeq	r0, r0, r0
    b394:	00000000 	andeq	r0, r0, r0
    b398:	00000000 	andeq	r0, r0, r0
    b39c:	00000000 	andeq	r0, r0, r0
    b3a0:	00000000 	andeq	r0, r0, r0
    b3a4:	00000000 	andeq	r0, r0, r0
    b3a8:	00000000 	andeq	r0, r0, r0
    b3ac:	00000000 	andeq	r0, r0, r0
    b3b0:	00000000 	andeq	r0, r0, r0
    b3b4:	00000000 	andeq	r0, r0, r0
    b3b8:	00000000 	andeq	r0, r0, r0
    b3bc:	00000000 	andeq	r0, r0, r0
    b3c0:	00000000 	andeq	r0, r0, r0
    b3c4:	00000000 	andeq	r0, r0, r0
    b3c8:	00000000 	andeq	r0, r0, r0
    b3cc:	00000000 	andeq	r0, r0, r0
    b3d0:	00000000 	andeq	r0, r0, r0
    b3d4:	00000000 	andeq	r0, r0, r0
    b3d8:	00000000 	andeq	r0, r0, r0
    b3dc:	00000000 	andeq	r0, r0, r0
    b3e0:	00000000 	andeq	r0, r0, r0
    b3e4:	00000000 	andeq	r0, r0, r0
    b3e8:	00000000 	andeq	r0, r0, r0
    b3ec:	00000000 	andeq	r0, r0, r0
    b3f0:	00000000 	andeq	r0, r0, r0
    b3f4:	00000000 	andeq	r0, r0, r0
    b3f8:	00000000 	andeq	r0, r0, r0
    b3fc:	00000000 	andeq	r0, r0, r0
    b400:	00000000 	andeq	r0, r0, r0
    b404:	00000000 	andeq	r0, r0, r0
    b408:	00000000 	andeq	r0, r0, r0
    b40c:	00000000 	andeq	r0, r0, r0
    b410:	00000000 	andeq	r0, r0, r0
    b414:	00000000 	andeq	r0, r0, r0
    b418:	00000000 	andeq	r0, r0, r0
    b41c:	00000000 	andeq	r0, r0, r0
    b420:	00000000 	andeq	r0, r0, r0
    b424:	00000000 	andeq	r0, r0, r0
    b428:	00000000 	andeq	r0, r0, r0
    b42c:	00000000 	andeq	r0, r0, r0
    b430:	00000000 	andeq	r0, r0, r0
    b434:	00000000 	andeq	r0, r0, r0
    b438:	00000000 	andeq	r0, r0, r0
    b43c:	00000000 	andeq	r0, r0, r0
    b440:	00000000 	andeq	r0, r0, r0
    b444:	00000000 	andeq	r0, r0, r0
    b448:	00000000 	andeq	r0, r0, r0
    b44c:	00000000 	andeq	r0, r0, r0
    b450:	00000000 	andeq	r0, r0, r0
    b454:	00000000 	andeq	r0, r0, r0
    b458:	00000000 	andeq	r0, r0, r0
    b45c:	00000000 	andeq	r0, r0, r0
    b460:	00000000 	andeq	r0, r0, r0
    b464:	00000000 	andeq	r0, r0, r0
    b468:	00000000 	andeq	r0, r0, r0
    b46c:	00000000 	andeq	r0, r0, r0
    b470:	00000000 	andeq	r0, r0, r0
    b474:	00000000 	andeq	r0, r0, r0
    b478:	00000000 	andeq	r0, r0, r0
    b47c:	00000000 	andeq	r0, r0, r0
    b480:	00000000 	andeq	r0, r0, r0
    b484:	00000000 	andeq	r0, r0, r0
    b488:	00000000 	andeq	r0, r0, r0
    b48c:	00000000 	andeq	r0, r0, r0
    b490:	00000000 	andeq	r0, r0, r0
    b494:	00000000 	andeq	r0, r0, r0
    b498:	00000000 	andeq	r0, r0, r0
    b49c:	00000000 	andeq	r0, r0, r0
    b4a0:	00000000 	andeq	r0, r0, r0
    b4a4:	00000000 	andeq	r0, r0, r0
    b4a8:	00000000 	andeq	r0, r0, r0
    b4ac:	00000000 	andeq	r0, r0, r0
    b4b0:	00000000 	andeq	r0, r0, r0
    b4b4:	00000000 	andeq	r0, r0, r0
    b4b8:	00000000 	andeq	r0, r0, r0
    b4bc:	00000000 	andeq	r0, r0, r0
    b4c0:	00000000 	andeq	r0, r0, r0
    b4c4:	00000000 	andeq	r0, r0, r0
    b4c8:	00000000 	andeq	r0, r0, r0
    b4cc:	00000000 	andeq	r0, r0, r0
    b4d0:	00000000 	andeq	r0, r0, r0
    b4d4:	00000000 	andeq	r0, r0, r0
    b4d8:	00000000 	andeq	r0, r0, r0
    b4dc:	00000000 	andeq	r0, r0, r0
    b4e0:	00000000 	andeq	r0, r0, r0
    b4e4:	00000000 	andeq	r0, r0, r0
    b4e8:	00000000 	andeq	r0, r0, r0
    b4ec:	00000000 	andeq	r0, r0, r0
    b4f0:	00000000 	andeq	r0, r0, r0
    b4f4:	00000000 	andeq	r0, r0, r0
    b4f8:	00000000 	andeq	r0, r0, r0
    b4fc:	00000000 	andeq	r0, r0, r0
    b500:	00000000 	andeq	r0, r0, r0
    b504:	00000000 	andeq	r0, r0, r0
    b508:	00000000 	andeq	r0, r0, r0
    b50c:	00000000 	andeq	r0, r0, r0
    b510:	00000000 	andeq	r0, r0, r0
    b514:	00000000 	andeq	r0, r0, r0
    b518:	00000000 	andeq	r0, r0, r0
    b51c:	00000000 	andeq	r0, r0, r0
    b520:	00000000 	andeq	r0, r0, r0
    b524:	00000000 	andeq	r0, r0, r0
    b528:	00000000 	andeq	r0, r0, r0
    b52c:	00000000 	andeq	r0, r0, r0
    b530:	00000000 	andeq	r0, r0, r0
    b534:	00000000 	andeq	r0, r0, r0
    b538:	00000000 	andeq	r0, r0, r0
    b53c:	00000000 	andeq	r0, r0, r0
    b540:	00000000 	andeq	r0, r0, r0
    b544:	00000000 	andeq	r0, r0, r0
    b548:	00000000 	andeq	r0, r0, r0
    b54c:	00000000 	andeq	r0, r0, r0
    b550:	00000000 	andeq	r0, r0, r0
    b554:	00000000 	andeq	r0, r0, r0
    b558:	00000000 	andeq	r0, r0, r0
    b55c:	00000000 	andeq	r0, r0, r0
    b560:	00000000 	andeq	r0, r0, r0
    b564:	00000000 	andeq	r0, r0, r0
    b568:	00000000 	andeq	r0, r0, r0
    b56c:	00000000 	andeq	r0, r0, r0
    b570:	00000000 	andeq	r0, r0, r0
    b574:	00000000 	andeq	r0, r0, r0
    b578:	00000000 	andeq	r0, r0, r0
    b57c:	00000000 	andeq	r0, r0, r0
    b580:	00000000 	andeq	r0, r0, r0
    b584:	00000000 	andeq	r0, r0, r0
    b588:	00000000 	andeq	r0, r0, r0
    b58c:	00000000 	andeq	r0, r0, r0
    b590:	00000000 	andeq	r0, r0, r0
    b594:	00000000 	andeq	r0, r0, r0
    b598:	00000000 	andeq	r0, r0, r0
    b59c:	00000000 	andeq	r0, r0, r0
    b5a0:	00000000 	andeq	r0, r0, r0
    b5a4:	00000000 	andeq	r0, r0, r0
    b5a8:	00000000 	andeq	r0, r0, r0
    b5ac:	00000000 	andeq	r0, r0, r0
    b5b0:	00000000 	andeq	r0, r0, r0
    b5b4:	00000000 	andeq	r0, r0, r0
    b5b8:	00000000 	andeq	r0, r0, r0
    b5bc:	00000000 	andeq	r0, r0, r0
    b5c0:	00000000 	andeq	r0, r0, r0
    b5c4:	00000000 	andeq	r0, r0, r0
    b5c8:	00000000 	andeq	r0, r0, r0
    b5cc:	00000000 	andeq	r0, r0, r0
    b5d0:	00000000 	andeq	r0, r0, r0
    b5d4:	00000000 	andeq	r0, r0, r0
    b5d8:	00000000 	andeq	r0, r0, r0
    b5dc:	00000000 	andeq	r0, r0, r0
    b5e0:	00000000 	andeq	r0, r0, r0
    b5e4:	00000000 	andeq	r0, r0, r0
    b5e8:	00000000 	andeq	r0, r0, r0
    b5ec:	00000000 	andeq	r0, r0, r0
    b5f0:	00000000 	andeq	r0, r0, r0
    b5f4:	00000000 	andeq	r0, r0, r0
    b5f8:	00000000 	andeq	r0, r0, r0
    b5fc:	00000000 	andeq	r0, r0, r0
    b600:	00000000 	andeq	r0, r0, r0
    b604:	00000000 	andeq	r0, r0, r0
    b608:	00000000 	andeq	r0, r0, r0
    b60c:	00000000 	andeq	r0, r0, r0
    b610:	00000000 	andeq	r0, r0, r0
    b614:	00000000 	andeq	r0, r0, r0
    b618:	00000000 	andeq	r0, r0, r0
    b61c:	00000000 	andeq	r0, r0, r0
    b620:	00000000 	andeq	r0, r0, r0
    b624:	00000000 	andeq	r0, r0, r0
    b628:	00000000 	andeq	r0, r0, r0
    b62c:	00000000 	andeq	r0, r0, r0
    b630:	00000000 	andeq	r0, r0, r0
    b634:	00000000 	andeq	r0, r0, r0
    b638:	00000000 	andeq	r0, r0, r0
    b63c:	00000000 	andeq	r0, r0, r0
    b640:	00000000 	andeq	r0, r0, r0
    b644:	00000000 	andeq	r0, r0, r0
    b648:	00000000 	andeq	r0, r0, r0
    b64c:	00000000 	andeq	r0, r0, r0
    b650:	00000000 	andeq	r0, r0, r0
    b654:	00000000 	andeq	r0, r0, r0
    b658:	00000000 	andeq	r0, r0, r0
    b65c:	00000000 	andeq	r0, r0, r0
    b660:	00000000 	andeq	r0, r0, r0
    b664:	00000000 	andeq	r0, r0, r0
    b668:	00000000 	andeq	r0, r0, r0
    b66c:	00000000 	andeq	r0, r0, r0
    b670:	00000000 	andeq	r0, r0, r0
    b674:	00000000 	andeq	r0, r0, r0
    b678:	00000000 	andeq	r0, r0, r0
    b67c:	00000000 	andeq	r0, r0, r0
    b680:	00000000 	andeq	r0, r0, r0
    b684:	00000000 	andeq	r0, r0, r0
    b688:	00000000 	andeq	r0, r0, r0
    b68c:	00000000 	andeq	r0, r0, r0
    b690:	00000000 	andeq	r0, r0, r0
    b694:	00000000 	andeq	r0, r0, r0
    b698:	00000000 	andeq	r0, r0, r0
    b69c:	00000000 	andeq	r0, r0, r0
    b6a0:	00000000 	andeq	r0, r0, r0
    b6a4:	00000000 	andeq	r0, r0, r0
    b6a8:	00000000 	andeq	r0, r0, r0
    b6ac:	00000000 	andeq	r0, r0, r0
    b6b0:	00000000 	andeq	r0, r0, r0
    b6b4:	00000000 	andeq	r0, r0, r0
    b6b8:	00000000 	andeq	r0, r0, r0
    b6bc:	00000000 	andeq	r0, r0, r0
    b6c0:	00000000 	andeq	r0, r0, r0
    b6c4:	00000000 	andeq	r0, r0, r0
    b6c8:	00000000 	andeq	r0, r0, r0
    b6cc:	00000000 	andeq	r0, r0, r0
    b6d0:	00000000 	andeq	r0, r0, r0
    b6d4:	00000000 	andeq	r0, r0, r0
    b6d8:	00000000 	andeq	r0, r0, r0
    b6dc:	00000000 	andeq	r0, r0, r0
    b6e0:	00000000 	andeq	r0, r0, r0
    b6e4:	00000000 	andeq	r0, r0, r0
    b6e8:	00000000 	andeq	r0, r0, r0
    b6ec:	00000000 	andeq	r0, r0, r0
    b6f0:	00000000 	andeq	r0, r0, r0
    b6f4:	00000000 	andeq	r0, r0, r0
    b6f8:	00000000 	andeq	r0, r0, r0
    b6fc:	00000000 	andeq	r0, r0, r0
    b700:	00000000 	andeq	r0, r0, r0
    b704:	00000000 	andeq	r0, r0, r0
    b708:	00000000 	andeq	r0, r0, r0
    b70c:	00000000 	andeq	r0, r0, r0
    b710:	00000000 	andeq	r0, r0, r0
    b714:	00000000 	andeq	r0, r0, r0
    b718:	00000000 	andeq	r0, r0, r0
    b71c:	00000000 	andeq	r0, r0, r0
    b720:	00000000 	andeq	r0, r0, r0
    b724:	00000000 	andeq	r0, r0, r0
    b728:	00000000 	andeq	r0, r0, r0
    b72c:	00000000 	andeq	r0, r0, r0
    b730:	00000000 	andeq	r0, r0, r0
    b734:	00000000 	andeq	r0, r0, r0
    b738:	00000000 	andeq	r0, r0, r0
    b73c:	00000000 	andeq	r0, r0, r0
    b740:	00000000 	andeq	r0, r0, r0
    b744:	00000000 	andeq	r0, r0, r0
    b748:	00000000 	andeq	r0, r0, r0
    b74c:	00000000 	andeq	r0, r0, r0
    b750:	00000000 	andeq	r0, r0, r0
    b754:	00000000 	andeq	r0, r0, r0
    b758:	00000000 	andeq	r0, r0, r0
    b75c:	00000000 	andeq	r0, r0, r0
    b760:	00000000 	andeq	r0, r0, r0
    b764:	00000000 	andeq	r0, r0, r0
    b768:	00000000 	andeq	r0, r0, r0
    b76c:	00000000 	andeq	r0, r0, r0
    b770:	00000000 	andeq	r0, r0, r0
    b774:	00000000 	andeq	r0, r0, r0
    b778:	00000000 	andeq	r0, r0, r0
    b77c:	00000000 	andeq	r0, r0, r0
    b780:	00000000 	andeq	r0, r0, r0
    b784:	00000000 	andeq	r0, r0, r0
    b788:	00000000 	andeq	r0, r0, r0
    b78c:	00000000 	andeq	r0, r0, r0
    b790:	00000000 	andeq	r0, r0, r0
    b794:	00000000 	andeq	r0, r0, r0
    b798:	00000000 	andeq	r0, r0, r0
    b79c:	00000000 	andeq	r0, r0, r0
    b7a0:	00000000 	andeq	r0, r0, r0
    b7a4:	00000000 	andeq	r0, r0, r0
    b7a8:	00000000 	andeq	r0, r0, r0
    b7ac:	00000000 	andeq	r0, r0, r0
    b7b0:	00000000 	andeq	r0, r0, r0
    b7b4:	00000000 	andeq	r0, r0, r0
    b7b8:	00000000 	andeq	r0, r0, r0
    b7bc:	00000000 	andeq	r0, r0, r0
    b7c0:	00000000 	andeq	r0, r0, r0
    b7c4:	00000000 	andeq	r0, r0, r0
    b7c8:	00000000 	andeq	r0, r0, r0
    b7cc:	00000000 	andeq	r0, r0, r0
    b7d0:	00000000 	andeq	r0, r0, r0
    b7d4:	00000000 	andeq	r0, r0, r0
    b7d8:	00000000 	andeq	r0, r0, r0
    b7dc:	00000000 	andeq	r0, r0, r0
    b7e0:	00000000 	andeq	r0, r0, r0
    b7e4:	00000000 	andeq	r0, r0, r0
    b7e8:	00000000 	andeq	r0, r0, r0
    b7ec:	00000000 	andeq	r0, r0, r0
    b7f0:	00000000 	andeq	r0, r0, r0
    b7f4:	00000000 	andeq	r0, r0, r0
    b7f8:	00000000 	andeq	r0, r0, r0
    b7fc:	00000000 	andeq	r0, r0, r0
    b800:	00000000 	andeq	r0, r0, r0
    b804:	00000000 	andeq	r0, r0, r0
    b808:	00000000 	andeq	r0, r0, r0
    b80c:	00000000 	andeq	r0, r0, r0
    b810:	00000000 	andeq	r0, r0, r0
    b814:	00000000 	andeq	r0, r0, r0
    b818:	00000000 	andeq	r0, r0, r0
    b81c:	00000000 	andeq	r0, r0, r0
    b820:	00000000 	andeq	r0, r0, r0
    b824:	00000000 	andeq	r0, r0, r0
    b828:	00000000 	andeq	r0, r0, r0
    b82c:	00000000 	andeq	r0, r0, r0
    b830:	00000000 	andeq	r0, r0, r0
    b834:	00000000 	andeq	r0, r0, r0
    b838:	00000000 	andeq	r0, r0, r0
    b83c:	00000000 	andeq	r0, r0, r0
    b840:	00000000 	andeq	r0, r0, r0
    b844:	00000000 	andeq	r0, r0, r0
    b848:	00000000 	andeq	r0, r0, r0
    b84c:	00000000 	andeq	r0, r0, r0
    b850:	00000000 	andeq	r0, r0, r0
    b854:	00000000 	andeq	r0, r0, r0
    b858:	00000000 	andeq	r0, r0, r0
    b85c:	00000000 	andeq	r0, r0, r0
    b860:	00000000 	andeq	r0, r0, r0
    b864:	00000000 	andeq	r0, r0, r0
    b868:	00000000 	andeq	r0, r0, r0
    b86c:	00000000 	andeq	r0, r0, r0
    b870:	00000000 	andeq	r0, r0, r0
    b874:	00000000 	andeq	r0, r0, r0
    b878:	00000000 	andeq	r0, r0, r0
    b87c:	00000000 	andeq	r0, r0, r0
    b880:	00000000 	andeq	r0, r0, r0
    b884:	00000000 	andeq	r0, r0, r0
    b888:	00000000 	andeq	r0, r0, r0
    b88c:	00000000 	andeq	r0, r0, r0
    b890:	00000000 	andeq	r0, r0, r0
    b894:	00000000 	andeq	r0, r0, r0
    b898:	00000000 	andeq	r0, r0, r0
    b89c:	00000000 	andeq	r0, r0, r0
    b8a0:	00000000 	andeq	r0, r0, r0
    b8a4:	00000000 	andeq	r0, r0, r0
    b8a8:	00000000 	andeq	r0, r0, r0
    b8ac:	00000000 	andeq	r0, r0, r0
    b8b0:	00000000 	andeq	r0, r0, r0
    b8b4:	00000000 	andeq	r0, r0, r0
    b8b8:	00000000 	andeq	r0, r0, r0
    b8bc:	00000000 	andeq	r0, r0, r0
    b8c0:	00000000 	andeq	r0, r0, r0
    b8c4:	00000000 	andeq	r0, r0, r0
    b8c8:	00000000 	andeq	r0, r0, r0
    b8cc:	00000000 	andeq	r0, r0, r0
    b8d0:	00000000 	andeq	r0, r0, r0
    b8d4:	00000000 	andeq	r0, r0, r0
    b8d8:	00000000 	andeq	r0, r0, r0
    b8dc:	00000000 	andeq	r0, r0, r0
    b8e0:	00000000 	andeq	r0, r0, r0
    b8e4:	00000000 	andeq	r0, r0, r0
    b8e8:	00000000 	andeq	r0, r0, r0
    b8ec:	00000000 	andeq	r0, r0, r0
    b8f0:	00000000 	andeq	r0, r0, r0
    b8f4:	00000000 	andeq	r0, r0, r0
    b8f8:	00000000 	andeq	r0, r0, r0
    b8fc:	00000000 	andeq	r0, r0, r0
    b900:	00000000 	andeq	r0, r0, r0
    b904:	00000000 	andeq	r0, r0, r0
    b908:	00000000 	andeq	r0, r0, r0
    b90c:	00000000 	andeq	r0, r0, r0
    b910:	00000000 	andeq	r0, r0, r0
    b914:	00000000 	andeq	r0, r0, r0
    b918:	00000000 	andeq	r0, r0, r0
    b91c:	00000000 	andeq	r0, r0, r0
    b920:	00000000 	andeq	r0, r0, r0
    b924:	00000000 	andeq	r0, r0, r0
    b928:	00000000 	andeq	r0, r0, r0
    b92c:	00000000 	andeq	r0, r0, r0
    b930:	00000000 	andeq	r0, r0, r0
    b934:	00000000 	andeq	r0, r0, r0
    b938:	00000000 	andeq	r0, r0, r0
    b93c:	00000000 	andeq	r0, r0, r0
    b940:	00000000 	andeq	r0, r0, r0
    b944:	00000000 	andeq	r0, r0, r0
    b948:	00000000 	andeq	r0, r0, r0
    b94c:	00000000 	andeq	r0, r0, r0
    b950:	00000000 	andeq	r0, r0, r0
    b954:	00000000 	andeq	r0, r0, r0
    b958:	00000000 	andeq	r0, r0, r0
    b95c:	00000000 	andeq	r0, r0, r0
    b960:	00000000 	andeq	r0, r0, r0
    b964:	00000000 	andeq	r0, r0, r0
    b968:	00000000 	andeq	r0, r0, r0
    b96c:	00000000 	andeq	r0, r0, r0
    b970:	00000000 	andeq	r0, r0, r0
    b974:	00000000 	andeq	r0, r0, r0
    b978:	00000000 	andeq	r0, r0, r0
    b97c:	00000000 	andeq	r0, r0, r0
    b980:	00000000 	andeq	r0, r0, r0
    b984:	00000000 	andeq	r0, r0, r0
    b988:	00000000 	andeq	r0, r0, r0
    b98c:	00000000 	andeq	r0, r0, r0
    b990:	00000000 	andeq	r0, r0, r0
    b994:	00000000 	andeq	r0, r0, r0
    b998:	00000000 	andeq	r0, r0, r0
    b99c:	00000000 	andeq	r0, r0, r0
    b9a0:	00000000 	andeq	r0, r0, r0
    b9a4:	00000000 	andeq	r0, r0, r0
    b9a8:	00000000 	andeq	r0, r0, r0
    b9ac:	00000000 	andeq	r0, r0, r0
    b9b0:	00000000 	andeq	r0, r0, r0
    b9b4:	00000000 	andeq	r0, r0, r0
    b9b8:	00000000 	andeq	r0, r0, r0
    b9bc:	00000000 	andeq	r0, r0, r0
    b9c0:	00000000 	andeq	r0, r0, r0
    b9c4:	00000000 	andeq	r0, r0, r0
    b9c8:	00000000 	andeq	r0, r0, r0
    b9cc:	00000000 	andeq	r0, r0, r0
    b9d0:	00000000 	andeq	r0, r0, r0
    b9d4:	00000000 	andeq	r0, r0, r0
    b9d8:	00000000 	andeq	r0, r0, r0
    b9dc:	00000000 	andeq	r0, r0, r0
    b9e0:	00000000 	andeq	r0, r0, r0
    b9e4:	00000000 	andeq	r0, r0, r0
    b9e8:	00000000 	andeq	r0, r0, r0
    b9ec:	00000000 	andeq	r0, r0, r0
    b9f0:	00000000 	andeq	r0, r0, r0
    b9f4:	00000000 	andeq	r0, r0, r0
    b9f8:	00000000 	andeq	r0, r0, r0
    b9fc:	00000000 	andeq	r0, r0, r0
    ba00:	00000000 	andeq	r0, r0, r0
    ba04:	00000000 	andeq	r0, r0, r0
    ba08:	00000000 	andeq	r0, r0, r0
    ba0c:	00000000 	andeq	r0, r0, r0
    ba10:	00000000 	andeq	r0, r0, r0
    ba14:	00000000 	andeq	r0, r0, r0
    ba18:	00000000 	andeq	r0, r0, r0
    ba1c:	00000000 	andeq	r0, r0, r0
    ba20:	00000000 	andeq	r0, r0, r0
    ba24:	00000000 	andeq	r0, r0, r0
    ba28:	00000000 	andeq	r0, r0, r0
    ba2c:	00000000 	andeq	r0, r0, r0
    ba30:	00000000 	andeq	r0, r0, r0
    ba34:	00000000 	andeq	r0, r0, r0
    ba38:	00000000 	andeq	r0, r0, r0
    ba3c:	00000000 	andeq	r0, r0, r0
    ba40:	00000000 	andeq	r0, r0, r0
    ba44:	00000000 	andeq	r0, r0, r0
    ba48:	00000000 	andeq	r0, r0, r0
    ba4c:	00000000 	andeq	r0, r0, r0
    ba50:	00000000 	andeq	r0, r0, r0
    ba54:	00000000 	andeq	r0, r0, r0
    ba58:	00000000 	andeq	r0, r0, r0
    ba5c:	00000000 	andeq	r0, r0, r0
    ba60:	00000000 	andeq	r0, r0, r0
    ba64:	00000000 	andeq	r0, r0, r0
    ba68:	00000000 	andeq	r0, r0, r0
    ba6c:	00000000 	andeq	r0, r0, r0
    ba70:	00000000 	andeq	r0, r0, r0
    ba74:	00000000 	andeq	r0, r0, r0
    ba78:	00000000 	andeq	r0, r0, r0
    ba7c:	00000000 	andeq	r0, r0, r0
    ba80:	00000000 	andeq	r0, r0, r0
    ba84:	00000000 	andeq	r0, r0, r0
    ba88:	00000000 	andeq	r0, r0, r0
    ba8c:	00000000 	andeq	r0, r0, r0
    ba90:	00000000 	andeq	r0, r0, r0
    ba94:	00000000 	andeq	r0, r0, r0
    ba98:	00000000 	andeq	r0, r0, r0
    ba9c:	00000000 	andeq	r0, r0, r0
    baa0:	00000000 	andeq	r0, r0, r0
    baa4:	00000000 	andeq	r0, r0, r0
    baa8:	00000000 	andeq	r0, r0, r0
    baac:	00000000 	andeq	r0, r0, r0
    bab0:	00000000 	andeq	r0, r0, r0
    bab4:	00000000 	andeq	r0, r0, r0
    bab8:	00000000 	andeq	r0, r0, r0
    babc:	00000000 	andeq	r0, r0, r0
    bac0:	00000000 	andeq	r0, r0, r0
    bac4:	00000000 	andeq	r0, r0, r0
    bac8:	00000000 	andeq	r0, r0, r0
    bacc:	00000000 	andeq	r0, r0, r0
    bad0:	00000000 	andeq	r0, r0, r0
    bad4:	00000000 	andeq	r0, r0, r0
    bad8:	00000000 	andeq	r0, r0, r0
    badc:	00000000 	andeq	r0, r0, r0
    bae0:	00000000 	andeq	r0, r0, r0
    bae4:	00000000 	andeq	r0, r0, r0
    bae8:	00000000 	andeq	r0, r0, r0
    baec:	00000000 	andeq	r0, r0, r0
    baf0:	00000000 	andeq	r0, r0, r0
    baf4:	00000000 	andeq	r0, r0, r0
    baf8:	00000000 	andeq	r0, r0, r0
    bafc:	00000000 	andeq	r0, r0, r0
    bb00:	00000000 	andeq	r0, r0, r0
    bb04:	00000000 	andeq	r0, r0, r0
    bb08:	00000000 	andeq	r0, r0, r0
    bb0c:	00000000 	andeq	r0, r0, r0
    bb10:	00000000 	andeq	r0, r0, r0
    bb14:	00000000 	andeq	r0, r0, r0
    bb18:	00000000 	andeq	r0, r0, r0
    bb1c:	00000000 	andeq	r0, r0, r0
    bb20:	00000000 	andeq	r0, r0, r0
    bb24:	00000000 	andeq	r0, r0, r0
    bb28:	00000000 	andeq	r0, r0, r0
    bb2c:	00000000 	andeq	r0, r0, r0
    bb30:	00000000 	andeq	r0, r0, r0
    bb34:	00000000 	andeq	r0, r0, r0
    bb38:	00000000 	andeq	r0, r0, r0
    bb3c:	00000000 	andeq	r0, r0, r0
    bb40:	00000000 	andeq	r0, r0, r0
    bb44:	00000000 	andeq	r0, r0, r0
    bb48:	00000000 	andeq	r0, r0, r0
    bb4c:	00000000 	andeq	r0, r0, r0
    bb50:	00000000 	andeq	r0, r0, r0
    bb54:	00000000 	andeq	r0, r0, r0
    bb58:	00000000 	andeq	r0, r0, r0
    bb5c:	00000000 	andeq	r0, r0, r0
    bb60:	00000000 	andeq	r0, r0, r0
    bb64:	00000000 	andeq	r0, r0, r0
    bb68:	00000000 	andeq	r0, r0, r0
    bb6c:	00000000 	andeq	r0, r0, r0
    bb70:	00000000 	andeq	r0, r0, r0
    bb74:	00000000 	andeq	r0, r0, r0
    bb78:	00000000 	andeq	r0, r0, r0
    bb7c:	00000000 	andeq	r0, r0, r0
    bb80:	00000000 	andeq	r0, r0, r0
    bb84:	00000000 	andeq	r0, r0, r0
    bb88:	00000000 	andeq	r0, r0, r0
    bb8c:	00000000 	andeq	r0, r0, r0
    bb90:	00000000 	andeq	r0, r0, r0
    bb94:	00000000 	andeq	r0, r0, r0
    bb98:	00000000 	andeq	r0, r0, r0
    bb9c:	00000000 	andeq	r0, r0, r0
    bba0:	00000000 	andeq	r0, r0, r0
    bba4:	00000000 	andeq	r0, r0, r0
    bba8:	00000000 	andeq	r0, r0, r0
    bbac:	00000000 	andeq	r0, r0, r0
    bbb0:	00000000 	andeq	r0, r0, r0
    bbb4:	00000000 	andeq	r0, r0, r0
    bbb8:	00000000 	andeq	r0, r0, r0
    bbbc:	00000000 	andeq	r0, r0, r0
    bbc0:	00000000 	andeq	r0, r0, r0
    bbc4:	00000000 	andeq	r0, r0, r0
    bbc8:	00000000 	andeq	r0, r0, r0
    bbcc:	00000000 	andeq	r0, r0, r0
    bbd0:	00000000 	andeq	r0, r0, r0
    bbd4:	00000000 	andeq	r0, r0, r0
    bbd8:	00000000 	andeq	r0, r0, r0
    bbdc:	00000000 	andeq	r0, r0, r0
    bbe0:	00000000 	andeq	r0, r0, r0
    bbe4:	00000000 	andeq	r0, r0, r0
    bbe8:	00000000 	andeq	r0, r0, r0
    bbec:	00000000 	andeq	r0, r0, r0
    bbf0:	00000000 	andeq	r0, r0, r0
    bbf4:	00000000 	andeq	r0, r0, r0
    bbf8:	00000000 	andeq	r0, r0, r0
    bbfc:	00000000 	andeq	r0, r0, r0
    bc00:	00000000 	andeq	r0, r0, r0
    bc04:	00000000 	andeq	r0, r0, r0
    bc08:	00000000 	andeq	r0, r0, r0
    bc0c:	00000000 	andeq	r0, r0, r0
    bc10:	00000000 	andeq	r0, r0, r0
    bc14:	00000000 	andeq	r0, r0, r0
    bc18:	00000000 	andeq	r0, r0, r0
    bc1c:	00000000 	andeq	r0, r0, r0
    bc20:	00000000 	andeq	r0, r0, r0
    bc24:	00000000 	andeq	r0, r0, r0
    bc28:	00000000 	andeq	r0, r0, r0
    bc2c:	00000000 	andeq	r0, r0, r0
    bc30:	00000000 	andeq	r0, r0, r0
    bc34:	00000000 	andeq	r0, r0, r0
    bc38:	00000000 	andeq	r0, r0, r0
    bc3c:	00000000 	andeq	r0, r0, r0
    bc40:	00000000 	andeq	r0, r0, r0
    bc44:	00000000 	andeq	r0, r0, r0
    bc48:	00000000 	andeq	r0, r0, r0
    bc4c:	00000000 	andeq	r0, r0, r0
    bc50:	00000000 	andeq	r0, r0, r0
    bc54:	00000000 	andeq	r0, r0, r0
    bc58:	00000000 	andeq	r0, r0, r0
    bc5c:	00000000 	andeq	r0, r0, r0
    bc60:	00000000 	andeq	r0, r0, r0
    bc64:	00000000 	andeq	r0, r0, r0
    bc68:	00000000 	andeq	r0, r0, r0
    bc6c:	00000000 	andeq	r0, r0, r0
    bc70:	00000000 	andeq	r0, r0, r0
    bc74:	00000000 	andeq	r0, r0, r0
    bc78:	00000000 	andeq	r0, r0, r0
    bc7c:	00000000 	andeq	r0, r0, r0
    bc80:	00000000 	andeq	r0, r0, r0
    bc84:	00000000 	andeq	r0, r0, r0
    bc88:	00000000 	andeq	r0, r0, r0
    bc8c:	00000000 	andeq	r0, r0, r0
    bc90:	00000000 	andeq	r0, r0, r0
    bc94:	00000000 	andeq	r0, r0, r0
    bc98:	00000000 	andeq	r0, r0, r0
    bc9c:	00000000 	andeq	r0, r0, r0
    bca0:	00000000 	andeq	r0, r0, r0
    bca4:	00000000 	andeq	r0, r0, r0
    bca8:	00000000 	andeq	r0, r0, r0
    bcac:	00000000 	andeq	r0, r0, r0
    bcb0:	00000000 	andeq	r0, r0, r0
    bcb4:	00000000 	andeq	r0, r0, r0
    bcb8:	00000000 	andeq	r0, r0, r0
    bcbc:	00000000 	andeq	r0, r0, r0
    bcc0:	00000000 	andeq	r0, r0, r0
    bcc4:	00000000 	andeq	r0, r0, r0
    bcc8:	00000000 	andeq	r0, r0, r0
    bccc:	00000000 	andeq	r0, r0, r0
    bcd0:	00000000 	andeq	r0, r0, r0
    bcd4:	00000000 	andeq	r0, r0, r0
    bcd8:	00000000 	andeq	r0, r0, r0
    bcdc:	00000000 	andeq	r0, r0, r0
    bce0:	00000000 	andeq	r0, r0, r0
    bce4:	00000000 	andeq	r0, r0, r0
    bce8:	00000000 	andeq	r0, r0, r0
    bcec:	00000000 	andeq	r0, r0, r0
    bcf0:	00000000 	andeq	r0, r0, r0
    bcf4:	00000000 	andeq	r0, r0, r0
    bcf8:	00000000 	andeq	r0, r0, r0
    bcfc:	00000000 	andeq	r0, r0, r0
    bd00:	00000000 	andeq	r0, r0, r0
    bd04:	00000000 	andeq	r0, r0, r0
    bd08:	00000000 	andeq	r0, r0, r0
    bd0c:	00000000 	andeq	r0, r0, r0
    bd10:	00000000 	andeq	r0, r0, r0
    bd14:	00000000 	andeq	r0, r0, r0
    bd18:	00000000 	andeq	r0, r0, r0
    bd1c:	00000000 	andeq	r0, r0, r0
    bd20:	00000000 	andeq	r0, r0, r0
    bd24:	00000000 	andeq	r0, r0, r0
    bd28:	00000000 	andeq	r0, r0, r0
    bd2c:	00000000 	andeq	r0, r0, r0
    bd30:	00000000 	andeq	r0, r0, r0
    bd34:	00000000 	andeq	r0, r0, r0
    bd38:	00000000 	andeq	r0, r0, r0
    bd3c:	00000000 	andeq	r0, r0, r0
    bd40:	00000000 	andeq	r0, r0, r0
    bd44:	00000000 	andeq	r0, r0, r0
    bd48:	00000000 	andeq	r0, r0, r0
    bd4c:	00000000 	andeq	r0, r0, r0
    bd50:	00000000 	andeq	r0, r0, r0
    bd54:	00000000 	andeq	r0, r0, r0
    bd58:	00000000 	andeq	r0, r0, r0
    bd5c:	00000000 	andeq	r0, r0, r0
    bd60:	00000000 	andeq	r0, r0, r0
    bd64:	00000000 	andeq	r0, r0, r0
    bd68:	00000000 	andeq	r0, r0, r0
    bd6c:	00000000 	andeq	r0, r0, r0
    bd70:	00000000 	andeq	r0, r0, r0
    bd74:	00000000 	andeq	r0, r0, r0
    bd78:	00000000 	andeq	r0, r0, r0
    bd7c:	00000000 	andeq	r0, r0, r0
    bd80:	00000000 	andeq	r0, r0, r0
    bd84:	00000000 	andeq	r0, r0, r0
    bd88:	00000000 	andeq	r0, r0, r0
    bd8c:	00000000 	andeq	r0, r0, r0
    bd90:	00000000 	andeq	r0, r0, r0
    bd94:	00000000 	andeq	r0, r0, r0
    bd98:	00000000 	andeq	r0, r0, r0
    bd9c:	00000000 	andeq	r0, r0, r0
    bda0:	00000000 	andeq	r0, r0, r0
    bda4:	00000000 	andeq	r0, r0, r0
    bda8:	00000000 	andeq	r0, r0, r0
    bdac:	00000000 	andeq	r0, r0, r0
    bdb0:	00000000 	andeq	r0, r0, r0
    bdb4:	00000000 	andeq	r0, r0, r0
    bdb8:	00000000 	andeq	r0, r0, r0
    bdbc:	00000000 	andeq	r0, r0, r0
    bdc0:	00000000 	andeq	r0, r0, r0
    bdc4:	00000000 	andeq	r0, r0, r0
    bdc8:	00000000 	andeq	r0, r0, r0
    bdcc:	00000000 	andeq	r0, r0, r0
    bdd0:	00000000 	andeq	r0, r0, r0
    bdd4:	00000000 	andeq	r0, r0, r0
    bdd8:	00000000 	andeq	r0, r0, r0
    bddc:	00000000 	andeq	r0, r0, r0
    bde0:	00000000 	andeq	r0, r0, r0
    bde4:	00000000 	andeq	r0, r0, r0
    bde8:	00000000 	andeq	r0, r0, r0
    bdec:	00000000 	andeq	r0, r0, r0
    bdf0:	00000000 	andeq	r0, r0, r0
    bdf4:	00000000 	andeq	r0, r0, r0
    bdf8:	00000000 	andeq	r0, r0, r0
    bdfc:	00000000 	andeq	r0, r0, r0
    be00:	00000000 	andeq	r0, r0, r0
    be04:	00000000 	andeq	r0, r0, r0
    be08:	00000000 	andeq	r0, r0, r0
    be0c:	00000000 	andeq	r0, r0, r0
    be10:	00000000 	andeq	r0, r0, r0
    be14:	00000000 	andeq	r0, r0, r0
    be18:	00000000 	andeq	r0, r0, r0
    be1c:	00000000 	andeq	r0, r0, r0
    be20:	00000000 	andeq	r0, r0, r0
    be24:	00000000 	andeq	r0, r0, r0
    be28:	00000000 	andeq	r0, r0, r0
    be2c:	00000000 	andeq	r0, r0, r0
    be30:	00000000 	andeq	r0, r0, r0
    be34:	00000000 	andeq	r0, r0, r0
    be38:	00000000 	andeq	r0, r0, r0
    be3c:	00000000 	andeq	r0, r0, r0
    be40:	00000000 	andeq	r0, r0, r0
    be44:	00000000 	andeq	r0, r0, r0
    be48:	00000000 	andeq	r0, r0, r0
    be4c:	00000000 	andeq	r0, r0, r0
    be50:	00000000 	andeq	r0, r0, r0
    be54:	00000000 	andeq	r0, r0, r0
    be58:	00000000 	andeq	r0, r0, r0
    be5c:	00000000 	andeq	r0, r0, r0
    be60:	00000000 	andeq	r0, r0, r0
    be64:	00000000 	andeq	r0, r0, r0
    be68:	00000000 	andeq	r0, r0, r0
    be6c:	00000000 	andeq	r0, r0, r0
    be70:	00000000 	andeq	r0, r0, r0
    be74:	00000000 	andeq	r0, r0, r0
    be78:	00000000 	andeq	r0, r0, r0
    be7c:	00000000 	andeq	r0, r0, r0
    be80:	00000000 	andeq	r0, r0, r0
    be84:	00000000 	andeq	r0, r0, r0
    be88:	00000000 	andeq	r0, r0, r0
    be8c:	00000000 	andeq	r0, r0, r0
    be90:	00000000 	andeq	r0, r0, r0
    be94:	00000000 	andeq	r0, r0, r0
    be98:	00000000 	andeq	r0, r0, r0
    be9c:	00000000 	andeq	r0, r0, r0
    bea0:	00000000 	andeq	r0, r0, r0
    bea4:	00000000 	andeq	r0, r0, r0
    bea8:	00000000 	andeq	r0, r0, r0
    beac:	00000000 	andeq	r0, r0, r0
    beb0:	00000000 	andeq	r0, r0, r0
    beb4:	00000000 	andeq	r0, r0, r0
    beb8:	00000000 	andeq	r0, r0, r0
    bebc:	00000000 	andeq	r0, r0, r0
    bec0:	00000000 	andeq	r0, r0, r0
    bec4:	00000000 	andeq	r0, r0, r0
    bec8:	00000000 	andeq	r0, r0, r0
    becc:	00000000 	andeq	r0, r0, r0
    bed0:	00000000 	andeq	r0, r0, r0
    bed4:	00000000 	andeq	r0, r0, r0
    bed8:	00000000 	andeq	r0, r0, r0
    bedc:	00000000 	andeq	r0, r0, r0
    bee0:	00000000 	andeq	r0, r0, r0
    bee4:	00000000 	andeq	r0, r0, r0
    bee8:	00000000 	andeq	r0, r0, r0
    beec:	00000000 	andeq	r0, r0, r0
    bef0:	00000000 	andeq	r0, r0, r0
    bef4:	00000000 	andeq	r0, r0, r0
    bef8:	00000000 	andeq	r0, r0, r0
    befc:	00000000 	andeq	r0, r0, r0
    bf00:	00000000 	andeq	r0, r0, r0
    bf04:	00000000 	andeq	r0, r0, r0
    bf08:	00000000 	andeq	r0, r0, r0
    bf0c:	00000000 	andeq	r0, r0, r0
    bf10:	00000000 	andeq	r0, r0, r0
    bf14:	00000000 	andeq	r0, r0, r0
    bf18:	00000000 	andeq	r0, r0, r0
    bf1c:	00000000 	andeq	r0, r0, r0
    bf20:	00000000 	andeq	r0, r0, r0
    bf24:	00000000 	andeq	r0, r0, r0
    bf28:	00000000 	andeq	r0, r0, r0
    bf2c:	00000000 	andeq	r0, r0, r0
    bf30:	00000000 	andeq	r0, r0, r0
    bf34:	00000000 	andeq	r0, r0, r0
    bf38:	00000000 	andeq	r0, r0, r0
    bf3c:	00000000 	andeq	r0, r0, r0
    bf40:	00000000 	andeq	r0, r0, r0
    bf44:	00000000 	andeq	r0, r0, r0
    bf48:	00000000 	andeq	r0, r0, r0
    bf4c:	00000000 	andeq	r0, r0, r0
    bf50:	00000000 	andeq	r0, r0, r0
    bf54:	00000000 	andeq	r0, r0, r0
    bf58:	00000000 	andeq	r0, r0, r0
    bf5c:	00000000 	andeq	r0, r0, r0
    bf60:	00000000 	andeq	r0, r0, r0
    bf64:	00000000 	andeq	r0, r0, r0
    bf68:	00000000 	andeq	r0, r0, r0
    bf6c:	00000000 	andeq	r0, r0, r0
    bf70:	00000000 	andeq	r0, r0, r0
    bf74:	00000000 	andeq	r0, r0, r0
    bf78:	00000000 	andeq	r0, r0, r0
    bf7c:	00000000 	andeq	r0, r0, r0
    bf80:	00000000 	andeq	r0, r0, r0
    bf84:	00000000 	andeq	r0, r0, r0
    bf88:	00000000 	andeq	r0, r0, r0
    bf8c:	00000000 	andeq	r0, r0, r0
    bf90:	00000000 	andeq	r0, r0, r0
    bf94:	00000000 	andeq	r0, r0, r0
    bf98:	00000000 	andeq	r0, r0, r0
    bf9c:	00000000 	andeq	r0, r0, r0
    bfa0:	00000000 	andeq	r0, r0, r0
    bfa4:	00000000 	andeq	r0, r0, r0
    bfa8:	00000000 	andeq	r0, r0, r0
    bfac:	00000000 	andeq	r0, r0, r0
    bfb0:	00000000 	andeq	r0, r0, r0
    bfb4:	00000000 	andeq	r0, r0, r0
    bfb8:	00000000 	andeq	r0, r0, r0
    bfbc:	00000000 	andeq	r0, r0, r0
    bfc0:	00000000 	andeq	r0, r0, r0
    bfc4:	00000000 	andeq	r0, r0, r0
    bfc8:	00000000 	andeq	r0, r0, r0
    bfcc:	00000000 	andeq	r0, r0, r0
    bfd0:	00000000 	andeq	r0, r0, r0
    bfd4:	00000000 	andeq	r0, r0, r0
    bfd8:	00000000 	andeq	r0, r0, r0
    bfdc:	00000000 	andeq	r0, r0, r0
    bfe0:	00000000 	andeq	r0, r0, r0
    bfe4:	00000000 	andeq	r0, r0, r0
    bfe8:	00000000 	andeq	r0, r0, r0
    bfec:	00000000 	andeq	r0, r0, r0
    bff0:	00000000 	andeq	r0, r0, r0
    bff4:	00000000 	andeq	r0, r0, r0
    bff8:	00000000 	andeq	r0, r0, r0
    bffc:	00000000 	andeq	r0, r0, r0
    c000:	00000000 	andeq	r0, r0, r0
    c004:	00000000 	andeq	r0, r0, r0
    c008:	00000000 	andeq	r0, r0, r0
    c00c:	00000000 	andeq	r0, r0, r0
    c010:	00000000 	andeq	r0, r0, r0
    c014:	00000000 	andeq	r0, r0, r0
    c018:	00000000 	andeq	r0, r0, r0
    c01c:	00000000 	andeq	r0, r0, r0
    c020:	00000000 	andeq	r0, r0, r0
    c024:	00000000 	andeq	r0, r0, r0
    c028:	00000000 	andeq	r0, r0, r0
    c02c:	00000000 	andeq	r0, r0, r0
    c030:	00000000 	andeq	r0, r0, r0
    c034:	00000000 	andeq	r0, r0, r0
    c038:	00000000 	andeq	r0, r0, r0
    c03c:	00000000 	andeq	r0, r0, r0
    c040:	00000000 	andeq	r0, r0, r0
    c044:	00000000 	andeq	r0, r0, r0
    c048:	00000000 	andeq	r0, r0, r0
    c04c:	00000000 	andeq	r0, r0, r0
    c050:	00000000 	andeq	r0, r0, r0
    c054:	00000000 	andeq	r0, r0, r0
    c058:	00000000 	andeq	r0, r0, r0
    c05c:	00000000 	andeq	r0, r0, r0
    c060:	00000000 	andeq	r0, r0, r0
    c064:	00000000 	andeq	r0, r0, r0
    c068:	00000000 	andeq	r0, r0, r0
    c06c:	00000000 	andeq	r0, r0, r0
    c070:	00000000 	andeq	r0, r0, r0
    c074:	00000000 	andeq	r0, r0, r0
    c078:	00000000 	andeq	r0, r0, r0
    c07c:	00000000 	andeq	r0, r0, r0
    c080:	00000000 	andeq	r0, r0, r0
    c084:	00000000 	andeq	r0, r0, r0
    c088:	00000000 	andeq	r0, r0, r0
    c08c:	00000000 	andeq	r0, r0, r0
    c090:	00000000 	andeq	r0, r0, r0
    c094:	00000000 	andeq	r0, r0, r0
    c098:	00000000 	andeq	r0, r0, r0
    c09c:	00000000 	andeq	r0, r0, r0
    c0a0:	00000000 	andeq	r0, r0, r0
    c0a4:	00000000 	andeq	r0, r0, r0
    c0a8:	00000000 	andeq	r0, r0, r0
    c0ac:	00000000 	andeq	r0, r0, r0
    c0b0:	00000000 	andeq	r0, r0, r0
    c0b4:	00000000 	andeq	r0, r0, r0
    c0b8:	00000000 	andeq	r0, r0, r0
    c0bc:	00000000 	andeq	r0, r0, r0
    c0c0:	00000000 	andeq	r0, r0, r0
    c0c4:	00000000 	andeq	r0, r0, r0
    c0c8:	00000000 	andeq	r0, r0, r0
    c0cc:	00000000 	andeq	r0, r0, r0
    c0d0:	00000000 	andeq	r0, r0, r0
    c0d4:	00000000 	andeq	r0, r0, r0
    c0d8:	00000000 	andeq	r0, r0, r0
    c0dc:	00000000 	andeq	r0, r0, r0
    c0e0:	00000000 	andeq	r0, r0, r0
    c0e4:	00000000 	andeq	r0, r0, r0
    c0e8:	00000000 	andeq	r0, r0, r0
    c0ec:	00000000 	andeq	r0, r0, r0
    c0f0:	00000000 	andeq	r0, r0, r0
    c0f4:	00000000 	andeq	r0, r0, r0
    c0f8:	00000000 	andeq	r0, r0, r0
    c0fc:	00000000 	andeq	r0, r0, r0
    c100:	00000000 	andeq	r0, r0, r0
    c104:	00000000 	andeq	r0, r0, r0
    c108:	00000000 	andeq	r0, r0, r0
    c10c:	00000000 	andeq	r0, r0, r0
    c110:	00000000 	andeq	r0, r0, r0
    c114:	00000000 	andeq	r0, r0, r0
    c118:	00000000 	andeq	r0, r0, r0
    c11c:	00000000 	andeq	r0, r0, r0
    c120:	00000000 	andeq	r0, r0, r0
    c124:	00000000 	andeq	r0, r0, r0
    c128:	00000000 	andeq	r0, r0, r0
    c12c:	00000000 	andeq	r0, r0, r0
    c130:	00000000 	andeq	r0, r0, r0
    c134:	00000000 	andeq	r0, r0, r0
    c138:	00000000 	andeq	r0, r0, r0
    c13c:	00000000 	andeq	r0, r0, r0
    c140:	00000000 	andeq	r0, r0, r0
    c144:	00000000 	andeq	r0, r0, r0
    c148:	00000000 	andeq	r0, r0, r0
    c14c:	00000000 	andeq	r0, r0, r0
    c150:	00000000 	andeq	r0, r0, r0
    c154:	00000000 	andeq	r0, r0, r0
    c158:	00000000 	andeq	r0, r0, r0
    c15c:	00000000 	andeq	r0, r0, r0
    c160:	00000000 	andeq	r0, r0, r0
    c164:	00000000 	andeq	r0, r0, r0
    c168:	00000000 	andeq	r0, r0, r0
    c16c:	00000000 	andeq	r0, r0, r0
    c170:	00000000 	andeq	r0, r0, r0
    c174:	00000000 	andeq	r0, r0, r0
    c178:	00000000 	andeq	r0, r0, r0
    c17c:	00000000 	andeq	r0, r0, r0
    c180:	00000000 	andeq	r0, r0, r0
    c184:	00000000 	andeq	r0, r0, r0
    c188:	00000000 	andeq	r0, r0, r0
    c18c:	00000000 	andeq	r0, r0, r0
    c190:	00000000 	andeq	r0, r0, r0
    c194:	00000000 	andeq	r0, r0, r0
    c198:	00000000 	andeq	r0, r0, r0
    c19c:	00000000 	andeq	r0, r0, r0
    c1a0:	00000000 	andeq	r0, r0, r0
    c1a4:	00000000 	andeq	r0, r0, r0
    c1a8:	00000000 	andeq	r0, r0, r0
    c1ac:	00000000 	andeq	r0, r0, r0
    c1b0:	00000000 	andeq	r0, r0, r0
    c1b4:	00000000 	andeq	r0, r0, r0
    c1b8:	00000000 	andeq	r0, r0, r0
    c1bc:	00000000 	andeq	r0, r0, r0
    c1c0:	00000000 	andeq	r0, r0, r0
    c1c4:	00000000 	andeq	r0, r0, r0
    c1c8:	00000000 	andeq	r0, r0, r0
    c1cc:	00000000 	andeq	r0, r0, r0
    c1d0:	00000000 	andeq	r0, r0, r0
    c1d4:	00000000 	andeq	r0, r0, r0
    c1d8:	00000000 	andeq	r0, r0, r0
    c1dc:	00000000 	andeq	r0, r0, r0
    c1e0:	00000000 	andeq	r0, r0, r0
    c1e4:	00000000 	andeq	r0, r0, r0
    c1e8:	00000000 	andeq	r0, r0, r0
    c1ec:	00000000 	andeq	r0, r0, r0
    c1f0:	00000000 	andeq	r0, r0, r0
    c1f4:	00000000 	andeq	r0, r0, r0
    c1f8:	00000000 	andeq	r0, r0, r0
    c1fc:	00000000 	andeq	r0, r0, r0
    c200:	00000000 	andeq	r0, r0, r0
    c204:	00000000 	andeq	r0, r0, r0
    c208:	00000000 	andeq	r0, r0, r0
    c20c:	00000000 	andeq	r0, r0, r0
    c210:	00000000 	andeq	r0, r0, r0
    c214:	00000000 	andeq	r0, r0, r0
    c218:	00000000 	andeq	r0, r0, r0
    c21c:	00000000 	andeq	r0, r0, r0
    c220:	00000000 	andeq	r0, r0, r0
    c224:	00000000 	andeq	r0, r0, r0
    c228:	00000000 	andeq	r0, r0, r0
    c22c:	00000000 	andeq	r0, r0, r0
    c230:	00000000 	andeq	r0, r0, r0
    c234:	00000000 	andeq	r0, r0, r0
    c238:	00000000 	andeq	r0, r0, r0
    c23c:	00000000 	andeq	r0, r0, r0
    c240:	00000000 	andeq	r0, r0, r0
    c244:	00000000 	andeq	r0, r0, r0
    c248:	00000000 	andeq	r0, r0, r0
    c24c:	00000000 	andeq	r0, r0, r0
    c250:	00000000 	andeq	r0, r0, r0
    c254:	00000000 	andeq	r0, r0, r0
    c258:	00000000 	andeq	r0, r0, r0
    c25c:	00000000 	andeq	r0, r0, r0
    c260:	00000000 	andeq	r0, r0, r0
    c264:	00000000 	andeq	r0, r0, r0
    c268:	00000000 	andeq	r0, r0, r0
    c26c:	00000000 	andeq	r0, r0, r0
    c270:	00000000 	andeq	r0, r0, r0
    c274:	00000000 	andeq	r0, r0, r0
    c278:	00000000 	andeq	r0, r0, r0
    c27c:	00000000 	andeq	r0, r0, r0
    c280:	00000000 	andeq	r0, r0, r0
    c284:	00000000 	andeq	r0, r0, r0
    c288:	00000000 	andeq	r0, r0, r0
    c28c:	00000000 	andeq	r0, r0, r0
    c290:	00000000 	andeq	r0, r0, r0
    c294:	00000000 	andeq	r0, r0, r0
    c298:	00000000 	andeq	r0, r0, r0
    c29c:	00000000 	andeq	r0, r0, r0
    c2a0:	00000000 	andeq	r0, r0, r0
    c2a4:	00000000 	andeq	r0, r0, r0
    c2a8:	00000000 	andeq	r0, r0, r0
    c2ac:	00000000 	andeq	r0, r0, r0
    c2b0:	00000000 	andeq	r0, r0, r0
    c2b4:	00000000 	andeq	r0, r0, r0
    c2b8:	00000000 	andeq	r0, r0, r0
    c2bc:	00000000 	andeq	r0, r0, r0
    c2c0:	00000000 	andeq	r0, r0, r0
    c2c4:	00000000 	andeq	r0, r0, r0
    c2c8:	00000000 	andeq	r0, r0, r0
    c2cc:	00000000 	andeq	r0, r0, r0
    c2d0:	00000000 	andeq	r0, r0, r0
    c2d4:	00000000 	andeq	r0, r0, r0
    c2d8:	00000000 	andeq	r0, r0, r0
    c2dc:	00000000 	andeq	r0, r0, r0
    c2e0:	00000000 	andeq	r0, r0, r0
    c2e4:	00000000 	andeq	r0, r0, r0
    c2e8:	00000000 	andeq	r0, r0, r0
    c2ec:	00000000 	andeq	r0, r0, r0
    c2f0:	00000000 	andeq	r0, r0, r0
    c2f4:	00000000 	andeq	r0, r0, r0
    c2f8:	00000000 	andeq	r0, r0, r0
    c2fc:	00000000 	andeq	r0, r0, r0
    c300:	00000000 	andeq	r0, r0, r0
    c304:	00000000 	andeq	r0, r0, r0
    c308:	00000000 	andeq	r0, r0, r0
    c30c:	00000000 	andeq	r0, r0, r0
    c310:	00000000 	andeq	r0, r0, r0
    c314:	00000000 	andeq	r0, r0, r0
    c318:	00000000 	andeq	r0, r0, r0
    c31c:	00000000 	andeq	r0, r0, r0
    c320:	00000000 	andeq	r0, r0, r0
    c324:	00000000 	andeq	r0, r0, r0
    c328:	00000000 	andeq	r0, r0, r0
    c32c:	00000000 	andeq	r0, r0, r0
    c330:	00000000 	andeq	r0, r0, r0
    c334:	00000000 	andeq	r0, r0, r0
    c338:	00000000 	andeq	r0, r0, r0
    c33c:	00000000 	andeq	r0, r0, r0
    c340:	00000000 	andeq	r0, r0, r0
    c344:	00000000 	andeq	r0, r0, r0
    c348:	00000000 	andeq	r0, r0, r0
    c34c:	00000000 	andeq	r0, r0, r0
    c350:	00000000 	andeq	r0, r0, r0
    c354:	00000000 	andeq	r0, r0, r0
    c358:	00000000 	andeq	r0, r0, r0
    c35c:	00000000 	andeq	r0, r0, r0
    c360:	00000000 	andeq	r0, r0, r0
    c364:	00000000 	andeq	r0, r0, r0
    c368:	00000000 	andeq	r0, r0, r0
    c36c:	00000000 	andeq	r0, r0, r0
    c370:	00000000 	andeq	r0, r0, r0
    c374:	00000000 	andeq	r0, r0, r0
    c378:	00000000 	andeq	r0, r0, r0
    c37c:	00000000 	andeq	r0, r0, r0
    c380:	00000000 	andeq	r0, r0, r0
    c384:	00000000 	andeq	r0, r0, r0
    c388:	00000000 	andeq	r0, r0, r0
    c38c:	00000000 	andeq	r0, r0, r0
    c390:	00000000 	andeq	r0, r0, r0
    c394:	00000000 	andeq	r0, r0, r0
    c398:	00000000 	andeq	r0, r0, r0
    c39c:	00000000 	andeq	r0, r0, r0
    c3a0:	00000000 	andeq	r0, r0, r0
    c3a4:	00000000 	andeq	r0, r0, r0
    c3a8:	00000000 	andeq	r0, r0, r0
    c3ac:	00000000 	andeq	r0, r0, r0
    c3b0:	00000000 	andeq	r0, r0, r0
    c3b4:	00000000 	andeq	r0, r0, r0
    c3b8:	00000000 	andeq	r0, r0, r0
    c3bc:	00000000 	andeq	r0, r0, r0
    c3c0:	00000000 	andeq	r0, r0, r0
    c3c4:	00000000 	andeq	r0, r0, r0
    c3c8:	00000000 	andeq	r0, r0, r0
    c3cc:	00000000 	andeq	r0, r0, r0
    c3d0:	00000000 	andeq	r0, r0, r0
    c3d4:	00000000 	andeq	r0, r0, r0
    c3d8:	00000000 	andeq	r0, r0, r0
    c3dc:	00000000 	andeq	r0, r0, r0
    c3e0:	00000000 	andeq	r0, r0, r0
    c3e4:	00000000 	andeq	r0, r0, r0
    c3e8:	00000000 	andeq	r0, r0, r0
    c3ec:	00000000 	andeq	r0, r0, r0
    c3f0:	00000000 	andeq	r0, r0, r0
    c3f4:	00000000 	andeq	r0, r0, r0
    c3f8:	00000000 	andeq	r0, r0, r0
    c3fc:	00000000 	andeq	r0, r0, r0
    c400:	00000000 	andeq	r0, r0, r0
    c404:	00000000 	andeq	r0, r0, r0
    c408:	00000000 	andeq	r0, r0, r0
    c40c:	00000000 	andeq	r0, r0, r0
    c410:	00000000 	andeq	r0, r0, r0
    c414:	00000000 	andeq	r0, r0, r0
    c418:	00000000 	andeq	r0, r0, r0
    c41c:	00000000 	andeq	r0, r0, r0
    c420:	00000000 	andeq	r0, r0, r0
    c424:	00000000 	andeq	r0, r0, r0
    c428:	00000000 	andeq	r0, r0, r0
    c42c:	00000000 	andeq	r0, r0, r0
    c430:	00000000 	andeq	r0, r0, r0
    c434:	00000000 	andeq	r0, r0, r0
    c438:	00000000 	andeq	r0, r0, r0
    c43c:	00000000 	andeq	r0, r0, r0
    c440:	00000000 	andeq	r0, r0, r0
    c444:	00000000 	andeq	r0, r0, r0
    c448:	00000000 	andeq	r0, r0, r0
    c44c:	00000000 	andeq	r0, r0, r0
    c450:	00000000 	andeq	r0, r0, r0
    c454:	00000000 	andeq	r0, r0, r0
    c458:	00000000 	andeq	r0, r0, r0
    c45c:	00000000 	andeq	r0, r0, r0
    c460:	00000000 	andeq	r0, r0, r0
    c464:	00000000 	andeq	r0, r0, r0
    c468:	00000000 	andeq	r0, r0, r0
    c46c:	00000000 	andeq	r0, r0, r0
    c470:	00000000 	andeq	r0, r0, r0
    c474:	00000000 	andeq	r0, r0, r0
    c478:	00000000 	andeq	r0, r0, r0
    c47c:	00000000 	andeq	r0, r0, r0
    c480:	00000000 	andeq	r0, r0, r0
    c484:	00000000 	andeq	r0, r0, r0
    c488:	00000000 	andeq	r0, r0, r0
    c48c:	00000000 	andeq	r0, r0, r0
    c490:	00000000 	andeq	r0, r0, r0
    c494:	00000000 	andeq	r0, r0, r0
    c498:	00000000 	andeq	r0, r0, r0
    c49c:	00000000 	andeq	r0, r0, r0
    c4a0:	00000000 	andeq	r0, r0, r0
    c4a4:	00000000 	andeq	r0, r0, r0
    c4a8:	00000000 	andeq	r0, r0, r0
    c4ac:	00000000 	andeq	r0, r0, r0
    c4b0:	00000000 	andeq	r0, r0, r0
    c4b4:	00000000 	andeq	r0, r0, r0
    c4b8:	00000000 	andeq	r0, r0, r0
    c4bc:	00000000 	andeq	r0, r0, r0
    c4c0:	00000000 	andeq	r0, r0, r0
    c4c4:	00000000 	andeq	r0, r0, r0
    c4c8:	00000000 	andeq	r0, r0, r0
    c4cc:	00000000 	andeq	r0, r0, r0
    c4d0:	00000000 	andeq	r0, r0, r0
    c4d4:	00000000 	andeq	r0, r0, r0
    c4d8:	00000000 	andeq	r0, r0, r0
    c4dc:	00000000 	andeq	r0, r0, r0
    c4e0:	00000000 	andeq	r0, r0, r0
    c4e4:	00000000 	andeq	r0, r0, r0
    c4e8:	00000000 	andeq	r0, r0, r0
    c4ec:	00000000 	andeq	r0, r0, r0
    c4f0:	00000000 	andeq	r0, r0, r0
    c4f4:	00000000 	andeq	r0, r0, r0
    c4f8:	00000000 	andeq	r0, r0, r0
    c4fc:	00000000 	andeq	r0, r0, r0
    c500:	00000000 	andeq	r0, r0, r0
    c504:	00000000 	andeq	r0, r0, r0
    c508:	00000000 	andeq	r0, r0, r0
    c50c:	00000000 	andeq	r0, r0, r0
    c510:	00000000 	andeq	r0, r0, r0
    c514:	00000000 	andeq	r0, r0, r0
    c518:	00000000 	andeq	r0, r0, r0
    c51c:	00000000 	andeq	r0, r0, r0
    c520:	00000000 	andeq	r0, r0, r0
    c524:	00000000 	andeq	r0, r0, r0
    c528:	00000000 	andeq	r0, r0, r0
    c52c:	00000000 	andeq	r0, r0, r0
    c530:	00000000 	andeq	r0, r0, r0
    c534:	00000000 	andeq	r0, r0, r0
    c538:	00000000 	andeq	r0, r0, r0
    c53c:	00000000 	andeq	r0, r0, r0
    c540:	00000000 	andeq	r0, r0, r0
    c544:	00000000 	andeq	r0, r0, r0
    c548:	00000000 	andeq	r0, r0, r0
    c54c:	00000000 	andeq	r0, r0, r0
    c550:	00000000 	andeq	r0, r0, r0
    c554:	00000000 	andeq	r0, r0, r0
    c558:	00000000 	andeq	r0, r0, r0
    c55c:	00000000 	andeq	r0, r0, r0
    c560:	00000000 	andeq	r0, r0, r0
    c564:	00000000 	andeq	r0, r0, r0
    c568:	00000000 	andeq	r0, r0, r0
    c56c:	00000000 	andeq	r0, r0, r0
    c570:	00000000 	andeq	r0, r0, r0
    c574:	00000000 	andeq	r0, r0, r0
    c578:	00000000 	andeq	r0, r0, r0
    c57c:	00000000 	andeq	r0, r0, r0
    c580:	00000000 	andeq	r0, r0, r0
    c584:	00000000 	andeq	r0, r0, r0
    c588:	00000000 	andeq	r0, r0, r0
    c58c:	00000000 	andeq	r0, r0, r0
    c590:	00000000 	andeq	r0, r0, r0
    c594:	00000000 	andeq	r0, r0, r0
    c598:	00000000 	andeq	r0, r0, r0
    c59c:	00000000 	andeq	r0, r0, r0
    c5a0:	00000000 	andeq	r0, r0, r0
    c5a4:	00000000 	andeq	r0, r0, r0
    c5a8:	00000000 	andeq	r0, r0, r0
    c5ac:	00000000 	andeq	r0, r0, r0
    c5b0:	00000000 	andeq	r0, r0, r0
    c5b4:	00000000 	andeq	r0, r0, r0
    c5b8:	00000000 	andeq	r0, r0, r0
    c5bc:	00000000 	andeq	r0, r0, r0
    c5c0:	00000000 	andeq	r0, r0, r0
    c5c4:	00000000 	andeq	r0, r0, r0
    c5c8:	00000000 	andeq	r0, r0, r0
    c5cc:	00000000 	andeq	r0, r0, r0
    c5d0:	00000000 	andeq	r0, r0, r0
    c5d4:	00000000 	andeq	r0, r0, r0
    c5d8:	00000000 	andeq	r0, r0, r0
    c5dc:	00000000 	andeq	r0, r0, r0
    c5e0:	00000000 	andeq	r0, r0, r0
    c5e4:	00000000 	andeq	r0, r0, r0
    c5e8:	00000000 	andeq	r0, r0, r0
    c5ec:	00000000 	andeq	r0, r0, r0
    c5f0:	00000000 	andeq	r0, r0, r0
    c5f4:	00000000 	andeq	r0, r0, r0

0000c5f8 <ModuleFactory::infos>:
	static inline SeqMap<ModuleTypeSlug, ModuleInfoView, MAX_MODULE_TYPES> infos;
    c5f8:	00000000 	andeq	r0, r0, r0
    c5fc:	00000000 	andeq	r0, r0, r0
    c600:	00000000 	andeq	r0, r0, r0
    c604:	00000000 	andeq	r0, r0, r0
    c608:	00000000 	andeq	r0, r0, r0
    c60c:	00000000 	andeq	r0, r0, r0
    c610:	00000000 	andeq	r0, r0, r0
    c614:	00000000 	andeq	r0, r0, r0
    c618:	00000000 	andeq	r0, r0, r0
    c61c:	00000000 	andeq	r0, r0, r0
    c620:	00000000 	andeq	r0, r0, r0
    c624:	00000000 	andeq	r0, r0, r0
    c628:	00000000 	andeq	r0, r0, r0
    c62c:	00000000 	andeq	r0, r0, r0
    c630:	00000000 	andeq	r0, r0, r0
    c634:	00000000 	andeq	r0, r0, r0
    c638:	00000000 	andeq	r0, r0, r0
    c63c:	00000000 	andeq	r0, r0, r0
    c640:	00000000 	andeq	r0, r0, r0
    c644:	00000000 	andeq	r0, r0, r0
    c648:	00000000 	andeq	r0, r0, r0
    c64c:	00000000 	andeq	r0, r0, r0
    c650:	00000000 	andeq	r0, r0, r0
    c654:	00000000 	andeq	r0, r0, r0
    c658:	00000000 	andeq	r0, r0, r0
    c65c:	00000000 	andeq	r0, r0, r0
    c660:	00000000 	andeq	r0, r0, r0
    c664:	00000000 	andeq	r0, r0, r0
    c668:	00000000 	andeq	r0, r0, r0
    c66c:	00000000 	andeq	r0, r0, r0
    c670:	00000000 	andeq	r0, r0, r0
    c674:	00000000 	andeq	r0, r0, r0
    c678:	00000000 	andeq	r0, r0, r0
    c67c:	00000000 	andeq	r0, r0, r0
    c680:	00000000 	andeq	r0, r0, r0
    c684:	00000000 	andeq	r0, r0, r0
    c688:	00000000 	andeq	r0, r0, r0
    c68c:	00000000 	andeq	r0, r0, r0
    c690:	00000000 	andeq	r0, r0, r0
    c694:	00000000 	andeq	r0, r0, r0
    c698:	00000000 	andeq	r0, r0, r0
    c69c:	00000000 	andeq	r0, r0, r0
    c6a0:	00000000 	andeq	r0, r0, r0
    c6a4:	00000000 	andeq	r0, r0, r0
    c6a8:	00000000 	andeq	r0, r0, r0
    c6ac:	00000000 	andeq	r0, r0, r0
    c6b0:	00000000 	andeq	r0, r0, r0
    c6b4:	00000000 	andeq	r0, r0, r0
    c6b8:	00000000 	andeq	r0, r0, r0
    c6bc:	00000000 	andeq	r0, r0, r0
    c6c0:	00000000 	andeq	r0, r0, r0
    c6c4:	00000000 	andeq	r0, r0, r0
    c6c8:	00000000 	andeq	r0, r0, r0
    c6cc:	00000000 	andeq	r0, r0, r0
    c6d0:	00000000 	andeq	r0, r0, r0
    c6d4:	00000000 	andeq	r0, r0, r0
    c6d8:	00000000 	andeq	r0, r0, r0
    c6dc:	00000000 	andeq	r0, r0, r0
    c6e0:	00000000 	andeq	r0, r0, r0
    c6e4:	00000000 	andeq	r0, r0, r0
    c6e8:	00000000 	andeq	r0, r0, r0
    c6ec:	00000000 	andeq	r0, r0, r0
    c6f0:	00000000 	andeq	r0, r0, r0
    c6f4:	00000000 	andeq	r0, r0, r0
    c6f8:	00000000 	andeq	r0, r0, r0
    c6fc:	00000000 	andeq	r0, r0, r0
    c700:	00000000 	andeq	r0, r0, r0
    c704:	00000000 	andeq	r0, r0, r0
    c708:	00000000 	andeq	r0, r0, r0
    c70c:	00000000 	andeq	r0, r0, r0
    c710:	00000000 	andeq	r0, r0, r0
    c714:	00000000 	andeq	r0, r0, r0
    c718:	00000000 	andeq	r0, r0, r0
    c71c:	00000000 	andeq	r0, r0, r0
    c720:	00000000 	andeq	r0, r0, r0
    c724:	00000000 	andeq	r0, r0, r0
    c728:	00000000 	andeq	r0, r0, r0
    c72c:	00000000 	andeq	r0, r0, r0
    c730:	00000000 	andeq	r0, r0, r0
    c734:	00000000 	andeq	r0, r0, r0
    c738:	00000000 	andeq	r0, r0, r0
    c73c:	00000000 	andeq	r0, r0, r0
    c740:	00000000 	andeq	r0, r0, r0
    c744:	00000000 	andeq	r0, r0, r0
    c748:	00000000 	andeq	r0, r0, r0
    c74c:	00000000 	andeq	r0, r0, r0
    c750:	00000000 	andeq	r0, r0, r0
    c754:	00000000 	andeq	r0, r0, r0
    c758:	00000000 	andeq	r0, r0, r0
    c75c:	00000000 	andeq	r0, r0, r0
    c760:	00000000 	andeq	r0, r0, r0
    c764:	00000000 	andeq	r0, r0, r0
    c768:	00000000 	andeq	r0, r0, r0
    c76c:	00000000 	andeq	r0, r0, r0
    c770:	00000000 	andeq	r0, r0, r0
    c774:	00000000 	andeq	r0, r0, r0
    c778:	00000000 	andeq	r0, r0, r0
    c77c:	00000000 	andeq	r0, r0, r0
    c780:	00000000 	andeq	r0, r0, r0
    c784:	00000000 	andeq	r0, r0, r0
    c788:	00000000 	andeq	r0, r0, r0
    c78c:	00000000 	andeq	r0, r0, r0
    c790:	00000000 	andeq	r0, r0, r0
    c794:	00000000 	andeq	r0, r0, r0
    c798:	00000000 	andeq	r0, r0, r0
    c79c:	00000000 	andeq	r0, r0, r0
    c7a0:	00000000 	andeq	r0, r0, r0
    c7a4:	00000000 	andeq	r0, r0, r0
    c7a8:	00000000 	andeq	r0, r0, r0
    c7ac:	00000000 	andeq	r0, r0, r0
    c7b0:	00000000 	andeq	r0, r0, r0
    c7b4:	00000000 	andeq	r0, r0, r0
    c7b8:	00000000 	andeq	r0, r0, r0
    c7bc:	00000000 	andeq	r0, r0, r0
    c7c0:	00000000 	andeq	r0, r0, r0
    c7c4:	00000000 	andeq	r0, r0, r0
    c7c8:	00000000 	andeq	r0, r0, r0
    c7cc:	00000000 	andeq	r0, r0, r0
    c7d0:	00000000 	andeq	r0, r0, r0
    c7d4:	00000000 	andeq	r0, r0, r0
    c7d8:	00000000 	andeq	r0, r0, r0
    c7dc:	00000000 	andeq	r0, r0, r0
    c7e0:	00000000 	andeq	r0, r0, r0
    c7e4:	00000000 	andeq	r0, r0, r0
    c7e8:	00000000 	andeq	r0, r0, r0
    c7ec:	00000000 	andeq	r0, r0, r0
    c7f0:	00000000 	andeq	r0, r0, r0
    c7f4:	00000000 	andeq	r0, r0, r0
    c7f8:	00000000 	andeq	r0, r0, r0
    c7fc:	00000000 	andeq	r0, r0, r0
    c800:	00000000 	andeq	r0, r0, r0
    c804:	00000000 	andeq	r0, r0, r0
    c808:	00000000 	andeq	r0, r0, r0
    c80c:	00000000 	andeq	r0, r0, r0
    c810:	00000000 	andeq	r0, r0, r0
    c814:	00000000 	andeq	r0, r0, r0
    c818:	00000000 	andeq	r0, r0, r0
    c81c:	00000000 	andeq	r0, r0, r0
    c820:	00000000 	andeq	r0, r0, r0
    c824:	00000000 	andeq	r0, r0, r0
    c828:	00000000 	andeq	r0, r0, r0
    c82c:	00000000 	andeq	r0, r0, r0
    c830:	00000000 	andeq	r0, r0, r0
    c834:	00000000 	andeq	r0, r0, r0
    c838:	00000000 	andeq	r0, r0, r0
    c83c:	00000000 	andeq	r0, r0, r0
    c840:	00000000 	andeq	r0, r0, r0
    c844:	00000000 	andeq	r0, r0, r0
    c848:	00000000 	andeq	r0, r0, r0
    c84c:	00000000 	andeq	r0, r0, r0
    c850:	00000000 	andeq	r0, r0, r0
    c854:	00000000 	andeq	r0, r0, r0
    c858:	00000000 	andeq	r0, r0, r0
    c85c:	00000000 	andeq	r0, r0, r0
    c860:	00000000 	andeq	r0, r0, r0
    c864:	00000000 	andeq	r0, r0, r0
    c868:	00000000 	andeq	r0, r0, r0
    c86c:	00000000 	andeq	r0, r0, r0
    c870:	00000000 	andeq	r0, r0, r0
    c874:	00000000 	andeq	r0, r0, r0
    c878:	00000000 	andeq	r0, r0, r0
    c87c:	00000000 	andeq	r0, r0, r0
    c880:	00000000 	andeq	r0, r0, r0
    c884:	00000000 	andeq	r0, r0, r0
    c888:	00000000 	andeq	r0, r0, r0
    c88c:	00000000 	andeq	r0, r0, r0
    c890:	00000000 	andeq	r0, r0, r0
    c894:	00000000 	andeq	r0, r0, r0
    c898:	00000000 	andeq	r0, r0, r0
    c89c:	00000000 	andeq	r0, r0, r0
    c8a0:	00000000 	andeq	r0, r0, r0
    c8a4:	00000000 	andeq	r0, r0, r0
    c8a8:	00000000 	andeq	r0, r0, r0
    c8ac:	00000000 	andeq	r0, r0, r0
    c8b0:	00000000 	andeq	r0, r0, r0
    c8b4:	00000000 	andeq	r0, r0, r0
    c8b8:	00000000 	andeq	r0, r0, r0
    c8bc:	00000000 	andeq	r0, r0, r0
    c8c0:	00000000 	andeq	r0, r0, r0
    c8c4:	00000000 	andeq	r0, r0, r0
    c8c8:	00000000 	andeq	r0, r0, r0
    c8cc:	00000000 	andeq	r0, r0, r0
    c8d0:	00000000 	andeq	r0, r0, r0
    c8d4:	00000000 	andeq	r0, r0, r0
    c8d8:	00000000 	andeq	r0, r0, r0
    c8dc:	00000000 	andeq	r0, r0, r0
    c8e0:	00000000 	andeq	r0, r0, r0
    c8e4:	00000000 	andeq	r0, r0, r0
    c8e8:	00000000 	andeq	r0, r0, r0
    c8ec:	00000000 	andeq	r0, r0, r0
    c8f0:	00000000 	andeq	r0, r0, r0
    c8f4:	00000000 	andeq	r0, r0, r0
    c8f8:	00000000 	andeq	r0, r0, r0
    c8fc:	00000000 	andeq	r0, r0, r0
    c900:	00000000 	andeq	r0, r0, r0
    c904:	00000000 	andeq	r0, r0, r0
    c908:	00000000 	andeq	r0, r0, r0
    c90c:	00000000 	andeq	r0, r0, r0
    c910:	00000000 	andeq	r0, r0, r0
    c914:	00000000 	andeq	r0, r0, r0
    c918:	00000000 	andeq	r0, r0, r0
    c91c:	00000000 	andeq	r0, r0, r0
    c920:	00000000 	andeq	r0, r0, r0
    c924:	00000000 	andeq	r0, r0, r0
    c928:	00000000 	andeq	r0, r0, r0
    c92c:	00000000 	andeq	r0, r0, r0
    c930:	00000000 	andeq	r0, r0, r0
    c934:	00000000 	andeq	r0, r0, r0
    c938:	00000000 	andeq	r0, r0, r0
    c93c:	00000000 	andeq	r0, r0, r0
    c940:	00000000 	andeq	r0, r0, r0
    c944:	00000000 	andeq	r0, r0, r0
    c948:	00000000 	andeq	r0, r0, r0
    c94c:	00000000 	andeq	r0, r0, r0
    c950:	00000000 	andeq	r0, r0, r0
    c954:	00000000 	andeq	r0, r0, r0
    c958:	00000000 	andeq	r0, r0, r0
    c95c:	00000000 	andeq	r0, r0, r0
    c960:	00000000 	andeq	r0, r0, r0
    c964:	00000000 	andeq	r0, r0, r0
    c968:	00000000 	andeq	r0, r0, r0
    c96c:	00000000 	andeq	r0, r0, r0
    c970:	00000000 	andeq	r0, r0, r0
    c974:	00000000 	andeq	r0, r0, r0
    c978:	00000000 	andeq	r0, r0, r0
    c97c:	00000000 	andeq	r0, r0, r0
    c980:	00000000 	andeq	r0, r0, r0
    c984:	00000000 	andeq	r0, r0, r0
    c988:	00000000 	andeq	r0, r0, r0
    c98c:	00000000 	andeq	r0, r0, r0
    c990:	00000000 	andeq	r0, r0, r0
    c994:	00000000 	andeq	r0, r0, r0
    c998:	00000000 	andeq	r0, r0, r0
    c99c:	00000000 	andeq	r0, r0, r0
    c9a0:	00000000 	andeq	r0, r0, r0
    c9a4:	00000000 	andeq	r0, r0, r0
    c9a8:	00000000 	andeq	r0, r0, r0
    c9ac:	00000000 	andeq	r0, r0, r0
    c9b0:	00000000 	andeq	r0, r0, r0
    c9b4:	00000000 	andeq	r0, r0, r0
    c9b8:	00000000 	andeq	r0, r0, r0
    c9bc:	00000000 	andeq	r0, r0, r0
    c9c0:	00000000 	andeq	r0, r0, r0
    c9c4:	00000000 	andeq	r0, r0, r0
    c9c8:	00000000 	andeq	r0, r0, r0
    c9cc:	00000000 	andeq	r0, r0, r0
    c9d0:	00000000 	andeq	r0, r0, r0
    c9d4:	00000000 	andeq	r0, r0, r0
    c9d8:	00000000 	andeq	r0, r0, r0
    c9dc:	00000000 	andeq	r0, r0, r0
    c9e0:	00000000 	andeq	r0, r0, r0
    c9e4:	00000000 	andeq	r0, r0, r0
    c9e8:	00000000 	andeq	r0, r0, r0
    c9ec:	00000000 	andeq	r0, r0, r0
    c9f0:	00000000 	andeq	r0, r0, r0
    c9f4:	00000000 	andeq	r0, r0, r0
    c9f8:	00000000 	andeq	r0, r0, r0
    c9fc:	00000000 	andeq	r0, r0, r0
    ca00:	00000000 	andeq	r0, r0, r0
    ca04:	00000000 	andeq	r0, r0, r0
    ca08:	00000000 	andeq	r0, r0, r0
    ca0c:	00000000 	andeq	r0, r0, r0
    ca10:	00000000 	andeq	r0, r0, r0
    ca14:	00000000 	andeq	r0, r0, r0
    ca18:	00000000 	andeq	r0, r0, r0
    ca1c:	00000000 	andeq	r0, r0, r0
    ca20:	00000000 	andeq	r0, r0, r0
    ca24:	00000000 	andeq	r0, r0, r0
    ca28:	00000000 	andeq	r0, r0, r0
    ca2c:	00000000 	andeq	r0, r0, r0
    ca30:	00000000 	andeq	r0, r0, r0
    ca34:	00000000 	andeq	r0, r0, r0
    ca38:	00000000 	andeq	r0, r0, r0
    ca3c:	00000000 	andeq	r0, r0, r0
    ca40:	00000000 	andeq	r0, r0, r0
    ca44:	00000000 	andeq	r0, r0, r0
    ca48:	00000000 	andeq	r0, r0, r0
    ca4c:	00000000 	andeq	r0, r0, r0
    ca50:	00000000 	andeq	r0, r0, r0
    ca54:	00000000 	andeq	r0, r0, r0
    ca58:	00000000 	andeq	r0, r0, r0
    ca5c:	00000000 	andeq	r0, r0, r0
    ca60:	00000000 	andeq	r0, r0, r0
    ca64:	00000000 	andeq	r0, r0, r0
    ca68:	00000000 	andeq	r0, r0, r0
    ca6c:	00000000 	andeq	r0, r0, r0
    ca70:	00000000 	andeq	r0, r0, r0
    ca74:	00000000 	andeq	r0, r0, r0
    ca78:	00000000 	andeq	r0, r0, r0
    ca7c:	00000000 	andeq	r0, r0, r0
    ca80:	00000000 	andeq	r0, r0, r0
    ca84:	00000000 	andeq	r0, r0, r0
    ca88:	00000000 	andeq	r0, r0, r0
    ca8c:	00000000 	andeq	r0, r0, r0
    ca90:	00000000 	andeq	r0, r0, r0
    ca94:	00000000 	andeq	r0, r0, r0
    ca98:	00000000 	andeq	r0, r0, r0
    ca9c:	00000000 	andeq	r0, r0, r0
    caa0:	00000000 	andeq	r0, r0, r0
    caa4:	00000000 	andeq	r0, r0, r0
    caa8:	00000000 	andeq	r0, r0, r0
    caac:	00000000 	andeq	r0, r0, r0
    cab0:	00000000 	andeq	r0, r0, r0
    cab4:	00000000 	andeq	r0, r0, r0
    cab8:	00000000 	andeq	r0, r0, r0
    cabc:	00000000 	andeq	r0, r0, r0
    cac0:	00000000 	andeq	r0, r0, r0
    cac4:	00000000 	andeq	r0, r0, r0
    cac8:	00000000 	andeq	r0, r0, r0
    cacc:	00000000 	andeq	r0, r0, r0
    cad0:	00000000 	andeq	r0, r0, r0
    cad4:	00000000 	andeq	r0, r0, r0
    cad8:	00000000 	andeq	r0, r0, r0
    cadc:	00000000 	andeq	r0, r0, r0
    cae0:	00000000 	andeq	r0, r0, r0
    cae4:	00000000 	andeq	r0, r0, r0
    cae8:	00000000 	andeq	r0, r0, r0
    caec:	00000000 	andeq	r0, r0, r0
    caf0:	00000000 	andeq	r0, r0, r0
    caf4:	00000000 	andeq	r0, r0, r0
    caf8:	00000000 	andeq	r0, r0, r0
    cafc:	00000000 	andeq	r0, r0, r0
    cb00:	00000000 	andeq	r0, r0, r0
    cb04:	00000000 	andeq	r0, r0, r0
    cb08:	00000000 	andeq	r0, r0, r0
    cb0c:	00000000 	andeq	r0, r0, r0
    cb10:	00000000 	andeq	r0, r0, r0
    cb14:	00000000 	andeq	r0, r0, r0
    cb18:	00000000 	andeq	r0, r0, r0
    cb1c:	00000000 	andeq	r0, r0, r0
    cb20:	00000000 	andeq	r0, r0, r0
    cb24:	00000000 	andeq	r0, r0, r0
    cb28:	00000000 	andeq	r0, r0, r0
    cb2c:	00000000 	andeq	r0, r0, r0
    cb30:	00000000 	andeq	r0, r0, r0
    cb34:	00000000 	andeq	r0, r0, r0
    cb38:	00000000 	andeq	r0, r0, r0
    cb3c:	00000000 	andeq	r0, r0, r0
    cb40:	00000000 	andeq	r0, r0, r0
    cb44:	00000000 	andeq	r0, r0, r0
    cb48:	00000000 	andeq	r0, r0, r0
    cb4c:	00000000 	andeq	r0, r0, r0
    cb50:	00000000 	andeq	r0, r0, r0
    cb54:	00000000 	andeq	r0, r0, r0
    cb58:	00000000 	andeq	r0, r0, r0
    cb5c:	00000000 	andeq	r0, r0, r0
    cb60:	00000000 	andeq	r0, r0, r0
    cb64:	00000000 	andeq	r0, r0, r0
    cb68:	00000000 	andeq	r0, r0, r0
    cb6c:	00000000 	andeq	r0, r0, r0
    cb70:	00000000 	andeq	r0, r0, r0
    cb74:	00000000 	andeq	r0, r0, r0
    cb78:	00000000 	andeq	r0, r0, r0
    cb7c:	00000000 	andeq	r0, r0, r0
    cb80:	00000000 	andeq	r0, r0, r0
    cb84:	00000000 	andeq	r0, r0, r0
    cb88:	00000000 	andeq	r0, r0, r0
    cb8c:	00000000 	andeq	r0, r0, r0
    cb90:	00000000 	andeq	r0, r0, r0
    cb94:	00000000 	andeq	r0, r0, r0
    cb98:	00000000 	andeq	r0, r0, r0
    cb9c:	00000000 	andeq	r0, r0, r0
    cba0:	00000000 	andeq	r0, r0, r0
    cba4:	00000000 	andeq	r0, r0, r0
    cba8:	00000000 	andeq	r0, r0, r0
    cbac:	00000000 	andeq	r0, r0, r0
    cbb0:	00000000 	andeq	r0, r0, r0
    cbb4:	00000000 	andeq	r0, r0, r0
    cbb8:	00000000 	andeq	r0, r0, r0
    cbbc:	00000000 	andeq	r0, r0, r0
    cbc0:	00000000 	andeq	r0, r0, r0
    cbc4:	00000000 	andeq	r0, r0, r0
    cbc8:	00000000 	andeq	r0, r0, r0
    cbcc:	00000000 	andeq	r0, r0, r0
    cbd0:	00000000 	andeq	r0, r0, r0
    cbd4:	00000000 	andeq	r0, r0, r0
    cbd8:	00000000 	andeq	r0, r0, r0
    cbdc:	00000000 	andeq	r0, r0, r0
    cbe0:	00000000 	andeq	r0, r0, r0
    cbe4:	00000000 	andeq	r0, r0, r0
    cbe8:	00000000 	andeq	r0, r0, r0
    cbec:	00000000 	andeq	r0, r0, r0
    cbf0:	00000000 	andeq	r0, r0, r0
    cbf4:	00000000 	andeq	r0, r0, r0
    cbf8:	00000000 	andeq	r0, r0, r0
    cbfc:	00000000 	andeq	r0, r0, r0
    cc00:	00000000 	andeq	r0, r0, r0
    cc04:	00000000 	andeq	r0, r0, r0
    cc08:	00000000 	andeq	r0, r0, r0
    cc0c:	00000000 	andeq	r0, r0, r0
    cc10:	00000000 	andeq	r0, r0, r0
    cc14:	00000000 	andeq	r0, r0, r0
    cc18:	00000000 	andeq	r0, r0, r0
    cc1c:	00000000 	andeq	r0, r0, r0
    cc20:	00000000 	andeq	r0, r0, r0
    cc24:	00000000 	andeq	r0, r0, r0
    cc28:	00000000 	andeq	r0, r0, r0
    cc2c:	00000000 	andeq	r0, r0, r0
    cc30:	00000000 	andeq	r0, r0, r0
    cc34:	00000000 	andeq	r0, r0, r0
    cc38:	00000000 	andeq	r0, r0, r0
    cc3c:	00000000 	andeq	r0, r0, r0
    cc40:	00000000 	andeq	r0, r0, r0
    cc44:	00000000 	andeq	r0, r0, r0
    cc48:	00000000 	andeq	r0, r0, r0
    cc4c:	00000000 	andeq	r0, r0, r0
    cc50:	00000000 	andeq	r0, r0, r0
    cc54:	00000000 	andeq	r0, r0, r0
    cc58:	00000000 	andeq	r0, r0, r0
    cc5c:	00000000 	andeq	r0, r0, r0
    cc60:	00000000 	andeq	r0, r0, r0
    cc64:	00000000 	andeq	r0, r0, r0
    cc68:	00000000 	andeq	r0, r0, r0
    cc6c:	00000000 	andeq	r0, r0, r0
    cc70:	00000000 	andeq	r0, r0, r0
    cc74:	00000000 	andeq	r0, r0, r0
    cc78:	00000000 	andeq	r0, r0, r0
    cc7c:	00000000 	andeq	r0, r0, r0
    cc80:	00000000 	andeq	r0, r0, r0
    cc84:	00000000 	andeq	r0, r0, r0
    cc88:	00000000 	andeq	r0, r0, r0
    cc8c:	00000000 	andeq	r0, r0, r0
    cc90:	00000000 	andeq	r0, r0, r0
    cc94:	00000000 	andeq	r0, r0, r0
    cc98:	00000000 	andeq	r0, r0, r0
    cc9c:	00000000 	andeq	r0, r0, r0
    cca0:	00000000 	andeq	r0, r0, r0
    cca4:	00000000 	andeq	r0, r0, r0
    cca8:	00000000 	andeq	r0, r0, r0
    ccac:	00000000 	andeq	r0, r0, r0
    ccb0:	00000000 	andeq	r0, r0, r0
    ccb4:	00000000 	andeq	r0, r0, r0
    ccb8:	00000000 	andeq	r0, r0, r0
    ccbc:	00000000 	andeq	r0, r0, r0
    ccc0:	00000000 	andeq	r0, r0, r0
    ccc4:	00000000 	andeq	r0, r0, r0
    ccc8:	00000000 	andeq	r0, r0, r0
    cccc:	00000000 	andeq	r0, r0, r0
    ccd0:	00000000 	andeq	r0, r0, r0
    ccd4:	00000000 	andeq	r0, r0, r0
    ccd8:	00000000 	andeq	r0, r0, r0
    ccdc:	00000000 	andeq	r0, r0, r0
    cce0:	00000000 	andeq	r0, r0, r0
    cce4:	00000000 	andeq	r0, r0, r0
    cce8:	00000000 	andeq	r0, r0, r0
    ccec:	00000000 	andeq	r0, r0, r0
    ccf0:	00000000 	andeq	r0, r0, r0
    ccf4:	00000000 	andeq	r0, r0, r0
    ccf8:	00000000 	andeq	r0, r0, r0
    ccfc:	00000000 	andeq	r0, r0, r0
    cd00:	00000000 	andeq	r0, r0, r0
    cd04:	00000000 	andeq	r0, r0, r0
    cd08:	00000000 	andeq	r0, r0, r0
    cd0c:	00000000 	andeq	r0, r0, r0
    cd10:	00000000 	andeq	r0, r0, r0
    cd14:	00000000 	andeq	r0, r0, r0
    cd18:	00000000 	andeq	r0, r0, r0
    cd1c:	00000000 	andeq	r0, r0, r0
    cd20:	00000000 	andeq	r0, r0, r0
    cd24:	00000000 	andeq	r0, r0, r0
    cd28:	00000000 	andeq	r0, r0, r0
    cd2c:	00000000 	andeq	r0, r0, r0
    cd30:	00000000 	andeq	r0, r0, r0
    cd34:	00000000 	andeq	r0, r0, r0
    cd38:	00000000 	andeq	r0, r0, r0
    cd3c:	00000000 	andeq	r0, r0, r0
    cd40:	00000000 	andeq	r0, r0, r0
    cd44:	00000000 	andeq	r0, r0, r0
    cd48:	00000000 	andeq	r0, r0, r0
    cd4c:	00000000 	andeq	r0, r0, r0
    cd50:	00000000 	andeq	r0, r0, r0
    cd54:	00000000 	andeq	r0, r0, r0
    cd58:	00000000 	andeq	r0, r0, r0
    cd5c:	00000000 	andeq	r0, r0, r0
    cd60:	00000000 	andeq	r0, r0, r0
    cd64:	00000000 	andeq	r0, r0, r0
    cd68:	00000000 	andeq	r0, r0, r0
    cd6c:	00000000 	andeq	r0, r0, r0
    cd70:	00000000 	andeq	r0, r0, r0
    cd74:	00000000 	andeq	r0, r0, r0
    cd78:	00000000 	andeq	r0, r0, r0
    cd7c:	00000000 	andeq	r0, r0, r0
    cd80:	00000000 	andeq	r0, r0, r0
    cd84:	00000000 	andeq	r0, r0, r0
    cd88:	00000000 	andeq	r0, r0, r0
    cd8c:	00000000 	andeq	r0, r0, r0
    cd90:	00000000 	andeq	r0, r0, r0
    cd94:	00000000 	andeq	r0, r0, r0
    cd98:	00000000 	andeq	r0, r0, r0
    cd9c:	00000000 	andeq	r0, r0, r0
    cda0:	00000000 	andeq	r0, r0, r0
    cda4:	00000000 	andeq	r0, r0, r0
    cda8:	00000000 	andeq	r0, r0, r0
    cdac:	00000000 	andeq	r0, r0, r0
    cdb0:	00000000 	andeq	r0, r0, r0
    cdb4:	00000000 	andeq	r0, r0, r0
    cdb8:	00000000 	andeq	r0, r0, r0
    cdbc:	00000000 	andeq	r0, r0, r0
    cdc0:	00000000 	andeq	r0, r0, r0
    cdc4:	00000000 	andeq	r0, r0, r0
    cdc8:	00000000 	andeq	r0, r0, r0
    cdcc:	00000000 	andeq	r0, r0, r0
    cdd0:	00000000 	andeq	r0, r0, r0
    cdd4:	00000000 	andeq	r0, r0, r0
    cdd8:	00000000 	andeq	r0, r0, r0
    cddc:	00000000 	andeq	r0, r0, r0
    cde0:	00000000 	andeq	r0, r0, r0
    cde4:	00000000 	andeq	r0, r0, r0
    cde8:	00000000 	andeq	r0, r0, r0
    cdec:	00000000 	andeq	r0, r0, r0
    cdf0:	00000000 	andeq	r0, r0, r0
    cdf4:	00000000 	andeq	r0, r0, r0
    cdf8:	00000000 	andeq	r0, r0, r0
    cdfc:	00000000 	andeq	r0, r0, r0
    ce00:	00000000 	andeq	r0, r0, r0
    ce04:	00000000 	andeq	r0, r0, r0
    ce08:	00000000 	andeq	r0, r0, r0
    ce0c:	00000000 	andeq	r0, r0, r0
    ce10:	00000000 	andeq	r0, r0, r0
    ce14:	00000000 	andeq	r0, r0, r0
    ce18:	00000000 	andeq	r0, r0, r0
    ce1c:	00000000 	andeq	r0, r0, r0
    ce20:	00000000 	andeq	r0, r0, r0
    ce24:	00000000 	andeq	r0, r0, r0
    ce28:	00000000 	andeq	r0, r0, r0
    ce2c:	00000000 	andeq	r0, r0, r0
    ce30:	00000000 	andeq	r0, r0, r0
    ce34:	00000000 	andeq	r0, r0, r0
    ce38:	00000000 	andeq	r0, r0, r0
    ce3c:	00000000 	andeq	r0, r0, r0
    ce40:	00000000 	andeq	r0, r0, r0
    ce44:	00000000 	andeq	r0, r0, r0
    ce48:	00000000 	andeq	r0, r0, r0
    ce4c:	00000000 	andeq	r0, r0, r0
    ce50:	00000000 	andeq	r0, r0, r0
    ce54:	00000000 	andeq	r0, r0, r0
    ce58:	00000000 	andeq	r0, r0, r0
    ce5c:	00000000 	andeq	r0, r0, r0
    ce60:	00000000 	andeq	r0, r0, r0
    ce64:	00000000 	andeq	r0, r0, r0
    ce68:	00000000 	andeq	r0, r0, r0
    ce6c:	00000000 	andeq	r0, r0, r0
    ce70:	00000000 	andeq	r0, r0, r0
    ce74:	00000000 	andeq	r0, r0, r0
    ce78:	00000000 	andeq	r0, r0, r0
    ce7c:	00000000 	andeq	r0, r0, r0
    ce80:	00000000 	andeq	r0, r0, r0
    ce84:	00000000 	andeq	r0, r0, r0
    ce88:	00000000 	andeq	r0, r0, r0
    ce8c:	00000000 	andeq	r0, r0, r0
    ce90:	00000000 	andeq	r0, r0, r0
    ce94:	00000000 	andeq	r0, r0, r0
    ce98:	00000000 	andeq	r0, r0, r0
    ce9c:	00000000 	andeq	r0, r0, r0
    cea0:	00000000 	andeq	r0, r0, r0
    cea4:	00000000 	andeq	r0, r0, r0
    cea8:	00000000 	andeq	r0, r0, r0
    ceac:	00000000 	andeq	r0, r0, r0
    ceb0:	00000000 	andeq	r0, r0, r0
    ceb4:	00000000 	andeq	r0, r0, r0
    ceb8:	00000000 	andeq	r0, r0, r0
    cebc:	00000000 	andeq	r0, r0, r0
    cec0:	00000000 	andeq	r0, r0, r0
    cec4:	00000000 	andeq	r0, r0, r0
    cec8:	00000000 	andeq	r0, r0, r0
    cecc:	00000000 	andeq	r0, r0, r0
    ced0:	00000000 	andeq	r0, r0, r0
    ced4:	00000000 	andeq	r0, r0, r0
    ced8:	00000000 	andeq	r0, r0, r0
    cedc:	00000000 	andeq	r0, r0, r0
    cee0:	00000000 	andeq	r0, r0, r0
    cee4:	00000000 	andeq	r0, r0, r0
    cee8:	00000000 	andeq	r0, r0, r0
    ceec:	00000000 	andeq	r0, r0, r0
    cef0:	00000000 	andeq	r0, r0, r0
    cef4:	00000000 	andeq	r0, r0, r0
    cef8:	00000000 	andeq	r0, r0, r0
    cefc:	00000000 	andeq	r0, r0, r0
    cf00:	00000000 	andeq	r0, r0, r0
    cf04:	00000000 	andeq	r0, r0, r0
    cf08:	00000000 	andeq	r0, r0, r0
    cf0c:	00000000 	andeq	r0, r0, r0
    cf10:	00000000 	andeq	r0, r0, r0
    cf14:	00000000 	andeq	r0, r0, r0
    cf18:	00000000 	andeq	r0, r0, r0
    cf1c:	00000000 	andeq	r0, r0, r0
    cf20:	00000000 	andeq	r0, r0, r0
    cf24:	00000000 	andeq	r0, r0, r0
    cf28:	00000000 	andeq	r0, r0, r0
    cf2c:	00000000 	andeq	r0, r0, r0
    cf30:	00000000 	andeq	r0, r0, r0
    cf34:	00000000 	andeq	r0, r0, r0
    cf38:	00000000 	andeq	r0, r0, r0
    cf3c:	00000000 	andeq	r0, r0, r0
    cf40:	00000000 	andeq	r0, r0, r0
    cf44:	00000000 	andeq	r0, r0, r0
    cf48:	00000000 	andeq	r0, r0, r0
    cf4c:	00000000 	andeq	r0, r0, r0
    cf50:	00000000 	andeq	r0, r0, r0
    cf54:	00000000 	andeq	r0, r0, r0
    cf58:	00000000 	andeq	r0, r0, r0
    cf5c:	00000000 	andeq	r0, r0, r0
    cf60:	00000000 	andeq	r0, r0, r0
    cf64:	00000000 	andeq	r0, r0, r0
    cf68:	00000000 	andeq	r0, r0, r0
    cf6c:	00000000 	andeq	r0, r0, r0
    cf70:	00000000 	andeq	r0, r0, r0
    cf74:	00000000 	andeq	r0, r0, r0
    cf78:	00000000 	andeq	r0, r0, r0
    cf7c:	00000000 	andeq	r0, r0, r0
    cf80:	00000000 	andeq	r0, r0, r0
    cf84:	00000000 	andeq	r0, r0, r0
    cf88:	00000000 	andeq	r0, r0, r0
    cf8c:	00000000 	andeq	r0, r0, r0
    cf90:	00000000 	andeq	r0, r0, r0
    cf94:	00000000 	andeq	r0, r0, r0
    cf98:	00000000 	andeq	r0, r0, r0
    cf9c:	00000000 	andeq	r0, r0, r0
    cfa0:	00000000 	andeq	r0, r0, r0
    cfa4:	00000000 	andeq	r0, r0, r0
    cfa8:	00000000 	andeq	r0, r0, r0
    cfac:	00000000 	andeq	r0, r0, r0
    cfb0:	00000000 	andeq	r0, r0, r0
    cfb4:	00000000 	andeq	r0, r0, r0
    cfb8:	00000000 	andeq	r0, r0, r0
    cfbc:	00000000 	andeq	r0, r0, r0
    cfc0:	00000000 	andeq	r0, r0, r0
    cfc4:	00000000 	andeq	r0, r0, r0
    cfc8:	00000000 	andeq	r0, r0, r0
    cfcc:	00000000 	andeq	r0, r0, r0
    cfd0:	00000000 	andeq	r0, r0, r0
    cfd4:	00000000 	andeq	r0, r0, r0
    cfd8:	00000000 	andeq	r0, r0, r0
    cfdc:	00000000 	andeq	r0, r0, r0
    cfe0:	00000000 	andeq	r0, r0, r0
    cfe4:	00000000 	andeq	r0, r0, r0
    cfe8:	00000000 	andeq	r0, r0, r0
    cfec:	00000000 	andeq	r0, r0, r0
    cff0:	00000000 	andeq	r0, r0, r0
    cff4:	00000000 	andeq	r0, r0, r0
    cff8:	00000000 	andeq	r0, r0, r0
    cffc:	00000000 	andeq	r0, r0, r0
    d000:	00000000 	andeq	r0, r0, r0
    d004:	00000000 	andeq	r0, r0, r0
    d008:	00000000 	andeq	r0, r0, r0
    d00c:	00000000 	andeq	r0, r0, r0
    d010:	00000000 	andeq	r0, r0, r0
    d014:	00000000 	andeq	r0, r0, r0
    d018:	00000000 	andeq	r0, r0, r0
    d01c:	00000000 	andeq	r0, r0, r0
    d020:	00000000 	andeq	r0, r0, r0
    d024:	00000000 	andeq	r0, r0, r0
    d028:	00000000 	andeq	r0, r0, r0
    d02c:	00000000 	andeq	r0, r0, r0
    d030:	00000000 	andeq	r0, r0, r0
    d034:	00000000 	andeq	r0, r0, r0
    d038:	00000000 	andeq	r0, r0, r0
    d03c:	00000000 	andeq	r0, r0, r0
    d040:	00000000 	andeq	r0, r0, r0
    d044:	00000000 	andeq	r0, r0, r0
    d048:	00000000 	andeq	r0, r0, r0
    d04c:	00000000 	andeq	r0, r0, r0
    d050:	00000000 	andeq	r0, r0, r0
    d054:	00000000 	andeq	r0, r0, r0
    d058:	00000000 	andeq	r0, r0, r0
    d05c:	00000000 	andeq	r0, r0, r0
    d060:	00000000 	andeq	r0, r0, r0
    d064:	00000000 	andeq	r0, r0, r0
    d068:	00000000 	andeq	r0, r0, r0
    d06c:	00000000 	andeq	r0, r0, r0
    d070:	00000000 	andeq	r0, r0, r0
    d074:	00000000 	andeq	r0, r0, r0
    d078:	00000000 	andeq	r0, r0, r0
    d07c:	00000000 	andeq	r0, r0, r0
    d080:	00000000 	andeq	r0, r0, r0
    d084:	00000000 	andeq	r0, r0, r0
    d088:	00000000 	andeq	r0, r0, r0
    d08c:	00000000 	andeq	r0, r0, r0
    d090:	00000000 	andeq	r0, r0, r0
    d094:	00000000 	andeq	r0, r0, r0
    d098:	00000000 	andeq	r0, r0, r0
    d09c:	00000000 	andeq	r0, r0, r0
    d0a0:	00000000 	andeq	r0, r0, r0
    d0a4:	00000000 	andeq	r0, r0, r0
    d0a8:	00000000 	andeq	r0, r0, r0
    d0ac:	00000000 	andeq	r0, r0, r0
    d0b0:	00000000 	andeq	r0, r0, r0
    d0b4:	00000000 	andeq	r0, r0, r0
    d0b8:	00000000 	andeq	r0, r0, r0
    d0bc:	00000000 	andeq	r0, r0, r0
    d0c0:	00000000 	andeq	r0, r0, r0
    d0c4:	00000000 	andeq	r0, r0, r0
    d0c8:	00000000 	andeq	r0, r0, r0
    d0cc:	00000000 	andeq	r0, r0, r0
    d0d0:	00000000 	andeq	r0, r0, r0
    d0d4:	00000000 	andeq	r0, r0, r0
    d0d8:	00000000 	andeq	r0, r0, r0
    d0dc:	00000000 	andeq	r0, r0, r0
    d0e0:	00000000 	andeq	r0, r0, r0
    d0e4:	00000000 	andeq	r0, r0, r0
    d0e8:	00000000 	andeq	r0, r0, r0
    d0ec:	00000000 	andeq	r0, r0, r0
    d0f0:	00000000 	andeq	r0, r0, r0
    d0f4:	00000000 	andeq	r0, r0, r0
    d0f8:	00000000 	andeq	r0, r0, r0
    d0fc:	00000000 	andeq	r0, r0, r0
    d100:	00000000 	andeq	r0, r0, r0
    d104:	00000000 	andeq	r0, r0, r0
    d108:	00000000 	andeq	r0, r0, r0
    d10c:	00000000 	andeq	r0, r0, r0
    d110:	00000000 	andeq	r0, r0, r0
    d114:	00000000 	andeq	r0, r0, r0
    d118:	00000000 	andeq	r0, r0, r0
    d11c:	00000000 	andeq	r0, r0, r0
    d120:	00000000 	andeq	r0, r0, r0
    d124:	00000000 	andeq	r0, r0, r0
    d128:	00000000 	andeq	r0, r0, r0
    d12c:	00000000 	andeq	r0, r0, r0
    d130:	00000000 	andeq	r0, r0, r0
    d134:	00000000 	andeq	r0, r0, r0
    d138:	00000000 	andeq	r0, r0, r0
    d13c:	00000000 	andeq	r0, r0, r0
    d140:	00000000 	andeq	r0, r0, r0
    d144:	00000000 	andeq	r0, r0, r0
    d148:	00000000 	andeq	r0, r0, r0
    d14c:	00000000 	andeq	r0, r0, r0
    d150:	00000000 	andeq	r0, r0, r0
    d154:	00000000 	andeq	r0, r0, r0
    d158:	00000000 	andeq	r0, r0, r0
    d15c:	00000000 	andeq	r0, r0, r0
    d160:	00000000 	andeq	r0, r0, r0
    d164:	00000000 	andeq	r0, r0, r0
    d168:	00000000 	andeq	r0, r0, r0
    d16c:	00000000 	andeq	r0, r0, r0
    d170:	00000000 	andeq	r0, r0, r0
    d174:	00000000 	andeq	r0, r0, r0
    d178:	00000000 	andeq	r0, r0, r0
    d17c:	00000000 	andeq	r0, r0, r0
    d180:	00000000 	andeq	r0, r0, r0
    d184:	00000000 	andeq	r0, r0, r0
    d188:	00000000 	andeq	r0, r0, r0
    d18c:	00000000 	andeq	r0, r0, r0
    d190:	00000000 	andeq	r0, r0, r0
    d194:	00000000 	andeq	r0, r0, r0
    d198:	00000000 	andeq	r0, r0, r0
    d19c:	00000000 	andeq	r0, r0, r0
    d1a0:	00000000 	andeq	r0, r0, r0
    d1a4:	00000000 	andeq	r0, r0, r0
    d1a8:	00000000 	andeq	r0, r0, r0
    d1ac:	00000000 	andeq	r0, r0, r0
    d1b0:	00000000 	andeq	r0, r0, r0
    d1b4:	00000000 	andeq	r0, r0, r0
    d1b8:	00000000 	andeq	r0, r0, r0
    d1bc:	00000000 	andeq	r0, r0, r0
    d1c0:	00000000 	andeq	r0, r0, r0
    d1c4:	00000000 	andeq	r0, r0, r0
    d1c8:	00000000 	andeq	r0, r0, r0
    d1cc:	00000000 	andeq	r0, r0, r0
    d1d0:	00000000 	andeq	r0, r0, r0
    d1d4:	00000000 	andeq	r0, r0, r0
    d1d8:	00000000 	andeq	r0, r0, r0
    d1dc:	00000000 	andeq	r0, r0, r0
    d1e0:	00000000 	andeq	r0, r0, r0
    d1e4:	00000000 	andeq	r0, r0, r0
    d1e8:	00000000 	andeq	r0, r0, r0
    d1ec:	00000000 	andeq	r0, r0, r0
    d1f0:	00000000 	andeq	r0, r0, r0
    d1f4:	00000000 	andeq	r0, r0, r0
    d1f8:	00000000 	andeq	r0, r0, r0
    d1fc:	00000000 	andeq	r0, r0, r0
    d200:	00000000 	andeq	r0, r0, r0
    d204:	00000000 	andeq	r0, r0, r0
    d208:	00000000 	andeq	r0, r0, r0
    d20c:	00000000 	andeq	r0, r0, r0
    d210:	00000000 	andeq	r0, r0, r0
    d214:	00000000 	andeq	r0, r0, r0
    d218:	00000000 	andeq	r0, r0, r0
    d21c:	00000000 	andeq	r0, r0, r0
    d220:	00000000 	andeq	r0, r0, r0
    d224:	00000000 	andeq	r0, r0, r0
    d228:	00000000 	andeq	r0, r0, r0
    d22c:	00000000 	andeq	r0, r0, r0
    d230:	00000000 	andeq	r0, r0, r0
    d234:	00000000 	andeq	r0, r0, r0
    d238:	00000000 	andeq	r0, r0, r0
    d23c:	00000000 	andeq	r0, r0, r0
    d240:	00000000 	andeq	r0, r0, r0
    d244:	00000000 	andeq	r0, r0, r0
    d248:	00000000 	andeq	r0, r0, r0
    d24c:	00000000 	andeq	r0, r0, r0
    d250:	00000000 	andeq	r0, r0, r0
    d254:	00000000 	andeq	r0, r0, r0
    d258:	00000000 	andeq	r0, r0, r0
    d25c:	00000000 	andeq	r0, r0, r0
    d260:	00000000 	andeq	r0, r0, r0
    d264:	00000000 	andeq	r0, r0, r0
    d268:	00000000 	andeq	r0, r0, r0
    d26c:	00000000 	andeq	r0, r0, r0
    d270:	00000000 	andeq	r0, r0, r0
    d274:	00000000 	andeq	r0, r0, r0
    d278:	00000000 	andeq	r0, r0, r0
    d27c:	00000000 	andeq	r0, r0, r0
    d280:	00000000 	andeq	r0, r0, r0
    d284:	00000000 	andeq	r0, r0, r0
    d288:	00000000 	andeq	r0, r0, r0
    d28c:	00000000 	andeq	r0, r0, r0
    d290:	00000000 	andeq	r0, r0, r0
    d294:	00000000 	andeq	r0, r0, r0
    d298:	00000000 	andeq	r0, r0, r0
    d29c:	00000000 	andeq	r0, r0, r0
    d2a0:	00000000 	andeq	r0, r0, r0
    d2a4:	00000000 	andeq	r0, r0, r0
    d2a8:	00000000 	andeq	r0, r0, r0
    d2ac:	00000000 	andeq	r0, r0, r0
    d2b0:	00000000 	andeq	r0, r0, r0
    d2b4:	00000000 	andeq	r0, r0, r0
    d2b8:	00000000 	andeq	r0, r0, r0
    d2bc:	00000000 	andeq	r0, r0, r0
    d2c0:	00000000 	andeq	r0, r0, r0
    d2c4:	00000000 	andeq	r0, r0, r0
    d2c8:	00000000 	andeq	r0, r0, r0
    d2cc:	00000000 	andeq	r0, r0, r0
    d2d0:	00000000 	andeq	r0, r0, r0
    d2d4:	00000000 	andeq	r0, r0, r0
    d2d8:	00000000 	andeq	r0, r0, r0
    d2dc:	00000000 	andeq	r0, r0, r0
    d2e0:	00000000 	andeq	r0, r0, r0
    d2e4:	00000000 	andeq	r0, r0, r0
    d2e8:	00000000 	andeq	r0, r0, r0
    d2ec:	00000000 	andeq	r0, r0, r0
    d2f0:	00000000 	andeq	r0, r0, r0
    d2f4:	00000000 	andeq	r0, r0, r0
    d2f8:	00000000 	andeq	r0, r0, r0
    d2fc:	00000000 	andeq	r0, r0, r0
    d300:	00000000 	andeq	r0, r0, r0
    d304:	00000000 	andeq	r0, r0, r0
    d308:	00000000 	andeq	r0, r0, r0
    d30c:	00000000 	andeq	r0, r0, r0
    d310:	00000000 	andeq	r0, r0, r0
    d314:	00000000 	andeq	r0, r0, r0
    d318:	00000000 	andeq	r0, r0, r0
    d31c:	00000000 	andeq	r0, r0, r0
    d320:	00000000 	andeq	r0, r0, r0
    d324:	00000000 	andeq	r0, r0, r0
    d328:	00000000 	andeq	r0, r0, r0
    d32c:	00000000 	andeq	r0, r0, r0
    d330:	00000000 	andeq	r0, r0, r0
    d334:	00000000 	andeq	r0, r0, r0
    d338:	00000000 	andeq	r0, r0, r0
    d33c:	00000000 	andeq	r0, r0, r0
    d340:	00000000 	andeq	r0, r0, r0
    d344:	00000000 	andeq	r0, r0, r0
    d348:	00000000 	andeq	r0, r0, r0
    d34c:	00000000 	andeq	r0, r0, r0
    d350:	00000000 	andeq	r0, r0, r0
    d354:	00000000 	andeq	r0, r0, r0
    d358:	00000000 	andeq	r0, r0, r0
    d35c:	00000000 	andeq	r0, r0, r0
    d360:	00000000 	andeq	r0, r0, r0
    d364:	00000000 	andeq	r0, r0, r0
    d368:	00000000 	andeq	r0, r0, r0
    d36c:	00000000 	andeq	r0, r0, r0
    d370:	00000000 	andeq	r0, r0, r0
    d374:	00000000 	andeq	r0, r0, r0
    d378:	00000000 	andeq	r0, r0, r0
    d37c:	00000000 	andeq	r0, r0, r0
    d380:	00000000 	andeq	r0, r0, r0
    d384:	00000000 	andeq	r0, r0, r0
    d388:	00000000 	andeq	r0, r0, r0
    d38c:	00000000 	andeq	r0, r0, r0
    d390:	00000000 	andeq	r0, r0, r0
    d394:	00000000 	andeq	r0, r0, r0
    d398:	00000000 	andeq	r0, r0, r0
    d39c:	00000000 	andeq	r0, r0, r0
    d3a0:	00000000 	andeq	r0, r0, r0
    d3a4:	00000000 	andeq	r0, r0, r0
    d3a8:	00000000 	andeq	r0, r0, r0
    d3ac:	00000000 	andeq	r0, r0, r0
    d3b0:	00000000 	andeq	r0, r0, r0
    d3b4:	00000000 	andeq	r0, r0, r0
    d3b8:	00000000 	andeq	r0, r0, r0
    d3bc:	00000000 	andeq	r0, r0, r0
    d3c0:	00000000 	andeq	r0, r0, r0
    d3c4:	00000000 	andeq	r0, r0, r0
    d3c8:	00000000 	andeq	r0, r0, r0
    d3cc:	00000000 	andeq	r0, r0, r0
    d3d0:	00000000 	andeq	r0, r0, r0
    d3d4:	00000000 	andeq	r0, r0, r0
    d3d8:	00000000 	andeq	r0, r0, r0
    d3dc:	00000000 	andeq	r0, r0, r0
    d3e0:	00000000 	andeq	r0, r0, r0
    d3e4:	00000000 	andeq	r0, r0, r0
    d3e8:	00000000 	andeq	r0, r0, r0
    d3ec:	00000000 	andeq	r0, r0, r0
    d3f0:	00000000 	andeq	r0, r0, r0
    d3f4:	00000000 	andeq	r0, r0, r0
    d3f8:	00000000 	andeq	r0, r0, r0
    d3fc:	00000000 	andeq	r0, r0, r0
    d400:	00000000 	andeq	r0, r0, r0
    d404:	00000000 	andeq	r0, r0, r0
    d408:	00000000 	andeq	r0, r0, r0
    d40c:	00000000 	andeq	r0, r0, r0
    d410:	00000000 	andeq	r0, r0, r0
    d414:	00000000 	andeq	r0, r0, r0
    d418:	00000000 	andeq	r0, r0, r0
    d41c:	00000000 	andeq	r0, r0, r0
    d420:	00000000 	andeq	r0, r0, r0
    d424:	00000000 	andeq	r0, r0, r0
    d428:	00000000 	andeq	r0, r0, r0
    d42c:	00000000 	andeq	r0, r0, r0
    d430:	00000000 	andeq	r0, r0, r0
    d434:	00000000 	andeq	r0, r0, r0
    d438:	00000000 	andeq	r0, r0, r0
    d43c:	00000000 	andeq	r0, r0, r0
    d440:	00000000 	andeq	r0, r0, r0
    d444:	00000000 	andeq	r0, r0, r0
    d448:	00000000 	andeq	r0, r0, r0
    d44c:	00000000 	andeq	r0, r0, r0
    d450:	00000000 	andeq	r0, r0, r0
    d454:	00000000 	andeq	r0, r0, r0
    d458:	00000000 	andeq	r0, r0, r0
    d45c:	00000000 	andeq	r0, r0, r0
    d460:	00000000 	andeq	r0, r0, r0
    d464:	00000000 	andeq	r0, r0, r0
    d468:	00000000 	andeq	r0, r0, r0
    d46c:	00000000 	andeq	r0, r0, r0
    d470:	00000000 	andeq	r0, r0, r0
    d474:	00000000 	andeq	r0, r0, r0
    d478:	00000000 	andeq	r0, r0, r0
    d47c:	00000000 	andeq	r0, r0, r0
    d480:	00000000 	andeq	r0, r0, r0
    d484:	00000000 	andeq	r0, r0, r0
    d488:	00000000 	andeq	r0, r0, r0
    d48c:	00000000 	andeq	r0, r0, r0
    d490:	00000000 	andeq	r0, r0, r0
    d494:	00000000 	andeq	r0, r0, r0
    d498:	00000000 	andeq	r0, r0, r0
    d49c:	00000000 	andeq	r0, r0, r0
    d4a0:	00000000 	andeq	r0, r0, r0
    d4a4:	00000000 	andeq	r0, r0, r0
    d4a8:	00000000 	andeq	r0, r0, r0
    d4ac:	00000000 	andeq	r0, r0, r0
    d4b0:	00000000 	andeq	r0, r0, r0
    d4b4:	00000000 	andeq	r0, r0, r0
    d4b8:	00000000 	andeq	r0, r0, r0
    d4bc:	00000000 	andeq	r0, r0, r0
    d4c0:	00000000 	andeq	r0, r0, r0
    d4c4:	00000000 	andeq	r0, r0, r0
    d4c8:	00000000 	andeq	r0, r0, r0
    d4cc:	00000000 	andeq	r0, r0, r0
    d4d0:	00000000 	andeq	r0, r0, r0
    d4d4:	00000000 	andeq	r0, r0, r0
    d4d8:	00000000 	andeq	r0, r0, r0
    d4dc:	00000000 	andeq	r0, r0, r0
    d4e0:	00000000 	andeq	r0, r0, r0
    d4e4:	00000000 	andeq	r0, r0, r0
    d4e8:	00000000 	andeq	r0, r0, r0
    d4ec:	00000000 	andeq	r0, r0, r0
    d4f0:	00000000 	andeq	r0, r0, r0
    d4f4:	00000000 	andeq	r0, r0, r0
    d4f8:	00000000 	andeq	r0, r0, r0
    d4fc:	00000000 	andeq	r0, r0, r0
    d500:	00000000 	andeq	r0, r0, r0
    d504:	00000000 	andeq	r0, r0, r0
    d508:	00000000 	andeq	r0, r0, r0
    d50c:	00000000 	andeq	r0, r0, r0
    d510:	00000000 	andeq	r0, r0, r0
    d514:	00000000 	andeq	r0, r0, r0
    d518:	00000000 	andeq	r0, r0, r0
    d51c:	00000000 	andeq	r0, r0, r0
    d520:	00000000 	andeq	r0, r0, r0
    d524:	00000000 	andeq	r0, r0, r0
    d528:	00000000 	andeq	r0, r0, r0
    d52c:	00000000 	andeq	r0, r0, r0
    d530:	00000000 	andeq	r0, r0, r0
    d534:	00000000 	andeq	r0, r0, r0
    d538:	00000000 	andeq	r0, r0, r0
    d53c:	00000000 	andeq	r0, r0, r0
    d540:	00000000 	andeq	r0, r0, r0
    d544:	00000000 	andeq	r0, r0, r0
    d548:	00000000 	andeq	r0, r0, r0
    d54c:	00000000 	andeq	r0, r0, r0
    d550:	00000000 	andeq	r0, r0, r0
    d554:	00000000 	andeq	r0, r0, r0
    d558:	00000000 	andeq	r0, r0, r0
    d55c:	00000000 	andeq	r0, r0, r0
    d560:	00000000 	andeq	r0, r0, r0
    d564:	00000000 	andeq	r0, r0, r0
    d568:	00000000 	andeq	r0, r0, r0
    d56c:	00000000 	andeq	r0, r0, r0
    d570:	00000000 	andeq	r0, r0, r0
    d574:	00000000 	andeq	r0, r0, r0
    d578:	00000000 	andeq	r0, r0, r0
    d57c:	00000000 	andeq	r0, r0, r0
    d580:	00000000 	andeq	r0, r0, r0
    d584:	00000000 	andeq	r0, r0, r0
    d588:	00000000 	andeq	r0, r0, r0
    d58c:	00000000 	andeq	r0, r0, r0
    d590:	00000000 	andeq	r0, r0, r0
    d594:	00000000 	andeq	r0, r0, r0
    d598:	00000000 	andeq	r0, r0, r0
    d59c:	00000000 	andeq	r0, r0, r0
    d5a0:	00000000 	andeq	r0, r0, r0
    d5a4:	00000000 	andeq	r0, r0, r0
    d5a8:	00000000 	andeq	r0, r0, r0
    d5ac:	00000000 	andeq	r0, r0, r0
    d5b0:	00000000 	andeq	r0, r0, r0
    d5b4:	00000000 	andeq	r0, r0, r0
    d5b8:	00000000 	andeq	r0, r0, r0
    d5bc:	00000000 	andeq	r0, r0, r0
    d5c0:	00000000 	andeq	r0, r0, r0
    d5c4:	00000000 	andeq	r0, r0, r0
    d5c8:	00000000 	andeq	r0, r0, r0
    d5cc:	00000000 	andeq	r0, r0, r0
    d5d0:	00000000 	andeq	r0, r0, r0
    d5d4:	00000000 	andeq	r0, r0, r0
    d5d8:	00000000 	andeq	r0, r0, r0
    d5dc:	00000000 	andeq	r0, r0, r0
    d5e0:	00000000 	andeq	r0, r0, r0
    d5e4:	00000000 	andeq	r0, r0, r0
    d5e8:	00000000 	andeq	r0, r0, r0
    d5ec:	00000000 	andeq	r0, r0, r0
    d5f0:	00000000 	andeq	r0, r0, r0
    d5f4:	00000000 	andeq	r0, r0, r0
    d5f8:	00000000 	andeq	r0, r0, r0
    d5fc:	00000000 	andeq	r0, r0, r0
    d600:	00000000 	andeq	r0, r0, r0
    d604:	00000000 	andeq	r0, r0, r0
    d608:	00000000 	andeq	r0, r0, r0
    d60c:	00000000 	andeq	r0, r0, r0
    d610:	00000000 	andeq	r0, r0, r0
    d614:	00000000 	andeq	r0, r0, r0
    d618:	00000000 	andeq	r0, r0, r0
    d61c:	00000000 	andeq	r0, r0, r0
    d620:	00000000 	andeq	r0, r0, r0
    d624:	00000000 	andeq	r0, r0, r0
    d628:	00000000 	andeq	r0, r0, r0
    d62c:	00000000 	andeq	r0, r0, r0
    d630:	00000000 	andeq	r0, r0, r0
    d634:	00000000 	andeq	r0, r0, r0
    d638:	00000000 	andeq	r0, r0, r0
    d63c:	00000000 	andeq	r0, r0, r0
    d640:	00000000 	andeq	r0, r0, r0
    d644:	00000000 	andeq	r0, r0, r0
    d648:	00000000 	andeq	r0, r0, r0
    d64c:	00000000 	andeq	r0, r0, r0
    d650:	00000000 	andeq	r0, r0, r0
    d654:	00000000 	andeq	r0, r0, r0
    d658:	00000000 	andeq	r0, r0, r0
    d65c:	00000000 	andeq	r0, r0, r0
    d660:	00000000 	andeq	r0, r0, r0
    d664:	00000000 	andeq	r0, r0, r0
    d668:	00000000 	andeq	r0, r0, r0
    d66c:	00000000 	andeq	r0, r0, r0
    d670:	00000000 	andeq	r0, r0, r0
    d674:	00000000 	andeq	r0, r0, r0
    d678:	00000000 	andeq	r0, r0, r0
    d67c:	00000000 	andeq	r0, r0, r0
    d680:	00000000 	andeq	r0, r0, r0
    d684:	00000000 	andeq	r0, r0, r0
    d688:	00000000 	andeq	r0, r0, r0
    d68c:	00000000 	andeq	r0, r0, r0
    d690:	00000000 	andeq	r0, r0, r0
    d694:	00000000 	andeq	r0, r0, r0
    d698:	00000000 	andeq	r0, r0, r0
    d69c:	00000000 	andeq	r0, r0, r0
    d6a0:	00000000 	andeq	r0, r0, r0
    d6a4:	00000000 	andeq	r0, r0, r0
    d6a8:	00000000 	andeq	r0, r0, r0
    d6ac:	00000000 	andeq	r0, r0, r0
    d6b0:	00000000 	andeq	r0, r0, r0
    d6b4:	00000000 	andeq	r0, r0, r0
    d6b8:	00000000 	andeq	r0, r0, r0
    d6bc:	00000000 	andeq	r0, r0, r0
    d6c0:	00000000 	andeq	r0, r0, r0
    d6c4:	00000000 	andeq	r0, r0, r0
    d6c8:	00000000 	andeq	r0, r0, r0
    d6cc:	00000000 	andeq	r0, r0, r0
    d6d0:	00000000 	andeq	r0, r0, r0
    d6d4:	00000000 	andeq	r0, r0, r0
    d6d8:	00000000 	andeq	r0, r0, r0
    d6dc:	00000000 	andeq	r0, r0, r0
    d6e0:	00000000 	andeq	r0, r0, r0
    d6e4:	00000000 	andeq	r0, r0, r0
    d6e8:	00000000 	andeq	r0, r0, r0
    d6ec:	00000000 	andeq	r0, r0, r0
    d6f0:	00000000 	andeq	r0, r0, r0
    d6f4:	00000000 	andeq	r0, r0, r0
    d6f8:	00000000 	andeq	r0, r0, r0
    d6fc:	00000000 	andeq	r0, r0, r0
    d700:	00000000 	andeq	r0, r0, r0
    d704:	00000000 	andeq	r0, r0, r0
    d708:	00000000 	andeq	r0, r0, r0
    d70c:	00000000 	andeq	r0, r0, r0
    d710:	00000000 	andeq	r0, r0, r0
    d714:	00000000 	andeq	r0, r0, r0
    d718:	00000000 	andeq	r0, r0, r0
    d71c:	00000000 	andeq	r0, r0, r0
    d720:	00000000 	andeq	r0, r0, r0
    d724:	00000000 	andeq	r0, r0, r0
    d728:	00000000 	andeq	r0, r0, r0
    d72c:	00000000 	andeq	r0, r0, r0
    d730:	00000000 	andeq	r0, r0, r0
    d734:	00000000 	andeq	r0, r0, r0
    d738:	00000000 	andeq	r0, r0, r0
    d73c:	00000000 	andeq	r0, r0, r0
    d740:	00000000 	andeq	r0, r0, r0
    d744:	00000000 	andeq	r0, r0, r0
    d748:	00000000 	andeq	r0, r0, r0
    d74c:	00000000 	andeq	r0, r0, r0
    d750:	00000000 	andeq	r0, r0, r0
    d754:	00000000 	andeq	r0, r0, r0
    d758:	00000000 	andeq	r0, r0, r0
    d75c:	00000000 	andeq	r0, r0, r0
    d760:	00000000 	andeq	r0, r0, r0
    d764:	00000000 	andeq	r0, r0, r0
    d768:	00000000 	andeq	r0, r0, r0
    d76c:	00000000 	andeq	r0, r0, r0
    d770:	00000000 	andeq	r0, r0, r0
    d774:	00000000 	andeq	r0, r0, r0
    d778:	00000000 	andeq	r0, r0, r0
    d77c:	00000000 	andeq	r0, r0, r0
    d780:	00000000 	andeq	r0, r0, r0
    d784:	00000000 	andeq	r0, r0, r0
    d788:	00000000 	andeq	r0, r0, r0
    d78c:	00000000 	andeq	r0, r0, r0
    d790:	00000000 	andeq	r0, r0, r0
    d794:	00000000 	andeq	r0, r0, r0
    d798:	00000000 	andeq	r0, r0, r0
    d79c:	00000000 	andeq	r0, r0, r0
    d7a0:	00000000 	andeq	r0, r0, r0
    d7a4:	00000000 	andeq	r0, r0, r0
    d7a8:	00000000 	andeq	r0, r0, r0
    d7ac:	00000000 	andeq	r0, r0, r0
    d7b0:	00000000 	andeq	r0, r0, r0
    d7b4:	00000000 	andeq	r0, r0, r0
    d7b8:	00000000 	andeq	r0, r0, r0
    d7bc:	00000000 	andeq	r0, r0, r0
    d7c0:	00000000 	andeq	r0, r0, r0
    d7c4:	00000000 	andeq	r0, r0, r0
    d7c8:	00000000 	andeq	r0, r0, r0
    d7cc:	00000000 	andeq	r0, r0, r0
    d7d0:	00000000 	andeq	r0, r0, r0
    d7d4:	00000000 	andeq	r0, r0, r0
    d7d8:	00000000 	andeq	r0, r0, r0
    d7dc:	00000000 	andeq	r0, r0, r0
    d7e0:	00000000 	andeq	r0, r0, r0
    d7e4:	00000000 	andeq	r0, r0, r0
    d7e8:	00000000 	andeq	r0, r0, r0
    d7ec:	00000000 	andeq	r0, r0, r0
    d7f0:	00000000 	andeq	r0, r0, r0
    d7f4:	00000000 	andeq	r0, r0, r0
    d7f8:	00000000 	andeq	r0, r0, r0
    d7fc:	00000000 	andeq	r0, r0, r0
    d800:	00000000 	andeq	r0, r0, r0
    d804:	00000000 	andeq	r0, r0, r0
    d808:	00000000 	andeq	r0, r0, r0
    d80c:	00000000 	andeq	r0, r0, r0
    d810:	00000000 	andeq	r0, r0, r0
    d814:	00000000 	andeq	r0, r0, r0
    d818:	00000000 	andeq	r0, r0, r0
    d81c:	00000000 	andeq	r0, r0, r0
    d820:	00000000 	andeq	r0, r0, r0
    d824:	00000000 	andeq	r0, r0, r0
    d828:	00000000 	andeq	r0, r0, r0
    d82c:	00000000 	andeq	r0, r0, r0
    d830:	00000000 	andeq	r0, r0, r0
    d834:	00000000 	andeq	r0, r0, r0
    d838:	00000000 	andeq	r0, r0, r0
    d83c:	00000000 	andeq	r0, r0, r0
    d840:	00000000 	andeq	r0, r0, r0
    d844:	00000000 	andeq	r0, r0, r0
    d848:	00000000 	andeq	r0, r0, r0
    d84c:	00000000 	andeq	r0, r0, r0
    d850:	00000000 	andeq	r0, r0, r0
    d854:	00000000 	andeq	r0, r0, r0
    d858:	00000000 	andeq	r0, r0, r0
    d85c:	00000000 	andeq	r0, r0, r0
    d860:	00000000 	andeq	r0, r0, r0
    d864:	00000000 	andeq	r0, r0, r0
    d868:	00000000 	andeq	r0, r0, r0
    d86c:	00000000 	andeq	r0, r0, r0
    d870:	00000000 	andeq	r0, r0, r0
    d874:	00000000 	andeq	r0, r0, r0
    d878:	00000000 	andeq	r0, r0, r0
    d87c:	00000000 	andeq	r0, r0, r0
    d880:	00000000 	andeq	r0, r0, r0
    d884:	00000000 	andeq	r0, r0, r0
    d888:	00000000 	andeq	r0, r0, r0
    d88c:	00000000 	andeq	r0, r0, r0
    d890:	00000000 	andeq	r0, r0, r0
    d894:	00000000 	andeq	r0, r0, r0
    d898:	00000000 	andeq	r0, r0, r0
    d89c:	00000000 	andeq	r0, r0, r0
    d8a0:	00000000 	andeq	r0, r0, r0
    d8a4:	00000000 	andeq	r0, r0, r0
    d8a8:	00000000 	andeq	r0, r0, r0
    d8ac:	00000000 	andeq	r0, r0, r0
    d8b0:	00000000 	andeq	r0, r0, r0
    d8b4:	00000000 	andeq	r0, r0, r0
    d8b8:	00000000 	andeq	r0, r0, r0
    d8bc:	00000000 	andeq	r0, r0, r0
    d8c0:	00000000 	andeq	r0, r0, r0
    d8c4:	00000000 	andeq	r0, r0, r0
    d8c8:	00000000 	andeq	r0, r0, r0
    d8cc:	00000000 	andeq	r0, r0, r0
    d8d0:	00000000 	andeq	r0, r0, r0
    d8d4:	00000000 	andeq	r0, r0, r0
    d8d8:	00000000 	andeq	r0, r0, r0
    d8dc:	00000000 	andeq	r0, r0, r0
    d8e0:	00000000 	andeq	r0, r0, r0
    d8e4:	00000000 	andeq	r0, r0, r0
    d8e8:	00000000 	andeq	r0, r0, r0
    d8ec:	00000000 	andeq	r0, r0, r0
    d8f0:	00000000 	andeq	r0, r0, r0
    d8f4:	00000000 	andeq	r0, r0, r0
    d8f8:	00000000 	andeq	r0, r0, r0
    d8fc:	00000000 	andeq	r0, r0, r0
    d900:	00000000 	andeq	r0, r0, r0
    d904:	00000000 	andeq	r0, r0, r0
    d908:	00000000 	andeq	r0, r0, r0
    d90c:	00000000 	andeq	r0, r0, r0
    d910:	00000000 	andeq	r0, r0, r0
    d914:	00000000 	andeq	r0, r0, r0
    d918:	00000000 	andeq	r0, r0, r0
    d91c:	00000000 	andeq	r0, r0, r0
    d920:	00000000 	andeq	r0, r0, r0
    d924:	00000000 	andeq	r0, r0, r0
    d928:	00000000 	andeq	r0, r0, r0
    d92c:	00000000 	andeq	r0, r0, r0
    d930:	00000000 	andeq	r0, r0, r0
    d934:	00000000 	andeq	r0, r0, r0
    d938:	00000000 	andeq	r0, r0, r0
    d93c:	00000000 	andeq	r0, r0, r0
    d940:	00000000 	andeq	r0, r0, r0
    d944:	00000000 	andeq	r0, r0, r0
    d948:	00000000 	andeq	r0, r0, r0
    d94c:	00000000 	andeq	r0, r0, r0
    d950:	00000000 	andeq	r0, r0, r0
    d954:	00000000 	andeq	r0, r0, r0
    d958:	00000000 	andeq	r0, r0, r0
    d95c:	00000000 	andeq	r0, r0, r0
    d960:	00000000 	andeq	r0, r0, r0
    d964:	00000000 	andeq	r0, r0, r0
    d968:	00000000 	andeq	r0, r0, r0
    d96c:	00000000 	andeq	r0, r0, r0
    d970:	00000000 	andeq	r0, r0, r0
    d974:	00000000 	andeq	r0, r0, r0
    d978:	00000000 	andeq	r0, r0, r0
    d97c:	00000000 	andeq	r0, r0, r0
    d980:	00000000 	andeq	r0, r0, r0
    d984:	00000000 	andeq	r0, r0, r0
    d988:	00000000 	andeq	r0, r0, r0
    d98c:	00000000 	andeq	r0, r0, r0
    d990:	00000000 	andeq	r0, r0, r0
    d994:	00000000 	andeq	r0, r0, r0
    d998:	00000000 	andeq	r0, r0, r0
    d99c:	00000000 	andeq	r0, r0, r0
    d9a0:	00000000 	andeq	r0, r0, r0
    d9a4:	00000000 	andeq	r0, r0, r0
    d9a8:	00000000 	andeq	r0, r0, r0
    d9ac:	00000000 	andeq	r0, r0, r0
    d9b0:	00000000 	andeq	r0, r0, r0
    d9b4:	00000000 	andeq	r0, r0, r0
    d9b8:	00000000 	andeq	r0, r0, r0
    d9bc:	00000000 	andeq	r0, r0, r0
    d9c0:	00000000 	andeq	r0, r0, r0
    d9c4:	00000000 	andeq	r0, r0, r0
    d9c8:	00000000 	andeq	r0, r0, r0
    d9cc:	00000000 	andeq	r0, r0, r0
    d9d0:	00000000 	andeq	r0, r0, r0
    d9d4:	00000000 	andeq	r0, r0, r0
    d9d8:	00000000 	andeq	r0, r0, r0
    d9dc:	00000000 	andeq	r0, r0, r0
    d9e0:	00000000 	andeq	r0, r0, r0
    d9e4:	00000000 	andeq	r0, r0, r0
    d9e8:	00000000 	andeq	r0, r0, r0
    d9ec:	00000000 	andeq	r0, r0, r0
    d9f0:	00000000 	andeq	r0, r0, r0
    d9f4:	00000000 	andeq	r0, r0, r0
    d9f8:	00000000 	andeq	r0, r0, r0
    d9fc:	00000000 	andeq	r0, r0, r0
    da00:	00000000 	andeq	r0, r0, r0
    da04:	00000000 	andeq	r0, r0, r0
    da08:	00000000 	andeq	r0, r0, r0
    da0c:	00000000 	andeq	r0, r0, r0
    da10:	00000000 	andeq	r0, r0, r0
    da14:	00000000 	andeq	r0, r0, r0
    da18:	00000000 	andeq	r0, r0, r0
    da1c:	00000000 	andeq	r0, r0, r0
    da20:	00000000 	andeq	r0, r0, r0
    da24:	00000000 	andeq	r0, r0, r0
    da28:	00000000 	andeq	r0, r0, r0
    da2c:	00000000 	andeq	r0, r0, r0
    da30:	00000000 	andeq	r0, r0, r0
    da34:	00000000 	andeq	r0, r0, r0
    da38:	00000000 	andeq	r0, r0, r0
    da3c:	00000000 	andeq	r0, r0, r0
    da40:	00000000 	andeq	r0, r0, r0
    da44:	00000000 	andeq	r0, r0, r0
    da48:	00000000 	andeq	r0, r0, r0
    da4c:	00000000 	andeq	r0, r0, r0
    da50:	00000000 	andeq	r0, r0, r0
    da54:	00000000 	andeq	r0, r0, r0
    da58:	00000000 	andeq	r0, r0, r0
    da5c:	00000000 	andeq	r0, r0, r0
    da60:	00000000 	andeq	r0, r0, r0
    da64:	00000000 	andeq	r0, r0, r0
    da68:	00000000 	andeq	r0, r0, r0
    da6c:	00000000 	andeq	r0, r0, r0
    da70:	00000000 	andeq	r0, r0, r0
    da74:	00000000 	andeq	r0, r0, r0
    da78:	00000000 	andeq	r0, r0, r0
    da7c:	00000000 	andeq	r0, r0, r0
    da80:	00000000 	andeq	r0, r0, r0
    da84:	00000000 	andeq	r0, r0, r0
    da88:	00000000 	andeq	r0, r0, r0
    da8c:	00000000 	andeq	r0, r0, r0
    da90:	00000000 	andeq	r0, r0, r0
    da94:	00000000 	andeq	r0, r0, r0
    da98:	00000000 	andeq	r0, r0, r0
    da9c:	00000000 	andeq	r0, r0, r0
    daa0:	00000000 	andeq	r0, r0, r0
    daa4:	00000000 	andeq	r0, r0, r0
    daa8:	00000000 	andeq	r0, r0, r0
    daac:	00000000 	andeq	r0, r0, r0
    dab0:	00000000 	andeq	r0, r0, r0
    dab4:	00000000 	andeq	r0, r0, r0
    dab8:	00000000 	andeq	r0, r0, r0
    dabc:	00000000 	andeq	r0, r0, r0
    dac0:	00000000 	andeq	r0, r0, r0
    dac4:	00000000 	andeq	r0, r0, r0
    dac8:	00000000 	andeq	r0, r0, r0
    dacc:	00000000 	andeq	r0, r0, r0
    dad0:	00000000 	andeq	r0, r0, r0
    dad4:	00000000 	andeq	r0, r0, r0
    dad8:	00000000 	andeq	r0, r0, r0
    dadc:	00000000 	andeq	r0, r0, r0
    dae0:	00000000 	andeq	r0, r0, r0
    dae4:	00000000 	andeq	r0, r0, r0
    dae8:	00000000 	andeq	r0, r0, r0
    daec:	00000000 	andeq	r0, r0, r0
    daf0:	00000000 	andeq	r0, r0, r0
    daf4:	00000000 	andeq	r0, r0, r0
    daf8:	00000000 	andeq	r0, r0, r0
    dafc:	00000000 	andeq	r0, r0, r0
    db00:	00000000 	andeq	r0, r0, r0
    db04:	00000000 	andeq	r0, r0, r0
    db08:	00000000 	andeq	r0, r0, r0
    db0c:	00000000 	andeq	r0, r0, r0
    db10:	00000000 	andeq	r0, r0, r0
    db14:	00000000 	andeq	r0, r0, r0
    db18:	00000000 	andeq	r0, r0, r0
    db1c:	00000000 	andeq	r0, r0, r0
    db20:	00000000 	andeq	r0, r0, r0
    db24:	00000000 	andeq	r0, r0, r0
    db28:	00000000 	andeq	r0, r0, r0
    db2c:	00000000 	andeq	r0, r0, r0
    db30:	00000000 	andeq	r0, r0, r0
    db34:	00000000 	andeq	r0, r0, r0
    db38:	00000000 	andeq	r0, r0, r0
    db3c:	00000000 	andeq	r0, r0, r0
    db40:	00000000 	andeq	r0, r0, r0
    db44:	00000000 	andeq	r0, r0, r0
    db48:	00000000 	andeq	r0, r0, r0
    db4c:	00000000 	andeq	r0, r0, r0
    db50:	00000000 	andeq	r0, r0, r0
    db54:	00000000 	andeq	r0, r0, r0
    db58:	00000000 	andeq	r0, r0, r0
    db5c:	00000000 	andeq	r0, r0, r0
    db60:	00000000 	andeq	r0, r0, r0
    db64:	00000000 	andeq	r0, r0, r0
    db68:	00000000 	andeq	r0, r0, r0
    db6c:	00000000 	andeq	r0, r0, r0
    db70:	00000000 	andeq	r0, r0, r0
    db74:	00000000 	andeq	r0, r0, r0
    db78:	00000000 	andeq	r0, r0, r0
    db7c:	00000000 	andeq	r0, r0, r0
    db80:	00000000 	andeq	r0, r0, r0
    db84:	00000000 	andeq	r0, r0, r0
    db88:	00000000 	andeq	r0, r0, r0
    db8c:	00000000 	andeq	r0, r0, r0
    db90:	00000000 	andeq	r0, r0, r0
    db94:	00000000 	andeq	r0, r0, r0
    db98:	00000000 	andeq	r0, r0, r0
    db9c:	00000000 	andeq	r0, r0, r0
    dba0:	00000000 	andeq	r0, r0, r0
    dba4:	00000000 	andeq	r0, r0, r0
    dba8:	00000000 	andeq	r0, r0, r0
    dbac:	00000000 	andeq	r0, r0, r0
    dbb0:	00000000 	andeq	r0, r0, r0
    dbb4:	00000000 	andeq	r0, r0, r0
    dbb8:	00000000 	andeq	r0, r0, r0
    dbbc:	00000000 	andeq	r0, r0, r0
    dbc0:	00000000 	andeq	r0, r0, r0
    dbc4:	00000000 	andeq	r0, r0, r0
    dbc8:	00000000 	andeq	r0, r0, r0
    dbcc:	00000000 	andeq	r0, r0, r0
    dbd0:	00000000 	andeq	r0, r0, r0
    dbd4:	00000000 	andeq	r0, r0, r0
    dbd8:	00000000 	andeq	r0, r0, r0
    dbdc:	00000000 	andeq	r0, r0, r0
    dbe0:	00000000 	andeq	r0, r0, r0
    dbe4:	00000000 	andeq	r0, r0, r0
    dbe8:	00000000 	andeq	r0, r0, r0
    dbec:	00000000 	andeq	r0, r0, r0
    dbf0:	00000000 	andeq	r0, r0, r0
    dbf4:	00000000 	andeq	r0, r0, r0
    dbf8:	00000000 	andeq	r0, r0, r0
    dbfc:	00000000 	andeq	r0, r0, r0
    dc00:	00000000 	andeq	r0, r0, r0
    dc04:	00000000 	andeq	r0, r0, r0
    dc08:	00000000 	andeq	r0, r0, r0
    dc0c:	00000000 	andeq	r0, r0, r0
    dc10:	00000000 	andeq	r0, r0, r0
    dc14:	00000000 	andeq	r0, r0, r0
    dc18:	00000000 	andeq	r0, r0, r0
    dc1c:	00000000 	andeq	r0, r0, r0
    dc20:	00000000 	andeq	r0, r0, r0
    dc24:	00000000 	andeq	r0, r0, r0
    dc28:	00000000 	andeq	r0, r0, r0
    dc2c:	00000000 	andeq	r0, r0, r0
    dc30:	00000000 	andeq	r0, r0, r0
    dc34:	00000000 	andeq	r0, r0, r0
    dc38:	00000000 	andeq	r0, r0, r0
    dc3c:	00000000 	andeq	r0, r0, r0
    dc40:	00000000 	andeq	r0, r0, r0
    dc44:	00000000 	andeq	r0, r0, r0
    dc48:	00000000 	andeq	r0, r0, r0
    dc4c:	00000000 	andeq	r0, r0, r0
    dc50:	00000000 	andeq	r0, r0, r0
    dc54:	00000000 	andeq	r0, r0, r0
    dc58:	00000000 	andeq	r0, r0, r0
    dc5c:	00000000 	andeq	r0, r0, r0
    dc60:	00000000 	andeq	r0, r0, r0
    dc64:	00000000 	andeq	r0, r0, r0
    dc68:	00000000 	andeq	r0, r0, r0
    dc6c:	00000000 	andeq	r0, r0, r0
    dc70:	00000000 	andeq	r0, r0, r0
    dc74:	00000000 	andeq	r0, r0, r0
    dc78:	00000000 	andeq	r0, r0, r0
    dc7c:	00000000 	andeq	r0, r0, r0
    dc80:	00000000 	andeq	r0, r0, r0
    dc84:	00000000 	andeq	r0, r0, r0
    dc88:	00000000 	andeq	r0, r0, r0
    dc8c:	00000000 	andeq	r0, r0, r0
    dc90:	00000000 	andeq	r0, r0, r0
    dc94:	00000000 	andeq	r0, r0, r0
    dc98:	00000000 	andeq	r0, r0, r0
    dc9c:	00000000 	andeq	r0, r0, r0
    dca0:	00000000 	andeq	r0, r0, r0
    dca4:	00000000 	andeq	r0, r0, r0
    dca8:	00000000 	andeq	r0, r0, r0
    dcac:	00000000 	andeq	r0, r0, r0
    dcb0:	00000000 	andeq	r0, r0, r0
    dcb4:	00000000 	andeq	r0, r0, r0
    dcb8:	00000000 	andeq	r0, r0, r0
    dcbc:	00000000 	andeq	r0, r0, r0
    dcc0:	00000000 	andeq	r0, r0, r0
    dcc4:	00000000 	andeq	r0, r0, r0
    dcc8:	00000000 	andeq	r0, r0, r0
    dccc:	00000000 	andeq	r0, r0, r0
    dcd0:	00000000 	andeq	r0, r0, r0
    dcd4:	00000000 	andeq	r0, r0, r0
    dcd8:	00000000 	andeq	r0, r0, r0
    dcdc:	00000000 	andeq	r0, r0, r0
    dce0:	00000000 	andeq	r0, r0, r0
    dce4:	00000000 	andeq	r0, r0, r0
    dce8:	00000000 	andeq	r0, r0, r0
    dcec:	00000000 	andeq	r0, r0, r0
    dcf0:	00000000 	andeq	r0, r0, r0
    dcf4:	00000000 	andeq	r0, r0, r0
    dcf8:	00000000 	andeq	r0, r0, r0
    dcfc:	00000000 	andeq	r0, r0, r0
    dd00:	00000000 	andeq	r0, r0, r0
    dd04:	00000000 	andeq	r0, r0, r0
    dd08:	00000000 	andeq	r0, r0, r0
    dd0c:	00000000 	andeq	r0, r0, r0
    dd10:	00000000 	andeq	r0, r0, r0
    dd14:	00000000 	andeq	r0, r0, r0
    dd18:	00000000 	andeq	r0, r0, r0
    dd1c:	00000000 	andeq	r0, r0, r0
    dd20:	00000000 	andeq	r0, r0, r0
    dd24:	00000000 	andeq	r0, r0, r0
    dd28:	00000000 	andeq	r0, r0, r0
    dd2c:	00000000 	andeq	r0, r0, r0
    dd30:	00000000 	andeq	r0, r0, r0
    dd34:	00000000 	andeq	r0, r0, r0
    dd38:	00000000 	andeq	r0, r0, r0
    dd3c:	00000000 	andeq	r0, r0, r0
    dd40:	00000000 	andeq	r0, r0, r0
    dd44:	00000000 	andeq	r0, r0, r0
    dd48:	00000000 	andeq	r0, r0, r0
    dd4c:	00000000 	andeq	r0, r0, r0
    dd50:	00000000 	andeq	r0, r0, r0
    dd54:	00000000 	andeq	r0, r0, r0
    dd58:	00000000 	andeq	r0, r0, r0
    dd5c:	00000000 	andeq	r0, r0, r0
    dd60:	00000000 	andeq	r0, r0, r0
    dd64:	00000000 	andeq	r0, r0, r0
    dd68:	00000000 	andeq	r0, r0, r0
    dd6c:	00000000 	andeq	r0, r0, r0
    dd70:	00000000 	andeq	r0, r0, r0
    dd74:	00000000 	andeq	r0, r0, r0
    dd78:	00000000 	andeq	r0, r0, r0
    dd7c:	00000000 	andeq	r0, r0, r0
    dd80:	00000000 	andeq	r0, r0, r0
    dd84:	00000000 	andeq	r0, r0, r0
    dd88:	00000000 	andeq	r0, r0, r0
    dd8c:	00000000 	andeq	r0, r0, r0
    dd90:	00000000 	andeq	r0, r0, r0
    dd94:	00000000 	andeq	r0, r0, r0
    dd98:	00000000 	andeq	r0, r0, r0
    dd9c:	00000000 	andeq	r0, r0, r0
    dda0:	00000000 	andeq	r0, r0, r0
    dda4:	00000000 	andeq	r0, r0, r0
    dda8:	00000000 	andeq	r0, r0, r0
    ddac:	00000000 	andeq	r0, r0, r0
    ddb0:	00000000 	andeq	r0, r0, r0
    ddb4:	00000000 	andeq	r0, r0, r0
    ddb8:	00000000 	andeq	r0, r0, r0
    ddbc:	00000000 	andeq	r0, r0, r0
    ddc0:	00000000 	andeq	r0, r0, r0
    ddc4:	00000000 	andeq	r0, r0, r0
    ddc8:	00000000 	andeq	r0, r0, r0
    ddcc:	00000000 	andeq	r0, r0, r0
    ddd0:	00000000 	andeq	r0, r0, r0
    ddd4:	00000000 	andeq	r0, r0, r0
    ddd8:	00000000 	andeq	r0, r0, r0
    dddc:	00000000 	andeq	r0, r0, r0
    dde0:	00000000 	andeq	r0, r0, r0
    dde4:	00000000 	andeq	r0, r0, r0
    dde8:	00000000 	andeq	r0, r0, r0
    ddec:	00000000 	andeq	r0, r0, r0
    ddf0:	00000000 	andeq	r0, r0, r0
    ddf4:	00000000 	andeq	r0, r0, r0
    ddf8:	00000000 	andeq	r0, r0, r0
    ddfc:	00000000 	andeq	r0, r0, r0
    de00:	00000000 	andeq	r0, r0, r0
    de04:	00000000 	andeq	r0, r0, r0
    de08:	00000000 	andeq	r0, r0, r0
    de0c:	00000000 	andeq	r0, r0, r0
    de10:	00000000 	andeq	r0, r0, r0
    de14:	00000000 	andeq	r0, r0, r0
    de18:	00000000 	andeq	r0, r0, r0
    de1c:	00000000 	andeq	r0, r0, r0
    de20:	00000000 	andeq	r0, r0, r0
    de24:	00000000 	andeq	r0, r0, r0
    de28:	00000000 	andeq	r0, r0, r0
    de2c:	00000000 	andeq	r0, r0, r0
    de30:	00000000 	andeq	r0, r0, r0
    de34:	00000000 	andeq	r0, r0, r0
    de38:	00000000 	andeq	r0, r0, r0
    de3c:	00000000 	andeq	r0, r0, r0
    de40:	00000000 	andeq	r0, r0, r0
    de44:	00000000 	andeq	r0, r0, r0
    de48:	00000000 	andeq	r0, r0, r0
    de4c:	00000000 	andeq	r0, r0, r0
    de50:	00000000 	andeq	r0, r0, r0
    de54:	00000000 	andeq	r0, r0, r0
    de58:	00000000 	andeq	r0, r0, r0
    de5c:	00000000 	andeq	r0, r0, r0
    de60:	00000000 	andeq	r0, r0, r0
    de64:	00000000 	andeq	r0, r0, r0
    de68:	00000000 	andeq	r0, r0, r0
    de6c:	00000000 	andeq	r0, r0, r0
    de70:	00000000 	andeq	r0, r0, r0
    de74:	00000000 	andeq	r0, r0, r0
    de78:	00000000 	andeq	r0, r0, r0
    de7c:	00000000 	andeq	r0, r0, r0
    de80:	00000000 	andeq	r0, r0, r0
    de84:	00000000 	andeq	r0, r0, r0
    de88:	00000000 	andeq	r0, r0, r0
    de8c:	00000000 	andeq	r0, r0, r0
    de90:	00000000 	andeq	r0, r0, r0
    de94:	00000000 	andeq	r0, r0, r0
    de98:	00000000 	andeq	r0, r0, r0
    de9c:	00000000 	andeq	r0, r0, r0
    dea0:	00000000 	andeq	r0, r0, r0
    dea4:	00000000 	andeq	r0, r0, r0
    dea8:	00000000 	andeq	r0, r0, r0
    deac:	00000000 	andeq	r0, r0, r0
    deb0:	00000000 	andeq	r0, r0, r0
    deb4:	00000000 	andeq	r0, r0, r0
    deb8:	00000000 	andeq	r0, r0, r0
    debc:	00000000 	andeq	r0, r0, r0
    dec0:	00000000 	andeq	r0, r0, r0
    dec4:	00000000 	andeq	r0, r0, r0
    dec8:	00000000 	andeq	r0, r0, r0
    decc:	00000000 	andeq	r0, r0, r0
    ded0:	00000000 	andeq	r0, r0, r0
    ded4:	00000000 	andeq	r0, r0, r0
    ded8:	00000000 	andeq	r0, r0, r0
    dedc:	00000000 	andeq	r0, r0, r0
    dee0:	00000000 	andeq	r0, r0, r0
    dee4:	00000000 	andeq	r0, r0, r0
    dee8:	00000000 	andeq	r0, r0, r0
    deec:	00000000 	andeq	r0, r0, r0
    def0:	00000000 	andeq	r0, r0, r0
    def4:	00000000 	andeq	r0, r0, r0
    def8:	00000000 	andeq	r0, r0, r0
    defc:	00000000 	andeq	r0, r0, r0
    df00:	00000000 	andeq	r0, r0, r0
    df04:	00000000 	andeq	r0, r0, r0
    df08:	00000000 	andeq	r0, r0, r0
    df0c:	00000000 	andeq	r0, r0, r0
    df10:	00000000 	andeq	r0, r0, r0
    df14:	00000000 	andeq	r0, r0, r0
    df18:	00000000 	andeq	r0, r0, r0
    df1c:	00000000 	andeq	r0, r0, r0
    df20:	00000000 	andeq	r0, r0, r0
    df24:	00000000 	andeq	r0, r0, r0
    df28:	00000000 	andeq	r0, r0, r0
    df2c:	00000000 	andeq	r0, r0, r0
    df30:	00000000 	andeq	r0, r0, r0
    df34:	00000000 	andeq	r0, r0, r0
    df38:	00000000 	andeq	r0, r0, r0
    df3c:	00000000 	andeq	r0, r0, r0
    df40:	00000000 	andeq	r0, r0, r0
    df44:	00000000 	andeq	r0, r0, r0
    df48:	00000000 	andeq	r0, r0, r0
    df4c:	00000000 	andeq	r0, r0, r0
    df50:	00000000 	andeq	r0, r0, r0
    df54:	00000000 	andeq	r0, r0, r0
    df58:	00000000 	andeq	r0, r0, r0
    df5c:	00000000 	andeq	r0, r0, r0
    df60:	00000000 	andeq	r0, r0, r0
    df64:	00000000 	andeq	r0, r0, r0
    df68:	00000000 	andeq	r0, r0, r0
    df6c:	00000000 	andeq	r0, r0, r0
    df70:	00000000 	andeq	r0, r0, r0
    df74:	00000000 	andeq	r0, r0, r0
    df78:	00000000 	andeq	r0, r0, r0
    df7c:	00000000 	andeq	r0, r0, r0
    df80:	00000000 	andeq	r0, r0, r0
    df84:	00000000 	andeq	r0, r0, r0
    df88:	00000000 	andeq	r0, r0, r0
    df8c:	00000000 	andeq	r0, r0, r0
    df90:	00000000 	andeq	r0, r0, r0
    df94:	00000000 	andeq	r0, r0, r0
    df98:	00000000 	andeq	r0, r0, r0
    df9c:	00000000 	andeq	r0, r0, r0
    dfa0:	00000000 	andeq	r0, r0, r0
    dfa4:	00000000 	andeq	r0, r0, r0
    dfa8:	00000000 	andeq	r0, r0, r0
    dfac:	00000000 	andeq	r0, r0, r0
    dfb0:	00000000 	andeq	r0, r0, r0
    dfb4:	00000000 	andeq	r0, r0, r0
    dfb8:	00000000 	andeq	r0, r0, r0
    dfbc:	00000000 	andeq	r0, r0, r0
    dfc0:	00000000 	andeq	r0, r0, r0
    dfc4:	00000000 	andeq	r0, r0, r0
    dfc8:	00000000 	andeq	r0, r0, r0
    dfcc:	00000000 	andeq	r0, r0, r0
    dfd0:	00000000 	andeq	r0, r0, r0
    dfd4:	00000000 	andeq	r0, r0, r0
    dfd8:	00000000 	andeq	r0, r0, r0
    dfdc:	00000000 	andeq	r0, r0, r0
    dfe0:	00000000 	andeq	r0, r0, r0
    dfe4:	00000000 	andeq	r0, r0, r0
    dfe8:	00000000 	andeq	r0, r0, r0
    dfec:	00000000 	andeq	r0, r0, r0
    dff0:	00000000 	andeq	r0, r0, r0
    dff4:	00000000 	andeq	r0, r0, r0
    dff8:	00000000 	andeq	r0, r0, r0
    dffc:	00000000 	andeq	r0, r0, r0
    e000:	00000000 	andeq	r0, r0, r0
    e004:	00000000 	andeq	r0, r0, r0
    e008:	00000000 	andeq	r0, r0, r0
    e00c:	00000000 	andeq	r0, r0, r0
    e010:	00000000 	andeq	r0, r0, r0
    e014:	00000000 	andeq	r0, r0, r0
    e018:	00000000 	andeq	r0, r0, r0
    e01c:	00000000 	andeq	r0, r0, r0
    e020:	00000000 	andeq	r0, r0, r0
    e024:	00000000 	andeq	r0, r0, r0
    e028:	00000000 	andeq	r0, r0, r0
    e02c:	00000000 	andeq	r0, r0, r0
    e030:	00000000 	andeq	r0, r0, r0
    e034:	00000000 	andeq	r0, r0, r0
    e038:	00000000 	andeq	r0, r0, r0
    e03c:	00000000 	andeq	r0, r0, r0
    e040:	00000000 	andeq	r0, r0, r0
    e044:	00000000 	andeq	r0, r0, r0
    e048:	00000000 	andeq	r0, r0, r0
    e04c:	00000000 	andeq	r0, r0, r0
    e050:	00000000 	andeq	r0, r0, r0
    e054:	00000000 	andeq	r0, r0, r0
    e058:	00000000 	andeq	r0, r0, r0
    e05c:	00000000 	andeq	r0, r0, r0
    e060:	00000000 	andeq	r0, r0, r0
    e064:	00000000 	andeq	r0, r0, r0
    e068:	00000000 	andeq	r0, r0, r0
    e06c:	00000000 	andeq	r0, r0, r0
    e070:	00000000 	andeq	r0, r0, r0
    e074:	00000000 	andeq	r0, r0, r0
    e078:	00000000 	andeq	r0, r0, r0
    e07c:	00000000 	andeq	r0, r0, r0
    e080:	00000000 	andeq	r0, r0, r0
    e084:	00000000 	andeq	r0, r0, r0
    e088:	00000000 	andeq	r0, r0, r0
    e08c:	00000000 	andeq	r0, r0, r0
    e090:	00000000 	andeq	r0, r0, r0
    e094:	00000000 	andeq	r0, r0, r0
    e098:	00000000 	andeq	r0, r0, r0
    e09c:	00000000 	andeq	r0, r0, r0
    e0a0:	00000000 	andeq	r0, r0, r0
    e0a4:	00000000 	andeq	r0, r0, r0
    e0a8:	00000000 	andeq	r0, r0, r0
    e0ac:	00000000 	andeq	r0, r0, r0
    e0b0:	00000000 	andeq	r0, r0, r0
    e0b4:	00000000 	andeq	r0, r0, r0
    e0b8:	00000000 	andeq	r0, r0, r0
    e0bc:	00000000 	andeq	r0, r0, r0
    e0c0:	00000000 	andeq	r0, r0, r0
    e0c4:	00000000 	andeq	r0, r0, r0
    e0c8:	00000000 	andeq	r0, r0, r0
    e0cc:	00000000 	andeq	r0, r0, r0
    e0d0:	00000000 	andeq	r0, r0, r0
    e0d4:	00000000 	andeq	r0, r0, r0
    e0d8:	00000000 	andeq	r0, r0, r0
    e0dc:	00000000 	andeq	r0, r0, r0
    e0e0:	00000000 	andeq	r0, r0, r0
    e0e4:	00000000 	andeq	r0, r0, r0
    e0e8:	00000000 	andeq	r0, r0, r0
    e0ec:	00000000 	andeq	r0, r0, r0
    e0f0:	00000000 	andeq	r0, r0, r0
    e0f4:	00000000 	andeq	r0, r0, r0
    e0f8:	00000000 	andeq	r0, r0, r0
    e0fc:	00000000 	andeq	r0, r0, r0
    e100:	00000000 	andeq	r0, r0, r0
    e104:	00000000 	andeq	r0, r0, r0
    e108:	00000000 	andeq	r0, r0, r0
    e10c:	00000000 	andeq	r0, r0, r0
    e110:	00000000 	andeq	r0, r0, r0
    e114:	00000000 	andeq	r0, r0, r0
    e118:	00000000 	andeq	r0, r0, r0
    e11c:	00000000 	andeq	r0, r0, r0
    e120:	00000000 	andeq	r0, r0, r0
    e124:	00000000 	andeq	r0, r0, r0
    e128:	00000000 	andeq	r0, r0, r0
    e12c:	00000000 	andeq	r0, r0, r0
    e130:	00000000 	andeq	r0, r0, r0
    e134:	00000000 	andeq	r0, r0, r0
    e138:	00000000 	andeq	r0, r0, r0
    e13c:	00000000 	andeq	r0, r0, r0
    e140:	00000000 	andeq	r0, r0, r0
    e144:	00000000 	andeq	r0, r0, r0
    e148:	00000000 	andeq	r0, r0, r0
    e14c:	00000000 	andeq	r0, r0, r0
    e150:	00000000 	andeq	r0, r0, r0
    e154:	00000000 	andeq	r0, r0, r0
    e158:	00000000 	andeq	r0, r0, r0
    e15c:	00000000 	andeq	r0, r0, r0
    e160:	00000000 	andeq	r0, r0, r0
    e164:	00000000 	andeq	r0, r0, r0
    e168:	00000000 	andeq	r0, r0, r0
    e16c:	00000000 	andeq	r0, r0, r0
    e170:	00000000 	andeq	r0, r0, r0
    e174:	00000000 	andeq	r0, r0, r0
    e178:	00000000 	andeq	r0, r0, r0
    e17c:	00000000 	andeq	r0, r0, r0
    e180:	00000000 	andeq	r0, r0, r0
    e184:	00000000 	andeq	r0, r0, r0
    e188:	00000000 	andeq	r0, r0, r0
    e18c:	00000000 	andeq	r0, r0, r0
    e190:	00000000 	andeq	r0, r0, r0
    e194:	00000000 	andeq	r0, r0, r0
    e198:	00000000 	andeq	r0, r0, r0
    e19c:	00000000 	andeq	r0, r0, r0
    e1a0:	00000000 	andeq	r0, r0, r0
    e1a4:	00000000 	andeq	r0, r0, r0
    e1a8:	00000000 	andeq	r0, r0, r0
    e1ac:	00000000 	andeq	r0, r0, r0
    e1b0:	00000000 	andeq	r0, r0, r0
    e1b4:	00000000 	andeq	r0, r0, r0
    e1b8:	00000000 	andeq	r0, r0, r0
    e1bc:	00000000 	andeq	r0, r0, r0
    e1c0:	00000000 	andeq	r0, r0, r0
    e1c4:	00000000 	andeq	r0, r0, r0
    e1c8:	00000000 	andeq	r0, r0, r0
    e1cc:	00000000 	andeq	r0, r0, r0
    e1d0:	00000000 	andeq	r0, r0, r0
    e1d4:	00000000 	andeq	r0, r0, r0
    e1d8:	00000000 	andeq	r0, r0, r0
    e1dc:	00000000 	andeq	r0, r0, r0
    e1e0:	00000000 	andeq	r0, r0, r0
    e1e4:	00000000 	andeq	r0, r0, r0
    e1e8:	00000000 	andeq	r0, r0, r0
    e1ec:	00000000 	andeq	r0, r0, r0
    e1f0:	00000000 	andeq	r0, r0, r0
    e1f4:	00000000 	andeq	r0, r0, r0
    e1f8:	00000000 	andeq	r0, r0, r0
    e1fc:	00000000 	andeq	r0, r0, r0
    e200:	00000000 	andeq	r0, r0, r0
    e204:	00000000 	andeq	r0, r0, r0
    e208:	00000000 	andeq	r0, r0, r0
    e20c:	00000000 	andeq	r0, r0, r0
    e210:	00000000 	andeq	r0, r0, r0
    e214:	00000000 	andeq	r0, r0, r0
    e218:	00000000 	andeq	r0, r0, r0
    e21c:	00000000 	andeq	r0, r0, r0
    e220:	00000000 	andeq	r0, r0, r0
    e224:	00000000 	andeq	r0, r0, r0
    e228:	00000000 	andeq	r0, r0, r0
    e22c:	00000000 	andeq	r0, r0, r0
    e230:	00000000 	andeq	r0, r0, r0
    e234:	00000000 	andeq	r0, r0, r0
    e238:	00000000 	andeq	r0, r0, r0
    e23c:	00000000 	andeq	r0, r0, r0
    e240:	00000000 	andeq	r0, r0, r0
    e244:	00000000 	andeq	r0, r0, r0
    e248:	00000000 	andeq	r0, r0, r0
    e24c:	00000000 	andeq	r0, r0, r0
    e250:	00000000 	andeq	r0, r0, r0
    e254:	00000000 	andeq	r0, r0, r0
    e258:	00000000 	andeq	r0, r0, r0
    e25c:	00000000 	andeq	r0, r0, r0
    e260:	00000000 	andeq	r0, r0, r0
    e264:	00000000 	andeq	r0, r0, r0
    e268:	00000000 	andeq	r0, r0, r0
    e26c:	00000000 	andeq	r0, r0, r0
    e270:	00000000 	andeq	r0, r0, r0
    e274:	00000000 	andeq	r0, r0, r0
    e278:	00000000 	andeq	r0, r0, r0
    e27c:	00000000 	andeq	r0, r0, r0
    e280:	00000000 	andeq	r0, r0, r0
    e284:	00000000 	andeq	r0, r0, r0
    e288:	00000000 	andeq	r0, r0, r0
    e28c:	00000000 	andeq	r0, r0, r0
    e290:	00000000 	andeq	r0, r0, r0
    e294:	00000000 	andeq	r0, r0, r0
    e298:	00000000 	andeq	r0, r0, r0
    e29c:	00000000 	andeq	r0, r0, r0
    e2a0:	00000000 	andeq	r0, r0, r0
    e2a4:	00000000 	andeq	r0, r0, r0
    e2a8:	00000000 	andeq	r0, r0, r0
    e2ac:	00000000 	andeq	r0, r0, r0
    e2b0:	00000000 	andeq	r0, r0, r0
    e2b4:	00000000 	andeq	r0, r0, r0
    e2b8:	00000000 	andeq	r0, r0, r0
    e2bc:	00000000 	andeq	r0, r0, r0
    e2c0:	00000000 	andeq	r0, r0, r0
    e2c4:	00000000 	andeq	r0, r0, r0
    e2c8:	00000000 	andeq	r0, r0, r0
    e2cc:	00000000 	andeq	r0, r0, r0
    e2d0:	00000000 	andeq	r0, r0, r0
    e2d4:	00000000 	andeq	r0, r0, r0
    e2d8:	00000000 	andeq	r0, r0, r0
    e2dc:	00000000 	andeq	r0, r0, r0
    e2e0:	00000000 	andeq	r0, r0, r0
    e2e4:	00000000 	andeq	r0, r0, r0
    e2e8:	00000000 	andeq	r0, r0, r0
    e2ec:	00000000 	andeq	r0, r0, r0
    e2f0:	00000000 	andeq	r0, r0, r0
    e2f4:	00000000 	andeq	r0, r0, r0
    e2f8:	00000000 	andeq	r0, r0, r0
    e2fc:	00000000 	andeq	r0, r0, r0
    e300:	00000000 	andeq	r0, r0, r0
    e304:	00000000 	andeq	r0, r0, r0
    e308:	00000000 	andeq	r0, r0, r0
    e30c:	00000000 	andeq	r0, r0, r0
    e310:	00000000 	andeq	r0, r0, r0
    e314:	00000000 	andeq	r0, r0, r0
    e318:	00000000 	andeq	r0, r0, r0
    e31c:	00000000 	andeq	r0, r0, r0
    e320:	00000000 	andeq	r0, r0, r0
    e324:	00000000 	andeq	r0, r0, r0
    e328:	00000000 	andeq	r0, r0, r0
    e32c:	00000000 	andeq	r0, r0, r0
    e330:	00000000 	andeq	r0, r0, r0
    e334:	00000000 	andeq	r0, r0, r0
    e338:	00000000 	andeq	r0, r0, r0
    e33c:	00000000 	andeq	r0, r0, r0
    e340:	00000000 	andeq	r0, r0, r0
    e344:	00000000 	andeq	r0, r0, r0
    e348:	00000000 	andeq	r0, r0, r0
    e34c:	00000000 	andeq	r0, r0, r0
    e350:	00000000 	andeq	r0, r0, r0
    e354:	00000000 	andeq	r0, r0, r0
    e358:	00000000 	andeq	r0, r0, r0
    e35c:	00000000 	andeq	r0, r0, r0
    e360:	00000000 	andeq	r0, r0, r0
    e364:	00000000 	andeq	r0, r0, r0
    e368:	00000000 	andeq	r0, r0, r0
    e36c:	00000000 	andeq	r0, r0, r0
    e370:	00000000 	andeq	r0, r0, r0
    e374:	00000000 	andeq	r0, r0, r0
    e378:	00000000 	andeq	r0, r0, r0
    e37c:	00000000 	andeq	r0, r0, r0
    e380:	00000000 	andeq	r0, r0, r0
    e384:	00000000 	andeq	r0, r0, r0
    e388:	00000000 	andeq	r0, r0, r0
    e38c:	00000000 	andeq	r0, r0, r0
    e390:	00000000 	andeq	r0, r0, r0
    e394:	00000000 	andeq	r0, r0, r0
    e398:	00000000 	andeq	r0, r0, r0
    e39c:	00000000 	andeq	r0, r0, r0
    e3a0:	00000000 	andeq	r0, r0, r0
    e3a4:	00000000 	andeq	r0, r0, r0
    e3a8:	00000000 	andeq	r0, r0, r0
    e3ac:	00000000 	andeq	r0, r0, r0
    e3b0:	00000000 	andeq	r0, r0, r0
    e3b4:	00000000 	andeq	r0, r0, r0
    e3b8:	00000000 	andeq	r0, r0, r0
    e3bc:	00000000 	andeq	r0, r0, r0
    e3c0:	00000000 	andeq	r0, r0, r0
    e3c4:	00000000 	andeq	r0, r0, r0
    e3c8:	00000000 	andeq	r0, r0, r0
    e3cc:	00000000 	andeq	r0, r0, r0
    e3d0:	00000000 	andeq	r0, r0, r0
    e3d4:	00000000 	andeq	r0, r0, r0
    e3d8:	00000000 	andeq	r0, r0, r0
    e3dc:	00000000 	andeq	r0, r0, r0
    e3e0:	00000000 	andeq	r0, r0, r0
    e3e4:	00000000 	andeq	r0, r0, r0
    e3e8:	00000000 	andeq	r0, r0, r0
    e3ec:	00000000 	andeq	r0, r0, r0
    e3f0:	00000000 	andeq	r0, r0, r0
    e3f4:	00000000 	andeq	r0, r0, r0
    e3f8:	00000000 	andeq	r0, r0, r0
    e3fc:	00000000 	andeq	r0, r0, r0
    e400:	00000000 	andeq	r0, r0, r0
    e404:	00000000 	andeq	r0, r0, r0
    e408:	00000000 	andeq	r0, r0, r0
    e40c:	00000000 	andeq	r0, r0, r0
    e410:	00000000 	andeq	r0, r0, r0
    e414:	00000000 	andeq	r0, r0, r0
    e418:	00000000 	andeq	r0, r0, r0
    e41c:	00000000 	andeq	r0, r0, r0
    e420:	00000000 	andeq	r0, r0, r0
    e424:	00000000 	andeq	r0, r0, r0
    e428:	00000000 	andeq	r0, r0, r0
    e42c:	00000000 	andeq	r0, r0, r0
    e430:	00000000 	andeq	r0, r0, r0
    e434:	00000000 	andeq	r0, r0, r0
    e438:	00000000 	andeq	r0, r0, r0
    e43c:	00000000 	andeq	r0, r0, r0
    e440:	00000000 	andeq	r0, r0, r0
    e444:	00000000 	andeq	r0, r0, r0
    e448:	00000000 	andeq	r0, r0, r0
    e44c:	00000000 	andeq	r0, r0, r0
    e450:	00000000 	andeq	r0, r0, r0
    e454:	00000000 	andeq	r0, r0, r0
    e458:	00000000 	andeq	r0, r0, r0
    e45c:	00000000 	andeq	r0, r0, r0
    e460:	00000000 	andeq	r0, r0, r0
    e464:	00000000 	andeq	r0, r0, r0
    e468:	00000000 	andeq	r0, r0, r0
    e46c:	00000000 	andeq	r0, r0, r0
    e470:	00000000 	andeq	r0, r0, r0
    e474:	00000000 	andeq	r0, r0, r0
    e478:	00000000 	andeq	r0, r0, r0
    e47c:	00000000 	andeq	r0, r0, r0
    e480:	00000000 	andeq	r0, r0, r0
    e484:	00000000 	andeq	r0, r0, r0
    e488:	00000000 	andeq	r0, r0, r0
    e48c:	00000000 	andeq	r0, r0, r0
    e490:	00000000 	andeq	r0, r0, r0
    e494:	00000000 	andeq	r0, r0, r0
    e498:	00000000 	andeq	r0, r0, r0
    e49c:	00000000 	andeq	r0, r0, r0
    e4a0:	00000000 	andeq	r0, r0, r0
    e4a4:	00000000 	andeq	r0, r0, r0
    e4a8:	00000000 	andeq	r0, r0, r0
    e4ac:	00000000 	andeq	r0, r0, r0
    e4b0:	00000000 	andeq	r0, r0, r0
    e4b4:	00000000 	andeq	r0, r0, r0
    e4b8:	00000000 	andeq	r0, r0, r0
    e4bc:	00000000 	andeq	r0, r0, r0
    e4c0:	00000000 	andeq	r0, r0, r0
    e4c4:	00000000 	andeq	r0, r0, r0
    e4c8:	00000000 	andeq	r0, r0, r0
    e4cc:	00000000 	andeq	r0, r0, r0
    e4d0:	00000000 	andeq	r0, r0, r0
    e4d4:	00000000 	andeq	r0, r0, r0
    e4d8:	00000000 	andeq	r0, r0, r0
    e4dc:	00000000 	andeq	r0, r0, r0
    e4e0:	00000000 	andeq	r0, r0, r0
    e4e4:	00000000 	andeq	r0, r0, r0
    e4e8:	00000000 	andeq	r0, r0, r0
    e4ec:	00000000 	andeq	r0, r0, r0
    e4f0:	00000000 	andeq	r0, r0, r0
    e4f4:	00000000 	andeq	r0, r0, r0
    e4f8:	00000000 	andeq	r0, r0, r0
    e4fc:	00000000 	andeq	r0, r0, r0
    e500:	00000000 	andeq	r0, r0, r0
    e504:	00000000 	andeq	r0, r0, r0
    e508:	00000000 	andeq	r0, r0, r0
    e50c:	00000000 	andeq	r0, r0, r0
    e510:	00000000 	andeq	r0, r0, r0
    e514:	00000000 	andeq	r0, r0, r0
    e518:	00000000 	andeq	r0, r0, r0
    e51c:	00000000 	andeq	r0, r0, r0
    e520:	00000000 	andeq	r0, r0, r0
    e524:	00000000 	andeq	r0, r0, r0
    e528:	00000000 	andeq	r0, r0, r0
    e52c:	00000000 	andeq	r0, r0, r0
    e530:	00000000 	andeq	r0, r0, r0
    e534:	00000000 	andeq	r0, r0, r0
    e538:	00000000 	andeq	r0, r0, r0
    e53c:	00000000 	andeq	r0, r0, r0
    e540:	00000000 	andeq	r0, r0, r0
    e544:	00000000 	andeq	r0, r0, r0
    e548:	00000000 	andeq	r0, r0, r0
    e54c:	00000000 	andeq	r0, r0, r0
    e550:	00000000 	andeq	r0, r0, r0
    e554:	00000000 	andeq	r0, r0, r0
    e558:	00000000 	andeq	r0, r0, r0
    e55c:	00000000 	andeq	r0, r0, r0
    e560:	00000000 	andeq	r0, r0, r0
    e564:	00000000 	andeq	r0, r0, r0
    e568:	00000000 	andeq	r0, r0, r0
    e56c:	00000000 	andeq	r0, r0, r0
    e570:	00000000 	andeq	r0, r0, r0
    e574:	00000000 	andeq	r0, r0, r0
    e578:	00000000 	andeq	r0, r0, r0
    e57c:	00000000 	andeq	r0, r0, r0
    e580:	00000000 	andeq	r0, r0, r0
    e584:	00000000 	andeq	r0, r0, r0
    e588:	00000000 	andeq	r0, r0, r0
    e58c:	00000000 	andeq	r0, r0, r0
    e590:	00000000 	andeq	r0, r0, r0
    e594:	00000000 	andeq	r0, r0, r0
    e598:	00000000 	andeq	r0, r0, r0
    e59c:	00000000 	andeq	r0, r0, r0
    e5a0:	00000000 	andeq	r0, r0, r0
    e5a4:	00000000 	andeq	r0, r0, r0
    e5a8:	00000000 	andeq	r0, r0, r0
    e5ac:	00000000 	andeq	r0, r0, r0
    e5b0:	00000000 	andeq	r0, r0, r0
    e5b4:	00000000 	andeq	r0, r0, r0
    e5b8:	00000000 	andeq	r0, r0, r0
    e5bc:	00000000 	andeq	r0, r0, r0
    e5c0:	00000000 	andeq	r0, r0, r0
    e5c4:	00000000 	andeq	r0, r0, r0
    e5c8:	00000000 	andeq	r0, r0, r0
    e5cc:	00000000 	andeq	r0, r0, r0
    e5d0:	00000000 	andeq	r0, r0, r0
    e5d4:	00000000 	andeq	r0, r0, r0
    e5d8:	00000000 	andeq	r0, r0, r0
    e5dc:	00000000 	andeq	r0, r0, r0
    e5e0:	00000000 	andeq	r0, r0, r0
    e5e4:	00000000 	andeq	r0, r0, r0
    e5e8:	00000000 	andeq	r0, r0, r0
    e5ec:	00000000 	andeq	r0, r0, r0
    e5f0:	00000000 	andeq	r0, r0, r0
    e5f4:	00000000 	andeq	r0, r0, r0
    e5f8:	00000000 	andeq	r0, r0, r0
    e5fc:	00000000 	andeq	r0, r0, r0
    e600:	00000000 	andeq	r0, r0, r0
    e604:	00000000 	andeq	r0, r0, r0
    e608:	00000000 	andeq	r0, r0, r0
    e60c:	00000000 	andeq	r0, r0, r0
    e610:	00000000 	andeq	r0, r0, r0
    e614:	00000000 	andeq	r0, r0, r0
    e618:	00000000 	andeq	r0, r0, r0
    e61c:	00000000 	andeq	r0, r0, r0
    e620:	00000000 	andeq	r0, r0, r0
    e624:	00000000 	andeq	r0, r0, r0
    e628:	00000000 	andeq	r0, r0, r0
    e62c:	00000000 	andeq	r0, r0, r0
    e630:	00000000 	andeq	r0, r0, r0
    e634:	00000000 	andeq	r0, r0, r0
    e638:	00000000 	andeq	r0, r0, r0
    e63c:	00000000 	andeq	r0, r0, r0
    e640:	00000000 	andeq	r0, r0, r0
    e644:	00000000 	andeq	r0, r0, r0
    e648:	00000000 	andeq	r0, r0, r0
    e64c:	00000000 	andeq	r0, r0, r0
    e650:	00000000 	andeq	r0, r0, r0
    e654:	00000000 	andeq	r0, r0, r0
    e658:	00000000 	andeq	r0, r0, r0
    e65c:	00000000 	andeq	r0, r0, r0
    e660:	00000000 	andeq	r0, r0, r0
    e664:	00000000 	andeq	r0, r0, r0
    e668:	00000000 	andeq	r0, r0, r0
    e66c:	00000000 	andeq	r0, r0, r0
    e670:	00000000 	andeq	r0, r0, r0
    e674:	00000000 	andeq	r0, r0, r0
    e678:	00000000 	andeq	r0, r0, r0
    e67c:	00000000 	andeq	r0, r0, r0
    e680:	00000000 	andeq	r0, r0, r0
    e684:	00000000 	andeq	r0, r0, r0
    e688:	00000000 	andeq	r0, r0, r0
    e68c:	00000000 	andeq	r0, r0, r0
    e690:	00000000 	andeq	r0, r0, r0
    e694:	00000000 	andeq	r0, r0, r0
    e698:	00000000 	andeq	r0, r0, r0
    e69c:	00000000 	andeq	r0, r0, r0
    e6a0:	00000000 	andeq	r0, r0, r0
    e6a4:	00000000 	andeq	r0, r0, r0
    e6a8:	00000000 	andeq	r0, r0, r0
    e6ac:	00000000 	andeq	r0, r0, r0
    e6b0:	00000000 	andeq	r0, r0, r0
    e6b4:	00000000 	andeq	r0, r0, r0
    e6b8:	00000000 	andeq	r0, r0, r0
    e6bc:	00000000 	andeq	r0, r0, r0
    e6c0:	00000000 	andeq	r0, r0, r0
    e6c4:	00000000 	andeq	r0, r0, r0
    e6c8:	00000000 	andeq	r0, r0, r0
    e6cc:	00000000 	andeq	r0, r0, r0
    e6d0:	00000000 	andeq	r0, r0, r0
    e6d4:	00000000 	andeq	r0, r0, r0
    e6d8:	00000000 	andeq	r0, r0, r0
    e6dc:	00000000 	andeq	r0, r0, r0
    e6e0:	00000000 	andeq	r0, r0, r0
    e6e4:	00000000 	andeq	r0, r0, r0
    e6e8:	00000000 	andeq	r0, r0, r0
    e6ec:	00000000 	andeq	r0, r0, r0
    e6f0:	00000000 	andeq	r0, r0, r0
    e6f4:	00000000 	andeq	r0, r0, r0
    e6f8:	00000000 	andeq	r0, r0, r0
    e6fc:	00000000 	andeq	r0, r0, r0
    e700:	00000000 	andeq	r0, r0, r0
    e704:	00000000 	andeq	r0, r0, r0
    e708:	00000000 	andeq	r0, r0, r0
    e70c:	00000000 	andeq	r0, r0, r0
    e710:	00000000 	andeq	r0, r0, r0
    e714:	00000000 	andeq	r0, r0, r0
    e718:	00000000 	andeq	r0, r0, r0
    e71c:	00000000 	andeq	r0, r0, r0
    e720:	00000000 	andeq	r0, r0, r0
    e724:	00000000 	andeq	r0, r0, r0
    e728:	00000000 	andeq	r0, r0, r0
    e72c:	00000000 	andeq	r0, r0, r0
    e730:	00000000 	andeq	r0, r0, r0
    e734:	00000000 	andeq	r0, r0, r0
    e738:	00000000 	andeq	r0, r0, r0
    e73c:	00000000 	andeq	r0, r0, r0
    e740:	00000000 	andeq	r0, r0, r0
    e744:	00000000 	andeq	r0, r0, r0
    e748:	00000000 	andeq	r0, r0, r0
    e74c:	00000000 	andeq	r0, r0, r0
    e750:	00000000 	andeq	r0, r0, r0
    e754:	00000000 	andeq	r0, r0, r0
    e758:	00000000 	andeq	r0, r0, r0
    e75c:	00000000 	andeq	r0, r0, r0
    e760:	00000000 	andeq	r0, r0, r0
    e764:	00000000 	andeq	r0, r0, r0
    e768:	00000000 	andeq	r0, r0, r0
    e76c:	00000000 	andeq	r0, r0, r0
    e770:	00000000 	andeq	r0, r0, r0
    e774:	00000000 	andeq	r0, r0, r0
    e778:	00000000 	andeq	r0, r0, r0
    e77c:	00000000 	andeq	r0, r0, r0
    e780:	00000000 	andeq	r0, r0, r0
    e784:	00000000 	andeq	r0, r0, r0
    e788:	00000000 	andeq	r0, r0, r0
    e78c:	00000000 	andeq	r0, r0, r0
    e790:	00000000 	andeq	r0, r0, r0
    e794:	00000000 	andeq	r0, r0, r0
    e798:	00000000 	andeq	r0, r0, r0
    e79c:	00000000 	andeq	r0, r0, r0
    e7a0:	00000000 	andeq	r0, r0, r0
    e7a4:	00000000 	andeq	r0, r0, r0
    e7a8:	00000000 	andeq	r0, r0, r0
    e7ac:	00000000 	andeq	r0, r0, r0
    e7b0:	00000000 	andeq	r0, r0, r0
    e7b4:	00000000 	andeq	r0, r0, r0
    e7b8:	00000000 	andeq	r0, r0, r0
    e7bc:	00000000 	andeq	r0, r0, r0
    e7c0:	00000000 	andeq	r0, r0, r0
    e7c4:	00000000 	andeq	r0, r0, r0
    e7c8:	00000000 	andeq	r0, r0, r0
    e7cc:	00000000 	andeq	r0, r0, r0
    e7d0:	00000000 	andeq	r0, r0, r0
    e7d4:	00000000 	andeq	r0, r0, r0
    e7d8:	00000000 	andeq	r0, r0, r0
    e7dc:	00000000 	andeq	r0, r0, r0
    e7e0:	00000000 	andeq	r0, r0, r0
    e7e4:	00000000 	andeq	r0, r0, r0
    e7e8:	00000000 	andeq	r0, r0, r0
    e7ec:	00000000 	andeq	r0, r0, r0
    e7f0:	00000000 	andeq	r0, r0, r0
    e7f4:	00000000 	andeq	r0, r0, r0
    e7f8:	00000000 	andeq	r0, r0, r0
    e7fc:	00000000 	andeq	r0, r0, r0
    e800:	00000000 	andeq	r0, r0, r0
    e804:	00000000 	andeq	r0, r0, r0
    e808:	00000000 	andeq	r0, r0, r0
    e80c:	00000000 	andeq	r0, r0, r0
    e810:	00000000 	andeq	r0, r0, r0
    e814:	00000000 	andeq	r0, r0, r0
    e818:	00000000 	andeq	r0, r0, r0
    e81c:	00000000 	andeq	r0, r0, r0
    e820:	00000000 	andeq	r0, r0, r0
    e824:	00000000 	andeq	r0, r0, r0
    e828:	00000000 	andeq	r0, r0, r0
    e82c:	00000000 	andeq	r0, r0, r0
    e830:	00000000 	andeq	r0, r0, r0
    e834:	00000000 	andeq	r0, r0, r0
    e838:	00000000 	andeq	r0, r0, r0
    e83c:	00000000 	andeq	r0, r0, r0
    e840:	00000000 	andeq	r0, r0, r0
    e844:	00000000 	andeq	r0, r0, r0
    e848:	00000000 	andeq	r0, r0, r0
    e84c:	00000000 	andeq	r0, r0, r0
    e850:	00000000 	andeq	r0, r0, r0
    e854:	00000000 	andeq	r0, r0, r0
    e858:	00000000 	andeq	r0, r0, r0
    e85c:	00000000 	andeq	r0, r0, r0
    e860:	00000000 	andeq	r0, r0, r0
    e864:	00000000 	andeq	r0, r0, r0
    e868:	00000000 	andeq	r0, r0, r0
    e86c:	00000000 	andeq	r0, r0, r0
    e870:	00000000 	andeq	r0, r0, r0
    e874:	00000000 	andeq	r0, r0, r0
    e878:	00000000 	andeq	r0, r0, r0
    e87c:	00000000 	andeq	r0, r0, r0
    e880:	00000000 	andeq	r0, r0, r0
    e884:	00000000 	andeq	r0, r0, r0
    e888:	00000000 	andeq	r0, r0, r0
    e88c:	00000000 	andeq	r0, r0, r0
    e890:	00000000 	andeq	r0, r0, r0
    e894:	00000000 	andeq	r0, r0, r0
    e898:	00000000 	andeq	r0, r0, r0
    e89c:	00000000 	andeq	r0, r0, r0
    e8a0:	00000000 	andeq	r0, r0, r0
    e8a4:	00000000 	andeq	r0, r0, r0
    e8a8:	00000000 	andeq	r0, r0, r0
    e8ac:	00000000 	andeq	r0, r0, r0
    e8b0:	00000000 	andeq	r0, r0, r0
    e8b4:	00000000 	andeq	r0, r0, r0
    e8b8:	00000000 	andeq	r0, r0, r0
    e8bc:	00000000 	andeq	r0, r0, r0
    e8c0:	00000000 	andeq	r0, r0, r0
    e8c4:	00000000 	andeq	r0, r0, r0
    e8c8:	00000000 	andeq	r0, r0, r0
    e8cc:	00000000 	andeq	r0, r0, r0
    e8d0:	00000000 	andeq	r0, r0, r0
    e8d4:	00000000 	andeq	r0, r0, r0
    e8d8:	00000000 	andeq	r0, r0, r0
    e8dc:	00000000 	andeq	r0, r0, r0
    e8e0:	00000000 	andeq	r0, r0, r0
    e8e4:	00000000 	andeq	r0, r0, r0
    e8e8:	00000000 	andeq	r0, r0, r0
    e8ec:	00000000 	andeq	r0, r0, r0
    e8f0:	00000000 	andeq	r0, r0, r0
    e8f4:	00000000 	andeq	r0, r0, r0
    e8f8:	00000000 	andeq	r0, r0, r0
    e8fc:	00000000 	andeq	r0, r0, r0
    e900:	00000000 	andeq	r0, r0, r0
    e904:	00000000 	andeq	r0, r0, r0
    e908:	00000000 	andeq	r0, r0, r0
    e90c:	00000000 	andeq	r0, r0, r0
    e910:	00000000 	andeq	r0, r0, r0
    e914:	00000000 	andeq	r0, r0, r0
    e918:	00000000 	andeq	r0, r0, r0
    e91c:	00000000 	andeq	r0, r0, r0
    e920:	00000000 	andeq	r0, r0, r0
    e924:	00000000 	andeq	r0, r0, r0
    e928:	00000000 	andeq	r0, r0, r0
    e92c:	00000000 	andeq	r0, r0, r0
    e930:	00000000 	andeq	r0, r0, r0
    e934:	00000000 	andeq	r0, r0, r0
    e938:	00000000 	andeq	r0, r0, r0
    e93c:	00000000 	andeq	r0, r0, r0
    e940:	00000000 	andeq	r0, r0, r0
    e944:	00000000 	andeq	r0, r0, r0
    e948:	00000000 	andeq	r0, r0, r0
    e94c:	00000000 	andeq	r0, r0, r0
    e950:	00000000 	andeq	r0, r0, r0
    e954:	00000000 	andeq	r0, r0, r0
    e958:	00000000 	andeq	r0, r0, r0
    e95c:	00000000 	andeq	r0, r0, r0
    e960:	00000000 	andeq	r0, r0, r0
    e964:	00000000 	andeq	r0, r0, r0
    e968:	00000000 	andeq	r0, r0, r0
    e96c:	00000000 	andeq	r0, r0, r0
    e970:	00000000 	andeq	r0, r0, r0
    e974:	00000000 	andeq	r0, r0, r0
    e978:	00000000 	andeq	r0, r0, r0
    e97c:	00000000 	andeq	r0, r0, r0
    e980:	00000000 	andeq	r0, r0, r0
    e984:	00000000 	andeq	r0, r0, r0
    e988:	00000000 	andeq	r0, r0, r0
    e98c:	00000000 	andeq	r0, r0, r0
    e990:	00000000 	andeq	r0, r0, r0
    e994:	00000000 	andeq	r0, r0, r0
    e998:	00000000 	andeq	r0, r0, r0
    e99c:	00000000 	andeq	r0, r0, r0
    e9a0:	00000000 	andeq	r0, r0, r0
    e9a4:	00000000 	andeq	r0, r0, r0
    e9a8:	00000000 	andeq	r0, r0, r0
    e9ac:	00000000 	andeq	r0, r0, r0
    e9b0:	00000000 	andeq	r0, r0, r0
    e9b4:	00000000 	andeq	r0, r0, r0
    e9b8:	00000000 	andeq	r0, r0, r0
    e9bc:	00000000 	andeq	r0, r0, r0
    e9c0:	00000000 	andeq	r0, r0, r0
    e9c4:	00000000 	andeq	r0, r0, r0
    e9c8:	00000000 	andeq	r0, r0, r0
    e9cc:	00000000 	andeq	r0, r0, r0
    e9d0:	00000000 	andeq	r0, r0, r0
    e9d4:	00000000 	andeq	r0, r0, r0
    e9d8:	00000000 	andeq	r0, r0, r0
    e9dc:	00000000 	andeq	r0, r0, r0
    e9e0:	00000000 	andeq	r0, r0, r0
    e9e4:	00000000 	andeq	r0, r0, r0
    e9e8:	00000000 	andeq	r0, r0, r0
    e9ec:	00000000 	andeq	r0, r0, r0
    e9f0:	00000000 	andeq	r0, r0, r0
    e9f4:	00000000 	andeq	r0, r0, r0
    e9f8:	00000000 	andeq	r0, r0, r0
    e9fc:	00000000 	andeq	r0, r0, r0
    ea00:	00000000 	andeq	r0, r0, r0
    ea04:	00000000 	andeq	r0, r0, r0
    ea08:	00000000 	andeq	r0, r0, r0
    ea0c:	00000000 	andeq	r0, r0, r0
    ea10:	00000000 	andeq	r0, r0, r0
    ea14:	00000000 	andeq	r0, r0, r0
    ea18:	00000000 	andeq	r0, r0, r0
    ea1c:	00000000 	andeq	r0, r0, r0
    ea20:	00000000 	andeq	r0, r0, r0
    ea24:	00000000 	andeq	r0, r0, r0
    ea28:	00000000 	andeq	r0, r0, r0
    ea2c:	00000000 	andeq	r0, r0, r0
    ea30:	00000000 	andeq	r0, r0, r0
    ea34:	00000000 	andeq	r0, r0, r0
    ea38:	00000000 	andeq	r0, r0, r0
    ea3c:	00000000 	andeq	r0, r0, r0
    ea40:	00000000 	andeq	r0, r0, r0
    ea44:	00000000 	andeq	r0, r0, r0
    ea48:	00000000 	andeq	r0, r0, r0
    ea4c:	00000000 	andeq	r0, r0, r0
    ea50:	00000000 	andeq	r0, r0, r0
    ea54:	00000000 	andeq	r0, r0, r0
    ea58:	00000000 	andeq	r0, r0, r0
    ea5c:	00000000 	andeq	r0, r0, r0
    ea60:	00000000 	andeq	r0, r0, r0
    ea64:	00000000 	andeq	r0, r0, r0
    ea68:	00000000 	andeq	r0, r0, r0
    ea6c:	00000000 	andeq	r0, r0, r0
    ea70:	00000000 	andeq	r0, r0, r0
    ea74:	00000000 	andeq	r0, r0, r0
    ea78:	00000000 	andeq	r0, r0, r0
    ea7c:	00000000 	andeq	r0, r0, r0
    ea80:	00000000 	andeq	r0, r0, r0
    ea84:	00000000 	andeq	r0, r0, r0
    ea88:	00000000 	andeq	r0, r0, r0
    ea8c:	00000000 	andeq	r0, r0, r0
    ea90:	00000000 	andeq	r0, r0, r0
    ea94:	00000000 	andeq	r0, r0, r0
    ea98:	00000000 	andeq	r0, r0, r0
    ea9c:	00000000 	andeq	r0, r0, r0
    eaa0:	00000000 	andeq	r0, r0, r0
    eaa4:	00000000 	andeq	r0, r0, r0
    eaa8:	00000000 	andeq	r0, r0, r0
    eaac:	00000000 	andeq	r0, r0, r0
    eab0:	00000000 	andeq	r0, r0, r0
    eab4:	00000000 	andeq	r0, r0, r0
    eab8:	00000000 	andeq	r0, r0, r0
    eabc:	00000000 	andeq	r0, r0, r0
    eac0:	00000000 	andeq	r0, r0, r0
    eac4:	00000000 	andeq	r0, r0, r0
    eac8:	00000000 	andeq	r0, r0, r0
    eacc:	00000000 	andeq	r0, r0, r0
    ead0:	00000000 	andeq	r0, r0, r0
    ead4:	00000000 	andeq	r0, r0, r0
    ead8:	00000000 	andeq	r0, r0, r0
    eadc:	00000000 	andeq	r0, r0, r0
    eae0:	00000000 	andeq	r0, r0, r0
    eae4:	00000000 	andeq	r0, r0, r0
    eae8:	00000000 	andeq	r0, r0, r0
    eaec:	00000000 	andeq	r0, r0, r0
    eaf0:	00000000 	andeq	r0, r0, r0
    eaf4:	00000000 	andeq	r0, r0, r0
    eaf8:	00000000 	andeq	r0, r0, r0
    eafc:	00000000 	andeq	r0, r0, r0
    eb00:	00000000 	andeq	r0, r0, r0
    eb04:	00000000 	andeq	r0, r0, r0
    eb08:	00000000 	andeq	r0, r0, r0
    eb0c:	00000000 	andeq	r0, r0, r0
    eb10:	00000000 	andeq	r0, r0, r0
    eb14:	00000000 	andeq	r0, r0, r0
    eb18:	00000000 	andeq	r0, r0, r0
    eb1c:	00000000 	andeq	r0, r0, r0
    eb20:	00000000 	andeq	r0, r0, r0
    eb24:	00000000 	andeq	r0, r0, r0
    eb28:	00000000 	andeq	r0, r0, r0
    eb2c:	00000000 	andeq	r0, r0, r0
    eb30:	00000000 	andeq	r0, r0, r0
    eb34:	00000000 	andeq	r0, r0, r0
    eb38:	00000000 	andeq	r0, r0, r0
    eb3c:	00000000 	andeq	r0, r0, r0
    eb40:	00000000 	andeq	r0, r0, r0
    eb44:	00000000 	andeq	r0, r0, r0
    eb48:	00000000 	andeq	r0, r0, r0
    eb4c:	00000000 	andeq	r0, r0, r0
    eb50:	00000000 	andeq	r0, r0, r0
    eb54:	00000000 	andeq	r0, r0, r0
    eb58:	00000000 	andeq	r0, r0, r0
    eb5c:	00000000 	andeq	r0, r0, r0
    eb60:	00000000 	andeq	r0, r0, r0
    eb64:	00000000 	andeq	r0, r0, r0
    eb68:	00000000 	andeq	r0, r0, r0
    eb6c:	00000000 	andeq	r0, r0, r0
    eb70:	00000000 	andeq	r0, r0, r0
    eb74:	00000000 	andeq	r0, r0, r0
    eb78:	00000000 	andeq	r0, r0, r0
    eb7c:	00000000 	andeq	r0, r0, r0
    eb80:	00000000 	andeq	r0, r0, r0
    eb84:	00000000 	andeq	r0, r0, r0
    eb88:	00000000 	andeq	r0, r0, r0
    eb8c:	00000000 	andeq	r0, r0, r0
    eb90:	00000000 	andeq	r0, r0, r0
    eb94:	00000000 	andeq	r0, r0, r0
    eb98:	00000000 	andeq	r0, r0, r0
    eb9c:	00000000 	andeq	r0, r0, r0
    eba0:	00000000 	andeq	r0, r0, r0
    eba4:	00000000 	andeq	r0, r0, r0
    eba8:	00000000 	andeq	r0, r0, r0
    ebac:	00000000 	andeq	r0, r0, r0
    ebb0:	00000000 	andeq	r0, r0, r0
    ebb4:	00000000 	andeq	r0, r0, r0
    ebb8:	00000000 	andeq	r0, r0, r0
    ebbc:	00000000 	andeq	r0, r0, r0
    ebc0:	00000000 	andeq	r0, r0, r0
    ebc4:	00000000 	andeq	r0, r0, r0
    ebc8:	00000000 	andeq	r0, r0, r0
    ebcc:	00000000 	andeq	r0, r0, r0
    ebd0:	00000000 	andeq	r0, r0, r0
    ebd4:	00000000 	andeq	r0, r0, r0
    ebd8:	00000000 	andeq	r0, r0, r0
    ebdc:	00000000 	andeq	r0, r0, r0
    ebe0:	00000000 	andeq	r0, r0, r0
    ebe4:	00000000 	andeq	r0, r0, r0
    ebe8:	00000000 	andeq	r0, r0, r0
    ebec:	00000000 	andeq	r0, r0, r0
    ebf0:	00000000 	andeq	r0, r0, r0
    ebf4:	00000000 	andeq	r0, r0, r0
    ebf8:	00000000 	andeq	r0, r0, r0
    ebfc:	00000000 	andeq	r0, r0, r0
    ec00:	00000000 	andeq	r0, r0, r0
    ec04:	00000000 	andeq	r0, r0, r0
    ec08:	00000000 	andeq	r0, r0, r0
    ec0c:	00000000 	andeq	r0, r0, r0
    ec10:	00000000 	andeq	r0, r0, r0
    ec14:	00000000 	andeq	r0, r0, r0
    ec18:	00000000 	andeq	r0, r0, r0
    ec1c:	00000000 	andeq	r0, r0, r0
    ec20:	00000000 	andeq	r0, r0, r0
    ec24:	00000000 	andeq	r0, r0, r0
    ec28:	00000000 	andeq	r0, r0, r0
    ec2c:	00000000 	andeq	r0, r0, r0
    ec30:	00000000 	andeq	r0, r0, r0
    ec34:	00000000 	andeq	r0, r0, r0
    ec38:	00000000 	andeq	r0, r0, r0
    ec3c:	00000000 	andeq	r0, r0, r0
    ec40:	00000000 	andeq	r0, r0, r0
    ec44:	00000000 	andeq	r0, r0, r0
    ec48:	00000000 	andeq	r0, r0, r0
    ec4c:	00000000 	andeq	r0, r0, r0
    ec50:	00000000 	andeq	r0, r0, r0
    ec54:	00000000 	andeq	r0, r0, r0
    ec58:	00000000 	andeq	r0, r0, r0
    ec5c:	00000000 	andeq	r0, r0, r0
    ec60:	00000000 	andeq	r0, r0, r0
    ec64:	00000000 	andeq	r0, r0, r0
    ec68:	00000000 	andeq	r0, r0, r0
    ec6c:	00000000 	andeq	r0, r0, r0
    ec70:	00000000 	andeq	r0, r0, r0
    ec74:	00000000 	andeq	r0, r0, r0
    ec78:	00000000 	andeq	r0, r0, r0
    ec7c:	00000000 	andeq	r0, r0, r0
    ec80:	00000000 	andeq	r0, r0, r0
    ec84:	00000000 	andeq	r0, r0, r0
    ec88:	00000000 	andeq	r0, r0, r0
    ec8c:	00000000 	andeq	r0, r0, r0
    ec90:	00000000 	andeq	r0, r0, r0
    ec94:	00000000 	andeq	r0, r0, r0
    ec98:	00000000 	andeq	r0, r0, r0
    ec9c:	00000000 	andeq	r0, r0, r0
    eca0:	00000000 	andeq	r0, r0, r0
    eca4:	00000000 	andeq	r0, r0, r0
    eca8:	00000000 	andeq	r0, r0, r0
    ecac:	00000000 	andeq	r0, r0, r0
    ecb0:	00000000 	andeq	r0, r0, r0
    ecb4:	00000000 	andeq	r0, r0, r0
    ecb8:	00000000 	andeq	r0, r0, r0
    ecbc:	00000000 	andeq	r0, r0, r0
    ecc0:	00000000 	andeq	r0, r0, r0
    ecc4:	00000000 	andeq	r0, r0, r0
    ecc8:	00000000 	andeq	r0, r0, r0
    eccc:	00000000 	andeq	r0, r0, r0
    ecd0:	00000000 	andeq	r0, r0, r0
    ecd4:	00000000 	andeq	r0, r0, r0
    ecd8:	00000000 	andeq	r0, r0, r0
    ecdc:	00000000 	andeq	r0, r0, r0
    ece0:	00000000 	andeq	r0, r0, r0
    ece4:	00000000 	andeq	r0, r0, r0
    ece8:	00000000 	andeq	r0, r0, r0
    ecec:	00000000 	andeq	r0, r0, r0
    ecf0:	00000000 	andeq	r0, r0, r0
    ecf4:	00000000 	andeq	r0, r0, r0
    ecf8:	00000000 	andeq	r0, r0, r0
    ecfc:	00000000 	andeq	r0, r0, r0
    ed00:	00000000 	andeq	r0, r0, r0
    ed04:	00000000 	andeq	r0, r0, r0
    ed08:	00000000 	andeq	r0, r0, r0
    ed0c:	00000000 	andeq	r0, r0, r0
    ed10:	00000000 	andeq	r0, r0, r0
    ed14:	00000000 	andeq	r0, r0, r0
    ed18:	00000000 	andeq	r0, r0, r0
    ed1c:	00000000 	andeq	r0, r0, r0
    ed20:	00000000 	andeq	r0, r0, r0
    ed24:	00000000 	andeq	r0, r0, r0
    ed28:	00000000 	andeq	r0, r0, r0
    ed2c:	00000000 	andeq	r0, r0, r0
    ed30:	00000000 	andeq	r0, r0, r0
    ed34:	00000000 	andeq	r0, r0, r0
    ed38:	00000000 	andeq	r0, r0, r0
    ed3c:	00000000 	andeq	r0, r0, r0
    ed40:	00000000 	andeq	r0, r0, r0
    ed44:	00000000 	andeq	r0, r0, r0
    ed48:	00000000 	andeq	r0, r0, r0
    ed4c:	00000000 	andeq	r0, r0, r0
    ed50:	00000000 	andeq	r0, r0, r0
    ed54:	00000000 	andeq	r0, r0, r0
    ed58:	00000000 	andeq	r0, r0, r0
    ed5c:	00000000 	andeq	r0, r0, r0
    ed60:	00000000 	andeq	r0, r0, r0
    ed64:	00000000 	andeq	r0, r0, r0
    ed68:	00000000 	andeq	r0, r0, r0
    ed6c:	00000000 	andeq	r0, r0, r0
    ed70:	00000000 	andeq	r0, r0, r0
    ed74:	00000000 	andeq	r0, r0, r0
    ed78:	00000000 	andeq	r0, r0, r0
    ed7c:	00000000 	andeq	r0, r0, r0
    ed80:	00000000 	andeq	r0, r0, r0
    ed84:	00000000 	andeq	r0, r0, r0
    ed88:	00000000 	andeq	r0, r0, r0
    ed8c:	00000000 	andeq	r0, r0, r0
    ed90:	00000000 	andeq	r0, r0, r0
    ed94:	00000000 	andeq	r0, r0, r0
    ed98:	00000000 	andeq	r0, r0, r0
    ed9c:	00000000 	andeq	r0, r0, r0
    eda0:	00000000 	andeq	r0, r0, r0
    eda4:	00000000 	andeq	r0, r0, r0
    eda8:	00000000 	andeq	r0, r0, r0
    edac:	00000000 	andeq	r0, r0, r0
    edb0:	00000000 	andeq	r0, r0, r0
    edb4:	00000000 	andeq	r0, r0, r0
    edb8:	00000000 	andeq	r0, r0, r0
    edbc:	00000000 	andeq	r0, r0, r0
    edc0:	00000000 	andeq	r0, r0, r0
    edc4:	00000000 	andeq	r0, r0, r0
    edc8:	00000000 	andeq	r0, r0, r0
    edcc:	00000000 	andeq	r0, r0, r0
    edd0:	00000000 	andeq	r0, r0, r0
    edd4:	00000000 	andeq	r0, r0, r0
    edd8:	00000000 	andeq	r0, r0, r0
    eddc:	00000000 	andeq	r0, r0, r0
    ede0:	00000000 	andeq	r0, r0, r0
    ede4:	00000000 	andeq	r0, r0, r0
    ede8:	00000000 	andeq	r0, r0, r0
    edec:	00000000 	andeq	r0, r0, r0
    edf0:	00000000 	andeq	r0, r0, r0
    edf4:	00000000 	andeq	r0, r0, r0
    edf8:	00000000 	andeq	r0, r0, r0
    edfc:	00000000 	andeq	r0, r0, r0
    ee00:	00000000 	andeq	r0, r0, r0
    ee04:	00000000 	andeq	r0, r0, r0
    ee08:	00000000 	andeq	r0, r0, r0
    ee0c:	00000000 	andeq	r0, r0, r0
    ee10:	00000000 	andeq	r0, r0, r0
    ee14:	00000000 	andeq	r0, r0, r0
    ee18:	00000000 	andeq	r0, r0, r0
    ee1c:	00000000 	andeq	r0, r0, r0
    ee20:	00000000 	andeq	r0, r0, r0
    ee24:	00000000 	andeq	r0, r0, r0
    ee28:	00000000 	andeq	r0, r0, r0
    ee2c:	00000000 	andeq	r0, r0, r0
    ee30:	00000000 	andeq	r0, r0, r0
    ee34:	00000000 	andeq	r0, r0, r0
    ee38:	00000000 	andeq	r0, r0, r0
    ee3c:	00000000 	andeq	r0, r0, r0
    ee40:	00000000 	andeq	r0, r0, r0
    ee44:	00000000 	andeq	r0, r0, r0
    ee48:	00000000 	andeq	r0, r0, r0
    ee4c:	00000000 	andeq	r0, r0, r0
    ee50:	00000000 	andeq	r0, r0, r0
    ee54:	00000000 	andeq	r0, r0, r0
    ee58:	00000000 	andeq	r0, r0, r0
    ee5c:	00000000 	andeq	r0, r0, r0
    ee60:	00000000 	andeq	r0, r0, r0
    ee64:	00000000 	andeq	r0, r0, r0
    ee68:	00000000 	andeq	r0, r0, r0
    ee6c:	00000000 	andeq	r0, r0, r0
    ee70:	00000000 	andeq	r0, r0, r0
    ee74:	00000000 	andeq	r0, r0, r0
    ee78:	00000000 	andeq	r0, r0, r0
    ee7c:	00000000 	andeq	r0, r0, r0
    ee80:	00000000 	andeq	r0, r0, r0
    ee84:	00000000 	andeq	r0, r0, r0
    ee88:	00000000 	andeq	r0, r0, r0
    ee8c:	00000000 	andeq	r0, r0, r0
    ee90:	00000000 	andeq	r0, r0, r0
    ee94:	00000000 	andeq	r0, r0, r0
    ee98:	00000000 	andeq	r0, r0, r0
    ee9c:	00000000 	andeq	r0, r0, r0
    eea0:	00000000 	andeq	r0, r0, r0
    eea4:	00000000 	andeq	r0, r0, r0
    eea8:	00000000 	andeq	r0, r0, r0
    eeac:	00000000 	andeq	r0, r0, r0
    eeb0:	00000000 	andeq	r0, r0, r0
    eeb4:	00000000 	andeq	r0, r0, r0
    eeb8:	00000000 	andeq	r0, r0, r0
    eebc:	00000000 	andeq	r0, r0, r0
    eec0:	00000000 	andeq	r0, r0, r0
    eec4:	00000000 	andeq	r0, r0, r0
    eec8:	00000000 	andeq	r0, r0, r0
    eecc:	00000000 	andeq	r0, r0, r0
    eed0:	00000000 	andeq	r0, r0, r0
    eed4:	00000000 	andeq	r0, r0, r0
    eed8:	00000000 	andeq	r0, r0, r0
    eedc:	00000000 	andeq	r0, r0, r0
    eee0:	00000000 	andeq	r0, r0, r0
    eee4:	00000000 	andeq	r0, r0, r0
    eee8:	00000000 	andeq	r0, r0, r0
    eeec:	00000000 	andeq	r0, r0, r0
    eef0:	00000000 	andeq	r0, r0, r0
    eef4:	00000000 	andeq	r0, r0, r0
    eef8:	00000000 	andeq	r0, r0, r0
    eefc:	00000000 	andeq	r0, r0, r0
    ef00:	00000000 	andeq	r0, r0, r0
    ef04:	00000000 	andeq	r0, r0, r0
    ef08:	00000000 	andeq	r0, r0, r0
    ef0c:	00000000 	andeq	r0, r0, r0
    ef10:	00000000 	andeq	r0, r0, r0
    ef14:	00000000 	andeq	r0, r0, r0
    ef18:	00000000 	andeq	r0, r0, r0
    ef1c:	00000000 	andeq	r0, r0, r0
    ef20:	00000000 	andeq	r0, r0, r0
    ef24:	00000000 	andeq	r0, r0, r0
    ef28:	00000000 	andeq	r0, r0, r0
    ef2c:	00000000 	andeq	r0, r0, r0
    ef30:	00000000 	andeq	r0, r0, r0
    ef34:	00000000 	andeq	r0, r0, r0
    ef38:	00000000 	andeq	r0, r0, r0
    ef3c:	00000000 	andeq	r0, r0, r0
    ef40:	00000000 	andeq	r0, r0, r0
    ef44:	00000000 	andeq	r0, r0, r0
    ef48:	00000000 	andeq	r0, r0, r0
    ef4c:	00000000 	andeq	r0, r0, r0
    ef50:	00000000 	andeq	r0, r0, r0
    ef54:	00000000 	andeq	r0, r0, r0
    ef58:	00000000 	andeq	r0, r0, r0
    ef5c:	00000000 	andeq	r0, r0, r0
    ef60:	00000000 	andeq	r0, r0, r0
    ef64:	00000000 	andeq	r0, r0, r0
    ef68:	00000000 	andeq	r0, r0, r0
    ef6c:	00000000 	andeq	r0, r0, r0
    ef70:	00000000 	andeq	r0, r0, r0
    ef74:	00000000 	andeq	r0, r0, r0
    ef78:	00000000 	andeq	r0, r0, r0
    ef7c:	00000000 	andeq	r0, r0, r0
    ef80:	00000000 	andeq	r0, r0, r0
    ef84:	00000000 	andeq	r0, r0, r0
    ef88:	00000000 	andeq	r0, r0, r0
    ef8c:	00000000 	andeq	r0, r0, r0
    ef90:	00000000 	andeq	r0, r0, r0
    ef94:	00000000 	andeq	r0, r0, r0
    ef98:	00000000 	andeq	r0, r0, r0
    ef9c:	00000000 	andeq	r0, r0, r0
    efa0:	00000000 	andeq	r0, r0, r0
    efa4:	00000000 	andeq	r0, r0, r0
    efa8:	00000000 	andeq	r0, r0, r0
    efac:	00000000 	andeq	r0, r0, r0
    efb0:	00000000 	andeq	r0, r0, r0
    efb4:	00000000 	andeq	r0, r0, r0
    efb8:	00000000 	andeq	r0, r0, r0
    efbc:	00000000 	andeq	r0, r0, r0
    efc0:	00000000 	andeq	r0, r0, r0
    efc4:	00000000 	andeq	r0, r0, r0
    efc8:	00000000 	andeq	r0, r0, r0
    efcc:	00000000 	andeq	r0, r0, r0
    efd0:	00000000 	andeq	r0, r0, r0
    efd4:	00000000 	andeq	r0, r0, r0
    efd8:	00000000 	andeq	r0, r0, r0
    efdc:	00000000 	andeq	r0, r0, r0
    efe0:	00000000 	andeq	r0, r0, r0
    efe4:	00000000 	andeq	r0, r0, r0
    efe8:	00000000 	andeq	r0, r0, r0
    efec:	00000000 	andeq	r0, r0, r0
    eff0:	00000000 	andeq	r0, r0, r0
    eff4:	00000000 	andeq	r0, r0, r0
    eff8:	00000000 	andeq	r0, r0, r0
    effc:	00000000 	andeq	r0, r0, r0
    f000:	00000000 	andeq	r0, r0, r0
    f004:	00000000 	andeq	r0, r0, r0
    f008:	00000000 	andeq	r0, r0, r0
    f00c:	00000000 	andeq	r0, r0, r0
    f010:	00000000 	andeq	r0, r0, r0
    f014:	00000000 	andeq	r0, r0, r0
    f018:	00000000 	andeq	r0, r0, r0
    f01c:	00000000 	andeq	r0, r0, r0
    f020:	00000000 	andeq	r0, r0, r0
    f024:	00000000 	andeq	r0, r0, r0
    f028:	00000000 	andeq	r0, r0, r0
    f02c:	00000000 	andeq	r0, r0, r0
    f030:	00000000 	andeq	r0, r0, r0
    f034:	00000000 	andeq	r0, r0, r0
    f038:	00000000 	andeq	r0, r0, r0
    f03c:	00000000 	andeq	r0, r0, r0
    f040:	00000000 	andeq	r0, r0, r0
    f044:	00000000 	andeq	r0, r0, r0
    f048:	00000000 	andeq	r0, r0, r0
    f04c:	00000000 	andeq	r0, r0, r0
    f050:	00000000 	andeq	r0, r0, r0
    f054:	00000000 	andeq	r0, r0, r0
    f058:	00000000 	andeq	r0, r0, r0
    f05c:	00000000 	andeq	r0, r0, r0
    f060:	00000000 	andeq	r0, r0, r0
    f064:	00000000 	andeq	r0, r0, r0
    f068:	00000000 	andeq	r0, r0, r0
    f06c:	00000000 	andeq	r0, r0, r0
    f070:	00000000 	andeq	r0, r0, r0
    f074:	00000000 	andeq	r0, r0, r0
    f078:	00000000 	andeq	r0, r0, r0
    f07c:	00000000 	andeq	r0, r0, r0
    f080:	00000000 	andeq	r0, r0, r0
    f084:	00000000 	andeq	r0, r0, r0
    f088:	00000000 	andeq	r0, r0, r0
    f08c:	00000000 	andeq	r0, r0, r0
    f090:	00000000 	andeq	r0, r0, r0
    f094:	00000000 	andeq	r0, r0, r0
    f098:	00000000 	andeq	r0, r0, r0
    f09c:	00000000 	andeq	r0, r0, r0
    f0a0:	00000000 	andeq	r0, r0, r0
    f0a4:	00000000 	andeq	r0, r0, r0
    f0a8:	00000000 	andeq	r0, r0, r0
    f0ac:	00000000 	andeq	r0, r0, r0
    f0b0:	00000000 	andeq	r0, r0, r0
    f0b4:	00000000 	andeq	r0, r0, r0
    f0b8:	00000000 	andeq	r0, r0, r0
    f0bc:	00000000 	andeq	r0, r0, r0
    f0c0:	00000000 	andeq	r0, r0, r0
    f0c4:	00000000 	andeq	r0, r0, r0
    f0c8:	00000000 	andeq	r0, r0, r0
    f0cc:	00000000 	andeq	r0, r0, r0
    f0d0:	00000000 	andeq	r0, r0, r0
    f0d4:	00000000 	andeq	r0, r0, r0
    f0d8:	00000000 	andeq	r0, r0, r0
    f0dc:	00000000 	andeq	r0, r0, r0
    f0e0:	00000000 	andeq	r0, r0, r0
    f0e4:	00000000 	andeq	r0, r0, r0
    f0e8:	00000000 	andeq	r0, r0, r0
    f0ec:	00000000 	andeq	r0, r0, r0
    f0f0:	00000000 	andeq	r0, r0, r0
    f0f4:	00000000 	andeq	r0, r0, r0
    f0f8:	00000000 	andeq	r0, r0, r0
    f0fc:	00000000 	andeq	r0, r0, r0
    f100:	00000000 	andeq	r0, r0, r0
    f104:	00000000 	andeq	r0, r0, r0
    f108:	00000000 	andeq	r0, r0, r0
    f10c:	00000000 	andeq	r0, r0, r0
    f110:	00000000 	andeq	r0, r0, r0
    f114:	00000000 	andeq	r0, r0, r0
    f118:	00000000 	andeq	r0, r0, r0
    f11c:	00000000 	andeq	r0, r0, r0
    f120:	00000000 	andeq	r0, r0, r0
    f124:	00000000 	andeq	r0, r0, r0
    f128:	00000000 	andeq	r0, r0, r0
    f12c:	00000000 	andeq	r0, r0, r0
    f130:	00000000 	andeq	r0, r0, r0
    f134:	00000000 	andeq	r0, r0, r0
    f138:	00000000 	andeq	r0, r0, r0
    f13c:	00000000 	andeq	r0, r0, r0
    f140:	00000000 	andeq	r0, r0, r0
    f144:	00000000 	andeq	r0, r0, r0
    f148:	00000000 	andeq	r0, r0, r0
    f14c:	00000000 	andeq	r0, r0, r0
    f150:	00000000 	andeq	r0, r0, r0
    f154:	00000000 	andeq	r0, r0, r0
    f158:	00000000 	andeq	r0, r0, r0
    f15c:	00000000 	andeq	r0, r0, r0
    f160:	00000000 	andeq	r0, r0, r0
    f164:	00000000 	andeq	r0, r0, r0
    f168:	00000000 	andeq	r0, r0, r0
    f16c:	00000000 	andeq	r0, r0, r0
    f170:	00000000 	andeq	r0, r0, r0
    f174:	00000000 	andeq	r0, r0, r0
    f178:	00000000 	andeq	r0, r0, r0
    f17c:	00000000 	andeq	r0, r0, r0
    f180:	00000000 	andeq	r0, r0, r0
    f184:	00000000 	andeq	r0, r0, r0
    f188:	00000000 	andeq	r0, r0, r0
    f18c:	00000000 	andeq	r0, r0, r0
    f190:	00000000 	andeq	r0, r0, r0
    f194:	00000000 	andeq	r0, r0, r0
    f198:	00000000 	andeq	r0, r0, r0
    f19c:	00000000 	andeq	r0, r0, r0
    f1a0:	00000000 	andeq	r0, r0, r0
    f1a4:	00000000 	andeq	r0, r0, r0
    f1a8:	00000000 	andeq	r0, r0, r0
    f1ac:	00000000 	andeq	r0, r0, r0
    f1b0:	00000000 	andeq	r0, r0, r0
    f1b4:	00000000 	andeq	r0, r0, r0
    f1b8:	00000000 	andeq	r0, r0, r0
    f1bc:	00000000 	andeq	r0, r0, r0
    f1c0:	00000000 	andeq	r0, r0, r0
    f1c4:	00000000 	andeq	r0, r0, r0
    f1c8:	00000000 	andeq	r0, r0, r0
    f1cc:	00000000 	andeq	r0, r0, r0
    f1d0:	00000000 	andeq	r0, r0, r0
    f1d4:	00000000 	andeq	r0, r0, r0
    f1d8:	00000000 	andeq	r0, r0, r0
    f1dc:	00000000 	andeq	r0, r0, r0
    f1e0:	00000000 	andeq	r0, r0, r0
    f1e4:	00000000 	andeq	r0, r0, r0
    f1e8:	00000000 	andeq	r0, r0, r0
    f1ec:	00000000 	andeq	r0, r0, r0
    f1f0:	00000000 	andeq	r0, r0, r0
    f1f4:	00000000 	andeq	r0, r0, r0
    f1f8:	00000000 	andeq	r0, r0, r0
    f1fc:	00000000 	andeq	r0, r0, r0
    f200:	00000000 	andeq	r0, r0, r0
    f204:	00000000 	andeq	r0, r0, r0
    f208:	00000000 	andeq	r0, r0, r0
    f20c:	00000000 	andeq	r0, r0, r0
    f210:	00000000 	andeq	r0, r0, r0
    f214:	00000000 	andeq	r0, r0, r0
    f218:	00000000 	andeq	r0, r0, r0
    f21c:	00000000 	andeq	r0, r0, r0
    f220:	00000000 	andeq	r0, r0, r0
    f224:	00000000 	andeq	r0, r0, r0
    f228:	00000000 	andeq	r0, r0, r0
    f22c:	00000000 	andeq	r0, r0, r0
    f230:	00000000 	andeq	r0, r0, r0
    f234:	00000000 	andeq	r0, r0, r0
    f238:	00000000 	andeq	r0, r0, r0
    f23c:	00000000 	andeq	r0, r0, r0
    f240:	00000000 	andeq	r0, r0, r0
    f244:	00000000 	andeq	r0, r0, r0
    f248:	00000000 	andeq	r0, r0, r0
    f24c:	00000000 	andeq	r0, r0, r0
    f250:	00000000 	andeq	r0, r0, r0
    f254:	00000000 	andeq	r0, r0, r0
    f258:	00000000 	andeq	r0, r0, r0
    f25c:	00000000 	andeq	r0, r0, r0
    f260:	00000000 	andeq	r0, r0, r0
    f264:	00000000 	andeq	r0, r0, r0
    f268:	00000000 	andeq	r0, r0, r0
    f26c:	00000000 	andeq	r0, r0, r0
    f270:	00000000 	andeq	r0, r0, r0
    f274:	00000000 	andeq	r0, r0, r0
    f278:	00000000 	andeq	r0, r0, r0
    f27c:	00000000 	andeq	r0, r0, r0
    f280:	00000000 	andeq	r0, r0, r0
    f284:	00000000 	andeq	r0, r0, r0
    f288:	00000000 	andeq	r0, r0, r0
    f28c:	00000000 	andeq	r0, r0, r0
    f290:	00000000 	andeq	r0, r0, r0
    f294:	00000000 	andeq	r0, r0, r0
    f298:	00000000 	andeq	r0, r0, r0
    f29c:	00000000 	andeq	r0, r0, r0
    f2a0:	00000000 	andeq	r0, r0, r0
    f2a4:	00000000 	andeq	r0, r0, r0
    f2a8:	00000000 	andeq	r0, r0, r0
    f2ac:	00000000 	andeq	r0, r0, r0
    f2b0:	00000000 	andeq	r0, r0, r0
    f2b4:	00000000 	andeq	r0, r0, r0
    f2b8:	00000000 	andeq	r0, r0, r0
    f2bc:	00000000 	andeq	r0, r0, r0
    f2c0:	00000000 	andeq	r0, r0, r0
    f2c4:	00000000 	andeq	r0, r0, r0
    f2c8:	00000000 	andeq	r0, r0, r0
    f2cc:	00000000 	andeq	r0, r0, r0
    f2d0:	00000000 	andeq	r0, r0, r0
    f2d4:	00000000 	andeq	r0, r0, r0
    f2d8:	00000000 	andeq	r0, r0, r0
    f2dc:	00000000 	andeq	r0, r0, r0
    f2e0:	00000000 	andeq	r0, r0, r0
    f2e4:	00000000 	andeq	r0, r0, r0
    f2e8:	00000000 	andeq	r0, r0, r0
    f2ec:	00000000 	andeq	r0, r0, r0
    f2f0:	00000000 	andeq	r0, r0, r0
    f2f4:	00000000 	andeq	r0, r0, r0
    f2f8:	00000000 	andeq	r0, r0, r0
    f2fc:	00000000 	andeq	r0, r0, r0
    f300:	00000000 	andeq	r0, r0, r0
    f304:	00000000 	andeq	r0, r0, r0
    f308:	00000000 	andeq	r0, r0, r0
    f30c:	00000000 	andeq	r0, r0, r0
    f310:	00000000 	andeq	r0, r0, r0
    f314:	00000000 	andeq	r0, r0, r0
    f318:	00000000 	andeq	r0, r0, r0
    f31c:	00000000 	andeq	r0, r0, r0
    f320:	00000000 	andeq	r0, r0, r0
    f324:	00000000 	andeq	r0, r0, r0
    f328:	00000000 	andeq	r0, r0, r0
    f32c:	00000000 	andeq	r0, r0, r0
    f330:	00000000 	andeq	r0, r0, r0
    f334:	00000000 	andeq	r0, r0, r0
    f338:	00000000 	andeq	r0, r0, r0
    f33c:	00000000 	andeq	r0, r0, r0
    f340:	00000000 	andeq	r0, r0, r0
    f344:	00000000 	andeq	r0, r0, r0
    f348:	00000000 	andeq	r0, r0, r0
    f34c:	00000000 	andeq	r0, r0, r0
    f350:	00000000 	andeq	r0, r0, r0
    f354:	00000000 	andeq	r0, r0, r0
    f358:	00000000 	andeq	r0, r0, r0
    f35c:	00000000 	andeq	r0, r0, r0
    f360:	00000000 	andeq	r0, r0, r0
    f364:	00000000 	andeq	r0, r0, r0
    f368:	00000000 	andeq	r0, r0, r0
    f36c:	00000000 	andeq	r0, r0, r0
    f370:	00000000 	andeq	r0, r0, r0
    f374:	00000000 	andeq	r0, r0, r0
    f378:	00000000 	andeq	r0, r0, r0
    f37c:	00000000 	andeq	r0, r0, r0
    f380:	00000000 	andeq	r0, r0, r0
    f384:	00000000 	andeq	r0, r0, r0
    f388:	00000000 	andeq	r0, r0, r0
    f38c:	00000000 	andeq	r0, r0, r0
    f390:	00000000 	andeq	r0, r0, r0
    f394:	00000000 	andeq	r0, r0, r0
    f398:	00000000 	andeq	r0, r0, r0
    f39c:	00000000 	andeq	r0, r0, r0
    f3a0:	00000000 	andeq	r0, r0, r0
    f3a4:	00000000 	andeq	r0, r0, r0
    f3a8:	00000000 	andeq	r0, r0, r0
    f3ac:	00000000 	andeq	r0, r0, r0
    f3b0:	00000000 	andeq	r0, r0, r0
    f3b4:	00000000 	andeq	r0, r0, r0
    f3b8:	00000000 	andeq	r0, r0, r0
    f3bc:	00000000 	andeq	r0, r0, r0
    f3c0:	00000000 	andeq	r0, r0, r0
    f3c4:	00000000 	andeq	r0, r0, r0
    f3c8:	00000000 	andeq	r0, r0, r0
    f3cc:	00000000 	andeq	r0, r0, r0
    f3d0:	00000000 	andeq	r0, r0, r0
    f3d4:	00000000 	andeq	r0, r0, r0
    f3d8:	00000000 	andeq	r0, r0, r0
    f3dc:	00000000 	andeq	r0, r0, r0
    f3e0:	00000000 	andeq	r0, r0, r0
    f3e4:	00000000 	andeq	r0, r0, r0
    f3e8:	00000000 	andeq	r0, r0, r0
    f3ec:	00000000 	andeq	r0, r0, r0
    f3f0:	00000000 	andeq	r0, r0, r0
    f3f4:	00000000 	andeq	r0, r0, r0
    f3f8:	00000000 	andeq	r0, r0, r0
    f3fc:	00000000 	andeq	r0, r0, r0
    f400:	00000000 	andeq	r0, r0, r0
    f404:	00000000 	andeq	r0, r0, r0
    f408:	00000000 	andeq	r0, r0, r0
    f40c:	00000000 	andeq	r0, r0, r0
    f410:	00000000 	andeq	r0, r0, r0
    f414:	00000000 	andeq	r0, r0, r0
    f418:	00000000 	andeq	r0, r0, r0
    f41c:	00000000 	andeq	r0, r0, r0
    f420:	00000000 	andeq	r0, r0, r0
    f424:	00000000 	andeq	r0, r0, r0
    f428:	00000000 	andeq	r0, r0, r0
    f42c:	00000000 	andeq	r0, r0, r0
    f430:	00000000 	andeq	r0, r0, r0
    f434:	00000000 	andeq	r0, r0, r0
    f438:	00000000 	andeq	r0, r0, r0
    f43c:	00000000 	andeq	r0, r0, r0
    f440:	00000000 	andeq	r0, r0, r0
    f444:	00000000 	andeq	r0, r0, r0
    f448:	00000000 	andeq	r0, r0, r0
    f44c:	00000000 	andeq	r0, r0, r0
    f450:	00000000 	andeq	r0, r0, r0
    f454:	00000000 	andeq	r0, r0, r0
    f458:	00000000 	andeq	r0, r0, r0
    f45c:	00000000 	andeq	r0, r0, r0
    f460:	00000000 	andeq	r0, r0, r0
    f464:	00000000 	andeq	r0, r0, r0
    f468:	00000000 	andeq	r0, r0, r0
    f46c:	00000000 	andeq	r0, r0, r0
    f470:	00000000 	andeq	r0, r0, r0
    f474:	00000000 	andeq	r0, r0, r0
    f478:	00000000 	andeq	r0, r0, r0
    f47c:	00000000 	andeq	r0, r0, r0
    f480:	00000000 	andeq	r0, r0, r0
    f484:	00000000 	andeq	r0, r0, r0
    f488:	00000000 	andeq	r0, r0, r0
    f48c:	00000000 	andeq	r0, r0, r0
    f490:	00000000 	andeq	r0, r0, r0
    f494:	00000000 	andeq	r0, r0, r0
    f498:	00000000 	andeq	r0, r0, r0
    f49c:	00000000 	andeq	r0, r0, r0
    f4a0:	00000000 	andeq	r0, r0, r0
    f4a4:	00000000 	andeq	r0, r0, r0
    f4a8:	00000000 	andeq	r0, r0, r0
    f4ac:	00000000 	andeq	r0, r0, r0
    f4b0:	00000000 	andeq	r0, r0, r0
    f4b4:	00000000 	andeq	r0, r0, r0
    f4b8:	00000000 	andeq	r0, r0, r0
    f4bc:	00000000 	andeq	r0, r0, r0
    f4c0:	00000000 	andeq	r0, r0, r0
    f4c4:	00000000 	andeq	r0, r0, r0
    f4c8:	00000000 	andeq	r0, r0, r0
    f4cc:	00000000 	andeq	r0, r0, r0
    f4d0:	00000000 	andeq	r0, r0, r0
    f4d4:	00000000 	andeq	r0, r0, r0
    f4d8:	00000000 	andeq	r0, r0, r0
    f4dc:	00000000 	andeq	r0, r0, r0
    f4e0:	00000000 	andeq	r0, r0, r0
    f4e4:	00000000 	andeq	r0, r0, r0
    f4e8:	00000000 	andeq	r0, r0, r0
    f4ec:	00000000 	andeq	r0, r0, r0
    f4f0:	00000000 	andeq	r0, r0, r0
    f4f4:	00000000 	andeq	r0, r0, r0
    f4f8:	00000000 	andeq	r0, r0, r0
    f4fc:	00000000 	andeq	r0, r0, r0
    f500:	00000000 	andeq	r0, r0, r0
    f504:	00000000 	andeq	r0, r0, r0
    f508:	00000000 	andeq	r0, r0, r0
    f50c:	00000000 	andeq	r0, r0, r0
    f510:	00000000 	andeq	r0, r0, r0
    f514:	00000000 	andeq	r0, r0, r0
    f518:	00000000 	andeq	r0, r0, r0
    f51c:	00000000 	andeq	r0, r0, r0
    f520:	00000000 	andeq	r0, r0, r0
    f524:	00000000 	andeq	r0, r0, r0
    f528:	00000000 	andeq	r0, r0, r0
    f52c:	00000000 	andeq	r0, r0, r0
    f530:	00000000 	andeq	r0, r0, r0
    f534:	00000000 	andeq	r0, r0, r0
    f538:	00000000 	andeq	r0, r0, r0
    f53c:	00000000 	andeq	r0, r0, r0
    f540:	00000000 	andeq	r0, r0, r0
    f544:	00000000 	andeq	r0, r0, r0
    f548:	00000000 	andeq	r0, r0, r0
    f54c:	00000000 	andeq	r0, r0, r0
    f550:	00000000 	andeq	r0, r0, r0
    f554:	00000000 	andeq	r0, r0, r0
    f558:	00000000 	andeq	r0, r0, r0
    f55c:	00000000 	andeq	r0, r0, r0
    f560:	00000000 	andeq	r0, r0, r0
    f564:	00000000 	andeq	r0, r0, r0
    f568:	00000000 	andeq	r0, r0, r0
    f56c:	00000000 	andeq	r0, r0, r0
    f570:	00000000 	andeq	r0, r0, r0
    f574:	00000000 	andeq	r0, r0, r0
    f578:	00000000 	andeq	r0, r0, r0
    f57c:	00000000 	andeq	r0, r0, r0
    f580:	00000000 	andeq	r0, r0, r0
    f584:	00000000 	andeq	r0, r0, r0
    f588:	00000000 	andeq	r0, r0, r0
    f58c:	00000000 	andeq	r0, r0, r0
    f590:	00000000 	andeq	r0, r0, r0
    f594:	00000000 	andeq	r0, r0, r0
    f598:	00000000 	andeq	r0, r0, r0
    f59c:	00000000 	andeq	r0, r0, r0
    f5a0:	00000000 	andeq	r0, r0, r0
    f5a4:	00000000 	andeq	r0, r0, r0
    f5a8:	00000000 	andeq	r0, r0, r0
    f5ac:	00000000 	andeq	r0, r0, r0
    f5b0:	00000000 	andeq	r0, r0, r0
    f5b4:	00000000 	andeq	r0, r0, r0
    f5b8:	00000000 	andeq	r0, r0, r0
    f5bc:	00000000 	andeq	r0, r0, r0
    f5c0:	00000000 	andeq	r0, r0, r0
    f5c4:	00000000 	andeq	r0, r0, r0
    f5c8:	00000000 	andeq	r0, r0, r0
    f5cc:	00000000 	andeq	r0, r0, r0
    f5d0:	00000000 	andeq	r0, r0, r0
    f5d4:	00000000 	andeq	r0, r0, r0
    f5d8:	00000000 	andeq	r0, r0, r0
    f5dc:	00000000 	andeq	r0, r0, r0
    f5e0:	00000000 	andeq	r0, r0, r0
    f5e4:	00000000 	andeq	r0, r0, r0
    f5e8:	00000000 	andeq	r0, r0, r0
    f5ec:	00000000 	andeq	r0, r0, r0
    f5f0:	00000000 	andeq	r0, r0, r0
    f5f4:	00000000 	andeq	r0, r0, r0
    f5f8:	00000000 	andeq	r0, r0, r0
    f5fc:	00000000 	andeq	r0, r0, r0
    f600:	00000000 	andeq	r0, r0, r0
    f604:	00000000 	andeq	r0, r0, r0
    f608:	00000000 	andeq	r0, r0, r0
    f60c:	00000000 	andeq	r0, r0, r0
    f610:	00000000 	andeq	r0, r0, r0
    f614:	00000000 	andeq	r0, r0, r0
    f618:	00000000 	andeq	r0, r0, r0
    f61c:	00000000 	andeq	r0, r0, r0
    f620:	00000000 	andeq	r0, r0, r0
    f624:	00000000 	andeq	r0, r0, r0
    f628:	00000000 	andeq	r0, r0, r0
    f62c:	00000000 	andeq	r0, r0, r0
    f630:	00000000 	andeq	r0, r0, r0
    f634:	00000000 	andeq	r0, r0, r0
    f638:	00000000 	andeq	r0, r0, r0
    f63c:	00000000 	andeq	r0, r0, r0
    f640:	00000000 	andeq	r0, r0, r0
    f644:	00000000 	andeq	r0, r0, r0
    f648:	00000000 	andeq	r0, r0, r0
    f64c:	00000000 	andeq	r0, r0, r0
    f650:	00000000 	andeq	r0, r0, r0
    f654:	00000000 	andeq	r0, r0, r0
    f658:	00000000 	andeq	r0, r0, r0
    f65c:	00000000 	andeq	r0, r0, r0
    f660:	00000000 	andeq	r0, r0, r0
    f664:	00000000 	andeq	r0, r0, r0
    f668:	00000000 	andeq	r0, r0, r0
    f66c:	00000000 	andeq	r0, r0, r0
    f670:	00000000 	andeq	r0, r0, r0
    f674:	00000000 	andeq	r0, r0, r0
    f678:	00000000 	andeq	r0, r0, r0
    f67c:	00000000 	andeq	r0, r0, r0
    f680:	00000000 	andeq	r0, r0, r0
    f684:	00000000 	andeq	r0, r0, r0
    f688:	00000000 	andeq	r0, r0, r0
    f68c:	00000000 	andeq	r0, r0, r0
    f690:	00000000 	andeq	r0, r0, r0
    f694:	00000000 	andeq	r0, r0, r0
    f698:	00000000 	andeq	r0, r0, r0
    f69c:	00000000 	andeq	r0, r0, r0
    f6a0:	00000000 	andeq	r0, r0, r0
    f6a4:	00000000 	andeq	r0, r0, r0
    f6a8:	00000000 	andeq	r0, r0, r0
    f6ac:	00000000 	andeq	r0, r0, r0
    f6b0:	00000000 	andeq	r0, r0, r0
    f6b4:	00000000 	andeq	r0, r0, r0
    f6b8:	00000000 	andeq	r0, r0, r0
    f6bc:	00000000 	andeq	r0, r0, r0
    f6c0:	00000000 	andeq	r0, r0, r0
    f6c4:	00000000 	andeq	r0, r0, r0
    f6c8:	00000000 	andeq	r0, r0, r0
    f6cc:	00000000 	andeq	r0, r0, r0
    f6d0:	00000000 	andeq	r0, r0, r0
    f6d4:	00000000 	andeq	r0, r0, r0
    f6d8:	00000000 	andeq	r0, r0, r0
    f6dc:	00000000 	andeq	r0, r0, r0
    f6e0:	00000000 	andeq	r0, r0, r0
    f6e4:	00000000 	andeq	r0, r0, r0
    f6e8:	00000000 	andeq	r0, r0, r0
    f6ec:	00000000 	andeq	r0, r0, r0
    f6f0:	00000000 	andeq	r0, r0, r0
    f6f4:	00000000 	andeq	r0, r0, r0
    f6f8:	00000000 	andeq	r0, r0, r0
    f6fc:	00000000 	andeq	r0, r0, r0
    f700:	00000000 	andeq	r0, r0, r0
    f704:	00000000 	andeq	r0, r0, r0
    f708:	00000000 	andeq	r0, r0, r0
    f70c:	00000000 	andeq	r0, r0, r0
    f710:	00000000 	andeq	r0, r0, r0
    f714:	00000000 	andeq	r0, r0, r0
    f718:	00000000 	andeq	r0, r0, r0
    f71c:	00000000 	andeq	r0, r0, r0
    f720:	00000000 	andeq	r0, r0, r0
    f724:	00000000 	andeq	r0, r0, r0
    f728:	00000000 	andeq	r0, r0, r0
    f72c:	00000000 	andeq	r0, r0, r0
    f730:	00000000 	andeq	r0, r0, r0
    f734:	00000000 	andeq	r0, r0, r0
    f738:	00000000 	andeq	r0, r0, r0
    f73c:	00000000 	andeq	r0, r0, r0
    f740:	00000000 	andeq	r0, r0, r0
    f744:	00000000 	andeq	r0, r0, r0
    f748:	00000000 	andeq	r0, r0, r0
    f74c:	00000000 	andeq	r0, r0, r0
    f750:	00000000 	andeq	r0, r0, r0
    f754:	00000000 	andeq	r0, r0, r0
    f758:	00000000 	andeq	r0, r0, r0
    f75c:	00000000 	andeq	r0, r0, r0
    f760:	00000000 	andeq	r0, r0, r0
    f764:	00000000 	andeq	r0, r0, r0
    f768:	00000000 	andeq	r0, r0, r0
    f76c:	00000000 	andeq	r0, r0, r0
    f770:	00000000 	andeq	r0, r0, r0
    f774:	00000000 	andeq	r0, r0, r0
    f778:	00000000 	andeq	r0, r0, r0
    f77c:	00000000 	andeq	r0, r0, r0
    f780:	00000000 	andeq	r0, r0, r0
    f784:	00000000 	andeq	r0, r0, r0
    f788:	00000000 	andeq	r0, r0, r0
    f78c:	00000000 	andeq	r0, r0, r0
    f790:	00000000 	andeq	r0, r0, r0
    f794:	00000000 	andeq	r0, r0, r0
    f798:	00000000 	andeq	r0, r0, r0
    f79c:	00000000 	andeq	r0, r0, r0
    f7a0:	00000000 	andeq	r0, r0, r0
    f7a4:	00000000 	andeq	r0, r0, r0
    f7a8:	00000000 	andeq	r0, r0, r0
    f7ac:	00000000 	andeq	r0, r0, r0
    f7b0:	00000000 	andeq	r0, r0, r0
    f7b4:	00000000 	andeq	r0, r0, r0
    f7b8:	00000000 	andeq	r0, r0, r0
    f7bc:	00000000 	andeq	r0, r0, r0
    f7c0:	00000000 	andeq	r0, r0, r0
    f7c4:	00000000 	andeq	r0, r0, r0
    f7c8:	00000000 	andeq	r0, r0, r0
    f7cc:	00000000 	andeq	r0, r0, r0
    f7d0:	00000000 	andeq	r0, r0, r0
    f7d4:	00000000 	andeq	r0, r0, r0
    f7d8:	00000000 	andeq	r0, r0, r0
    f7dc:	00000000 	andeq	r0, r0, r0
    f7e0:	00000000 	andeq	r0, r0, r0
    f7e4:	00000000 	andeq	r0, r0, r0
    f7e8:	00000000 	andeq	r0, r0, r0
    f7ec:	00000000 	andeq	r0, r0, r0
    f7f0:	00000000 	andeq	r0, r0, r0
    f7f4:	00000000 	andeq	r0, r0, r0
    f7f8:	00000000 	andeq	r0, r0, r0
    f7fc:	00000000 	andeq	r0, r0, r0
    f800:	00000000 	andeq	r0, r0, r0
    f804:	00000000 	andeq	r0, r0, r0
    f808:	00000000 	andeq	r0, r0, r0
    f80c:	00000000 	andeq	r0, r0, r0
    f810:	00000000 	andeq	r0, r0, r0
    f814:	00000000 	andeq	r0, r0, r0
    f818:	00000000 	andeq	r0, r0, r0
    f81c:	00000000 	andeq	r0, r0, r0
    f820:	00000000 	andeq	r0, r0, r0
    f824:	00000000 	andeq	r0, r0, r0
    f828:	00000000 	andeq	r0, r0, r0
    f82c:	00000000 	andeq	r0, r0, r0
    f830:	00000000 	andeq	r0, r0, r0
    f834:	00000000 	andeq	r0, r0, r0
    f838:	00000000 	andeq	r0, r0, r0
    f83c:	00000000 	andeq	r0, r0, r0
    f840:	00000000 	andeq	r0, r0, r0
    f844:	00000000 	andeq	r0, r0, r0
    f848:	00000000 	andeq	r0, r0, r0
    f84c:	00000000 	andeq	r0, r0, r0
    f850:	00000000 	andeq	r0, r0, r0
    f854:	00000000 	andeq	r0, r0, r0
    f858:	00000000 	andeq	r0, r0, r0
    f85c:	00000000 	andeq	r0, r0, r0
    f860:	00000000 	andeq	r0, r0, r0
    f864:	00000000 	andeq	r0, r0, r0
    f868:	00000000 	andeq	r0, r0, r0
    f86c:	00000000 	andeq	r0, r0, r0
    f870:	00000000 	andeq	r0, r0, r0
    f874:	00000000 	andeq	r0, r0, r0
    f878:	00000000 	andeq	r0, r0, r0
    f87c:	00000000 	andeq	r0, r0, r0
    f880:	00000000 	andeq	r0, r0, r0
    f884:	00000000 	andeq	r0, r0, r0
    f888:	00000000 	andeq	r0, r0, r0
    f88c:	00000000 	andeq	r0, r0, r0
    f890:	00000000 	andeq	r0, r0, r0
    f894:	00000000 	andeq	r0, r0, r0
    f898:	00000000 	andeq	r0, r0, r0
    f89c:	00000000 	andeq	r0, r0, r0
    f8a0:	00000000 	andeq	r0, r0, r0
    f8a4:	00000000 	andeq	r0, r0, r0
    f8a8:	00000000 	andeq	r0, r0, r0
    f8ac:	00000000 	andeq	r0, r0, r0
    f8b0:	00000000 	andeq	r0, r0, r0
    f8b4:	00000000 	andeq	r0, r0, r0
    f8b8:	00000000 	andeq	r0, r0, r0
    f8bc:	00000000 	andeq	r0, r0, r0
    f8c0:	00000000 	andeq	r0, r0, r0
    f8c4:	00000000 	andeq	r0, r0, r0
    f8c8:	00000000 	andeq	r0, r0, r0
    f8cc:	00000000 	andeq	r0, r0, r0
    f8d0:	00000000 	andeq	r0, r0, r0
    f8d4:	00000000 	andeq	r0, r0, r0
    f8d8:	00000000 	andeq	r0, r0, r0
    f8dc:	00000000 	andeq	r0, r0, r0
    f8e0:	00000000 	andeq	r0, r0, r0
    f8e4:	00000000 	andeq	r0, r0, r0
    f8e8:	00000000 	andeq	r0, r0, r0
    f8ec:	00000000 	andeq	r0, r0, r0
    f8f0:	00000000 	andeq	r0, r0, r0
    f8f4:	00000000 	andeq	r0, r0, r0
    f8f8:	00000000 	andeq	r0, r0, r0
    f8fc:	00000000 	andeq	r0, r0, r0
    f900:	00000000 	andeq	r0, r0, r0
    f904:	00000000 	andeq	r0, r0, r0
    f908:	00000000 	andeq	r0, r0, r0
    f90c:	00000000 	andeq	r0, r0, r0
    f910:	00000000 	andeq	r0, r0, r0
    f914:	00000000 	andeq	r0, r0, r0
    f918:	00000000 	andeq	r0, r0, r0
    f91c:	00000000 	andeq	r0, r0, r0
    f920:	00000000 	andeq	r0, r0, r0
    f924:	00000000 	andeq	r0, r0, r0
    f928:	00000000 	andeq	r0, r0, r0
    f92c:	00000000 	andeq	r0, r0, r0
    f930:	00000000 	andeq	r0, r0, r0
    f934:	00000000 	andeq	r0, r0, r0
    f938:	00000000 	andeq	r0, r0, r0
    f93c:	00000000 	andeq	r0, r0, r0
    f940:	00000000 	andeq	r0, r0, r0
    f944:	00000000 	andeq	r0, r0, r0
    f948:	00000000 	andeq	r0, r0, r0
    f94c:	00000000 	andeq	r0, r0, r0
    f950:	00000000 	andeq	r0, r0, r0
    f954:	00000000 	andeq	r0, r0, r0
    f958:	00000000 	andeq	r0, r0, r0
    f95c:	00000000 	andeq	r0, r0, r0
    f960:	00000000 	andeq	r0, r0, r0
    f964:	00000000 	andeq	r0, r0, r0
    f968:	00000000 	andeq	r0, r0, r0
    f96c:	00000000 	andeq	r0, r0, r0
    f970:	00000000 	andeq	r0, r0, r0
    f974:	00000000 	andeq	r0, r0, r0
    f978:	00000000 	andeq	r0, r0, r0
    f97c:	00000000 	andeq	r0, r0, r0
    f980:	00000000 	andeq	r0, r0, r0
    f984:	00000000 	andeq	r0, r0, r0
    f988:	00000000 	andeq	r0, r0, r0
    f98c:	00000000 	andeq	r0, r0, r0
    f990:	00000000 	andeq	r0, r0, r0
    f994:	00000000 	andeq	r0, r0, r0
    f998:	00000000 	andeq	r0, r0, r0
    f99c:	00000000 	andeq	r0, r0, r0
    f9a0:	00000000 	andeq	r0, r0, r0
    f9a4:	00000000 	andeq	r0, r0, r0
    f9a8:	00000000 	andeq	r0, r0, r0
    f9ac:	00000000 	andeq	r0, r0, r0
    f9b0:	00000000 	andeq	r0, r0, r0
    f9b4:	00000000 	andeq	r0, r0, r0
    f9b8:	00000000 	andeq	r0, r0, r0
    f9bc:	00000000 	andeq	r0, r0, r0
    f9c0:	00000000 	andeq	r0, r0, r0
    f9c4:	00000000 	andeq	r0, r0, r0
    f9c8:	00000000 	andeq	r0, r0, r0
    f9cc:	00000000 	andeq	r0, r0, r0
    f9d0:	00000000 	andeq	r0, r0, r0
    f9d4:	00000000 	andeq	r0, r0, r0
    f9d8:	00000000 	andeq	r0, r0, r0
    f9dc:	00000000 	andeq	r0, r0, r0
    f9e0:	00000000 	andeq	r0, r0, r0
    f9e4:	00000000 	andeq	r0, r0, r0
    f9e8:	00000000 	andeq	r0, r0, r0
    f9ec:	00000000 	andeq	r0, r0, r0
    f9f0:	00000000 	andeq	r0, r0, r0
    f9f4:	00000000 	andeq	r0, r0, r0
    f9f8:	00000000 	andeq	r0, r0, r0
    f9fc:	00000000 	andeq	r0, r0, r0
    fa00:	00000000 	andeq	r0, r0, r0
    fa04:	00000000 	andeq	r0, r0, r0
    fa08:	00000000 	andeq	r0, r0, r0
    fa0c:	00000000 	andeq	r0, r0, r0
    fa10:	00000000 	andeq	r0, r0, r0
    fa14:	00000000 	andeq	r0, r0, r0
    fa18:	00000000 	andeq	r0, r0, r0
    fa1c:	00000000 	andeq	r0, r0, r0
    fa20:	00000000 	andeq	r0, r0, r0
    fa24:	00000000 	andeq	r0, r0, r0
    fa28:	00000000 	andeq	r0, r0, r0
    fa2c:	00000000 	andeq	r0, r0, r0
    fa30:	00000000 	andeq	r0, r0, r0
    fa34:	00000000 	andeq	r0, r0, r0
    fa38:	00000000 	andeq	r0, r0, r0
    fa3c:	00000000 	andeq	r0, r0, r0
    fa40:	00000000 	andeq	r0, r0, r0
    fa44:	00000000 	andeq	r0, r0, r0
    fa48:	00000000 	andeq	r0, r0, r0
    fa4c:	00000000 	andeq	r0, r0, r0
    fa50:	00000000 	andeq	r0, r0, r0
    fa54:	00000000 	andeq	r0, r0, r0
    fa58:	00000000 	andeq	r0, r0, r0
    fa5c:	00000000 	andeq	r0, r0, r0
    fa60:	00000000 	andeq	r0, r0, r0
    fa64:	00000000 	andeq	r0, r0, r0
    fa68:	00000000 	andeq	r0, r0, r0
    fa6c:	00000000 	andeq	r0, r0, r0
    fa70:	00000000 	andeq	r0, r0, r0
    fa74:	00000000 	andeq	r0, r0, r0
    fa78:	00000000 	andeq	r0, r0, r0
    fa7c:	00000000 	andeq	r0, r0, r0
    fa80:	00000000 	andeq	r0, r0, r0
    fa84:	00000000 	andeq	r0, r0, r0
    fa88:	00000000 	andeq	r0, r0, r0
    fa8c:	00000000 	andeq	r0, r0, r0
    fa90:	00000000 	andeq	r0, r0, r0
    fa94:	00000000 	andeq	r0, r0, r0
    fa98:	00000000 	andeq	r0, r0, r0
    fa9c:	00000000 	andeq	r0, r0, r0
    faa0:	00000000 	andeq	r0, r0, r0
    faa4:	00000000 	andeq	r0, r0, r0
    faa8:	00000000 	andeq	r0, r0, r0
    faac:	00000000 	andeq	r0, r0, r0
    fab0:	00000000 	andeq	r0, r0, r0
    fab4:	00000000 	andeq	r0, r0, r0
    fab8:	00000000 	andeq	r0, r0, r0
    fabc:	00000000 	andeq	r0, r0, r0
    fac0:	00000000 	andeq	r0, r0, r0
    fac4:	00000000 	andeq	r0, r0, r0
    fac8:	00000000 	andeq	r0, r0, r0
    facc:	00000000 	andeq	r0, r0, r0
    fad0:	00000000 	andeq	r0, r0, r0
    fad4:	00000000 	andeq	r0, r0, r0
    fad8:	00000000 	andeq	r0, r0, r0
    fadc:	00000000 	andeq	r0, r0, r0
    fae0:	00000000 	andeq	r0, r0, r0
    fae4:	00000000 	andeq	r0, r0, r0
    fae8:	00000000 	andeq	r0, r0, r0
    faec:	00000000 	andeq	r0, r0, r0
    faf0:	00000000 	andeq	r0, r0, r0
    faf4:	00000000 	andeq	r0, r0, r0
    faf8:	00000000 	andeq	r0, r0, r0
    fafc:	00000000 	andeq	r0, r0, r0
    fb00:	00000000 	andeq	r0, r0, r0
    fb04:	00000000 	andeq	r0, r0, r0
    fb08:	00000000 	andeq	r0, r0, r0
    fb0c:	00000000 	andeq	r0, r0, r0
    fb10:	00000000 	andeq	r0, r0, r0
    fb14:	00000000 	andeq	r0, r0, r0
    fb18:	00000000 	andeq	r0, r0, r0
    fb1c:	00000000 	andeq	r0, r0, r0
    fb20:	00000000 	andeq	r0, r0, r0
    fb24:	00000000 	andeq	r0, r0, r0
    fb28:	00000000 	andeq	r0, r0, r0
    fb2c:	00000000 	andeq	r0, r0, r0
    fb30:	00000000 	andeq	r0, r0, r0
    fb34:	00000000 	andeq	r0, r0, r0
    fb38:	00000000 	andeq	r0, r0, r0
    fb3c:	00000000 	andeq	r0, r0, r0
    fb40:	00000000 	andeq	r0, r0, r0
    fb44:	00000000 	andeq	r0, r0, r0
    fb48:	00000000 	andeq	r0, r0, r0
    fb4c:	00000000 	andeq	r0, r0, r0
    fb50:	00000000 	andeq	r0, r0, r0
    fb54:	00000000 	andeq	r0, r0, r0
    fb58:	00000000 	andeq	r0, r0, r0
    fb5c:	00000000 	andeq	r0, r0, r0
    fb60:	00000000 	andeq	r0, r0, r0
    fb64:	00000000 	andeq	r0, r0, r0
    fb68:	00000000 	andeq	r0, r0, r0
    fb6c:	00000000 	andeq	r0, r0, r0
    fb70:	00000000 	andeq	r0, r0, r0
    fb74:	00000000 	andeq	r0, r0, r0
    fb78:	00000000 	andeq	r0, r0, r0
    fb7c:	00000000 	andeq	r0, r0, r0
    fb80:	00000000 	andeq	r0, r0, r0
    fb84:	00000000 	andeq	r0, r0, r0
    fb88:	00000000 	andeq	r0, r0, r0
    fb8c:	00000000 	andeq	r0, r0, r0
    fb90:	00000000 	andeq	r0, r0, r0
    fb94:	00000000 	andeq	r0, r0, r0
    fb98:	00000000 	andeq	r0, r0, r0
    fb9c:	00000000 	andeq	r0, r0, r0
    fba0:	00000000 	andeq	r0, r0, r0
    fba4:	00000000 	andeq	r0, r0, r0
    fba8:	00000000 	andeq	r0, r0, r0
    fbac:	00000000 	andeq	r0, r0, r0
    fbb0:	00000000 	andeq	r0, r0, r0
    fbb4:	00000000 	andeq	r0, r0, r0
    fbb8:	00000000 	andeq	r0, r0, r0
    fbbc:	00000000 	andeq	r0, r0, r0
    fbc0:	00000000 	andeq	r0, r0, r0
    fbc4:	00000000 	andeq	r0, r0, r0
    fbc8:	00000000 	andeq	r0, r0, r0
    fbcc:	00000000 	andeq	r0, r0, r0
    fbd0:	00000000 	andeq	r0, r0, r0
    fbd4:	00000000 	andeq	r0, r0, r0
    fbd8:	00000000 	andeq	r0, r0, r0
    fbdc:	00000000 	andeq	r0, r0, r0
    fbe0:	00000000 	andeq	r0, r0, r0
    fbe4:	00000000 	andeq	r0, r0, r0
    fbe8:	00000000 	andeq	r0, r0, r0
    fbec:	00000000 	andeq	r0, r0, r0
    fbf0:	00000000 	andeq	r0, r0, r0
    fbf4:	00000000 	andeq	r0, r0, r0
    fbf8:	00000000 	andeq	r0, r0, r0
    fbfc:	00000000 	andeq	r0, r0, r0
    fc00:	00000000 	andeq	r0, r0, r0
    fc04:	00000000 	andeq	r0, r0, r0
    fc08:	00000000 	andeq	r0, r0, r0
    fc0c:	00000000 	andeq	r0, r0, r0
    fc10:	00000000 	andeq	r0, r0, r0
    fc14:	00000000 	andeq	r0, r0, r0
    fc18:	00000000 	andeq	r0, r0, r0
    fc1c:	00000000 	andeq	r0, r0, r0
    fc20:	00000000 	andeq	r0, r0, r0
    fc24:	00000000 	andeq	r0, r0, r0
    fc28:	00000000 	andeq	r0, r0, r0
    fc2c:	00000000 	andeq	r0, r0, r0
    fc30:	00000000 	andeq	r0, r0, r0
    fc34:	00000000 	andeq	r0, r0, r0
    fc38:	00000000 	andeq	r0, r0, r0
    fc3c:	00000000 	andeq	r0, r0, r0
    fc40:	00000000 	andeq	r0, r0, r0
    fc44:	00000000 	andeq	r0, r0, r0
    fc48:	00000000 	andeq	r0, r0, r0
    fc4c:	00000000 	andeq	r0, r0, r0
    fc50:	00000000 	andeq	r0, r0, r0
    fc54:	00000000 	andeq	r0, r0, r0
    fc58:	00000000 	andeq	r0, r0, r0
    fc5c:	00000000 	andeq	r0, r0, r0
    fc60:	00000000 	andeq	r0, r0, r0
    fc64:	00000000 	andeq	r0, r0, r0
    fc68:	00000000 	andeq	r0, r0, r0
    fc6c:	00000000 	andeq	r0, r0, r0
    fc70:	00000000 	andeq	r0, r0, r0
    fc74:	00000000 	andeq	r0, r0, r0
    fc78:	00000000 	andeq	r0, r0, r0
    fc7c:	00000000 	andeq	r0, r0, r0
    fc80:	00000000 	andeq	r0, r0, r0
    fc84:	00000000 	andeq	r0, r0, r0
    fc88:	00000000 	andeq	r0, r0, r0
    fc8c:	00000000 	andeq	r0, r0, r0
    fc90:	00000000 	andeq	r0, r0, r0
    fc94:	00000000 	andeq	r0, r0, r0
    fc98:	00000000 	andeq	r0, r0, r0
    fc9c:	00000000 	andeq	r0, r0, r0
    fca0:	00000000 	andeq	r0, r0, r0
    fca4:	00000000 	andeq	r0, r0, r0
    fca8:	00000000 	andeq	r0, r0, r0
    fcac:	00000000 	andeq	r0, r0, r0
    fcb0:	00000000 	andeq	r0, r0, r0
    fcb4:	00000000 	andeq	r0, r0, r0
    fcb8:	00000000 	andeq	r0, r0, r0
    fcbc:	00000000 	andeq	r0, r0, r0
    fcc0:	00000000 	andeq	r0, r0, r0
    fcc4:	00000000 	andeq	r0, r0, r0
    fcc8:	00000000 	andeq	r0, r0, r0
    fccc:	00000000 	andeq	r0, r0, r0
    fcd0:	00000000 	andeq	r0, r0, r0
    fcd4:	00000000 	andeq	r0, r0, r0
    fcd8:	00000000 	andeq	r0, r0, r0
    fcdc:	00000000 	andeq	r0, r0, r0
    fce0:	00000000 	andeq	r0, r0, r0
    fce4:	00000000 	andeq	r0, r0, r0
    fce8:	00000000 	andeq	r0, r0, r0
    fcec:	00000000 	andeq	r0, r0, r0
    fcf0:	00000000 	andeq	r0, r0, r0
    fcf4:	00000000 	andeq	r0, r0, r0
    fcf8:	00000000 	andeq	r0, r0, r0
    fcfc:	00000000 	andeq	r0, r0, r0
    fd00:	00000000 	andeq	r0, r0, r0
    fd04:	00000000 	andeq	r0, r0, r0
    fd08:	00000000 	andeq	r0, r0, r0
    fd0c:	00000000 	andeq	r0, r0, r0
    fd10:	00000000 	andeq	r0, r0, r0
    fd14:	00000000 	andeq	r0, r0, r0
    fd18:	00000000 	andeq	r0, r0, r0
    fd1c:	00000000 	andeq	r0, r0, r0
    fd20:	00000000 	andeq	r0, r0, r0
    fd24:	00000000 	andeq	r0, r0, r0
    fd28:	00000000 	andeq	r0, r0, r0
    fd2c:	00000000 	andeq	r0, r0, r0
    fd30:	00000000 	andeq	r0, r0, r0
    fd34:	00000000 	andeq	r0, r0, r0
    fd38:	00000000 	andeq	r0, r0, r0
    fd3c:	00000000 	andeq	r0, r0, r0
    fd40:	00000000 	andeq	r0, r0, r0
    fd44:	00000000 	andeq	r0, r0, r0
    fd48:	00000000 	andeq	r0, r0, r0
    fd4c:	00000000 	andeq	r0, r0, r0
    fd50:	00000000 	andeq	r0, r0, r0
    fd54:	00000000 	andeq	r0, r0, r0
    fd58:	00000000 	andeq	r0, r0, r0
    fd5c:	00000000 	andeq	r0, r0, r0
    fd60:	00000000 	andeq	r0, r0, r0
    fd64:	00000000 	andeq	r0, r0, r0
    fd68:	00000000 	andeq	r0, r0, r0
    fd6c:	00000000 	andeq	r0, r0, r0
    fd70:	00000000 	andeq	r0, r0, r0
    fd74:	00000000 	andeq	r0, r0, r0
    fd78:	00000000 	andeq	r0, r0, r0
    fd7c:	00000000 	andeq	r0, r0, r0
    fd80:	00000000 	andeq	r0, r0, r0
    fd84:	00000000 	andeq	r0, r0, r0
    fd88:	00000000 	andeq	r0, r0, r0
    fd8c:	00000000 	andeq	r0, r0, r0
    fd90:	00000000 	andeq	r0, r0, r0
    fd94:	00000000 	andeq	r0, r0, r0
    fd98:	00000000 	andeq	r0, r0, r0
    fd9c:	00000000 	andeq	r0, r0, r0
    fda0:	00000000 	andeq	r0, r0, r0
    fda4:	00000000 	andeq	r0, r0, r0
    fda8:	00000000 	andeq	r0, r0, r0
    fdac:	00000000 	andeq	r0, r0, r0
    fdb0:	00000000 	andeq	r0, r0, r0
    fdb4:	00000000 	andeq	r0, r0, r0
    fdb8:	00000000 	andeq	r0, r0, r0
    fdbc:	00000000 	andeq	r0, r0, r0
    fdc0:	00000000 	andeq	r0, r0, r0
    fdc4:	00000000 	andeq	r0, r0, r0
    fdc8:	00000000 	andeq	r0, r0, r0
    fdcc:	00000000 	andeq	r0, r0, r0
    fdd0:	00000000 	andeq	r0, r0, r0
    fdd4:	00000000 	andeq	r0, r0, r0
    fdd8:	00000000 	andeq	r0, r0, r0
    fddc:	00000000 	andeq	r0, r0, r0
    fde0:	00000000 	andeq	r0, r0, r0
    fde4:	00000000 	andeq	r0, r0, r0
    fde8:	00000000 	andeq	r0, r0, r0
    fdec:	00000000 	andeq	r0, r0, r0
    fdf0:	00000000 	andeq	r0, r0, r0
    fdf4:	00000000 	andeq	r0, r0, r0
    fdf8:	00000000 	andeq	r0, r0, r0
    fdfc:	00000000 	andeq	r0, r0, r0
    fe00:	00000000 	andeq	r0, r0, r0
    fe04:	00000000 	andeq	r0, r0, r0
    fe08:	00000000 	andeq	r0, r0, r0
    fe0c:	00000000 	andeq	r0, r0, r0
    fe10:	00000000 	andeq	r0, r0, r0
    fe14:	00000000 	andeq	r0, r0, r0
    fe18:	00000000 	andeq	r0, r0, r0
    fe1c:	00000000 	andeq	r0, r0, r0
    fe20:	00000000 	andeq	r0, r0, r0
    fe24:	00000000 	andeq	r0, r0, r0
    fe28:	00000000 	andeq	r0, r0, r0
    fe2c:	00000000 	andeq	r0, r0, r0
    fe30:	00000000 	andeq	r0, r0, r0
    fe34:	00000000 	andeq	r0, r0, r0
    fe38:	00000000 	andeq	r0, r0, r0
    fe3c:	00000000 	andeq	r0, r0, r0
    fe40:	00000000 	andeq	r0, r0, r0
    fe44:	00000000 	andeq	r0, r0, r0
    fe48:	00000000 	andeq	r0, r0, r0
    fe4c:	00000000 	andeq	r0, r0, r0
    fe50:	00000000 	andeq	r0, r0, r0
    fe54:	00000000 	andeq	r0, r0, r0
    fe58:	00000000 	andeq	r0, r0, r0
    fe5c:	00000000 	andeq	r0, r0, r0
    fe60:	00000000 	andeq	r0, r0, r0
    fe64:	00000000 	andeq	r0, r0, r0
    fe68:	00000000 	andeq	r0, r0, r0
    fe6c:	00000000 	andeq	r0, r0, r0
    fe70:	00000000 	andeq	r0, r0, r0
    fe74:	00000000 	andeq	r0, r0, r0
    fe78:	00000000 	andeq	r0, r0, r0
    fe7c:	00000000 	andeq	r0, r0, r0
    fe80:	00000000 	andeq	r0, r0, r0
    fe84:	00000000 	andeq	r0, r0, r0
    fe88:	00000000 	andeq	r0, r0, r0
    fe8c:	00000000 	andeq	r0, r0, r0
    fe90:	00000000 	andeq	r0, r0, r0
    fe94:	00000000 	andeq	r0, r0, r0
    fe98:	00000000 	andeq	r0, r0, r0
    fe9c:	00000000 	andeq	r0, r0, r0
    fea0:	00000000 	andeq	r0, r0, r0
    fea4:	00000000 	andeq	r0, r0, r0
    fea8:	00000000 	andeq	r0, r0, r0
    feac:	00000000 	andeq	r0, r0, r0
    feb0:	00000000 	andeq	r0, r0, r0
    feb4:	00000000 	andeq	r0, r0, r0
    feb8:	00000000 	andeq	r0, r0, r0
    febc:	00000000 	andeq	r0, r0, r0
    fec0:	00000000 	andeq	r0, r0, r0
    fec4:	00000000 	andeq	r0, r0, r0
    fec8:	00000000 	andeq	r0, r0, r0
    fecc:	00000000 	andeq	r0, r0, r0
    fed0:	00000000 	andeq	r0, r0, r0
    fed4:	00000000 	andeq	r0, r0, r0
    fed8:	00000000 	andeq	r0, r0, r0
    fedc:	00000000 	andeq	r0, r0, r0
    fee0:	00000000 	andeq	r0, r0, r0
    fee4:	00000000 	andeq	r0, r0, r0
    fee8:	00000000 	andeq	r0, r0, r0
    feec:	00000000 	andeq	r0, r0, r0
    fef0:	00000000 	andeq	r0, r0, r0
    fef4:	00000000 	andeq	r0, r0, r0
    fef8:	00000000 	andeq	r0, r0, r0
    fefc:	00000000 	andeq	r0, r0, r0
    ff00:	00000000 	andeq	r0, r0, r0
    ff04:	00000000 	andeq	r0, r0, r0
    ff08:	00000000 	andeq	r0, r0, r0
    ff0c:	00000000 	andeq	r0, r0, r0
    ff10:	00000000 	andeq	r0, r0, r0
    ff14:	00000000 	andeq	r0, r0, r0
    ff18:	00000000 	andeq	r0, r0, r0
    ff1c:	00000000 	andeq	r0, r0, r0
    ff20:	00000000 	andeq	r0, r0, r0
    ff24:	00000000 	andeq	r0, r0, r0
    ff28:	00000000 	andeq	r0, r0, r0
    ff2c:	00000000 	andeq	r0, r0, r0
    ff30:	00000000 	andeq	r0, r0, r0
    ff34:	00000000 	andeq	r0, r0, r0
    ff38:	00000000 	andeq	r0, r0, r0
    ff3c:	00000000 	andeq	r0, r0, r0
    ff40:	00000000 	andeq	r0, r0, r0
    ff44:	00000000 	andeq	r0, r0, r0
    ff48:	00000000 	andeq	r0, r0, r0
    ff4c:	00000000 	andeq	r0, r0, r0
    ff50:	00000000 	andeq	r0, r0, r0
    ff54:	00000000 	andeq	r0, r0, r0
    ff58:	00000000 	andeq	r0, r0, r0
    ff5c:	00000000 	andeq	r0, r0, r0
    ff60:	00000000 	andeq	r0, r0, r0
    ff64:	00000000 	andeq	r0, r0, r0
    ff68:	00000000 	andeq	r0, r0, r0
    ff6c:	00000000 	andeq	r0, r0, r0
    ff70:	00000000 	andeq	r0, r0, r0
    ff74:	00000000 	andeq	r0, r0, r0
    ff78:	00000000 	andeq	r0, r0, r0
    ff7c:	00000000 	andeq	r0, r0, r0
    ff80:	00000000 	andeq	r0, r0, r0
    ff84:	00000000 	andeq	r0, r0, r0
    ff88:	00000000 	andeq	r0, r0, r0
    ff8c:	00000000 	andeq	r0, r0, r0
    ff90:	00000000 	andeq	r0, r0, r0
    ff94:	00000000 	andeq	r0, r0, r0
    ff98:	00000000 	andeq	r0, r0, r0
    ff9c:	00000000 	andeq	r0, r0, r0
    ffa0:	00000000 	andeq	r0, r0, r0
    ffa4:	00000000 	andeq	r0, r0, r0
    ffa8:	00000000 	andeq	r0, r0, r0
    ffac:	00000000 	andeq	r0, r0, r0
    ffb0:	00000000 	andeq	r0, r0, r0
    ffb4:	00000000 	andeq	r0, r0, r0
    ffb8:	00000000 	andeq	r0, r0, r0
    ffbc:	00000000 	andeq	r0, r0, r0
    ffc0:	00000000 	andeq	r0, r0, r0
    ffc4:	00000000 	andeq	r0, r0, r0
    ffc8:	00000000 	andeq	r0, r0, r0
    ffcc:	00000000 	andeq	r0, r0, r0
    ffd0:	00000000 	andeq	r0, r0, r0
    ffd4:	00000000 	andeq	r0, r0, r0
    ffd8:	00000000 	andeq	r0, r0, r0
    ffdc:	00000000 	andeq	r0, r0, r0
    ffe0:	00000000 	andeq	r0, r0, r0
    ffe4:	00000000 	andeq	r0, r0, r0
    ffe8:	00000000 	andeq	r0, r0, r0
    ffec:	00000000 	andeq	r0, r0, r0
    fff0:	00000000 	andeq	r0, r0, r0
    fff4:	00000000 	andeq	r0, r0, r0
    fff8:	00000000 	andeq	r0, r0, r0
    fffc:	00000000 	andeq	r0, r0, r0
   10000:	00000000 	andeq	r0, r0, r0
   10004:	00000000 	andeq	r0, r0, r0
   10008:	00000000 	andeq	r0, r0, r0
   1000c:	00000000 	andeq	r0, r0, r0
   10010:	00000000 	andeq	r0, r0, r0
   10014:	00000000 	andeq	r0, r0, r0
   10018:	00000000 	andeq	r0, r0, r0
   1001c:	00000000 	andeq	r0, r0, r0
   10020:	00000000 	andeq	r0, r0, r0
   10024:	00000000 	andeq	r0, r0, r0
   10028:	00000000 	andeq	r0, r0, r0
   1002c:	00000000 	andeq	r0, r0, r0
   10030:	00000000 	andeq	r0, r0, r0
   10034:	00000000 	andeq	r0, r0, r0
   10038:	00000000 	andeq	r0, r0, r0
   1003c:	00000000 	andeq	r0, r0, r0
   10040:	00000000 	andeq	r0, r0, r0
   10044:	00000000 	andeq	r0, r0, r0
   10048:	00000000 	andeq	r0, r0, r0
   1004c:	00000000 	andeq	r0, r0, r0
   10050:	00000000 	andeq	r0, r0, r0
   10054:	00000000 	andeq	r0, r0, r0
   10058:	00000000 	andeq	r0, r0, r0
   1005c:	00000000 	andeq	r0, r0, r0
   10060:	00000000 	andeq	r0, r0, r0
   10064:	00000000 	andeq	r0, r0, r0
   10068:	00000000 	andeq	r0, r0, r0
   1006c:	00000000 	andeq	r0, r0, r0
   10070:	00000000 	andeq	r0, r0, r0
   10074:	00000000 	andeq	r0, r0, r0
   10078:	00000000 	andeq	r0, r0, r0
   1007c:	00000000 	andeq	r0, r0, r0
   10080:	00000000 	andeq	r0, r0, r0
   10084:	00000000 	andeq	r0, r0, r0
   10088:	00000000 	andeq	r0, r0, r0
   1008c:	00000000 	andeq	r0, r0, r0
   10090:	00000000 	andeq	r0, r0, r0
   10094:	00000000 	andeq	r0, r0, r0
   10098:	00000000 	andeq	r0, r0, r0
   1009c:	00000000 	andeq	r0, r0, r0
   100a0:	00000000 	andeq	r0, r0, r0
   100a4:	00000000 	andeq	r0, r0, r0
   100a8:	00000000 	andeq	r0, r0, r0
   100ac:	00000000 	andeq	r0, r0, r0
   100b0:	00000000 	andeq	r0, r0, r0
   100b4:	00000000 	andeq	r0, r0, r0
   100b8:	00000000 	andeq	r0, r0, r0
   100bc:	00000000 	andeq	r0, r0, r0
   100c0:	00000000 	andeq	r0, r0, r0
   100c4:	00000000 	andeq	r0, r0, r0
   100c8:	00000000 	andeq	r0, r0, r0
   100cc:	00000000 	andeq	r0, r0, r0
   100d0:	00000000 	andeq	r0, r0, r0
   100d4:	00000000 	andeq	r0, r0, r0
   100d8:	00000000 	andeq	r0, r0, r0
   100dc:	00000000 	andeq	r0, r0, r0
   100e0:	00000000 	andeq	r0, r0, r0
   100e4:	00000000 	andeq	r0, r0, r0
   100e8:	00000000 	andeq	r0, r0, r0
   100ec:	00000000 	andeq	r0, r0, r0
   100f0:	00000000 	andeq	r0, r0, r0
   100f4:	00000000 	andeq	r0, r0, r0
   100f8:	00000000 	andeq	r0, r0, r0
   100fc:	00000000 	andeq	r0, r0, r0
   10100:	00000000 	andeq	r0, r0, r0
   10104:	00000000 	andeq	r0, r0, r0
   10108:	00000000 	andeq	r0, r0, r0
   1010c:	00000000 	andeq	r0, r0, r0
   10110:	00000000 	andeq	r0, r0, r0
   10114:	00000000 	andeq	r0, r0, r0
   10118:	00000000 	andeq	r0, r0, r0
   1011c:	00000000 	andeq	r0, r0, r0
   10120:	00000000 	andeq	r0, r0, r0
   10124:	00000000 	andeq	r0, r0, r0
   10128:	00000000 	andeq	r0, r0, r0
   1012c:	00000000 	andeq	r0, r0, r0
   10130:	00000000 	andeq	r0, r0, r0
   10134:	00000000 	andeq	r0, r0, r0
   10138:	00000000 	andeq	r0, r0, r0
   1013c:	00000000 	andeq	r0, r0, r0
   10140:	00000000 	andeq	r0, r0, r0
   10144:	00000000 	andeq	r0, r0, r0
   10148:	00000000 	andeq	r0, r0, r0
   1014c:	00000000 	andeq	r0, r0, r0
   10150:	00000000 	andeq	r0, r0, r0
   10154:	00000000 	andeq	r0, r0, r0
   10158:	00000000 	andeq	r0, r0, r0
   1015c:	00000000 	andeq	r0, r0, r0
   10160:	00000000 	andeq	r0, r0, r0
   10164:	00000000 	andeq	r0, r0, r0
   10168:	00000000 	andeq	r0, r0, r0
   1016c:	00000000 	andeq	r0, r0, r0
   10170:	00000000 	andeq	r0, r0, r0
   10174:	00000000 	andeq	r0, r0, r0
   10178:	00000000 	andeq	r0, r0, r0
   1017c:	00000000 	andeq	r0, r0, r0
   10180:	00000000 	andeq	r0, r0, r0
   10184:	00000000 	andeq	r0, r0, r0
   10188:	00000000 	andeq	r0, r0, r0
   1018c:	00000000 	andeq	r0, r0, r0
   10190:	00000000 	andeq	r0, r0, r0
   10194:	00000000 	andeq	r0, r0, r0
   10198:	00000000 	andeq	r0, r0, r0
   1019c:	00000000 	andeq	r0, r0, r0
   101a0:	00000000 	andeq	r0, r0, r0
   101a4:	00000000 	andeq	r0, r0, r0
   101a8:	00000000 	andeq	r0, r0, r0
   101ac:	00000000 	andeq	r0, r0, r0
   101b0:	00000000 	andeq	r0, r0, r0
   101b4:	00000000 	andeq	r0, r0, r0
   101b8:	00000000 	andeq	r0, r0, r0
   101bc:	00000000 	andeq	r0, r0, r0
   101c0:	00000000 	andeq	r0, r0, r0
   101c4:	00000000 	andeq	r0, r0, r0
   101c8:	00000000 	andeq	r0, r0, r0
   101cc:	00000000 	andeq	r0, r0, r0
   101d0:	00000000 	andeq	r0, r0, r0
   101d4:	00000000 	andeq	r0, r0, r0
   101d8:	00000000 	andeq	r0, r0, r0
   101dc:	00000000 	andeq	r0, r0, r0
   101e0:	00000000 	andeq	r0, r0, r0
   101e4:	00000000 	andeq	r0, r0, r0
   101e8:	00000000 	andeq	r0, r0, r0
   101ec:	00000000 	andeq	r0, r0, r0
   101f0:	00000000 	andeq	r0, r0, r0
   101f4:	00000000 	andeq	r0, r0, r0
   101f8:	00000000 	andeq	r0, r0, r0
   101fc:	00000000 	andeq	r0, r0, r0
   10200:	00000000 	andeq	r0, r0, r0
   10204:	00000000 	andeq	r0, r0, r0
   10208:	00000000 	andeq	r0, r0, r0
   1020c:	00000000 	andeq	r0, r0, r0
   10210:	00000000 	andeq	r0, r0, r0
   10214:	00000000 	andeq	r0, r0, r0
   10218:	00000000 	andeq	r0, r0, r0
   1021c:	00000000 	andeq	r0, r0, r0
   10220:	00000000 	andeq	r0, r0, r0
   10224:	00000000 	andeq	r0, r0, r0
   10228:	00000000 	andeq	r0, r0, r0
   1022c:	00000000 	andeq	r0, r0, r0
   10230:	00000000 	andeq	r0, r0, r0
   10234:	00000000 	andeq	r0, r0, r0
   10238:	00000000 	andeq	r0, r0, r0
   1023c:	00000000 	andeq	r0, r0, r0
   10240:	00000000 	andeq	r0, r0, r0
   10244:	00000000 	andeq	r0, r0, r0
   10248:	00000000 	andeq	r0, r0, r0
   1024c:	00000000 	andeq	r0, r0, r0
   10250:	00000000 	andeq	r0, r0, r0
   10254:	00000000 	andeq	r0, r0, r0
   10258:	00000000 	andeq	r0, r0, r0
   1025c:	00000000 	andeq	r0, r0, r0
   10260:	00000000 	andeq	r0, r0, r0
   10264:	00000000 	andeq	r0, r0, r0
   10268:	00000000 	andeq	r0, r0, r0
   1026c:	00000000 	andeq	r0, r0, r0
   10270:	00000000 	andeq	r0, r0, r0
   10274:	00000000 	andeq	r0, r0, r0
   10278:	00000000 	andeq	r0, r0, r0
   1027c:	00000000 	andeq	r0, r0, r0
   10280:	00000000 	andeq	r0, r0, r0
   10284:	00000000 	andeq	r0, r0, r0
   10288:	00000000 	andeq	r0, r0, r0
   1028c:	00000000 	andeq	r0, r0, r0
   10290:	00000000 	andeq	r0, r0, r0
   10294:	00000000 	andeq	r0, r0, r0
   10298:	00000000 	andeq	r0, r0, r0
   1029c:	00000000 	andeq	r0, r0, r0
   102a0:	00000000 	andeq	r0, r0, r0
   102a4:	00000000 	andeq	r0, r0, r0
   102a8:	00000000 	andeq	r0, r0, r0
   102ac:	00000000 	andeq	r0, r0, r0
   102b0:	00000000 	andeq	r0, r0, r0
   102b4:	00000000 	andeq	r0, r0, r0
   102b8:	00000000 	andeq	r0, r0, r0
   102bc:	00000000 	andeq	r0, r0, r0
   102c0:	00000000 	andeq	r0, r0, r0
   102c4:	00000000 	andeq	r0, r0, r0
   102c8:	00000000 	andeq	r0, r0, r0
   102cc:	00000000 	andeq	r0, r0, r0
   102d0:	00000000 	andeq	r0, r0, r0
   102d4:	00000000 	andeq	r0, r0, r0
   102d8:	00000000 	andeq	r0, r0, r0
   102dc:	00000000 	andeq	r0, r0, r0
   102e0:	00000000 	andeq	r0, r0, r0
   102e4:	00000000 	andeq	r0, r0, r0
   102e8:	00000000 	andeq	r0, r0, r0
   102ec:	00000000 	andeq	r0, r0, r0
   102f0:	00000000 	andeq	r0, r0, r0
   102f4:	00000000 	andeq	r0, r0, r0
   102f8:	00000000 	andeq	r0, r0, r0
   102fc:	00000000 	andeq	r0, r0, r0
   10300:	00000000 	andeq	r0, r0, r0
   10304:	00000000 	andeq	r0, r0, r0
   10308:	00000000 	andeq	r0, r0, r0
   1030c:	00000000 	andeq	r0, r0, r0
   10310:	00000000 	andeq	r0, r0, r0
   10314:	00000000 	andeq	r0, r0, r0
   10318:	00000000 	andeq	r0, r0, r0
   1031c:	00000000 	andeq	r0, r0, r0
   10320:	00000000 	andeq	r0, r0, r0
   10324:	00000000 	andeq	r0, r0, r0
   10328:	00000000 	andeq	r0, r0, r0
   1032c:	00000000 	andeq	r0, r0, r0
   10330:	00000000 	andeq	r0, r0, r0
   10334:	00000000 	andeq	r0, r0, r0
   10338:	00000000 	andeq	r0, r0, r0
   1033c:	00000000 	andeq	r0, r0, r0
   10340:	00000000 	andeq	r0, r0, r0
   10344:	00000000 	andeq	r0, r0, r0
   10348:	00000000 	andeq	r0, r0, r0
   1034c:	00000000 	andeq	r0, r0, r0
   10350:	00000000 	andeq	r0, r0, r0
   10354:	00000000 	andeq	r0, r0, r0
   10358:	00000000 	andeq	r0, r0, r0
   1035c:	00000000 	andeq	r0, r0, r0
   10360:	00000000 	andeq	r0, r0, r0
   10364:	00000000 	andeq	r0, r0, r0
   10368:	00000000 	andeq	r0, r0, r0
   1036c:	00000000 	andeq	r0, r0, r0
   10370:	00000000 	andeq	r0, r0, r0
   10374:	00000000 	andeq	r0, r0, r0
   10378:	00000000 	andeq	r0, r0, r0
   1037c:	00000000 	andeq	r0, r0, r0
   10380:	00000000 	andeq	r0, r0, r0
   10384:	00000000 	andeq	r0, r0, r0
   10388:	00000000 	andeq	r0, r0, r0
   1038c:	00000000 	andeq	r0, r0, r0
   10390:	00000000 	andeq	r0, r0, r0
   10394:	00000000 	andeq	r0, r0, r0
   10398:	00000000 	andeq	r0, r0, r0
   1039c:	00000000 	andeq	r0, r0, r0
   103a0:	00000000 	andeq	r0, r0, r0
   103a4:	00000000 	andeq	r0, r0, r0
   103a8:	00000000 	andeq	r0, r0, r0
   103ac:	00000000 	andeq	r0, r0, r0
   103b0:	00000000 	andeq	r0, r0, r0
   103b4:	00000000 	andeq	r0, r0, r0
   103b8:	00000000 	andeq	r0, r0, r0
   103bc:	00000000 	andeq	r0, r0, r0
   103c0:	00000000 	andeq	r0, r0, r0
   103c4:	00000000 	andeq	r0, r0, r0
   103c8:	00000000 	andeq	r0, r0, r0
   103cc:	00000000 	andeq	r0, r0, r0
   103d0:	00000000 	andeq	r0, r0, r0
   103d4:	00000000 	andeq	r0, r0, r0
   103d8:	00000000 	andeq	r0, r0, r0
   103dc:	00000000 	andeq	r0, r0, r0
   103e0:	00000000 	andeq	r0, r0, r0
   103e4:	00000000 	andeq	r0, r0, r0
   103e8:	00000000 	andeq	r0, r0, r0
   103ec:	00000000 	andeq	r0, r0, r0
   103f0:	00000000 	andeq	r0, r0, r0
   103f4:	00000000 	andeq	r0, r0, r0
   103f8:	00000000 	andeq	r0, r0, r0
   103fc:	00000000 	andeq	r0, r0, r0
   10400:	00000000 	andeq	r0, r0, r0
   10404:	00000000 	andeq	r0, r0, r0
   10408:	00000000 	andeq	r0, r0, r0
   1040c:	00000000 	andeq	r0, r0, r0
   10410:	00000000 	andeq	r0, r0, r0
   10414:	00000000 	andeq	r0, r0, r0
   10418:	00000000 	andeq	r0, r0, r0
   1041c:	00000000 	andeq	r0, r0, r0
   10420:	00000000 	andeq	r0, r0, r0
   10424:	00000000 	andeq	r0, r0, r0
   10428:	00000000 	andeq	r0, r0, r0
   1042c:	00000000 	andeq	r0, r0, r0
   10430:	00000000 	andeq	r0, r0, r0
   10434:	00000000 	andeq	r0, r0, r0
   10438:	00000000 	andeq	r0, r0, r0
   1043c:	00000000 	andeq	r0, r0, r0
   10440:	00000000 	andeq	r0, r0, r0
   10444:	00000000 	andeq	r0, r0, r0
   10448:	00000000 	andeq	r0, r0, r0
   1044c:	00000000 	andeq	r0, r0, r0
   10450:	00000000 	andeq	r0, r0, r0
   10454:	00000000 	andeq	r0, r0, r0
   10458:	00000000 	andeq	r0, r0, r0
   1045c:	00000000 	andeq	r0, r0, r0
   10460:	00000000 	andeq	r0, r0, r0
   10464:	00000000 	andeq	r0, r0, r0
   10468:	00000000 	andeq	r0, r0, r0
   1046c:	00000000 	andeq	r0, r0, r0
   10470:	00000000 	andeq	r0, r0, r0
   10474:	00000000 	andeq	r0, r0, r0
   10478:	00000000 	andeq	r0, r0, r0
   1047c:	00000000 	andeq	r0, r0, r0
   10480:	00000000 	andeq	r0, r0, r0
   10484:	00000000 	andeq	r0, r0, r0
   10488:	00000000 	andeq	r0, r0, r0
   1048c:	00000000 	andeq	r0, r0, r0
   10490:	00000000 	andeq	r0, r0, r0
   10494:	00000000 	andeq	r0, r0, r0
   10498:	00000000 	andeq	r0, r0, r0
   1049c:	00000000 	andeq	r0, r0, r0
   104a0:	00000000 	andeq	r0, r0, r0
   104a4:	00000000 	andeq	r0, r0, r0
   104a8:	00000000 	andeq	r0, r0, r0
   104ac:	00000000 	andeq	r0, r0, r0
   104b0:	00000000 	andeq	r0, r0, r0
   104b4:	00000000 	andeq	r0, r0, r0
   104b8:	00000000 	andeq	r0, r0, r0
   104bc:	00000000 	andeq	r0, r0, r0
   104c0:	00000000 	andeq	r0, r0, r0
   104c4:	00000000 	andeq	r0, r0, r0
   104c8:	00000000 	andeq	r0, r0, r0
   104cc:	00000000 	andeq	r0, r0, r0
   104d0:	00000000 	andeq	r0, r0, r0
   104d4:	00000000 	andeq	r0, r0, r0
   104d8:	00000000 	andeq	r0, r0, r0
   104dc:	00000000 	andeq	r0, r0, r0
   104e0:	00000000 	andeq	r0, r0, r0
   104e4:	00000000 	andeq	r0, r0, r0
   104e8:	00000000 	andeq	r0, r0, r0
   104ec:	00000000 	andeq	r0, r0, r0
   104f0:	00000000 	andeq	r0, r0, r0
   104f4:	00000000 	andeq	r0, r0, r0
   104f8:	00000000 	andeq	r0, r0, r0
   104fc:	00000000 	andeq	r0, r0, r0
   10500:	00000000 	andeq	r0, r0, r0
   10504:	00000000 	andeq	r0, r0, r0
   10508:	00000000 	andeq	r0, r0, r0
   1050c:	00000000 	andeq	r0, r0, r0
   10510:	00000000 	andeq	r0, r0, r0
   10514:	00000000 	andeq	r0, r0, r0
   10518:	00000000 	andeq	r0, r0, r0
   1051c:	00000000 	andeq	r0, r0, r0
   10520:	00000000 	andeq	r0, r0, r0
   10524:	00000000 	andeq	r0, r0, r0
   10528:	00000000 	andeq	r0, r0, r0
   1052c:	00000000 	andeq	r0, r0, r0
   10530:	00000000 	andeq	r0, r0, r0
   10534:	00000000 	andeq	r0, r0, r0
   10538:	00000000 	andeq	r0, r0, r0
   1053c:	00000000 	andeq	r0, r0, r0
   10540:	00000000 	andeq	r0, r0, r0
   10544:	00000000 	andeq	r0, r0, r0
   10548:	00000000 	andeq	r0, r0, r0
   1054c:	00000000 	andeq	r0, r0, r0
   10550:	00000000 	andeq	r0, r0, r0
   10554:	00000000 	andeq	r0, r0, r0
   10558:	00000000 	andeq	r0, r0, r0
   1055c:	00000000 	andeq	r0, r0, r0
   10560:	00000000 	andeq	r0, r0, r0
   10564:	00000000 	andeq	r0, r0, r0
   10568:	00000000 	andeq	r0, r0, r0
   1056c:	00000000 	andeq	r0, r0, r0
   10570:	00000000 	andeq	r0, r0, r0
   10574:	00000000 	andeq	r0, r0, r0
   10578:	00000000 	andeq	r0, r0, r0
   1057c:	00000000 	andeq	r0, r0, r0
   10580:	00000000 	andeq	r0, r0, r0
   10584:	00000000 	andeq	r0, r0, r0
   10588:	00000000 	andeq	r0, r0, r0
   1058c:	00000000 	andeq	r0, r0, r0
   10590:	00000000 	andeq	r0, r0, r0
   10594:	00000000 	andeq	r0, r0, r0
   10598:	00000000 	andeq	r0, r0, r0
   1059c:	00000000 	andeq	r0, r0, r0
   105a0:	00000000 	andeq	r0, r0, r0
   105a4:	00000000 	andeq	r0, r0, r0
   105a8:	00000000 	andeq	r0, r0, r0
   105ac:	00000000 	andeq	r0, r0, r0
   105b0:	00000000 	andeq	r0, r0, r0
   105b4:	00000000 	andeq	r0, r0, r0
   105b8:	00000000 	andeq	r0, r0, r0
   105bc:	00000000 	andeq	r0, r0, r0
   105c0:	00000000 	andeq	r0, r0, r0
   105c4:	00000000 	andeq	r0, r0, r0
   105c8:	00000000 	andeq	r0, r0, r0
   105cc:	00000000 	andeq	r0, r0, r0
   105d0:	00000000 	andeq	r0, r0, r0
   105d4:	00000000 	andeq	r0, r0, r0
   105d8:	00000000 	andeq	r0, r0, r0
   105dc:	00000000 	andeq	r0, r0, r0
   105e0:	00000000 	andeq	r0, r0, r0
   105e4:	00000000 	andeq	r0, r0, r0
   105e8:	00000000 	andeq	r0, r0, r0
   105ec:	00000000 	andeq	r0, r0, r0
   105f0:	00000000 	andeq	r0, r0, r0
   105f4:	00000000 	andeq	r0, r0, r0
   105f8:	00000000 	andeq	r0, r0, r0
   105fc:	00000000 	andeq	r0, r0, r0
   10600:	00000000 	andeq	r0, r0, r0
   10604:	00000000 	andeq	r0, r0, r0
   10608:	00000000 	andeq	r0, r0, r0
   1060c:	00000000 	andeq	r0, r0, r0
   10610:	00000000 	andeq	r0, r0, r0
   10614:	00000000 	andeq	r0, r0, r0
   10618:	00000000 	andeq	r0, r0, r0
   1061c:	00000000 	andeq	r0, r0, r0
   10620:	00000000 	andeq	r0, r0, r0
   10624:	00000000 	andeq	r0, r0, r0
   10628:	00000000 	andeq	r0, r0, r0
   1062c:	00000000 	andeq	r0, r0, r0
   10630:	00000000 	andeq	r0, r0, r0
   10634:	00000000 	andeq	r0, r0, r0
   10638:	00000000 	andeq	r0, r0, r0
   1063c:	00000000 	andeq	r0, r0, r0
   10640:	00000000 	andeq	r0, r0, r0
   10644:	00000000 	andeq	r0, r0, r0
   10648:	00000000 	andeq	r0, r0, r0
   1064c:	00000000 	andeq	r0, r0, r0
   10650:	00000000 	andeq	r0, r0, r0
   10654:	00000000 	andeq	r0, r0, r0
   10658:	00000000 	andeq	r0, r0, r0
   1065c:	00000000 	andeq	r0, r0, r0
   10660:	00000000 	andeq	r0, r0, r0
   10664:	00000000 	andeq	r0, r0, r0
   10668:	00000000 	andeq	r0, r0, r0
   1066c:	00000000 	andeq	r0, r0, r0
   10670:	00000000 	andeq	r0, r0, r0
   10674:	00000000 	andeq	r0, r0, r0
   10678:	00000000 	andeq	r0, r0, r0
   1067c:	00000000 	andeq	r0, r0, r0
   10680:	00000000 	andeq	r0, r0, r0
   10684:	00000000 	andeq	r0, r0, r0
   10688:	00000000 	andeq	r0, r0, r0
   1068c:	00000000 	andeq	r0, r0, r0
   10690:	00000000 	andeq	r0, r0, r0
   10694:	00000000 	andeq	r0, r0, r0
   10698:	00000000 	andeq	r0, r0, r0
   1069c:	00000000 	andeq	r0, r0, r0
   106a0:	00000000 	andeq	r0, r0, r0
   106a4:	00000000 	andeq	r0, r0, r0
   106a8:	00000000 	andeq	r0, r0, r0
   106ac:	00000000 	andeq	r0, r0, r0
   106b0:	00000000 	andeq	r0, r0, r0
   106b4:	00000000 	andeq	r0, r0, r0
   106b8:	00000000 	andeq	r0, r0, r0
   106bc:	00000000 	andeq	r0, r0, r0
   106c0:	00000000 	andeq	r0, r0, r0
   106c4:	00000000 	andeq	r0, r0, r0
   106c8:	00000000 	andeq	r0, r0, r0
   106cc:	00000000 	andeq	r0, r0, r0
   106d0:	00000000 	andeq	r0, r0, r0
   106d4:	00000000 	andeq	r0, r0, r0
   106d8:	00000000 	andeq	r0, r0, r0
   106dc:	00000000 	andeq	r0, r0, r0
   106e0:	00000000 	andeq	r0, r0, r0
   106e4:	00000000 	andeq	r0, r0, r0
   106e8:	00000000 	andeq	r0, r0, r0
   106ec:	00000000 	andeq	r0, r0, r0
   106f0:	00000000 	andeq	r0, r0, r0
   106f4:	00000000 	andeq	r0, r0, r0
   106f8:	00000000 	andeq	r0, r0, r0
   106fc:	00000000 	andeq	r0, r0, r0
   10700:	00000000 	andeq	r0, r0, r0
   10704:	00000000 	andeq	r0, r0, r0
   10708:	00000000 	andeq	r0, r0, r0
   1070c:	00000000 	andeq	r0, r0, r0
   10710:	00000000 	andeq	r0, r0, r0
   10714:	00000000 	andeq	r0, r0, r0
   10718:	00000000 	andeq	r0, r0, r0
   1071c:	00000000 	andeq	r0, r0, r0
   10720:	00000000 	andeq	r0, r0, r0
   10724:	00000000 	andeq	r0, r0, r0
   10728:	00000000 	andeq	r0, r0, r0
   1072c:	00000000 	andeq	r0, r0, r0
   10730:	00000000 	andeq	r0, r0, r0
   10734:	00000000 	andeq	r0, r0, r0
   10738:	00000000 	andeq	r0, r0, r0
   1073c:	00000000 	andeq	r0, r0, r0
   10740:	00000000 	andeq	r0, r0, r0
   10744:	00000000 	andeq	r0, r0, r0
   10748:	00000000 	andeq	r0, r0, r0
   1074c:	00000000 	andeq	r0, r0, r0
   10750:	00000000 	andeq	r0, r0, r0
   10754:	00000000 	andeq	r0, r0, r0
   10758:	00000000 	andeq	r0, r0, r0
   1075c:	00000000 	andeq	r0, r0, r0
   10760:	00000000 	andeq	r0, r0, r0
   10764:	00000000 	andeq	r0, r0, r0
   10768:	00000000 	andeq	r0, r0, r0
   1076c:	00000000 	andeq	r0, r0, r0
   10770:	00000000 	andeq	r0, r0, r0
   10774:	00000000 	andeq	r0, r0, r0
   10778:	00000000 	andeq	r0, r0, r0
   1077c:	00000000 	andeq	r0, r0, r0
   10780:	00000000 	andeq	r0, r0, r0
   10784:	00000000 	andeq	r0, r0, r0
   10788:	00000000 	andeq	r0, r0, r0
   1078c:	00000000 	andeq	r0, r0, r0
   10790:	00000000 	andeq	r0, r0, r0
   10794:	00000000 	andeq	r0, r0, r0
   10798:	00000000 	andeq	r0, r0, r0
   1079c:	00000000 	andeq	r0, r0, r0
   107a0:	00000000 	andeq	r0, r0, r0
   107a4:	00000000 	andeq	r0, r0, r0
   107a8:	00000000 	andeq	r0, r0, r0
   107ac:	00000000 	andeq	r0, r0, r0
   107b0:	00000000 	andeq	r0, r0, r0
   107b4:	00000000 	andeq	r0, r0, r0
   107b8:	00000000 	andeq	r0, r0, r0
   107bc:	00000000 	andeq	r0, r0, r0
   107c0:	00000000 	andeq	r0, r0, r0
   107c4:	00000000 	andeq	r0, r0, r0
   107c8:	00000000 	andeq	r0, r0, r0
   107cc:	00000000 	andeq	r0, r0, r0
   107d0:	00000000 	andeq	r0, r0, r0
   107d4:	00000000 	andeq	r0, r0, r0
   107d8:	00000000 	andeq	r0, r0, r0
   107dc:	00000000 	andeq	r0, r0, r0
   107e0:	00000000 	andeq	r0, r0, r0
   107e4:	00000000 	andeq	r0, r0, r0
   107e8:	00000000 	andeq	r0, r0, r0
   107ec:	00000000 	andeq	r0, r0, r0
   107f0:	00000000 	andeq	r0, r0, r0
   107f4:	00000000 	andeq	r0, r0, r0
   107f8:	00000000 	andeq	r0, r0, r0
   107fc:	00000000 	andeq	r0, r0, r0
   10800:	00000000 	andeq	r0, r0, r0
   10804:	00000000 	andeq	r0, r0, r0
   10808:	00000000 	andeq	r0, r0, r0
   1080c:	00000000 	andeq	r0, r0, r0
   10810:	00000000 	andeq	r0, r0, r0
   10814:	00000000 	andeq	r0, r0, r0
   10818:	00000000 	andeq	r0, r0, r0
   1081c:	00000000 	andeq	r0, r0, r0
   10820:	00000000 	andeq	r0, r0, r0
   10824:	00000000 	andeq	r0, r0, r0
   10828:	00000000 	andeq	r0, r0, r0
   1082c:	00000000 	andeq	r0, r0, r0
   10830:	00000000 	andeq	r0, r0, r0
   10834:	00000000 	andeq	r0, r0, r0
   10838:	00000000 	andeq	r0, r0, r0
   1083c:	00000000 	andeq	r0, r0, r0
   10840:	00000000 	andeq	r0, r0, r0
   10844:	00000000 	andeq	r0, r0, r0
   10848:	00000000 	andeq	r0, r0, r0
   1084c:	00000000 	andeq	r0, r0, r0
   10850:	00000000 	andeq	r0, r0, r0
   10854:	00000000 	andeq	r0, r0, r0
   10858:	00000000 	andeq	r0, r0, r0
   1085c:	00000000 	andeq	r0, r0, r0
   10860:	00000000 	andeq	r0, r0, r0
   10864:	00000000 	andeq	r0, r0, r0
   10868:	00000000 	andeq	r0, r0, r0
   1086c:	00000000 	andeq	r0, r0, r0
   10870:	00000000 	andeq	r0, r0, r0
   10874:	00000000 	andeq	r0, r0, r0
   10878:	00000000 	andeq	r0, r0, r0
   1087c:	00000000 	andeq	r0, r0, r0
   10880:	00000000 	andeq	r0, r0, r0
   10884:	00000000 	andeq	r0, r0, r0
   10888:	00000000 	andeq	r0, r0, r0
   1088c:	00000000 	andeq	r0, r0, r0
   10890:	00000000 	andeq	r0, r0, r0
   10894:	00000000 	andeq	r0, r0, r0
   10898:	00000000 	andeq	r0, r0, r0
   1089c:	00000000 	andeq	r0, r0, r0
   108a0:	00000000 	andeq	r0, r0, r0
   108a4:	00000000 	andeq	r0, r0, r0
   108a8:	00000000 	andeq	r0, r0, r0
   108ac:	00000000 	andeq	r0, r0, r0
   108b0:	00000000 	andeq	r0, r0, r0
   108b4:	00000000 	andeq	r0, r0, r0
   108b8:	00000000 	andeq	r0, r0, r0
   108bc:	00000000 	andeq	r0, r0, r0
   108c0:	00000000 	andeq	r0, r0, r0
   108c4:	00000000 	andeq	r0, r0, r0
   108c8:	00000000 	andeq	r0, r0, r0
   108cc:	00000000 	andeq	r0, r0, r0
   108d0:	00000000 	andeq	r0, r0, r0
   108d4:	00000000 	andeq	r0, r0, r0
   108d8:	00000000 	andeq	r0, r0, r0
   108dc:	00000000 	andeq	r0, r0, r0
   108e0:	00000000 	andeq	r0, r0, r0
   108e4:	00000000 	andeq	r0, r0, r0
   108e8:	00000000 	andeq	r0, r0, r0
   108ec:	00000000 	andeq	r0, r0, r0
   108f0:	00000000 	andeq	r0, r0, r0
   108f4:	00000000 	andeq	r0, r0, r0
   108f8:	00000000 	andeq	r0, r0, r0
   108fc:	00000000 	andeq	r0, r0, r0
   10900:	00000000 	andeq	r0, r0, r0
   10904:	00000000 	andeq	r0, r0, r0
   10908:	00000000 	andeq	r0, r0, r0
   1090c:	00000000 	andeq	r0, r0, r0
   10910:	00000000 	andeq	r0, r0, r0
   10914:	00000000 	andeq	r0, r0, r0
   10918:	00000000 	andeq	r0, r0, r0
   1091c:	00000000 	andeq	r0, r0, r0
   10920:	00000000 	andeq	r0, r0, r0
   10924:	00000000 	andeq	r0, r0, r0
   10928:	00000000 	andeq	r0, r0, r0
   1092c:	00000000 	andeq	r0, r0, r0
   10930:	00000000 	andeq	r0, r0, r0
   10934:	00000000 	andeq	r0, r0, r0
   10938:	00000000 	andeq	r0, r0, r0
   1093c:	00000000 	andeq	r0, r0, r0
   10940:	00000000 	andeq	r0, r0, r0
   10944:	00000000 	andeq	r0, r0, r0
   10948:	00000000 	andeq	r0, r0, r0
   1094c:	00000000 	andeq	r0, r0, r0
   10950:	00000000 	andeq	r0, r0, r0
   10954:	00000000 	andeq	r0, r0, r0
   10958:	00000000 	andeq	r0, r0, r0
   1095c:	00000000 	andeq	r0, r0, r0
   10960:	00000000 	andeq	r0, r0, r0
   10964:	00000000 	andeq	r0, r0, r0
   10968:	00000000 	andeq	r0, r0, r0
   1096c:	00000000 	andeq	r0, r0, r0
   10970:	00000000 	andeq	r0, r0, r0
   10974:	00000000 	andeq	r0, r0, r0
   10978:	00000000 	andeq	r0, r0, r0
   1097c:	00000000 	andeq	r0, r0, r0
   10980:	00000000 	andeq	r0, r0, r0
   10984:	00000000 	andeq	r0, r0, r0
   10988:	00000000 	andeq	r0, r0, r0
   1098c:	00000000 	andeq	r0, r0, r0
   10990:	00000000 	andeq	r0, r0, r0
   10994:	00000000 	andeq	r0, r0, r0
   10998:	00000000 	andeq	r0, r0, r0
   1099c:	00000000 	andeq	r0, r0, r0
   109a0:	00000000 	andeq	r0, r0, r0
   109a4:	00000000 	andeq	r0, r0, r0
   109a8:	00000000 	andeq	r0, r0, r0
   109ac:	00000000 	andeq	r0, r0, r0
   109b0:	00000000 	andeq	r0, r0, r0
   109b4:	00000000 	andeq	r0, r0, r0
   109b8:	00000000 	andeq	r0, r0, r0
   109bc:	00000000 	andeq	r0, r0, r0
   109c0:	00000000 	andeq	r0, r0, r0
   109c4:	00000000 	andeq	r0, r0, r0
   109c8:	00000000 	andeq	r0, r0, r0
   109cc:	00000000 	andeq	r0, r0, r0
   109d0:	00000000 	andeq	r0, r0, r0
   109d4:	00000000 	andeq	r0, r0, r0
   109d8:	00000000 	andeq	r0, r0, r0
   109dc:	00000000 	andeq	r0, r0, r0
   109e0:	00000000 	andeq	r0, r0, r0
   109e4:	00000000 	andeq	r0, r0, r0
   109e8:	00000000 	andeq	r0, r0, r0
   109ec:	00000000 	andeq	r0, r0, r0
   109f0:	00000000 	andeq	r0, r0, r0
   109f4:	00000000 	andeq	r0, r0, r0
   109f8:	00000000 	andeq	r0, r0, r0
   109fc:	00000000 	andeq	r0, r0, r0
   10a00:	00000000 	andeq	r0, r0, r0
   10a04:	00000000 	andeq	r0, r0, r0
   10a08:	00000000 	andeq	r0, r0, r0
   10a0c:	00000000 	andeq	r0, r0, r0
   10a10:	00000000 	andeq	r0, r0, r0
   10a14:	00000000 	andeq	r0, r0, r0
   10a18:	00000000 	andeq	r0, r0, r0
   10a1c:	00000000 	andeq	r0, r0, r0
   10a20:	00000000 	andeq	r0, r0, r0
   10a24:	00000000 	andeq	r0, r0, r0
   10a28:	00000000 	andeq	r0, r0, r0
   10a2c:	00000000 	andeq	r0, r0, r0
   10a30:	00000000 	andeq	r0, r0, r0
   10a34:	00000000 	andeq	r0, r0, r0
   10a38:	00000000 	andeq	r0, r0, r0
   10a3c:	00000000 	andeq	r0, r0, r0
   10a40:	00000000 	andeq	r0, r0, r0
   10a44:	00000000 	andeq	r0, r0, r0
   10a48:	00000000 	andeq	r0, r0, r0
   10a4c:	00000000 	andeq	r0, r0, r0
   10a50:	00000000 	andeq	r0, r0, r0
   10a54:	00000000 	andeq	r0, r0, r0
   10a58:	00000000 	andeq	r0, r0, r0
   10a5c:	00000000 	andeq	r0, r0, r0
   10a60:	00000000 	andeq	r0, r0, r0
   10a64:	00000000 	andeq	r0, r0, r0
   10a68:	00000000 	andeq	r0, r0, r0
   10a6c:	00000000 	andeq	r0, r0, r0
   10a70:	00000000 	andeq	r0, r0, r0
   10a74:	00000000 	andeq	r0, r0, r0
   10a78:	00000000 	andeq	r0, r0, r0
   10a7c:	00000000 	andeq	r0, r0, r0
   10a80:	00000000 	andeq	r0, r0, r0
   10a84:	00000000 	andeq	r0, r0, r0
   10a88:	00000000 	andeq	r0, r0, r0
   10a8c:	00000000 	andeq	r0, r0, r0
   10a90:	00000000 	andeq	r0, r0, r0
   10a94:	00000000 	andeq	r0, r0, r0
   10a98:	00000000 	andeq	r0, r0, r0
   10a9c:	00000000 	andeq	r0, r0, r0
   10aa0:	00000000 	andeq	r0, r0, r0
   10aa4:	00000000 	andeq	r0, r0, r0
   10aa8:	00000000 	andeq	r0, r0, r0
   10aac:	00000000 	andeq	r0, r0, r0
   10ab0:	00000000 	andeq	r0, r0, r0
   10ab4:	00000000 	andeq	r0, r0, r0
   10ab8:	00000000 	andeq	r0, r0, r0
   10abc:	00000000 	andeq	r0, r0, r0
   10ac0:	00000000 	andeq	r0, r0, r0
   10ac4:	00000000 	andeq	r0, r0, r0
   10ac8:	00000000 	andeq	r0, r0, r0
   10acc:	00000000 	andeq	r0, r0, r0
   10ad0:	00000000 	andeq	r0, r0, r0
   10ad4:	00000000 	andeq	r0, r0, r0
   10ad8:	00000000 	andeq	r0, r0, r0
   10adc:	00000000 	andeq	r0, r0, r0
   10ae0:	00000000 	andeq	r0, r0, r0
   10ae4:	00000000 	andeq	r0, r0, r0
   10ae8:	00000000 	andeq	r0, r0, r0
   10aec:	00000000 	andeq	r0, r0, r0
   10af0:	00000000 	andeq	r0, r0, r0
   10af4:	00000000 	andeq	r0, r0, r0
   10af8:	00000000 	andeq	r0, r0, r0
   10afc:	00000000 	andeq	r0, r0, r0
   10b00:	00000000 	andeq	r0, r0, r0
   10b04:	00000000 	andeq	r0, r0, r0
   10b08:	00000000 	andeq	r0, r0, r0
   10b0c:	00000000 	andeq	r0, r0, r0
   10b10:	00000000 	andeq	r0, r0, r0
   10b14:	00000000 	andeq	r0, r0, r0
   10b18:	00000000 	andeq	r0, r0, r0
   10b1c:	00000000 	andeq	r0, r0, r0
   10b20:	00000000 	andeq	r0, r0, r0
   10b24:	00000000 	andeq	r0, r0, r0
   10b28:	00000000 	andeq	r0, r0, r0
   10b2c:	00000000 	andeq	r0, r0, r0
   10b30:	00000000 	andeq	r0, r0, r0
   10b34:	00000000 	andeq	r0, r0, r0
   10b38:	00000000 	andeq	r0, r0, r0
   10b3c:	00000000 	andeq	r0, r0, r0
   10b40:	00000000 	andeq	r0, r0, r0
   10b44:	00000000 	andeq	r0, r0, r0
   10b48:	00000000 	andeq	r0, r0, r0
   10b4c:	00000000 	andeq	r0, r0, r0
   10b50:	00000000 	andeq	r0, r0, r0
   10b54:	00000000 	andeq	r0, r0, r0
   10b58:	00000000 	andeq	r0, r0, r0
   10b5c:	00000000 	andeq	r0, r0, r0
   10b60:	00000000 	andeq	r0, r0, r0
   10b64:	00000000 	andeq	r0, r0, r0
   10b68:	00000000 	andeq	r0, r0, r0
   10b6c:	00000000 	andeq	r0, r0, r0
   10b70:	00000000 	andeq	r0, r0, r0
   10b74:	00000000 	andeq	r0, r0, r0
   10b78:	00000000 	andeq	r0, r0, r0
   10b7c:	00000000 	andeq	r0, r0, r0
   10b80:	00000000 	andeq	r0, r0, r0
   10b84:	00000000 	andeq	r0, r0, r0
   10b88:	00000000 	andeq	r0, r0, r0
   10b8c:	00000000 	andeq	r0, r0, r0
   10b90:	00000000 	andeq	r0, r0, r0
   10b94:	00000000 	andeq	r0, r0, r0
   10b98:	00000000 	andeq	r0, r0, r0
   10b9c:	00000000 	andeq	r0, r0, r0
   10ba0:	00000000 	andeq	r0, r0, r0
   10ba4:	00000000 	andeq	r0, r0, r0
   10ba8:	00000000 	andeq	r0, r0, r0
   10bac:	00000000 	andeq	r0, r0, r0
   10bb0:	00000000 	andeq	r0, r0, r0
   10bb4:	00000000 	andeq	r0, r0, r0
   10bb8:	00000000 	andeq	r0, r0, r0
   10bbc:	00000000 	andeq	r0, r0, r0
   10bc0:	00000000 	andeq	r0, r0, r0
   10bc4:	00000000 	andeq	r0, r0, r0
   10bc8:	00000000 	andeq	r0, r0, r0
   10bcc:	00000000 	andeq	r0, r0, r0
   10bd0:	00000000 	andeq	r0, r0, r0
   10bd4:	00000000 	andeq	r0, r0, r0
   10bd8:	00000000 	andeq	r0, r0, r0
   10bdc:	00000000 	andeq	r0, r0, r0
   10be0:	00000000 	andeq	r0, r0, r0
   10be4:	00000000 	andeq	r0, r0, r0
   10be8:	00000000 	andeq	r0, r0, r0
   10bec:	00000000 	andeq	r0, r0, r0
   10bf0:	00000000 	andeq	r0, r0, r0
   10bf4:	00000000 	andeq	r0, r0, r0
   10bf8:	00000000 	andeq	r0, r0, r0
   10bfc:	00000000 	andeq	r0, r0, r0
   10c00:	00000000 	andeq	r0, r0, r0
   10c04:	00000000 	andeq	r0, r0, r0
   10c08:	00000000 	andeq	r0, r0, r0
   10c0c:	00000000 	andeq	r0, r0, r0
   10c10:	00000000 	andeq	r0, r0, r0
   10c14:	00000000 	andeq	r0, r0, r0
   10c18:	00000000 	andeq	r0, r0, r0
   10c1c:	00000000 	andeq	r0, r0, r0
   10c20:	00000000 	andeq	r0, r0, r0
   10c24:	00000000 	andeq	r0, r0, r0
   10c28:	00000000 	andeq	r0, r0, r0
   10c2c:	00000000 	andeq	r0, r0, r0
   10c30:	00000000 	andeq	r0, r0, r0
   10c34:	00000000 	andeq	r0, r0, r0
   10c38:	00000000 	andeq	r0, r0, r0
   10c3c:	00000000 	andeq	r0, r0, r0
   10c40:	00000000 	andeq	r0, r0, r0
   10c44:	00000000 	andeq	r0, r0, r0
   10c48:	00000000 	andeq	r0, r0, r0
   10c4c:	00000000 	andeq	r0, r0, r0
   10c50:	00000000 	andeq	r0, r0, r0
   10c54:	00000000 	andeq	r0, r0, r0
   10c58:	00000000 	andeq	r0, r0, r0
   10c5c:	00000000 	andeq	r0, r0, r0
   10c60:	00000000 	andeq	r0, r0, r0
   10c64:	00000000 	andeq	r0, r0, r0
   10c68:	00000000 	andeq	r0, r0, r0
   10c6c:	00000000 	andeq	r0, r0, r0
   10c70:	00000000 	andeq	r0, r0, r0
   10c74:	00000000 	andeq	r0, r0, r0
   10c78:	00000000 	andeq	r0, r0, r0
   10c7c:	00000000 	andeq	r0, r0, r0
   10c80:	00000000 	andeq	r0, r0, r0
   10c84:	00000000 	andeq	r0, r0, r0
   10c88:	00000000 	andeq	r0, r0, r0
   10c8c:	00000000 	andeq	r0, r0, r0
   10c90:	00000000 	andeq	r0, r0, r0
   10c94:	00000000 	andeq	r0, r0, r0
   10c98:	00000000 	andeq	r0, r0, r0
   10c9c:	00000000 	andeq	r0, r0, r0
   10ca0:	00000000 	andeq	r0, r0, r0
   10ca4:	00000000 	andeq	r0, r0, r0
   10ca8:	00000000 	andeq	r0, r0, r0
   10cac:	00000000 	andeq	r0, r0, r0
   10cb0:	00000000 	andeq	r0, r0, r0
   10cb4:	00000000 	andeq	r0, r0, r0
   10cb8:	00000000 	andeq	r0, r0, r0
   10cbc:	00000000 	andeq	r0, r0, r0
   10cc0:	00000000 	andeq	r0, r0, r0
   10cc4:	00000000 	andeq	r0, r0, r0
   10cc8:	00000000 	andeq	r0, r0, r0
   10ccc:	00000000 	andeq	r0, r0, r0
   10cd0:	00000000 	andeq	r0, r0, r0
   10cd4:	00000000 	andeq	r0, r0, r0
   10cd8:	00000000 	andeq	r0, r0, r0
   10cdc:	00000000 	andeq	r0, r0, r0
   10ce0:	00000000 	andeq	r0, r0, r0
   10ce4:	00000000 	andeq	r0, r0, r0
   10ce8:	00000000 	andeq	r0, r0, r0
   10cec:	00000000 	andeq	r0, r0, r0
   10cf0:	00000000 	andeq	r0, r0, r0
   10cf4:	00000000 	andeq	r0, r0, r0
   10cf8:	00000000 	andeq	r0, r0, r0
   10cfc:	00000000 	andeq	r0, r0, r0
   10d00:	00000000 	andeq	r0, r0, r0
   10d04:	00000000 	andeq	r0, r0, r0
   10d08:	00000000 	andeq	r0, r0, r0
   10d0c:	00000000 	andeq	r0, r0, r0
   10d10:	00000000 	andeq	r0, r0, r0
   10d14:	00000000 	andeq	r0, r0, r0
   10d18:	00000000 	andeq	r0, r0, r0
   10d1c:	00000000 	andeq	r0, r0, r0
   10d20:	00000000 	andeq	r0, r0, r0
   10d24:	00000000 	andeq	r0, r0, r0
   10d28:	00000000 	andeq	r0, r0, r0
   10d2c:	00000000 	andeq	r0, r0, r0
   10d30:	00000000 	andeq	r0, r0, r0
   10d34:	00000000 	andeq	r0, r0, r0
   10d38:	00000000 	andeq	r0, r0, r0
   10d3c:	00000000 	andeq	r0, r0, r0
   10d40:	00000000 	andeq	r0, r0, r0
   10d44:	00000000 	andeq	r0, r0, r0
   10d48:	00000000 	andeq	r0, r0, r0
   10d4c:	00000000 	andeq	r0, r0, r0
   10d50:	00000000 	andeq	r0, r0, r0
   10d54:	00000000 	andeq	r0, r0, r0
   10d58:	00000000 	andeq	r0, r0, r0
   10d5c:	00000000 	andeq	r0, r0, r0
   10d60:	00000000 	andeq	r0, r0, r0
   10d64:	00000000 	andeq	r0, r0, r0
   10d68:	00000000 	andeq	r0, r0, r0
   10d6c:	00000000 	andeq	r0, r0, r0
   10d70:	00000000 	andeq	r0, r0, r0
   10d74:	00000000 	andeq	r0, r0, r0
   10d78:	00000000 	andeq	r0, r0, r0
   10d7c:	00000000 	andeq	r0, r0, r0
   10d80:	00000000 	andeq	r0, r0, r0
   10d84:	00000000 	andeq	r0, r0, r0
   10d88:	00000000 	andeq	r0, r0, r0
   10d8c:	00000000 	andeq	r0, r0, r0
   10d90:	00000000 	andeq	r0, r0, r0
   10d94:	00000000 	andeq	r0, r0, r0
   10d98:	00000000 	andeq	r0, r0, r0
   10d9c:	00000000 	andeq	r0, r0, r0
   10da0:	00000000 	andeq	r0, r0, r0
   10da4:	00000000 	andeq	r0, r0, r0
   10da8:	00000000 	andeq	r0, r0, r0
   10dac:	00000000 	andeq	r0, r0, r0
   10db0:	00000000 	andeq	r0, r0, r0
   10db4:	00000000 	andeq	r0, r0, r0
   10db8:	00000000 	andeq	r0, r0, r0
   10dbc:	00000000 	andeq	r0, r0, r0
   10dc0:	00000000 	andeq	r0, r0, r0
   10dc4:	00000000 	andeq	r0, r0, r0
   10dc8:	00000000 	andeq	r0, r0, r0
   10dcc:	00000000 	andeq	r0, r0, r0
   10dd0:	00000000 	andeq	r0, r0, r0
   10dd4:	00000000 	andeq	r0, r0, r0
   10dd8:	00000000 	andeq	r0, r0, r0
   10ddc:	00000000 	andeq	r0, r0, r0
   10de0:	00000000 	andeq	r0, r0, r0
   10de4:	00000000 	andeq	r0, r0, r0
   10de8:	00000000 	andeq	r0, r0, r0
   10dec:	00000000 	andeq	r0, r0, r0
   10df0:	00000000 	andeq	r0, r0, r0
   10df4:	00000000 	andeq	r0, r0, r0
   10df8:	00000000 	andeq	r0, r0, r0
   10dfc:	00000000 	andeq	r0, r0, r0
   10e00:	00000000 	andeq	r0, r0, r0
   10e04:	00000000 	andeq	r0, r0, r0
   10e08:	00000000 	andeq	r0, r0, r0
   10e0c:	00000000 	andeq	r0, r0, r0
   10e10:	00000000 	andeq	r0, r0, r0
   10e14:	00000000 	andeq	r0, r0, r0
   10e18:	00000000 	andeq	r0, r0, r0
   10e1c:	00000000 	andeq	r0, r0, r0
   10e20:	00000000 	andeq	r0, r0, r0
   10e24:	00000000 	andeq	r0, r0, r0
   10e28:	00000000 	andeq	r0, r0, r0
   10e2c:	00000000 	andeq	r0, r0, r0
   10e30:	00000000 	andeq	r0, r0, r0
   10e34:	00000000 	andeq	r0, r0, r0
   10e38:	00000000 	andeq	r0, r0, r0
   10e3c:	00000000 	andeq	r0, r0, r0
   10e40:	00000000 	andeq	r0, r0, r0
   10e44:	00000000 	andeq	r0, r0, r0
   10e48:	00000000 	andeq	r0, r0, r0
   10e4c:	00000000 	andeq	r0, r0, r0
   10e50:	00000000 	andeq	r0, r0, r0
   10e54:	00000000 	andeq	r0, r0, r0
   10e58:	00000000 	andeq	r0, r0, r0
   10e5c:	00000000 	andeq	r0, r0, r0
   10e60:	00000000 	andeq	r0, r0, r0
   10e64:	00000000 	andeq	r0, r0, r0
   10e68:	00000000 	andeq	r0, r0, r0
   10e6c:	00000000 	andeq	r0, r0, r0
   10e70:	00000000 	andeq	r0, r0, r0
   10e74:	00000000 	andeq	r0, r0, r0
   10e78:	00000000 	andeq	r0, r0, r0
   10e7c:	00000000 	andeq	r0, r0, r0
   10e80:	00000000 	andeq	r0, r0, r0
   10e84:	00000000 	andeq	r0, r0, r0
   10e88:	00000000 	andeq	r0, r0, r0
   10e8c:	00000000 	andeq	r0, r0, r0
   10e90:	00000000 	andeq	r0, r0, r0
   10e94:	00000000 	andeq	r0, r0, r0
   10e98:	00000000 	andeq	r0, r0, r0
   10e9c:	00000000 	andeq	r0, r0, r0
   10ea0:	00000000 	andeq	r0, r0, r0
   10ea4:	00000000 	andeq	r0, r0, r0
   10ea8:	00000000 	andeq	r0, r0, r0
   10eac:	00000000 	andeq	r0, r0, r0
   10eb0:	00000000 	andeq	r0, r0, r0
   10eb4:	00000000 	andeq	r0, r0, r0
   10eb8:	00000000 	andeq	r0, r0, r0
   10ebc:	00000000 	andeq	r0, r0, r0
   10ec0:	00000000 	andeq	r0, r0, r0
   10ec4:	00000000 	andeq	r0, r0, r0
   10ec8:	00000000 	andeq	r0, r0, r0
   10ecc:	00000000 	andeq	r0, r0, r0
   10ed0:	00000000 	andeq	r0, r0, r0
   10ed4:	00000000 	andeq	r0, r0, r0
   10ed8:	00000000 	andeq	r0, r0, r0
   10edc:	00000000 	andeq	r0, r0, r0
   10ee0:	00000000 	andeq	r0, r0, r0
   10ee4:	00000000 	andeq	r0, r0, r0
   10ee8:	00000000 	andeq	r0, r0, r0
   10eec:	00000000 	andeq	r0, r0, r0
   10ef0:	00000000 	andeq	r0, r0, r0
   10ef4:	00000000 	andeq	r0, r0, r0
   10ef8:	00000000 	andeq	r0, r0, r0
   10efc:	00000000 	andeq	r0, r0, r0
   10f00:	00000000 	andeq	r0, r0, r0
   10f04:	00000000 	andeq	r0, r0, r0
   10f08:	00000000 	andeq	r0, r0, r0
   10f0c:	00000000 	andeq	r0, r0, r0
   10f10:	00000000 	andeq	r0, r0, r0
   10f14:	00000000 	andeq	r0, r0, r0
   10f18:	00000000 	andeq	r0, r0, r0
   10f1c:	00000000 	andeq	r0, r0, r0
   10f20:	00000000 	andeq	r0, r0, r0
   10f24:	00000000 	andeq	r0, r0, r0
   10f28:	00000000 	andeq	r0, r0, r0
   10f2c:	00000000 	andeq	r0, r0, r0
   10f30:	00000000 	andeq	r0, r0, r0
   10f34:	00000000 	andeq	r0, r0, r0
   10f38:	00000000 	andeq	r0, r0, r0
   10f3c:	00000000 	andeq	r0, r0, r0
   10f40:	00000000 	andeq	r0, r0, r0
   10f44:	00000000 	andeq	r0, r0, r0
   10f48:	00000000 	andeq	r0, r0, r0
   10f4c:	00000000 	andeq	r0, r0, r0
   10f50:	00000000 	andeq	r0, r0, r0
   10f54:	00000000 	andeq	r0, r0, r0
   10f58:	00000000 	andeq	r0, r0, r0
   10f5c:	00000000 	andeq	r0, r0, r0
   10f60:	00000000 	andeq	r0, r0, r0
   10f64:	00000000 	andeq	r0, r0, r0
   10f68:	00000000 	andeq	r0, r0, r0
   10f6c:	00000000 	andeq	r0, r0, r0
   10f70:	00000000 	andeq	r0, r0, r0
   10f74:	00000000 	andeq	r0, r0, r0
   10f78:	00000000 	andeq	r0, r0, r0
   10f7c:	00000000 	andeq	r0, r0, r0
   10f80:	00000000 	andeq	r0, r0, r0
   10f84:	00000000 	andeq	r0, r0, r0
   10f88:	00000000 	andeq	r0, r0, r0
   10f8c:	00000000 	andeq	r0, r0, r0
   10f90:	00000000 	andeq	r0, r0, r0
   10f94:	00000000 	andeq	r0, r0, r0
   10f98:	00000000 	andeq	r0, r0, r0
   10f9c:	00000000 	andeq	r0, r0, r0
   10fa0:	00000000 	andeq	r0, r0, r0
   10fa4:	00000000 	andeq	r0, r0, r0
   10fa8:	00000000 	andeq	r0, r0, r0
   10fac:	00000000 	andeq	r0, r0, r0
   10fb0:	00000000 	andeq	r0, r0, r0
   10fb4:	00000000 	andeq	r0, r0, r0
   10fb8:	00000000 	andeq	r0, r0, r0
   10fbc:	00000000 	andeq	r0, r0, r0
   10fc0:	00000000 	andeq	r0, r0, r0
   10fc4:	00000000 	andeq	r0, r0, r0
   10fc8:	00000000 	andeq	r0, r0, r0
   10fcc:	00000000 	andeq	r0, r0, r0
   10fd0:	00000000 	andeq	r0, r0, r0
   10fd4:	00000000 	andeq	r0, r0, r0
   10fd8:	00000000 	andeq	r0, r0, r0
   10fdc:	00000000 	andeq	r0, r0, r0
   10fe0:	00000000 	andeq	r0, r0, r0
   10fe4:	00000000 	andeq	r0, r0, r0
   10fe8:	00000000 	andeq	r0, r0, r0
   10fec:	00000000 	andeq	r0, r0, r0
   10ff0:	00000000 	andeq	r0, r0, r0
   10ff4:	00000000 	andeq	r0, r0, r0
   10ff8:	00000000 	andeq	r0, r0, r0
   10ffc:	00000000 	andeq	r0, r0, r0
   11000:	00000000 	andeq	r0, r0, r0
   11004:	00000000 	andeq	r0, r0, r0
   11008:	00000000 	andeq	r0, r0, r0
   1100c:	00000000 	andeq	r0, r0, r0
   11010:	00000000 	andeq	r0, r0, r0
   11014:	00000000 	andeq	r0, r0, r0
   11018:	00000000 	andeq	r0, r0, r0
   1101c:	00000000 	andeq	r0, r0, r0
   11020:	00000000 	andeq	r0, r0, r0
   11024:	00000000 	andeq	r0, r0, r0
   11028:	00000000 	andeq	r0, r0, r0
   1102c:	00000000 	andeq	r0, r0, r0
   11030:	00000000 	andeq	r0, r0, r0
   11034:	00000000 	andeq	r0, r0, r0
   11038:	00000000 	andeq	r0, r0, r0
   1103c:	00000000 	andeq	r0, r0, r0
   11040:	00000000 	andeq	r0, r0, r0
   11044:	00000000 	andeq	r0, r0, r0
   11048:	00000000 	andeq	r0, r0, r0
   1104c:	00000000 	andeq	r0, r0, r0
   11050:	00000000 	andeq	r0, r0, r0
   11054:	00000000 	andeq	r0, r0, r0
   11058:	00000000 	andeq	r0, r0, r0
   1105c:	00000000 	andeq	r0, r0, r0
   11060:	00000000 	andeq	r0, r0, r0
   11064:	00000000 	andeq	r0, r0, r0
   11068:	00000000 	andeq	r0, r0, r0
   1106c:	00000000 	andeq	r0, r0, r0
   11070:	00000000 	andeq	r0, r0, r0
   11074:	00000000 	andeq	r0, r0, r0
   11078:	00000000 	andeq	r0, r0, r0
   1107c:	00000000 	andeq	r0, r0, r0
   11080:	00000000 	andeq	r0, r0, r0
   11084:	00000000 	andeq	r0, r0, r0
   11088:	00000000 	andeq	r0, r0, r0
   1108c:	00000000 	andeq	r0, r0, r0
   11090:	00000000 	andeq	r0, r0, r0
   11094:	00000000 	andeq	r0, r0, r0
   11098:	00000000 	andeq	r0, r0, r0
   1109c:	00000000 	andeq	r0, r0, r0
   110a0:	00000000 	andeq	r0, r0, r0
   110a4:	00000000 	andeq	r0, r0, r0
   110a8:	00000000 	andeq	r0, r0, r0
   110ac:	00000000 	andeq	r0, r0, r0
   110b0:	00000000 	andeq	r0, r0, r0
   110b4:	00000000 	andeq	r0, r0, r0
   110b8:	00000000 	andeq	r0, r0, r0
   110bc:	00000000 	andeq	r0, r0, r0
   110c0:	00000000 	andeq	r0, r0, r0
   110c4:	00000000 	andeq	r0, r0, r0
   110c8:	00000000 	andeq	r0, r0, r0
   110cc:	00000000 	andeq	r0, r0, r0
   110d0:	00000000 	andeq	r0, r0, r0
   110d4:	00000000 	andeq	r0, r0, r0
   110d8:	00000000 	andeq	r0, r0, r0
   110dc:	00000000 	andeq	r0, r0, r0
   110e0:	00000000 	andeq	r0, r0, r0
   110e4:	00000000 	andeq	r0, r0, r0
   110e8:	00000000 	andeq	r0, r0, r0
   110ec:	00000000 	andeq	r0, r0, r0
   110f0:	00000000 	andeq	r0, r0, r0
   110f4:	00000000 	andeq	r0, r0, r0
   110f8:	00000000 	andeq	r0, r0, r0
   110fc:	00000000 	andeq	r0, r0, r0
   11100:	00000000 	andeq	r0, r0, r0
   11104:	00000000 	andeq	r0, r0, r0
   11108:	00000000 	andeq	r0, r0, r0
   1110c:	00000000 	andeq	r0, r0, r0
   11110:	00000000 	andeq	r0, r0, r0
   11114:	00000000 	andeq	r0, r0, r0
   11118:	00000000 	andeq	r0, r0, r0
   1111c:	00000000 	andeq	r0, r0, r0
   11120:	00000000 	andeq	r0, r0, r0
   11124:	00000000 	andeq	r0, r0, r0
   11128:	00000000 	andeq	r0, r0, r0
   1112c:	00000000 	andeq	r0, r0, r0
   11130:	00000000 	andeq	r0, r0, r0
   11134:	00000000 	andeq	r0, r0, r0
   11138:	00000000 	andeq	r0, r0, r0
   1113c:	00000000 	andeq	r0, r0, r0
   11140:	00000000 	andeq	r0, r0, r0
   11144:	00000000 	andeq	r0, r0, r0
   11148:	00000000 	andeq	r0, r0, r0
   1114c:	00000000 	andeq	r0, r0, r0
   11150:	00000000 	andeq	r0, r0, r0
   11154:	00000000 	andeq	r0, r0, r0
   11158:	00000000 	andeq	r0, r0, r0
   1115c:	00000000 	andeq	r0, r0, r0
   11160:	00000000 	andeq	r0, r0, r0
   11164:	00000000 	andeq	r0, r0, r0
   11168:	00000000 	andeq	r0, r0, r0
   1116c:	00000000 	andeq	r0, r0, r0
   11170:	00000000 	andeq	r0, r0, r0
   11174:	00000000 	andeq	r0, r0, r0
   11178:	00000000 	andeq	r0, r0, r0
   1117c:	00000000 	andeq	r0, r0, r0
   11180:	00000000 	andeq	r0, r0, r0
   11184:	00000000 	andeq	r0, r0, r0
   11188:	00000000 	andeq	r0, r0, r0
   1118c:	00000000 	andeq	r0, r0, r0
   11190:	00000000 	andeq	r0, r0, r0
   11194:	00000000 	andeq	r0, r0, r0
   11198:	00000000 	andeq	r0, r0, r0
   1119c:	00000000 	andeq	r0, r0, r0
   111a0:	00000000 	andeq	r0, r0, r0
   111a4:	00000000 	andeq	r0, r0, r0
   111a8:	00000000 	andeq	r0, r0, r0
   111ac:	00000000 	andeq	r0, r0, r0
   111b0:	00000000 	andeq	r0, r0, r0
   111b4:	00000000 	andeq	r0, r0, r0
   111b8:	00000000 	andeq	r0, r0, r0
   111bc:	00000000 	andeq	r0, r0, r0
   111c0:	00000000 	andeq	r0, r0, r0
   111c4:	00000000 	andeq	r0, r0, r0
   111c8:	00000000 	andeq	r0, r0, r0
   111cc:	00000000 	andeq	r0, r0, r0
   111d0:	00000000 	andeq	r0, r0, r0
   111d4:	00000000 	andeq	r0, r0, r0
   111d8:	00000000 	andeq	r0, r0, r0
   111dc:	00000000 	andeq	r0, r0, r0
   111e0:	00000000 	andeq	r0, r0, r0
   111e4:	00000000 	andeq	r0, r0, r0
   111e8:	00000000 	andeq	r0, r0, r0
   111ec:	00000000 	andeq	r0, r0, r0
   111f0:	00000000 	andeq	r0, r0, r0
   111f4:	00000000 	andeq	r0, r0, r0
   111f8:	00000000 	andeq	r0, r0, r0
   111fc:	00000000 	andeq	r0, r0, r0
   11200:	00000000 	andeq	r0, r0, r0
   11204:	00000000 	andeq	r0, r0, r0
   11208:	00000000 	andeq	r0, r0, r0
   1120c:	00000000 	andeq	r0, r0, r0
   11210:	00000000 	andeq	r0, r0, r0
   11214:	00000000 	andeq	r0, r0, r0
   11218:	00000000 	andeq	r0, r0, r0
   1121c:	00000000 	andeq	r0, r0, r0
   11220:	00000000 	andeq	r0, r0, r0
   11224:	00000000 	andeq	r0, r0, r0
   11228:	00000000 	andeq	r0, r0, r0
   1122c:	00000000 	andeq	r0, r0, r0
   11230:	00000000 	andeq	r0, r0, r0
   11234:	00000000 	andeq	r0, r0, r0
   11238:	00000000 	andeq	r0, r0, r0
   1123c:	00000000 	andeq	r0, r0, r0
   11240:	00000000 	andeq	r0, r0, r0
   11244:	00000000 	andeq	r0, r0, r0
   11248:	00000000 	andeq	r0, r0, r0
   1124c:	00000000 	andeq	r0, r0, r0
   11250:	00000000 	andeq	r0, r0, r0
   11254:	00000000 	andeq	r0, r0, r0
   11258:	00000000 	andeq	r0, r0, r0
   1125c:	00000000 	andeq	r0, r0, r0
   11260:	00000000 	andeq	r0, r0, r0
   11264:	00000000 	andeq	r0, r0, r0
   11268:	00000000 	andeq	r0, r0, r0
   1126c:	00000000 	andeq	r0, r0, r0
   11270:	00000000 	andeq	r0, r0, r0
   11274:	00000000 	andeq	r0, r0, r0
   11278:	00000000 	andeq	r0, r0, r0
   1127c:	00000000 	andeq	r0, r0, r0
   11280:	00000000 	andeq	r0, r0, r0
   11284:	00000000 	andeq	r0, r0, r0
   11288:	00000000 	andeq	r0, r0, r0
   1128c:	00000000 	andeq	r0, r0, r0
   11290:	00000000 	andeq	r0, r0, r0
   11294:	00000000 	andeq	r0, r0, r0
   11298:	00000000 	andeq	r0, r0, r0
   1129c:	00000000 	andeq	r0, r0, r0
   112a0:	00000000 	andeq	r0, r0, r0
   112a4:	00000000 	andeq	r0, r0, r0
   112a8:	00000000 	andeq	r0, r0, r0
   112ac:	00000000 	andeq	r0, r0, r0
   112b0:	00000000 	andeq	r0, r0, r0
   112b4:	00000000 	andeq	r0, r0, r0
   112b8:	00000000 	andeq	r0, r0, r0
   112bc:	00000000 	andeq	r0, r0, r0
   112c0:	00000000 	andeq	r0, r0, r0
   112c4:	00000000 	andeq	r0, r0, r0
   112c8:	00000000 	andeq	r0, r0, r0
   112cc:	00000000 	andeq	r0, r0, r0
   112d0:	00000000 	andeq	r0, r0, r0
   112d4:	00000000 	andeq	r0, r0, r0
   112d8:	00000000 	andeq	r0, r0, r0
   112dc:	00000000 	andeq	r0, r0, r0
   112e0:	00000000 	andeq	r0, r0, r0
   112e4:	00000000 	andeq	r0, r0, r0
   112e8:	00000000 	andeq	r0, r0, r0
   112ec:	00000000 	andeq	r0, r0, r0
   112f0:	00000000 	andeq	r0, r0, r0
   112f4:	00000000 	andeq	r0, r0, r0
   112f8:	00000000 	andeq	r0, r0, r0
   112fc:	00000000 	andeq	r0, r0, r0
   11300:	00000000 	andeq	r0, r0, r0
   11304:	00000000 	andeq	r0, r0, r0
   11308:	00000000 	andeq	r0, r0, r0
   1130c:	00000000 	andeq	r0, r0, r0
   11310:	00000000 	andeq	r0, r0, r0
   11314:	00000000 	andeq	r0, r0, r0
   11318:	00000000 	andeq	r0, r0, r0
   1131c:	00000000 	andeq	r0, r0, r0
   11320:	00000000 	andeq	r0, r0, r0
   11324:	00000000 	andeq	r0, r0, r0
   11328:	00000000 	andeq	r0, r0, r0
   1132c:	00000000 	andeq	r0, r0, r0
   11330:	00000000 	andeq	r0, r0, r0
   11334:	00000000 	andeq	r0, r0, r0
   11338:	00000000 	andeq	r0, r0, r0
   1133c:	00000000 	andeq	r0, r0, r0
   11340:	00000000 	andeq	r0, r0, r0
   11344:	00000000 	andeq	r0, r0, r0
   11348:	00000000 	andeq	r0, r0, r0
   1134c:	00000000 	andeq	r0, r0, r0
   11350:	00000000 	andeq	r0, r0, r0
   11354:	00000000 	andeq	r0, r0, r0
   11358:	00000000 	andeq	r0, r0, r0
   1135c:	00000000 	andeq	r0, r0, r0
   11360:	00000000 	andeq	r0, r0, r0
   11364:	00000000 	andeq	r0, r0, r0
   11368:	00000000 	andeq	r0, r0, r0
   1136c:	00000000 	andeq	r0, r0, r0
   11370:	00000000 	andeq	r0, r0, r0
   11374:	00000000 	andeq	r0, r0, r0
   11378:	00000000 	andeq	r0, r0, r0
   1137c:	00000000 	andeq	r0, r0, r0
   11380:	00000000 	andeq	r0, r0, r0
   11384:	00000000 	andeq	r0, r0, r0
   11388:	00000000 	andeq	r0, r0, r0
   1138c:	00000000 	andeq	r0, r0, r0
   11390:	00000000 	andeq	r0, r0, r0
   11394:	00000000 	andeq	r0, r0, r0
   11398:	00000000 	andeq	r0, r0, r0
   1139c:	00000000 	andeq	r0, r0, r0
   113a0:	00000000 	andeq	r0, r0, r0
   113a4:	00000000 	andeq	r0, r0, r0
   113a8:	00000000 	andeq	r0, r0, r0
   113ac:	00000000 	andeq	r0, r0, r0
   113b0:	00000000 	andeq	r0, r0, r0
   113b4:	00000000 	andeq	r0, r0, r0
   113b8:	00000000 	andeq	r0, r0, r0
   113bc:	00000000 	andeq	r0, r0, r0
   113c0:	00000000 	andeq	r0, r0, r0
   113c4:	00000000 	andeq	r0, r0, r0
   113c8:	00000000 	andeq	r0, r0, r0
   113cc:	00000000 	andeq	r0, r0, r0
   113d0:	00000000 	andeq	r0, r0, r0
   113d4:	00000000 	andeq	r0, r0, r0
   113d8:	00000000 	andeq	r0, r0, r0
   113dc:	00000000 	andeq	r0, r0, r0
   113e0:	00000000 	andeq	r0, r0, r0
   113e4:	00000000 	andeq	r0, r0, r0
   113e8:	00000000 	andeq	r0, r0, r0
   113ec:	00000000 	andeq	r0, r0, r0
   113f0:	00000000 	andeq	r0, r0, r0
   113f4:	00000000 	andeq	r0, r0, r0
   113f8:	00000000 	andeq	r0, r0, r0
   113fc:	00000000 	andeq	r0, r0, r0
   11400:	00000000 	andeq	r0, r0, r0
   11404:	00000000 	andeq	r0, r0, r0
   11408:	00000000 	andeq	r0, r0, r0
   1140c:	00000000 	andeq	r0, r0, r0
   11410:	00000000 	andeq	r0, r0, r0
   11414:	00000000 	andeq	r0, r0, r0
   11418:	00000000 	andeq	r0, r0, r0
   1141c:	00000000 	andeq	r0, r0, r0
   11420:	00000000 	andeq	r0, r0, r0
   11424:	00000000 	andeq	r0, r0, r0
   11428:	00000000 	andeq	r0, r0, r0
   1142c:	00000000 	andeq	r0, r0, r0
   11430:	00000000 	andeq	r0, r0, r0
   11434:	00000000 	andeq	r0, r0, r0
   11438:	00000000 	andeq	r0, r0, r0
   1143c:	00000000 	andeq	r0, r0, r0
   11440:	00000000 	andeq	r0, r0, r0
   11444:	00000000 	andeq	r0, r0, r0
   11448:	00000000 	andeq	r0, r0, r0
   1144c:	00000000 	andeq	r0, r0, r0
   11450:	00000000 	andeq	r0, r0, r0
   11454:	00000000 	andeq	r0, r0, r0
   11458:	00000000 	andeq	r0, r0, r0
   1145c:	00000000 	andeq	r0, r0, r0
   11460:	00000000 	andeq	r0, r0, r0
   11464:	00000000 	andeq	r0, r0, r0
   11468:	00000000 	andeq	r0, r0, r0
   1146c:	00000000 	andeq	r0, r0, r0
   11470:	00000000 	andeq	r0, r0, r0
   11474:	00000000 	andeq	r0, r0, r0
   11478:	00000000 	andeq	r0, r0, r0
   1147c:	00000000 	andeq	r0, r0, r0
   11480:	00000000 	andeq	r0, r0, r0
   11484:	00000000 	andeq	r0, r0, r0
   11488:	00000000 	andeq	r0, r0, r0
   1148c:	00000000 	andeq	r0, r0, r0
   11490:	00000000 	andeq	r0, r0, r0
   11494:	00000000 	andeq	r0, r0, r0
   11498:	00000000 	andeq	r0, r0, r0
   1149c:	00000000 	andeq	r0, r0, r0
   114a0:	00000000 	andeq	r0, r0, r0
   114a4:	00000000 	andeq	r0, r0, r0
   114a8:	00000000 	andeq	r0, r0, r0
   114ac:	00000000 	andeq	r0, r0, r0
   114b0:	00000000 	andeq	r0, r0, r0
   114b4:	00000000 	andeq	r0, r0, r0
   114b8:	00000000 	andeq	r0, r0, r0
   114bc:	00000000 	andeq	r0, r0, r0
   114c0:	00000000 	andeq	r0, r0, r0
   114c4:	00000000 	andeq	r0, r0, r0
   114c8:	00000000 	andeq	r0, r0, r0
   114cc:	00000000 	andeq	r0, r0, r0
   114d0:	00000000 	andeq	r0, r0, r0
   114d4:	00000000 	andeq	r0, r0, r0
   114d8:	00000000 	andeq	r0, r0, r0
   114dc:	00000000 	andeq	r0, r0, r0
   114e0:	00000000 	andeq	r0, r0, r0
   114e4:	00000000 	andeq	r0, r0, r0
   114e8:	00000000 	andeq	r0, r0, r0
   114ec:	00000000 	andeq	r0, r0, r0
   114f0:	00000000 	andeq	r0, r0, r0
   114f4:	00000000 	andeq	r0, r0, r0
   114f8:	00000000 	andeq	r0, r0, r0
   114fc:	00000000 	andeq	r0, r0, r0
   11500:	00000000 	andeq	r0, r0, r0
   11504:	00000000 	andeq	r0, r0, r0
   11508:	00000000 	andeq	r0, r0, r0
   1150c:	00000000 	andeq	r0, r0, r0
   11510:	00000000 	andeq	r0, r0, r0
   11514:	00000000 	andeq	r0, r0, r0
   11518:	00000000 	andeq	r0, r0, r0
   1151c:	00000000 	andeq	r0, r0, r0
   11520:	00000000 	andeq	r0, r0, r0
   11524:	00000000 	andeq	r0, r0, r0
   11528:	00000000 	andeq	r0, r0, r0
   1152c:	00000000 	andeq	r0, r0, r0
   11530:	00000000 	andeq	r0, r0, r0
   11534:	00000000 	andeq	r0, r0, r0
   11538:	00000000 	andeq	r0, r0, r0
   1153c:	00000000 	andeq	r0, r0, r0
   11540:	00000000 	andeq	r0, r0, r0
   11544:	00000000 	andeq	r0, r0, r0
   11548:	00000000 	andeq	r0, r0, r0
   1154c:	00000000 	andeq	r0, r0, r0
   11550:	00000000 	andeq	r0, r0, r0
   11554:	00000000 	andeq	r0, r0, r0
   11558:	00000000 	andeq	r0, r0, r0
   1155c:	00000000 	andeq	r0, r0, r0
   11560:	00000000 	andeq	r0, r0, r0
   11564:	00000000 	andeq	r0, r0, r0
   11568:	00000000 	andeq	r0, r0, r0
   1156c:	00000000 	andeq	r0, r0, r0
   11570:	00000000 	andeq	r0, r0, r0
   11574:	00000000 	andeq	r0, r0, r0
   11578:	00000000 	andeq	r0, r0, r0
   1157c:	00000000 	andeq	r0, r0, r0
   11580:	00000000 	andeq	r0, r0, r0
   11584:	00000000 	andeq	r0, r0, r0
   11588:	00000000 	andeq	r0, r0, r0
   1158c:	00000000 	andeq	r0, r0, r0
   11590:	00000000 	andeq	r0, r0, r0
   11594:	00000000 	andeq	r0, r0, r0
   11598:	00000000 	andeq	r0, r0, r0
   1159c:	00000000 	andeq	r0, r0, r0
   115a0:	00000000 	andeq	r0, r0, r0
   115a4:	00000000 	andeq	r0, r0, r0
   115a8:	00000000 	andeq	r0, r0, r0
   115ac:	00000000 	andeq	r0, r0, r0
   115b0:	00000000 	andeq	r0, r0, r0
   115b4:	00000000 	andeq	r0, r0, r0
   115b8:	00000000 	andeq	r0, r0, r0
   115bc:	00000000 	andeq	r0, r0, r0
   115c0:	00000000 	andeq	r0, r0, r0
   115c4:	00000000 	andeq	r0, r0, r0
   115c8:	00000000 	andeq	r0, r0, r0
   115cc:	00000000 	andeq	r0, r0, r0
   115d0:	00000000 	andeq	r0, r0, r0
   115d4:	00000000 	andeq	r0, r0, r0
   115d8:	00000000 	andeq	r0, r0, r0
   115dc:	00000000 	andeq	r0, r0, r0
   115e0:	00000000 	andeq	r0, r0, r0
   115e4:	00000000 	andeq	r0, r0, r0
   115e8:	00000000 	andeq	r0, r0, r0
   115ec:	00000000 	andeq	r0, r0, r0
   115f0:	00000000 	andeq	r0, r0, r0
   115f4:	00000000 	andeq	r0, r0, r0
   115f8:	00000000 	andeq	r0, r0, r0
   115fc:	00000000 	andeq	r0, r0, r0
   11600:	00000000 	andeq	r0, r0, r0
   11604:	00000000 	andeq	r0, r0, r0
   11608:	00000000 	andeq	r0, r0, r0
   1160c:	00000000 	andeq	r0, r0, r0
   11610:	00000000 	andeq	r0, r0, r0
   11614:	00000000 	andeq	r0, r0, r0
   11618:	00000000 	andeq	r0, r0, r0
   1161c:	00000000 	andeq	r0, r0, r0
   11620:	00000000 	andeq	r0, r0, r0
   11624:	00000000 	andeq	r0, r0, r0
   11628:	00000000 	andeq	r0, r0, r0
   1162c:	00000000 	andeq	r0, r0, r0
   11630:	00000000 	andeq	r0, r0, r0
   11634:	00000000 	andeq	r0, r0, r0
   11638:	00000000 	andeq	r0, r0, r0
   1163c:	00000000 	andeq	r0, r0, r0
   11640:	00000000 	andeq	r0, r0, r0
   11644:	00000000 	andeq	r0, r0, r0
   11648:	00000000 	andeq	r0, r0, r0
   1164c:	00000000 	andeq	r0, r0, r0
   11650:	00000000 	andeq	r0, r0, r0
   11654:	00000000 	andeq	r0, r0, r0
   11658:	00000000 	andeq	r0, r0, r0
   1165c:	00000000 	andeq	r0, r0, r0
   11660:	00000000 	andeq	r0, r0, r0
   11664:	00000000 	andeq	r0, r0, r0
   11668:	00000000 	andeq	r0, r0, r0
   1166c:	00000000 	andeq	r0, r0, r0
   11670:	00000000 	andeq	r0, r0, r0
   11674:	00000000 	andeq	r0, r0, r0
   11678:	00000000 	andeq	r0, r0, r0
   1167c:	00000000 	andeq	r0, r0, r0
   11680:	00000000 	andeq	r0, r0, r0
   11684:	00000000 	andeq	r0, r0, r0
   11688:	00000000 	andeq	r0, r0, r0
   1168c:	00000000 	andeq	r0, r0, r0
   11690:	00000000 	andeq	r0, r0, r0
   11694:	00000000 	andeq	r0, r0, r0
   11698:	00000000 	andeq	r0, r0, r0
   1169c:	00000000 	andeq	r0, r0, r0
   116a0:	00000000 	andeq	r0, r0, r0
   116a4:	00000000 	andeq	r0, r0, r0
   116a8:	00000000 	andeq	r0, r0, r0
   116ac:	00000000 	andeq	r0, r0, r0
   116b0:	00000000 	andeq	r0, r0, r0
   116b4:	00000000 	andeq	r0, r0, r0
   116b8:	00000000 	andeq	r0, r0, r0
   116bc:	00000000 	andeq	r0, r0, r0
   116c0:	00000000 	andeq	r0, r0, r0
   116c4:	00000000 	andeq	r0, r0, r0
   116c8:	00000000 	andeq	r0, r0, r0
   116cc:	00000000 	andeq	r0, r0, r0
   116d0:	00000000 	andeq	r0, r0, r0
   116d4:	00000000 	andeq	r0, r0, r0
   116d8:	00000000 	andeq	r0, r0, r0
   116dc:	00000000 	andeq	r0, r0, r0
   116e0:	00000000 	andeq	r0, r0, r0
   116e4:	00000000 	andeq	r0, r0, r0
   116e8:	00000000 	andeq	r0, r0, r0
   116ec:	00000000 	andeq	r0, r0, r0
   116f0:	00000000 	andeq	r0, r0, r0
   116f4:	00000000 	andeq	r0, r0, r0
   116f8:	00000000 	andeq	r0, r0, r0
   116fc:	00000000 	andeq	r0, r0, r0
   11700:	00000000 	andeq	r0, r0, r0
   11704:	00000000 	andeq	r0, r0, r0
   11708:	00000000 	andeq	r0, r0, r0
   1170c:	00000000 	andeq	r0, r0, r0
   11710:	00000000 	andeq	r0, r0, r0
   11714:	00000000 	andeq	r0, r0, r0
   11718:	00000000 	andeq	r0, r0, r0
   1171c:	00000000 	andeq	r0, r0, r0
   11720:	00000000 	andeq	r0, r0, r0
   11724:	00000000 	andeq	r0, r0, r0
   11728:	00000000 	andeq	r0, r0, r0
   1172c:	00000000 	andeq	r0, r0, r0
   11730:	00000000 	andeq	r0, r0, r0
   11734:	00000000 	andeq	r0, r0, r0
   11738:	00000000 	andeq	r0, r0, r0
   1173c:	00000000 	andeq	r0, r0, r0
   11740:	00000000 	andeq	r0, r0, r0
   11744:	00000000 	andeq	r0, r0, r0
   11748:	00000000 	andeq	r0, r0, r0
   1174c:	00000000 	andeq	r0, r0, r0
   11750:	00000000 	andeq	r0, r0, r0
   11754:	00000000 	andeq	r0, r0, r0
   11758:	00000000 	andeq	r0, r0, r0
   1175c:	00000000 	andeq	r0, r0, r0
   11760:	00000000 	andeq	r0, r0, r0
   11764:	00000000 	andeq	r0, r0, r0
   11768:	00000000 	andeq	r0, r0, r0
   1176c:	00000000 	andeq	r0, r0, r0
   11770:	00000000 	andeq	r0, r0, r0
   11774:	00000000 	andeq	r0, r0, r0
   11778:	00000000 	andeq	r0, r0, r0
   1177c:	00000000 	andeq	r0, r0, r0
   11780:	00000000 	andeq	r0, r0, r0
   11784:	00000000 	andeq	r0, r0, r0
   11788:	00000000 	andeq	r0, r0, r0
   1178c:	00000000 	andeq	r0, r0, r0
   11790:	00000000 	andeq	r0, r0, r0
   11794:	00000000 	andeq	r0, r0, r0
   11798:	00000000 	andeq	r0, r0, r0
   1179c:	00000000 	andeq	r0, r0, r0
   117a0:	00000000 	andeq	r0, r0, r0
   117a4:	00000000 	andeq	r0, r0, r0
   117a8:	00000000 	andeq	r0, r0, r0
   117ac:	00000000 	andeq	r0, r0, r0
   117b0:	00000000 	andeq	r0, r0, r0
   117b4:	00000000 	andeq	r0, r0, r0
   117b8:	00000000 	andeq	r0, r0, r0
   117bc:	00000000 	andeq	r0, r0, r0
   117c0:	00000000 	andeq	r0, r0, r0
   117c4:	00000000 	andeq	r0, r0, r0
   117c8:	00000000 	andeq	r0, r0, r0
   117cc:	00000000 	andeq	r0, r0, r0
   117d0:	00000000 	andeq	r0, r0, r0
   117d4:	00000000 	andeq	r0, r0, r0
   117d8:	00000000 	andeq	r0, r0, r0
   117dc:	00000000 	andeq	r0, r0, r0
   117e0:	00000000 	andeq	r0, r0, r0
   117e4:	00000000 	andeq	r0, r0, r0
   117e8:	00000000 	andeq	r0, r0, r0
   117ec:	00000000 	andeq	r0, r0, r0
   117f0:	00000000 	andeq	r0, r0, r0
   117f4:	00000000 	andeq	r0, r0, r0
   117f8:	00000000 	andeq	r0, r0, r0
   117fc:	00000000 	andeq	r0, r0, r0
   11800:	00000000 	andeq	r0, r0, r0
   11804:	00000000 	andeq	r0, r0, r0
   11808:	00000000 	andeq	r0, r0, r0
   1180c:	00000000 	andeq	r0, r0, r0
   11810:	00000000 	andeq	r0, r0, r0
   11814:	00000000 	andeq	r0, r0, r0
   11818:	00000000 	andeq	r0, r0, r0
   1181c:	00000000 	andeq	r0, r0, r0
   11820:	00000000 	andeq	r0, r0, r0
   11824:	00000000 	andeq	r0, r0, r0
   11828:	00000000 	andeq	r0, r0, r0
   1182c:	00000000 	andeq	r0, r0, r0
   11830:	00000000 	andeq	r0, r0, r0
   11834:	00000000 	andeq	r0, r0, r0
   11838:	00000000 	andeq	r0, r0, r0
   1183c:	00000000 	andeq	r0, r0, r0
   11840:	00000000 	andeq	r0, r0, r0
   11844:	00000000 	andeq	r0, r0, r0
   11848:	00000000 	andeq	r0, r0, r0
   1184c:	00000000 	andeq	r0, r0, r0
   11850:	00000000 	andeq	r0, r0, r0
   11854:	00000000 	andeq	r0, r0, r0
   11858:	00000000 	andeq	r0, r0, r0
   1185c:	00000000 	andeq	r0, r0, r0
   11860:	00000000 	andeq	r0, r0, r0
   11864:	00000000 	andeq	r0, r0, r0
   11868:	00000000 	andeq	r0, r0, r0
   1186c:	00000000 	andeq	r0, r0, r0
   11870:	00000000 	andeq	r0, r0, r0
   11874:	00000000 	andeq	r0, r0, r0
   11878:	00000000 	andeq	r0, r0, r0
   1187c:	00000000 	andeq	r0, r0, r0
   11880:	00000000 	andeq	r0, r0, r0
   11884:	00000000 	andeq	r0, r0, r0
   11888:	00000000 	andeq	r0, r0, r0
   1188c:	00000000 	andeq	r0, r0, r0
   11890:	00000000 	andeq	r0, r0, r0
   11894:	00000000 	andeq	r0, r0, r0
   11898:	00000000 	andeq	r0, r0, r0
   1189c:	00000000 	andeq	r0, r0, r0
   118a0:	00000000 	andeq	r0, r0, r0
   118a4:	00000000 	andeq	r0, r0, r0
   118a8:	00000000 	andeq	r0, r0, r0
   118ac:	00000000 	andeq	r0, r0, r0
   118b0:	00000000 	andeq	r0, r0, r0
   118b4:	00000000 	andeq	r0, r0, r0
   118b8:	00000000 	andeq	r0, r0, r0
   118bc:	00000000 	andeq	r0, r0, r0
   118c0:	00000000 	andeq	r0, r0, r0
   118c4:	00000000 	andeq	r0, r0, r0
   118c8:	00000000 	andeq	r0, r0, r0
   118cc:	00000000 	andeq	r0, r0, r0
   118d0:	00000000 	andeq	r0, r0, r0
   118d4:	00000000 	andeq	r0, r0, r0
   118d8:	00000000 	andeq	r0, r0, r0
   118dc:	00000000 	andeq	r0, r0, r0
   118e0:	00000000 	andeq	r0, r0, r0
   118e4:	00000000 	andeq	r0, r0, r0
   118e8:	00000000 	andeq	r0, r0, r0
   118ec:	00000000 	andeq	r0, r0, r0
   118f0:	00000000 	andeq	r0, r0, r0
   118f4:	00000000 	andeq	r0, r0, r0
   118f8:	00000000 	andeq	r0, r0, r0
   118fc:	00000000 	andeq	r0, r0, r0
   11900:	00000000 	andeq	r0, r0, r0
   11904:	00000000 	andeq	r0, r0, r0
   11908:	00000000 	andeq	r0, r0, r0
   1190c:	00000000 	andeq	r0, r0, r0
   11910:	00000000 	andeq	r0, r0, r0
   11914:	00000000 	andeq	r0, r0, r0
   11918:	00000000 	andeq	r0, r0, r0
   1191c:	00000000 	andeq	r0, r0, r0
   11920:	00000000 	andeq	r0, r0, r0
   11924:	00000000 	andeq	r0, r0, r0
   11928:	00000000 	andeq	r0, r0, r0
   1192c:	00000000 	andeq	r0, r0, r0
   11930:	00000000 	andeq	r0, r0, r0
   11934:	00000000 	andeq	r0, r0, r0
   11938:	00000000 	andeq	r0, r0, r0
   1193c:	00000000 	andeq	r0, r0, r0
   11940:	00000000 	andeq	r0, r0, r0
   11944:	00000000 	andeq	r0, r0, r0
   11948:	00000000 	andeq	r0, r0, r0
   1194c:	00000000 	andeq	r0, r0, r0
   11950:	00000000 	andeq	r0, r0, r0
   11954:	00000000 	andeq	r0, r0, r0
   11958:	00000000 	andeq	r0, r0, r0
   1195c:	00000000 	andeq	r0, r0, r0
   11960:	00000000 	andeq	r0, r0, r0
   11964:	00000000 	andeq	r0, r0, r0
   11968:	00000000 	andeq	r0, r0, r0
   1196c:	00000000 	andeq	r0, r0, r0
   11970:	00000000 	andeq	r0, r0, r0
   11974:	00000000 	andeq	r0, r0, r0
   11978:	00000000 	andeq	r0, r0, r0
   1197c:	00000000 	andeq	r0, r0, r0
   11980:	00000000 	andeq	r0, r0, r0
   11984:	00000000 	andeq	r0, r0, r0
   11988:	00000000 	andeq	r0, r0, r0
   1198c:	00000000 	andeq	r0, r0, r0
   11990:	00000000 	andeq	r0, r0, r0
   11994:	00000000 	andeq	r0, r0, r0
   11998:	00000000 	andeq	r0, r0, r0
   1199c:	00000000 	andeq	r0, r0, r0
   119a0:	00000000 	andeq	r0, r0, r0
   119a4:	00000000 	andeq	r0, r0, r0
   119a8:	00000000 	andeq	r0, r0, r0
   119ac:	00000000 	andeq	r0, r0, r0
   119b0:	00000000 	andeq	r0, r0, r0
   119b4:	00000000 	andeq	r0, r0, r0
   119b8:	00000000 	andeq	r0, r0, r0
   119bc:	00000000 	andeq	r0, r0, r0
   119c0:	00000000 	andeq	r0, r0, r0
   119c4:	00000000 	andeq	r0, r0, r0
   119c8:	00000000 	andeq	r0, r0, r0
   119cc:	00000000 	andeq	r0, r0, r0
   119d0:	00000000 	andeq	r0, r0, r0
   119d4:	00000000 	andeq	r0, r0, r0
   119d8:	00000000 	andeq	r0, r0, r0
   119dc:	00000000 	andeq	r0, r0, r0
   119e0:	00000000 	andeq	r0, r0, r0
   119e4:	00000000 	andeq	r0, r0, r0
   119e8:	00000000 	andeq	r0, r0, r0
   119ec:	00000000 	andeq	r0, r0, r0
   119f0:	00000000 	andeq	r0, r0, r0
   119f4:	00000000 	andeq	r0, r0, r0
   119f8:	00000000 	andeq	r0, r0, r0
   119fc:	00000000 	andeq	r0, r0, r0
   11a00:	00000000 	andeq	r0, r0, r0
   11a04:	00000000 	andeq	r0, r0, r0
   11a08:	00000000 	andeq	r0, r0, r0
   11a0c:	00000000 	andeq	r0, r0, r0
   11a10:	00000000 	andeq	r0, r0, r0
   11a14:	00000000 	andeq	r0, r0, r0
   11a18:	00000000 	andeq	r0, r0, r0
   11a1c:	00000000 	andeq	r0, r0, r0
   11a20:	00000000 	andeq	r0, r0, r0
   11a24:	00000000 	andeq	r0, r0, r0
   11a28:	00000000 	andeq	r0, r0, r0
   11a2c:	00000000 	andeq	r0, r0, r0
   11a30:	00000000 	andeq	r0, r0, r0
   11a34:	00000000 	andeq	r0, r0, r0
   11a38:	00000000 	andeq	r0, r0, r0
   11a3c:	00000000 	andeq	r0, r0, r0
   11a40:	00000000 	andeq	r0, r0, r0
   11a44:	00000000 	andeq	r0, r0, r0
   11a48:	00000000 	andeq	r0, r0, r0
   11a4c:	00000000 	andeq	r0, r0, r0
   11a50:	00000000 	andeq	r0, r0, r0
   11a54:	00000000 	andeq	r0, r0, r0
   11a58:	00000000 	andeq	r0, r0, r0
   11a5c:	00000000 	andeq	r0, r0, r0
   11a60:	00000000 	andeq	r0, r0, r0
   11a64:	00000000 	andeq	r0, r0, r0
   11a68:	00000000 	andeq	r0, r0, r0
   11a6c:	00000000 	andeq	r0, r0, r0
   11a70:	00000000 	andeq	r0, r0, r0
   11a74:	00000000 	andeq	r0, r0, r0
   11a78:	00000000 	andeq	r0, r0, r0
   11a7c:	00000000 	andeq	r0, r0, r0
   11a80:	00000000 	andeq	r0, r0, r0
   11a84:	00000000 	andeq	r0, r0, r0
   11a88:	00000000 	andeq	r0, r0, r0
   11a8c:	00000000 	andeq	r0, r0, r0
   11a90:	00000000 	andeq	r0, r0, r0
   11a94:	00000000 	andeq	r0, r0, r0
   11a98:	00000000 	andeq	r0, r0, r0
   11a9c:	00000000 	andeq	r0, r0, r0
   11aa0:	00000000 	andeq	r0, r0, r0
   11aa4:	00000000 	andeq	r0, r0, r0
   11aa8:	00000000 	andeq	r0, r0, r0
   11aac:	00000000 	andeq	r0, r0, r0
   11ab0:	00000000 	andeq	r0, r0, r0
   11ab4:	00000000 	andeq	r0, r0, r0
   11ab8:	00000000 	andeq	r0, r0, r0
   11abc:	00000000 	andeq	r0, r0, r0
   11ac0:	00000000 	andeq	r0, r0, r0
   11ac4:	00000000 	andeq	r0, r0, r0
   11ac8:	00000000 	andeq	r0, r0, r0
   11acc:	00000000 	andeq	r0, r0, r0
   11ad0:	00000000 	andeq	r0, r0, r0
   11ad4:	00000000 	andeq	r0, r0, r0
   11ad8:	00000000 	andeq	r0, r0, r0
   11adc:	00000000 	andeq	r0, r0, r0
   11ae0:	00000000 	andeq	r0, r0, r0
   11ae4:	00000000 	andeq	r0, r0, r0
   11ae8:	00000000 	andeq	r0, r0, r0
   11aec:	00000000 	andeq	r0, r0, r0
   11af0:	00000000 	andeq	r0, r0, r0
   11af4:	00000000 	andeq	r0, r0, r0
   11af8:	00000000 	andeq	r0, r0, r0
   11afc:	00000000 	andeq	r0, r0, r0
   11b00:	00000000 	andeq	r0, r0, r0
   11b04:	00000000 	andeq	r0, r0, r0
   11b08:	00000000 	andeq	r0, r0, r0
   11b0c:	00000000 	andeq	r0, r0, r0
   11b10:	00000000 	andeq	r0, r0, r0
   11b14:	00000000 	andeq	r0, r0, r0
   11b18:	00000000 	andeq	r0, r0, r0
   11b1c:	00000000 	andeq	r0, r0, r0
   11b20:	00000000 	andeq	r0, r0, r0
   11b24:	00000000 	andeq	r0, r0, r0
   11b28:	00000000 	andeq	r0, r0, r0
   11b2c:	00000000 	andeq	r0, r0, r0
   11b30:	00000000 	andeq	r0, r0, r0
   11b34:	00000000 	andeq	r0, r0, r0
   11b38:	00000000 	andeq	r0, r0, r0
   11b3c:	00000000 	andeq	r0, r0, r0
   11b40:	00000000 	andeq	r0, r0, r0
   11b44:	00000000 	andeq	r0, r0, r0
   11b48:	00000000 	andeq	r0, r0, r0
   11b4c:	00000000 	andeq	r0, r0, r0
   11b50:	00000000 	andeq	r0, r0, r0
   11b54:	00000000 	andeq	r0, r0, r0
   11b58:	00000000 	andeq	r0, r0, r0
   11b5c:	00000000 	andeq	r0, r0, r0
   11b60:	00000000 	andeq	r0, r0, r0
   11b64:	00000000 	andeq	r0, r0, r0
   11b68:	00000000 	andeq	r0, r0, r0
   11b6c:	00000000 	andeq	r0, r0, r0
   11b70:	00000000 	andeq	r0, r0, r0
   11b74:	00000000 	andeq	r0, r0, r0
   11b78:	00000000 	andeq	r0, r0, r0
   11b7c:	00000000 	andeq	r0, r0, r0
   11b80:	00000000 	andeq	r0, r0, r0
   11b84:	00000000 	andeq	r0, r0, r0
   11b88:	00000000 	andeq	r0, r0, r0
   11b8c:	00000000 	andeq	r0, r0, r0
   11b90:	00000000 	andeq	r0, r0, r0
   11b94:	00000000 	andeq	r0, r0, r0
   11b98:	00000000 	andeq	r0, r0, r0
   11b9c:	00000000 	andeq	r0, r0, r0
   11ba0:	00000000 	andeq	r0, r0, r0
   11ba4:	00000000 	andeq	r0, r0, r0
   11ba8:	00000000 	andeq	r0, r0, r0
   11bac:	00000000 	andeq	r0, r0, r0
   11bb0:	00000000 	andeq	r0, r0, r0
   11bb4:	00000000 	andeq	r0, r0, r0
   11bb8:	00000000 	andeq	r0, r0, r0
   11bbc:	00000000 	andeq	r0, r0, r0
   11bc0:	00000000 	andeq	r0, r0, r0
   11bc4:	00000000 	andeq	r0, r0, r0
   11bc8:	00000000 	andeq	r0, r0, r0
   11bcc:	00000000 	andeq	r0, r0, r0
   11bd0:	00000000 	andeq	r0, r0, r0
   11bd4:	00000000 	andeq	r0, r0, r0
   11bd8:	00000000 	andeq	r0, r0, r0
   11bdc:	00000000 	andeq	r0, r0, r0
   11be0:	00000000 	andeq	r0, r0, r0
   11be4:	00000000 	andeq	r0, r0, r0
   11be8:	00000000 	andeq	r0, r0, r0
   11bec:	00000000 	andeq	r0, r0, r0
   11bf0:	00000000 	andeq	r0, r0, r0
   11bf4:	00000000 	andeq	r0, r0, r0
   11bf8:	00000000 	andeq	r0, r0, r0
   11bfc:	00000000 	andeq	r0, r0, r0
   11c00:	00000000 	andeq	r0, r0, r0
   11c04:	00000000 	andeq	r0, r0, r0
   11c08:	00000000 	andeq	r0, r0, r0
   11c0c:	00000000 	andeq	r0, r0, r0
   11c10:	00000000 	andeq	r0, r0, r0
   11c14:	00000000 	andeq	r0, r0, r0
   11c18:	00000000 	andeq	r0, r0, r0
   11c1c:	00000000 	andeq	r0, r0, r0
   11c20:	00000000 	andeq	r0, r0, r0
   11c24:	00000000 	andeq	r0, r0, r0
   11c28:	00000000 	andeq	r0, r0, r0
   11c2c:	00000000 	andeq	r0, r0, r0
   11c30:	00000000 	andeq	r0, r0, r0
   11c34:	00000000 	andeq	r0, r0, r0
   11c38:	00000000 	andeq	r0, r0, r0
   11c3c:	00000000 	andeq	r0, r0, r0
   11c40:	00000000 	andeq	r0, r0, r0
   11c44:	00000000 	andeq	r0, r0, r0
   11c48:	00000000 	andeq	r0, r0, r0
   11c4c:	00000000 	andeq	r0, r0, r0
   11c50:	00000000 	andeq	r0, r0, r0
   11c54:	00000000 	andeq	r0, r0, r0
   11c58:	00000000 	andeq	r0, r0, r0
   11c5c:	00000000 	andeq	r0, r0, r0
   11c60:	00000000 	andeq	r0, r0, r0
   11c64:	00000000 	andeq	r0, r0, r0
   11c68:	00000000 	andeq	r0, r0, r0
   11c6c:	00000000 	andeq	r0, r0, r0
   11c70:	00000000 	andeq	r0, r0, r0
   11c74:	00000000 	andeq	r0, r0, r0
   11c78:	00000000 	andeq	r0, r0, r0
   11c7c:	00000000 	andeq	r0, r0, r0
   11c80:	00000000 	andeq	r0, r0, r0
   11c84:	00000000 	andeq	r0, r0, r0
   11c88:	00000000 	andeq	r0, r0, r0
   11c8c:	00000000 	andeq	r0, r0, r0
   11c90:	00000000 	andeq	r0, r0, r0
   11c94:	00000000 	andeq	r0, r0, r0
   11c98:	00000000 	andeq	r0, r0, r0
   11c9c:	00000000 	andeq	r0, r0, r0
   11ca0:	00000000 	andeq	r0, r0, r0
   11ca4:	00000000 	andeq	r0, r0, r0
   11ca8:	00000000 	andeq	r0, r0, r0
   11cac:	00000000 	andeq	r0, r0, r0
   11cb0:	00000000 	andeq	r0, r0, r0
   11cb4:	00000000 	andeq	r0, r0, r0
   11cb8:	00000000 	andeq	r0, r0, r0
   11cbc:	00000000 	andeq	r0, r0, r0
   11cc0:	00000000 	andeq	r0, r0, r0
   11cc4:	00000000 	andeq	r0, r0, r0
   11cc8:	00000000 	andeq	r0, r0, r0
   11ccc:	00000000 	andeq	r0, r0, r0
   11cd0:	00000000 	andeq	r0, r0, r0
   11cd4:	00000000 	andeq	r0, r0, r0
   11cd8:	00000000 	andeq	r0, r0, r0
   11cdc:	00000000 	andeq	r0, r0, r0
   11ce0:	00000000 	andeq	r0, r0, r0
   11ce4:	00000000 	andeq	r0, r0, r0
   11ce8:	00000000 	andeq	r0, r0, r0
   11cec:	00000000 	andeq	r0, r0, r0
   11cf0:	00000000 	andeq	r0, r0, r0
   11cf4:	00000000 	andeq	r0, r0, r0
   11cf8:	00000000 	andeq	r0, r0, r0
   11cfc:	00000000 	andeq	r0, r0, r0
   11d00:	00000000 	andeq	r0, r0, r0
   11d04:	00000000 	andeq	r0, r0, r0
   11d08:	00000000 	andeq	r0, r0, r0
   11d0c:	00000000 	andeq	r0, r0, r0
   11d10:	00000000 	andeq	r0, r0, r0
   11d14:	00000000 	andeq	r0, r0, r0
   11d18:	00000000 	andeq	r0, r0, r0
   11d1c:	00000000 	andeq	r0, r0, r0
   11d20:	00000000 	andeq	r0, r0, r0
   11d24:	00000000 	andeq	r0, r0, r0
   11d28:	00000000 	andeq	r0, r0, r0
   11d2c:	00000000 	andeq	r0, r0, r0
   11d30:	00000000 	andeq	r0, r0, r0
   11d34:	00000000 	andeq	r0, r0, r0
   11d38:	00000000 	andeq	r0, r0, r0
   11d3c:	00000000 	andeq	r0, r0, r0
   11d40:	00000000 	andeq	r0, r0, r0
   11d44:	00000000 	andeq	r0, r0, r0
   11d48:	00000000 	andeq	r0, r0, r0
   11d4c:	00000000 	andeq	r0, r0, r0
   11d50:	00000000 	andeq	r0, r0, r0
   11d54:	00000000 	andeq	r0, r0, r0
   11d58:	00000000 	andeq	r0, r0, r0
   11d5c:	00000000 	andeq	r0, r0, r0
   11d60:	00000000 	andeq	r0, r0, r0
   11d64:	00000000 	andeq	r0, r0, r0
   11d68:	00000000 	andeq	r0, r0, r0
   11d6c:	00000000 	andeq	r0, r0, r0
   11d70:	00000000 	andeq	r0, r0, r0
   11d74:	00000000 	andeq	r0, r0, r0
   11d78:	00000000 	andeq	r0, r0, r0
   11d7c:	00000000 	andeq	r0, r0, r0
   11d80:	00000000 	andeq	r0, r0, r0
   11d84:	00000000 	andeq	r0, r0, r0
   11d88:	00000000 	andeq	r0, r0, r0
   11d8c:	00000000 	andeq	r0, r0, r0
   11d90:	00000000 	andeq	r0, r0, r0
   11d94:	00000000 	andeq	r0, r0, r0
   11d98:	00000000 	andeq	r0, r0, r0
   11d9c:	00000000 	andeq	r0, r0, r0
   11da0:	00000000 	andeq	r0, r0, r0
   11da4:	00000000 	andeq	r0, r0, r0
   11da8:	00000000 	andeq	r0, r0, r0
   11dac:	00000000 	andeq	r0, r0, r0
   11db0:	00000000 	andeq	r0, r0, r0
   11db4:	00000000 	andeq	r0, r0, r0
   11db8:	00000000 	andeq	r0, r0, r0
   11dbc:	00000000 	andeq	r0, r0, r0
   11dc0:	00000000 	andeq	r0, r0, r0
   11dc4:	00000000 	andeq	r0, r0, r0
   11dc8:	00000000 	andeq	r0, r0, r0
   11dcc:	00000000 	andeq	r0, r0, r0
   11dd0:	00000000 	andeq	r0, r0, r0
   11dd4:	00000000 	andeq	r0, r0, r0
   11dd8:	00000000 	andeq	r0, r0, r0
   11ddc:	00000000 	andeq	r0, r0, r0
   11de0:	00000000 	andeq	r0, r0, r0
   11de4:	00000000 	andeq	r0, r0, r0
   11de8:	00000000 	andeq	r0, r0, r0
   11dec:	00000000 	andeq	r0, r0, r0
   11df0:	00000000 	andeq	r0, r0, r0
   11df4:	00000000 	andeq	r0, r0, r0
   11df8:	00000000 	andeq	r0, r0, r0
   11dfc:	00000000 	andeq	r0, r0, r0
   11e00:	00000000 	andeq	r0, r0, r0
   11e04:	00000000 	andeq	r0, r0, r0
   11e08:	00000000 	andeq	r0, r0, r0
   11e0c:	00000000 	andeq	r0, r0, r0
   11e10:	00000000 	andeq	r0, r0, r0
   11e14:	00000000 	andeq	r0, r0, r0
   11e18:	00000000 	andeq	r0, r0, r0
   11e1c:	00000000 	andeq	r0, r0, r0
   11e20:	00000000 	andeq	r0, r0, r0
   11e24:	00000000 	andeq	r0, r0, r0
   11e28:	00000000 	andeq	r0, r0, r0
   11e2c:	00000000 	andeq	r0, r0, r0
   11e30:	00000000 	andeq	r0, r0, r0
   11e34:	00000000 	andeq	r0, r0, r0
   11e38:	00000000 	andeq	r0, r0, r0
   11e3c:	00000000 	andeq	r0, r0, r0
   11e40:	00000000 	andeq	r0, r0, r0
   11e44:	00000000 	andeq	r0, r0, r0
   11e48:	00000000 	andeq	r0, r0, r0
   11e4c:	00000000 	andeq	r0, r0, r0
   11e50:	00000000 	andeq	r0, r0, r0
   11e54:	00000000 	andeq	r0, r0, r0
   11e58:	00000000 	andeq	r0, r0, r0
   11e5c:	00000000 	andeq	r0, r0, r0
   11e60:	00000000 	andeq	r0, r0, r0
   11e64:	00000000 	andeq	r0, r0, r0
   11e68:	00000000 	andeq	r0, r0, r0
   11e6c:	00000000 	andeq	r0, r0, r0
   11e70:	00000000 	andeq	r0, r0, r0
   11e74:	00000000 	andeq	r0, r0, r0
   11e78:	00000000 	andeq	r0, r0, r0
   11e7c:	00000000 	andeq	r0, r0, r0
   11e80:	00000000 	andeq	r0, r0, r0
   11e84:	00000000 	andeq	r0, r0, r0
   11e88:	00000000 	andeq	r0, r0, r0
   11e8c:	00000000 	andeq	r0, r0, r0
   11e90:	00000000 	andeq	r0, r0, r0
   11e94:	00000000 	andeq	r0, r0, r0
   11e98:	00000000 	andeq	r0, r0, r0
   11e9c:	00000000 	andeq	r0, r0, r0
   11ea0:	00000000 	andeq	r0, r0, r0
   11ea4:	00000000 	andeq	r0, r0, r0
   11ea8:	00000000 	andeq	r0, r0, r0
   11eac:	00000000 	andeq	r0, r0, r0
   11eb0:	00000000 	andeq	r0, r0, r0
   11eb4:	00000000 	andeq	r0, r0, r0
   11eb8:	00000000 	andeq	r0, r0, r0
   11ebc:	00000000 	andeq	r0, r0, r0
   11ec0:	00000000 	andeq	r0, r0, r0
   11ec4:	00000000 	andeq	r0, r0, r0
   11ec8:	00000000 	andeq	r0, r0, r0
   11ecc:	00000000 	andeq	r0, r0, r0
   11ed0:	00000000 	andeq	r0, r0, r0
   11ed4:	00000000 	andeq	r0, r0, r0
   11ed8:	00000000 	andeq	r0, r0, r0
   11edc:	00000000 	andeq	r0, r0, r0
   11ee0:	00000000 	andeq	r0, r0, r0
   11ee4:	00000000 	andeq	r0, r0, r0
   11ee8:	00000000 	andeq	r0, r0, r0
   11eec:	00000000 	andeq	r0, r0, r0
   11ef0:	00000000 	andeq	r0, r0, r0
   11ef4:	00000000 	andeq	r0, r0, r0
   11ef8:	00000000 	andeq	r0, r0, r0
   11efc:	00000000 	andeq	r0, r0, r0
   11f00:	00000000 	andeq	r0, r0, r0
   11f04:	00000000 	andeq	r0, r0, r0
   11f08:	00000000 	andeq	r0, r0, r0
   11f0c:	00000000 	andeq	r0, r0, r0
   11f10:	00000000 	andeq	r0, r0, r0
   11f14:	00000000 	andeq	r0, r0, r0
   11f18:	00000000 	andeq	r0, r0, r0
   11f1c:	00000000 	andeq	r0, r0, r0
   11f20:	00000000 	andeq	r0, r0, r0
   11f24:	00000000 	andeq	r0, r0, r0
   11f28:	00000000 	andeq	r0, r0, r0
   11f2c:	00000000 	andeq	r0, r0, r0
   11f30:	00000000 	andeq	r0, r0, r0
   11f34:	00000000 	andeq	r0, r0, r0
   11f38:	00000000 	andeq	r0, r0, r0
   11f3c:	00000000 	andeq	r0, r0, r0
   11f40:	00000000 	andeq	r0, r0, r0
   11f44:	00000000 	andeq	r0, r0, r0
   11f48:	00000000 	andeq	r0, r0, r0
   11f4c:	00000000 	andeq	r0, r0, r0
   11f50:	00000000 	andeq	r0, r0, r0
   11f54:	00000000 	andeq	r0, r0, r0
   11f58:	00000000 	andeq	r0, r0, r0
   11f5c:	00000000 	andeq	r0, r0, r0
   11f60:	00000000 	andeq	r0, r0, r0
   11f64:	00000000 	andeq	r0, r0, r0
   11f68:	00000000 	andeq	r0, r0, r0
   11f6c:	00000000 	andeq	r0, r0, r0
   11f70:	00000000 	andeq	r0, r0, r0
   11f74:	00000000 	andeq	r0, r0, r0
   11f78:	00000000 	andeq	r0, r0, r0
   11f7c:	00000000 	andeq	r0, r0, r0
   11f80:	00000000 	andeq	r0, r0, r0
   11f84:	00000000 	andeq	r0, r0, r0
   11f88:	00000000 	andeq	r0, r0, r0
   11f8c:	00000000 	andeq	r0, r0, r0
   11f90:	00000000 	andeq	r0, r0, r0
   11f94:	00000000 	andeq	r0, r0, r0
   11f98:	00000000 	andeq	r0, r0, r0
   11f9c:	00000000 	andeq	r0, r0, r0
   11fa0:	00000000 	andeq	r0, r0, r0
   11fa4:	00000000 	andeq	r0, r0, r0
   11fa8:	00000000 	andeq	r0, r0, r0
   11fac:	00000000 	andeq	r0, r0, r0
   11fb0:	00000000 	andeq	r0, r0, r0
   11fb4:	00000000 	andeq	r0, r0, r0
   11fb8:	00000000 	andeq	r0, r0, r0
   11fbc:	00000000 	andeq	r0, r0, r0
   11fc0:	00000000 	andeq	r0, r0, r0
   11fc4:	00000000 	andeq	r0, r0, r0
   11fc8:	00000000 	andeq	r0, r0, r0
   11fcc:	00000000 	andeq	r0, r0, r0
   11fd0:	00000000 	andeq	r0, r0, r0
   11fd4:	00000000 	andeq	r0, r0, r0
   11fd8:	00000000 	andeq	r0, r0, r0
   11fdc:	00000000 	andeq	r0, r0, r0
   11fe0:	00000000 	andeq	r0, r0, r0
   11fe4:	00000000 	andeq	r0, r0, r0
   11fe8:	00000000 	andeq	r0, r0, r0
   11fec:	00000000 	andeq	r0, r0, r0
   11ff0:	00000000 	andeq	r0, r0, r0
   11ff4:	00000000 	andeq	r0, r0, r0
   11ff8:	00000000 	andeq	r0, r0, r0
   11ffc:	00000000 	andeq	r0, r0, r0
   12000:	00000000 	andeq	r0, r0, r0
   12004:	00000000 	andeq	r0, r0, r0
   12008:	00000000 	andeq	r0, r0, r0
   1200c:	00000000 	andeq	r0, r0, r0
   12010:	00000000 	andeq	r0, r0, r0
   12014:	00000000 	andeq	r0, r0, r0
   12018:	00000000 	andeq	r0, r0, r0
   1201c:	00000000 	andeq	r0, r0, r0
   12020:	00000000 	andeq	r0, r0, r0
   12024:	00000000 	andeq	r0, r0, r0
   12028:	00000000 	andeq	r0, r0, r0
   1202c:	00000000 	andeq	r0, r0, r0
   12030:	00000000 	andeq	r0, r0, r0
   12034:	00000000 	andeq	r0, r0, r0
   12038:	00000000 	andeq	r0, r0, r0
   1203c:	00000000 	andeq	r0, r0, r0
   12040:	00000000 	andeq	r0, r0, r0
   12044:	00000000 	andeq	r0, r0, r0
   12048:	00000000 	andeq	r0, r0, r0
   1204c:	00000000 	andeq	r0, r0, r0
   12050:	00000000 	andeq	r0, r0, r0
   12054:	00000000 	andeq	r0, r0, r0
   12058:	00000000 	andeq	r0, r0, r0
   1205c:	00000000 	andeq	r0, r0, r0
   12060:	00000000 	andeq	r0, r0, r0
   12064:	00000000 	andeq	r0, r0, r0
   12068:	00000000 	andeq	r0, r0, r0
   1206c:	00000000 	andeq	r0, r0, r0
   12070:	00000000 	andeq	r0, r0, r0
   12074:	00000000 	andeq	r0, r0, r0
   12078:	00000000 	andeq	r0, r0, r0
   1207c:	00000000 	andeq	r0, r0, r0
   12080:	00000000 	andeq	r0, r0, r0
   12084:	00000000 	andeq	r0, r0, r0
   12088:	00000000 	andeq	r0, r0, r0
   1208c:	00000000 	andeq	r0, r0, r0
   12090:	00000000 	andeq	r0, r0, r0
   12094:	00000000 	andeq	r0, r0, r0
   12098:	00000000 	andeq	r0, r0, r0
   1209c:	00000000 	andeq	r0, r0, r0
   120a0:	00000000 	andeq	r0, r0, r0
   120a4:	00000000 	andeq	r0, r0, r0
   120a8:	00000000 	andeq	r0, r0, r0
   120ac:	00000000 	andeq	r0, r0, r0
   120b0:	00000000 	andeq	r0, r0, r0
   120b4:	00000000 	andeq	r0, r0, r0
   120b8:	00000000 	andeq	r0, r0, r0
   120bc:	00000000 	andeq	r0, r0, r0
   120c0:	00000000 	andeq	r0, r0, r0
   120c4:	00000000 	andeq	r0, r0, r0
   120c8:	00000000 	andeq	r0, r0, r0
   120cc:	00000000 	andeq	r0, r0, r0
   120d0:	00000000 	andeq	r0, r0, r0
   120d4:	00000000 	andeq	r0, r0, r0
   120d8:	00000000 	andeq	r0, r0, r0
   120dc:	00000000 	andeq	r0, r0, r0
   120e0:	00000000 	andeq	r0, r0, r0
   120e4:	00000000 	andeq	r0, r0, r0
   120e8:	00000000 	andeq	r0, r0, r0
   120ec:	00000000 	andeq	r0, r0, r0
   120f0:	00000000 	andeq	r0, r0, r0
   120f4:	00000000 	andeq	r0, r0, r0
   120f8:	00000000 	andeq	r0, r0, r0
   120fc:	00000000 	andeq	r0, r0, r0
   12100:	00000000 	andeq	r0, r0, r0
   12104:	00000000 	andeq	r0, r0, r0
   12108:	00000000 	andeq	r0, r0, r0
   1210c:	00000000 	andeq	r0, r0, r0
   12110:	00000000 	andeq	r0, r0, r0
   12114:	00000000 	andeq	r0, r0, r0
   12118:	00000000 	andeq	r0, r0, r0
   1211c:	00000000 	andeq	r0, r0, r0
   12120:	00000000 	andeq	r0, r0, r0
   12124:	00000000 	andeq	r0, r0, r0
   12128:	00000000 	andeq	r0, r0, r0
   1212c:	00000000 	andeq	r0, r0, r0
   12130:	00000000 	andeq	r0, r0, r0
   12134:	00000000 	andeq	r0, r0, r0
   12138:	00000000 	andeq	r0, r0, r0
   1213c:	00000000 	andeq	r0, r0, r0
   12140:	00000000 	andeq	r0, r0, r0
   12144:	00000000 	andeq	r0, r0, r0
   12148:	00000000 	andeq	r0, r0, r0
   1214c:	00000000 	andeq	r0, r0, r0
   12150:	00000000 	andeq	r0, r0, r0
   12154:	00000000 	andeq	r0, r0, r0
   12158:	00000000 	andeq	r0, r0, r0
   1215c:	00000000 	andeq	r0, r0, r0
   12160:	00000000 	andeq	r0, r0, r0
   12164:	00000000 	andeq	r0, r0, r0
   12168:	00000000 	andeq	r0, r0, r0
   1216c:	00000000 	andeq	r0, r0, r0
   12170:	00000000 	andeq	r0, r0, r0
   12174:	00000000 	andeq	r0, r0, r0
   12178:	00000000 	andeq	r0, r0, r0
   1217c:	00000000 	andeq	r0, r0, r0
   12180:	00000000 	andeq	r0, r0, r0
   12184:	00000000 	andeq	r0, r0, r0
   12188:	00000000 	andeq	r0, r0, r0
   1218c:	00000000 	andeq	r0, r0, r0
   12190:	00000000 	andeq	r0, r0, r0
   12194:	00000000 	andeq	r0, r0, r0
   12198:	00000000 	andeq	r0, r0, r0
   1219c:	00000000 	andeq	r0, r0, r0
   121a0:	00000000 	andeq	r0, r0, r0
   121a4:	00000000 	andeq	r0, r0, r0
   121a8:	00000000 	andeq	r0, r0, r0
   121ac:	00000000 	andeq	r0, r0, r0
   121b0:	00000000 	andeq	r0, r0, r0
   121b4:	00000000 	andeq	r0, r0, r0
   121b8:	00000000 	andeq	r0, r0, r0
   121bc:	00000000 	andeq	r0, r0, r0
   121c0:	00000000 	andeq	r0, r0, r0
   121c4:	00000000 	andeq	r0, r0, r0
   121c8:	00000000 	andeq	r0, r0, r0
   121cc:	00000000 	andeq	r0, r0, r0
   121d0:	00000000 	andeq	r0, r0, r0
   121d4:	00000000 	andeq	r0, r0, r0
   121d8:	00000000 	andeq	r0, r0, r0
   121dc:	00000000 	andeq	r0, r0, r0
   121e0:	00000000 	andeq	r0, r0, r0
   121e4:	00000000 	andeq	r0, r0, r0
   121e8:	00000000 	andeq	r0, r0, r0
   121ec:	00000000 	andeq	r0, r0, r0
   121f0:	00000000 	andeq	r0, r0, r0
   121f4:	00000000 	andeq	r0, r0, r0
   121f8:	00000000 	andeq	r0, r0, r0
   121fc:	00000000 	andeq	r0, r0, r0
   12200:	00000000 	andeq	r0, r0, r0
   12204:	00000000 	andeq	r0, r0, r0
   12208:	00000000 	andeq	r0, r0, r0
   1220c:	00000000 	andeq	r0, r0, r0
   12210:	00000000 	andeq	r0, r0, r0
   12214:	00000000 	andeq	r0, r0, r0
   12218:	00000000 	andeq	r0, r0, r0
   1221c:	00000000 	andeq	r0, r0, r0
   12220:	00000000 	andeq	r0, r0, r0
   12224:	00000000 	andeq	r0, r0, r0
   12228:	00000000 	andeq	r0, r0, r0
   1222c:	00000000 	andeq	r0, r0, r0
   12230:	00000000 	andeq	r0, r0, r0
   12234:	00000000 	andeq	r0, r0, r0
   12238:	00000000 	andeq	r0, r0, r0
   1223c:	00000000 	andeq	r0, r0, r0
   12240:	00000000 	andeq	r0, r0, r0
   12244:	00000000 	andeq	r0, r0, r0
   12248:	00000000 	andeq	r0, r0, r0
   1224c:	00000000 	andeq	r0, r0, r0
   12250:	00000000 	andeq	r0, r0, r0
   12254:	00000000 	andeq	r0, r0, r0
   12258:	00000000 	andeq	r0, r0, r0
   1225c:	00000000 	andeq	r0, r0, r0
   12260:	00000000 	andeq	r0, r0, r0
   12264:	00000000 	andeq	r0, r0, r0
   12268:	00000000 	andeq	r0, r0, r0
   1226c:	00000000 	andeq	r0, r0, r0
   12270:	00000000 	andeq	r0, r0, r0
   12274:	00000000 	andeq	r0, r0, r0
   12278:	00000000 	andeq	r0, r0, r0
   1227c:	00000000 	andeq	r0, r0, r0
   12280:	00000000 	andeq	r0, r0, r0
   12284:	00000000 	andeq	r0, r0, r0
   12288:	00000000 	andeq	r0, r0, r0
   1228c:	00000000 	andeq	r0, r0, r0
   12290:	00000000 	andeq	r0, r0, r0
   12294:	00000000 	andeq	r0, r0, r0
   12298:	00000000 	andeq	r0, r0, r0
   1229c:	00000000 	andeq	r0, r0, r0
   122a0:	00000000 	andeq	r0, r0, r0
   122a4:	00000000 	andeq	r0, r0, r0
   122a8:	00000000 	andeq	r0, r0, r0
   122ac:	00000000 	andeq	r0, r0, r0
   122b0:	00000000 	andeq	r0, r0, r0
   122b4:	00000000 	andeq	r0, r0, r0
   122b8:	00000000 	andeq	r0, r0, r0
   122bc:	00000000 	andeq	r0, r0, r0
   122c0:	00000000 	andeq	r0, r0, r0
   122c4:	00000000 	andeq	r0, r0, r0
   122c8:	00000000 	andeq	r0, r0, r0
   122cc:	00000000 	andeq	r0, r0, r0
   122d0:	00000000 	andeq	r0, r0, r0
   122d4:	00000000 	andeq	r0, r0, r0
   122d8:	00000000 	andeq	r0, r0, r0
   122dc:	00000000 	andeq	r0, r0, r0
   122e0:	00000000 	andeq	r0, r0, r0
   122e4:	00000000 	andeq	r0, r0, r0
   122e8:	00000000 	andeq	r0, r0, r0
   122ec:	00000000 	andeq	r0, r0, r0
   122f0:	00000000 	andeq	r0, r0, r0
   122f4:	00000000 	andeq	r0, r0, r0
   122f8:	00000000 	andeq	r0, r0, r0
   122fc:	00000000 	andeq	r0, r0, r0
   12300:	00000000 	andeq	r0, r0, r0
   12304:	00000000 	andeq	r0, r0, r0
   12308:	00000000 	andeq	r0, r0, r0
   1230c:	00000000 	andeq	r0, r0, r0
   12310:	00000000 	andeq	r0, r0, r0
   12314:	00000000 	andeq	r0, r0, r0
   12318:	00000000 	andeq	r0, r0, r0
   1231c:	00000000 	andeq	r0, r0, r0
   12320:	00000000 	andeq	r0, r0, r0
   12324:	00000000 	andeq	r0, r0, r0
   12328:	00000000 	andeq	r0, r0, r0
   1232c:	00000000 	andeq	r0, r0, r0
   12330:	00000000 	andeq	r0, r0, r0
   12334:	00000000 	andeq	r0, r0, r0
   12338:	00000000 	andeq	r0, r0, r0
   1233c:	00000000 	andeq	r0, r0, r0
   12340:	00000000 	andeq	r0, r0, r0
   12344:	00000000 	andeq	r0, r0, r0
   12348:	00000000 	andeq	r0, r0, r0
   1234c:	00000000 	andeq	r0, r0, r0
   12350:	00000000 	andeq	r0, r0, r0
   12354:	00000000 	andeq	r0, r0, r0
   12358:	00000000 	andeq	r0, r0, r0
   1235c:	00000000 	andeq	r0, r0, r0
   12360:	00000000 	andeq	r0, r0, r0
   12364:	00000000 	andeq	r0, r0, r0
   12368:	00000000 	andeq	r0, r0, r0
   1236c:	00000000 	andeq	r0, r0, r0
   12370:	00000000 	andeq	r0, r0, r0
   12374:	00000000 	andeq	r0, r0, r0
   12378:	00000000 	andeq	r0, r0, r0
   1237c:	00000000 	andeq	r0, r0, r0
   12380:	00000000 	andeq	r0, r0, r0
   12384:	00000000 	andeq	r0, r0, r0
   12388:	00000000 	andeq	r0, r0, r0
   1238c:	00000000 	andeq	r0, r0, r0
   12390:	00000000 	andeq	r0, r0, r0
   12394:	00000000 	andeq	r0, r0, r0
   12398:	00000000 	andeq	r0, r0, r0
   1239c:	00000000 	andeq	r0, r0, r0
   123a0:	00000000 	andeq	r0, r0, r0
   123a4:	00000000 	andeq	r0, r0, r0
   123a8:	00000000 	andeq	r0, r0, r0
   123ac:	00000000 	andeq	r0, r0, r0
   123b0:	00000000 	andeq	r0, r0, r0
   123b4:	00000000 	andeq	r0, r0, r0
   123b8:	00000000 	andeq	r0, r0, r0
   123bc:	00000000 	andeq	r0, r0, r0
   123c0:	00000000 	andeq	r0, r0, r0
   123c4:	00000000 	andeq	r0, r0, r0
   123c8:	00000000 	andeq	r0, r0, r0
   123cc:	00000000 	andeq	r0, r0, r0
   123d0:	00000000 	andeq	r0, r0, r0
   123d4:	00000000 	andeq	r0, r0, r0
   123d8:	00000000 	andeq	r0, r0, r0
   123dc:	00000000 	andeq	r0, r0, r0
   123e0:	00000000 	andeq	r0, r0, r0
   123e4:	00000000 	andeq	r0, r0, r0
   123e8:	00000000 	andeq	r0, r0, r0
   123ec:	00000000 	andeq	r0, r0, r0
   123f0:	00000000 	andeq	r0, r0, r0
   123f4:	00000000 	andeq	r0, r0, r0
   123f8:	00000000 	andeq	r0, r0, r0
   123fc:	00000000 	andeq	r0, r0, r0
   12400:	00000000 	andeq	r0, r0, r0
   12404:	00000000 	andeq	r0, r0, r0
   12408:	00000000 	andeq	r0, r0, r0
   1240c:	00000000 	andeq	r0, r0, r0
   12410:	00000000 	andeq	r0, r0, r0
   12414:	00000000 	andeq	r0, r0, r0
   12418:	00000000 	andeq	r0, r0, r0
   1241c:	00000000 	andeq	r0, r0, r0
   12420:	00000000 	andeq	r0, r0, r0
   12424:	00000000 	andeq	r0, r0, r0
   12428:	00000000 	andeq	r0, r0, r0
   1242c:	00000000 	andeq	r0, r0, r0
   12430:	00000000 	andeq	r0, r0, r0
   12434:	00000000 	andeq	r0, r0, r0
   12438:	00000000 	andeq	r0, r0, r0
   1243c:	00000000 	andeq	r0, r0, r0
   12440:	00000000 	andeq	r0, r0, r0
   12444:	00000000 	andeq	r0, r0, r0
   12448:	00000000 	andeq	r0, r0, r0
   1244c:	00000000 	andeq	r0, r0, r0
   12450:	00000000 	andeq	r0, r0, r0
   12454:	00000000 	andeq	r0, r0, r0
   12458:	00000000 	andeq	r0, r0, r0
   1245c:	00000000 	andeq	r0, r0, r0
   12460:	00000000 	andeq	r0, r0, r0
   12464:	00000000 	andeq	r0, r0, r0
   12468:	00000000 	andeq	r0, r0, r0
   1246c:	00000000 	andeq	r0, r0, r0
   12470:	00000000 	andeq	r0, r0, r0
   12474:	00000000 	andeq	r0, r0, r0
   12478:	00000000 	andeq	r0, r0, r0
   1247c:	00000000 	andeq	r0, r0, r0
   12480:	00000000 	andeq	r0, r0, r0
   12484:	00000000 	andeq	r0, r0, r0
   12488:	00000000 	andeq	r0, r0, r0
   1248c:	00000000 	andeq	r0, r0, r0
   12490:	00000000 	andeq	r0, r0, r0
   12494:	00000000 	andeq	r0, r0, r0
   12498:	00000000 	andeq	r0, r0, r0
   1249c:	00000000 	andeq	r0, r0, r0
   124a0:	00000000 	andeq	r0, r0, r0
   124a4:	00000000 	andeq	r0, r0, r0
   124a8:	00000000 	andeq	r0, r0, r0
   124ac:	00000000 	andeq	r0, r0, r0
   124b0:	00000000 	andeq	r0, r0, r0
   124b4:	00000000 	andeq	r0, r0, r0
   124b8:	00000000 	andeq	r0, r0, r0
   124bc:	00000000 	andeq	r0, r0, r0
   124c0:	00000000 	andeq	r0, r0, r0
   124c4:	00000000 	andeq	r0, r0, r0
   124c8:	00000000 	andeq	r0, r0, r0
   124cc:	00000000 	andeq	r0, r0, r0
   124d0:	00000000 	andeq	r0, r0, r0
   124d4:	00000000 	andeq	r0, r0, r0
   124d8:	00000000 	andeq	r0, r0, r0
   124dc:	00000000 	andeq	r0, r0, r0
   124e0:	00000000 	andeq	r0, r0, r0
   124e4:	00000000 	andeq	r0, r0, r0
   124e8:	00000000 	andeq	r0, r0, r0
   124ec:	00000000 	andeq	r0, r0, r0
   124f0:	00000000 	andeq	r0, r0, r0
   124f4:	00000000 	andeq	r0, r0, r0
   124f8:	00000000 	andeq	r0, r0, r0
   124fc:	00000000 	andeq	r0, r0, r0
   12500:	00000000 	andeq	r0, r0, r0
   12504:	00000000 	andeq	r0, r0, r0
   12508:	00000000 	andeq	r0, r0, r0
   1250c:	00000000 	andeq	r0, r0, r0
   12510:	00000000 	andeq	r0, r0, r0
   12514:	00000000 	andeq	r0, r0, r0
   12518:	00000000 	andeq	r0, r0, r0
   1251c:	00000000 	andeq	r0, r0, r0
   12520:	00000000 	andeq	r0, r0, r0
   12524:	00000000 	andeq	r0, r0, r0
   12528:	00000000 	andeq	r0, r0, r0
   1252c:	00000000 	andeq	r0, r0, r0
   12530:	00000000 	andeq	r0, r0, r0
   12534:	00000000 	andeq	r0, r0, r0
   12538:	00000000 	andeq	r0, r0, r0
   1253c:	00000000 	andeq	r0, r0, r0
   12540:	00000000 	andeq	r0, r0, r0
   12544:	00000000 	andeq	r0, r0, r0
   12548:	00000000 	andeq	r0, r0, r0
   1254c:	00000000 	andeq	r0, r0, r0
   12550:	00000000 	andeq	r0, r0, r0
   12554:	00000000 	andeq	r0, r0, r0
   12558:	00000000 	andeq	r0, r0, r0
   1255c:	00000000 	andeq	r0, r0, r0
   12560:	00000000 	andeq	r0, r0, r0
   12564:	00000000 	andeq	r0, r0, r0
   12568:	00000000 	andeq	r0, r0, r0
   1256c:	00000000 	andeq	r0, r0, r0
   12570:	00000000 	andeq	r0, r0, r0
   12574:	00000000 	andeq	r0, r0, r0
   12578:	00000000 	andeq	r0, r0, r0
   1257c:	00000000 	andeq	r0, r0, r0
   12580:	00000000 	andeq	r0, r0, r0
   12584:	00000000 	andeq	r0, r0, r0
   12588:	00000000 	andeq	r0, r0, r0
   1258c:	00000000 	andeq	r0, r0, r0
   12590:	00000000 	andeq	r0, r0, r0
   12594:	00000000 	andeq	r0, r0, r0
   12598:	00000000 	andeq	r0, r0, r0
   1259c:	00000000 	andeq	r0, r0, r0
   125a0:	00000000 	andeq	r0, r0, r0
   125a4:	00000000 	andeq	r0, r0, r0
   125a8:	00000000 	andeq	r0, r0, r0
   125ac:	00000000 	andeq	r0, r0, r0
   125b0:	00000000 	andeq	r0, r0, r0
   125b4:	00000000 	andeq	r0, r0, r0
   125b8:	00000000 	andeq	r0, r0, r0
   125bc:	00000000 	andeq	r0, r0, r0
   125c0:	00000000 	andeq	r0, r0, r0
   125c4:	00000000 	andeq	r0, r0, r0
   125c8:	00000000 	andeq	r0, r0, r0
   125cc:	00000000 	andeq	r0, r0, r0
   125d0:	00000000 	andeq	r0, r0, r0
   125d4:	00000000 	andeq	r0, r0, r0
   125d8:	00000000 	andeq	r0, r0, r0
   125dc:	00000000 	andeq	r0, r0, r0
   125e0:	00000000 	andeq	r0, r0, r0
   125e4:	00000000 	andeq	r0, r0, r0
   125e8:	00000000 	andeq	r0, r0, r0
   125ec:	00000000 	andeq	r0, r0, r0
   125f0:	00000000 	andeq	r0, r0, r0
   125f4:	00000000 	andeq	r0, r0, r0
   125f8:	00000000 	andeq	r0, r0, r0
   125fc:	00000000 	andeq	r0, r0, r0
   12600:	00000000 	andeq	r0, r0, r0
   12604:	00000000 	andeq	r0, r0, r0
   12608:	00000000 	andeq	r0, r0, r0
   1260c:	00000000 	andeq	r0, r0, r0
   12610:	00000000 	andeq	r0, r0, r0
   12614:	00000000 	andeq	r0, r0, r0
   12618:	00000000 	andeq	r0, r0, r0
   1261c:	00000000 	andeq	r0, r0, r0
   12620:	00000000 	andeq	r0, r0, r0
   12624:	00000000 	andeq	r0, r0, r0
   12628:	00000000 	andeq	r0, r0, r0
   1262c:	00000000 	andeq	r0, r0, r0
   12630:	00000000 	andeq	r0, r0, r0
   12634:	00000000 	andeq	r0, r0, r0
   12638:	00000000 	andeq	r0, r0, r0
   1263c:	00000000 	andeq	r0, r0, r0
   12640:	00000000 	andeq	r0, r0, r0
   12644:	00000000 	andeq	r0, r0, r0
   12648:	00000000 	andeq	r0, r0, r0
   1264c:	00000000 	andeq	r0, r0, r0
   12650:	00000000 	andeq	r0, r0, r0
   12654:	00000000 	andeq	r0, r0, r0
   12658:	00000000 	andeq	r0, r0, r0
   1265c:	00000000 	andeq	r0, r0, r0
   12660:	00000000 	andeq	r0, r0, r0
   12664:	00000000 	andeq	r0, r0, r0
   12668:	00000000 	andeq	r0, r0, r0
   1266c:	00000000 	andeq	r0, r0, r0
   12670:	00000000 	andeq	r0, r0, r0
   12674:	00000000 	andeq	r0, r0, r0
   12678:	00000000 	andeq	r0, r0, r0
   1267c:	00000000 	andeq	r0, r0, r0
   12680:	00000000 	andeq	r0, r0, r0
   12684:	00000000 	andeq	r0, r0, r0
   12688:	00000000 	andeq	r0, r0, r0
   1268c:	00000000 	andeq	r0, r0, r0
   12690:	00000000 	andeq	r0, r0, r0
   12694:	00000000 	andeq	r0, r0, r0
   12698:	00000000 	andeq	r0, r0, r0
   1269c:	00000000 	andeq	r0, r0, r0
   126a0:	00000000 	andeq	r0, r0, r0
   126a4:	00000000 	andeq	r0, r0, r0
   126a8:	00000000 	andeq	r0, r0, r0
   126ac:	00000000 	andeq	r0, r0, r0
   126b0:	00000000 	andeq	r0, r0, r0
   126b4:	00000000 	andeq	r0, r0, r0
   126b8:	00000000 	andeq	r0, r0, r0
   126bc:	00000000 	andeq	r0, r0, r0
   126c0:	00000000 	andeq	r0, r0, r0
   126c4:	00000000 	andeq	r0, r0, r0
   126c8:	00000000 	andeq	r0, r0, r0
   126cc:	00000000 	andeq	r0, r0, r0
   126d0:	00000000 	andeq	r0, r0, r0
   126d4:	00000000 	andeq	r0, r0, r0
   126d8:	00000000 	andeq	r0, r0, r0
   126dc:	00000000 	andeq	r0, r0, r0
   126e0:	00000000 	andeq	r0, r0, r0
   126e4:	00000000 	andeq	r0, r0, r0
   126e8:	00000000 	andeq	r0, r0, r0
   126ec:	00000000 	andeq	r0, r0, r0
   126f0:	00000000 	andeq	r0, r0, r0
   126f4:	00000000 	andeq	r0, r0, r0
   126f8:	00000000 	andeq	r0, r0, r0
   126fc:	00000000 	andeq	r0, r0, r0
   12700:	00000000 	andeq	r0, r0, r0
   12704:	00000000 	andeq	r0, r0, r0
   12708:	00000000 	andeq	r0, r0, r0
   1270c:	00000000 	andeq	r0, r0, r0
   12710:	00000000 	andeq	r0, r0, r0
   12714:	00000000 	andeq	r0, r0, r0
   12718:	00000000 	andeq	r0, r0, r0
   1271c:	00000000 	andeq	r0, r0, r0
   12720:	00000000 	andeq	r0, r0, r0
   12724:	00000000 	andeq	r0, r0, r0
   12728:	00000000 	andeq	r0, r0, r0
   1272c:	00000000 	andeq	r0, r0, r0
   12730:	00000000 	andeq	r0, r0, r0
   12734:	00000000 	andeq	r0, r0, r0
   12738:	00000000 	andeq	r0, r0, r0
   1273c:	00000000 	andeq	r0, r0, r0
   12740:	00000000 	andeq	r0, r0, r0
   12744:	00000000 	andeq	r0, r0, r0
   12748:	00000000 	andeq	r0, r0, r0
   1274c:	00000000 	andeq	r0, r0, r0
   12750:	00000000 	andeq	r0, r0, r0
   12754:	00000000 	andeq	r0, r0, r0
   12758:	00000000 	andeq	r0, r0, r0
   1275c:	00000000 	andeq	r0, r0, r0
   12760:	00000000 	andeq	r0, r0, r0
   12764:	00000000 	andeq	r0, r0, r0
   12768:	00000000 	andeq	r0, r0, r0
   1276c:	00000000 	andeq	r0, r0, r0
   12770:	00000000 	andeq	r0, r0, r0
   12774:	00000000 	andeq	r0, r0, r0
   12778:	00000000 	andeq	r0, r0, r0
   1277c:	00000000 	andeq	r0, r0, r0
   12780:	00000000 	andeq	r0, r0, r0
   12784:	00000000 	andeq	r0, r0, r0
   12788:	00000000 	andeq	r0, r0, r0
   1278c:	00000000 	andeq	r0, r0, r0
   12790:	00000000 	andeq	r0, r0, r0
   12794:	00000000 	andeq	r0, r0, r0
   12798:	00000000 	andeq	r0, r0, r0
   1279c:	00000000 	andeq	r0, r0, r0
   127a0:	00000000 	andeq	r0, r0, r0
   127a4:	00000000 	andeq	r0, r0, r0
   127a8:	00000000 	andeq	r0, r0, r0
   127ac:	00000000 	andeq	r0, r0, r0
   127b0:	00000000 	andeq	r0, r0, r0
   127b4:	00000000 	andeq	r0, r0, r0
   127b8:	00000000 	andeq	r0, r0, r0
   127bc:	00000000 	andeq	r0, r0, r0
   127c0:	00000000 	andeq	r0, r0, r0
   127c4:	00000000 	andeq	r0, r0, r0
   127c8:	00000000 	andeq	r0, r0, r0
   127cc:	00000000 	andeq	r0, r0, r0
   127d0:	00000000 	andeq	r0, r0, r0
   127d4:	00000000 	andeq	r0, r0, r0
   127d8:	00000000 	andeq	r0, r0, r0
   127dc:	00000000 	andeq	r0, r0, r0
   127e0:	00000000 	andeq	r0, r0, r0
   127e4:	00000000 	andeq	r0, r0, r0
   127e8:	00000000 	andeq	r0, r0, r0
   127ec:	00000000 	andeq	r0, r0, r0
   127f0:	00000000 	andeq	r0, r0, r0
   127f4:	00000000 	andeq	r0, r0, r0
   127f8:	00000000 	andeq	r0, r0, r0
   127fc:	00000000 	andeq	r0, r0, r0
   12800:	00000000 	andeq	r0, r0, r0
   12804:	00000000 	andeq	r0, r0, r0
   12808:	00000000 	andeq	r0, r0, r0
   1280c:	00000000 	andeq	r0, r0, r0
   12810:	00000000 	andeq	r0, r0, r0
   12814:	00000000 	andeq	r0, r0, r0
   12818:	00000000 	andeq	r0, r0, r0
   1281c:	00000000 	andeq	r0, r0, r0
   12820:	00000000 	andeq	r0, r0, r0
   12824:	00000000 	andeq	r0, r0, r0
   12828:	00000000 	andeq	r0, r0, r0
   1282c:	00000000 	andeq	r0, r0, r0
   12830:	00000000 	andeq	r0, r0, r0
   12834:	00000000 	andeq	r0, r0, r0
   12838:	00000000 	andeq	r0, r0, r0
   1283c:	00000000 	andeq	r0, r0, r0
   12840:	00000000 	andeq	r0, r0, r0
   12844:	00000000 	andeq	r0, r0, r0
   12848:	00000000 	andeq	r0, r0, r0
   1284c:	00000000 	andeq	r0, r0, r0
   12850:	00000000 	andeq	r0, r0, r0
   12854:	00000000 	andeq	r0, r0, r0
   12858:	00000000 	andeq	r0, r0, r0
   1285c:	00000000 	andeq	r0, r0, r0
   12860:	00000000 	andeq	r0, r0, r0
   12864:	00000000 	andeq	r0, r0, r0
   12868:	00000000 	andeq	r0, r0, r0
   1286c:	00000000 	andeq	r0, r0, r0
   12870:	00000000 	andeq	r0, r0, r0
   12874:	00000000 	andeq	r0, r0, r0
   12878:	00000000 	andeq	r0, r0, r0
   1287c:	00000000 	andeq	r0, r0, r0
   12880:	00000000 	andeq	r0, r0, r0
   12884:	00000000 	andeq	r0, r0, r0
   12888:	00000000 	andeq	r0, r0, r0
   1288c:	00000000 	andeq	r0, r0, r0
   12890:	00000000 	andeq	r0, r0, r0
   12894:	00000000 	andeq	r0, r0, r0
   12898:	00000000 	andeq	r0, r0, r0
   1289c:	00000000 	andeq	r0, r0, r0
   128a0:	00000000 	andeq	r0, r0, r0
   128a4:	00000000 	andeq	r0, r0, r0
   128a8:	00000000 	andeq	r0, r0, r0
   128ac:	00000000 	andeq	r0, r0, r0
   128b0:	00000000 	andeq	r0, r0, r0
   128b4:	00000000 	andeq	r0, r0, r0
   128b8:	00000000 	andeq	r0, r0, r0
   128bc:	00000000 	andeq	r0, r0, r0
   128c0:	00000000 	andeq	r0, r0, r0
   128c4:	00000000 	andeq	r0, r0, r0
   128c8:	00000000 	andeq	r0, r0, r0
   128cc:	00000000 	andeq	r0, r0, r0
   128d0:	00000000 	andeq	r0, r0, r0
   128d4:	00000000 	andeq	r0, r0, r0
   128d8:	00000000 	andeq	r0, r0, r0
   128dc:	00000000 	andeq	r0, r0, r0
   128e0:	00000000 	andeq	r0, r0, r0
   128e4:	00000000 	andeq	r0, r0, r0
   128e8:	00000000 	andeq	r0, r0, r0
   128ec:	00000000 	andeq	r0, r0, r0
   128f0:	00000000 	andeq	r0, r0, r0
   128f4:	00000000 	andeq	r0, r0, r0
   128f8:	00000000 	andeq	r0, r0, r0
   128fc:	00000000 	andeq	r0, r0, r0
   12900:	00000000 	andeq	r0, r0, r0
   12904:	00000000 	andeq	r0, r0, r0
   12908:	00000000 	andeq	r0, r0, r0
   1290c:	00000000 	andeq	r0, r0, r0
   12910:	00000000 	andeq	r0, r0, r0
   12914:	00000000 	andeq	r0, r0, r0
   12918:	00000000 	andeq	r0, r0, r0
   1291c:	00000000 	andeq	r0, r0, r0
   12920:	00000000 	andeq	r0, r0, r0
   12924:	00000000 	andeq	r0, r0, r0
   12928:	00000000 	andeq	r0, r0, r0
   1292c:	00000000 	andeq	r0, r0, r0
   12930:	00000000 	andeq	r0, r0, r0
   12934:	00000000 	andeq	r0, r0, r0
   12938:	00000000 	andeq	r0, r0, r0
   1293c:	00000000 	andeq	r0, r0, r0
   12940:	00000000 	andeq	r0, r0, r0
   12944:	00000000 	andeq	r0, r0, r0
   12948:	00000000 	andeq	r0, r0, r0
   1294c:	00000000 	andeq	r0, r0, r0
   12950:	00000000 	andeq	r0, r0, r0
   12954:	00000000 	andeq	r0, r0, r0
   12958:	00000000 	andeq	r0, r0, r0
   1295c:	00000000 	andeq	r0, r0, r0
   12960:	00000000 	andeq	r0, r0, r0
   12964:	00000000 	andeq	r0, r0, r0
   12968:	00000000 	andeq	r0, r0, r0
   1296c:	00000000 	andeq	r0, r0, r0
   12970:	00000000 	andeq	r0, r0, r0
   12974:	00000000 	andeq	r0, r0, r0
   12978:	00000000 	andeq	r0, r0, r0
   1297c:	00000000 	andeq	r0, r0, r0
   12980:	00000000 	andeq	r0, r0, r0
   12984:	00000000 	andeq	r0, r0, r0
   12988:	00000000 	andeq	r0, r0, r0
   1298c:	00000000 	andeq	r0, r0, r0
   12990:	00000000 	andeq	r0, r0, r0
   12994:	00000000 	andeq	r0, r0, r0
   12998:	00000000 	andeq	r0, r0, r0
   1299c:	00000000 	andeq	r0, r0, r0
   129a0:	00000000 	andeq	r0, r0, r0
   129a4:	00000000 	andeq	r0, r0, r0
   129a8:	00000000 	andeq	r0, r0, r0
   129ac:	00000000 	andeq	r0, r0, r0
   129b0:	00000000 	andeq	r0, r0, r0
   129b4:	00000000 	andeq	r0, r0, r0
   129b8:	00000000 	andeq	r0, r0, r0
   129bc:	00000000 	andeq	r0, r0, r0
   129c0:	00000000 	andeq	r0, r0, r0
   129c4:	00000000 	andeq	r0, r0, r0
   129c8:	00000000 	andeq	r0, r0, r0
   129cc:	00000000 	andeq	r0, r0, r0
   129d0:	00000000 	andeq	r0, r0, r0
   129d4:	00000000 	andeq	r0, r0, r0
   129d8:	00000000 	andeq	r0, r0, r0
   129dc:	00000000 	andeq	r0, r0, r0
   129e0:	00000000 	andeq	r0, r0, r0
   129e4:	00000000 	andeq	r0, r0, r0
   129e8:	00000000 	andeq	r0, r0, r0
   129ec:	00000000 	andeq	r0, r0, r0
   129f0:	00000000 	andeq	r0, r0, r0
   129f4:	00000000 	andeq	r0, r0, r0
   129f8:	00000000 	andeq	r0, r0, r0
   129fc:	00000000 	andeq	r0, r0, r0
   12a00:	00000000 	andeq	r0, r0, r0
   12a04:	00000000 	andeq	r0, r0, r0
   12a08:	00000000 	andeq	r0, r0, r0
   12a0c:	00000000 	andeq	r0, r0, r0
   12a10:	00000000 	andeq	r0, r0, r0
   12a14:	00000000 	andeq	r0, r0, r0
   12a18:	00000000 	andeq	r0, r0, r0
   12a1c:	00000000 	andeq	r0, r0, r0
   12a20:	00000000 	andeq	r0, r0, r0
   12a24:	00000000 	andeq	r0, r0, r0
   12a28:	00000000 	andeq	r0, r0, r0
   12a2c:	00000000 	andeq	r0, r0, r0
   12a30:	00000000 	andeq	r0, r0, r0
   12a34:	00000000 	andeq	r0, r0, r0
   12a38:	00000000 	andeq	r0, r0, r0
   12a3c:	00000000 	andeq	r0, r0, r0
   12a40:	00000000 	andeq	r0, r0, r0
   12a44:	00000000 	andeq	r0, r0, r0
   12a48:	00000000 	andeq	r0, r0, r0
   12a4c:	00000000 	andeq	r0, r0, r0
   12a50:	00000000 	andeq	r0, r0, r0
   12a54:	00000000 	andeq	r0, r0, r0
   12a58:	00000000 	andeq	r0, r0, r0
   12a5c:	00000000 	andeq	r0, r0, r0
   12a60:	00000000 	andeq	r0, r0, r0
   12a64:	00000000 	andeq	r0, r0, r0
   12a68:	00000000 	andeq	r0, r0, r0
   12a6c:	00000000 	andeq	r0, r0, r0
   12a70:	00000000 	andeq	r0, r0, r0
   12a74:	00000000 	andeq	r0, r0, r0
   12a78:	00000000 	andeq	r0, r0, r0
   12a7c:	00000000 	andeq	r0, r0, r0
   12a80:	00000000 	andeq	r0, r0, r0
   12a84:	00000000 	andeq	r0, r0, r0
   12a88:	00000000 	andeq	r0, r0, r0
   12a8c:	00000000 	andeq	r0, r0, r0
   12a90:	00000000 	andeq	r0, r0, r0
   12a94:	00000000 	andeq	r0, r0, r0
   12a98:	00000000 	andeq	r0, r0, r0
   12a9c:	00000000 	andeq	r0, r0, r0
   12aa0:	00000000 	andeq	r0, r0, r0
   12aa4:	00000000 	andeq	r0, r0, r0
   12aa8:	00000000 	andeq	r0, r0, r0
   12aac:	00000000 	andeq	r0, r0, r0
   12ab0:	00000000 	andeq	r0, r0, r0
   12ab4:	00000000 	andeq	r0, r0, r0
   12ab8:	00000000 	andeq	r0, r0, r0
   12abc:	00000000 	andeq	r0, r0, r0
   12ac0:	00000000 	andeq	r0, r0, r0
   12ac4:	00000000 	andeq	r0, r0, r0
   12ac8:	00000000 	andeq	r0, r0, r0
   12acc:	00000000 	andeq	r0, r0, r0
   12ad0:	00000000 	andeq	r0, r0, r0
   12ad4:	00000000 	andeq	r0, r0, r0
   12ad8:	00000000 	andeq	r0, r0, r0
   12adc:	00000000 	andeq	r0, r0, r0
   12ae0:	00000000 	andeq	r0, r0, r0
   12ae4:	00000000 	andeq	r0, r0, r0
   12ae8:	00000000 	andeq	r0, r0, r0
   12aec:	00000000 	andeq	r0, r0, r0
   12af0:	00000000 	andeq	r0, r0, r0
   12af4:	00000000 	andeq	r0, r0, r0
   12af8:	00000000 	andeq	r0, r0, r0
   12afc:	00000000 	andeq	r0, r0, r0
   12b00:	00000000 	andeq	r0, r0, r0
   12b04:	00000000 	andeq	r0, r0, r0
   12b08:	00000000 	andeq	r0, r0, r0
   12b0c:	00000000 	andeq	r0, r0, r0
   12b10:	00000000 	andeq	r0, r0, r0
   12b14:	00000000 	andeq	r0, r0, r0
   12b18:	00000000 	andeq	r0, r0, r0
   12b1c:	00000000 	andeq	r0, r0, r0
   12b20:	00000000 	andeq	r0, r0, r0
   12b24:	00000000 	andeq	r0, r0, r0
   12b28:	00000000 	andeq	r0, r0, r0
   12b2c:	00000000 	andeq	r0, r0, r0
   12b30:	00000000 	andeq	r0, r0, r0
   12b34:	00000000 	andeq	r0, r0, r0
   12b38:	00000000 	andeq	r0, r0, r0
   12b3c:	00000000 	andeq	r0, r0, r0
   12b40:	00000000 	andeq	r0, r0, r0
   12b44:	00000000 	andeq	r0, r0, r0
   12b48:	00000000 	andeq	r0, r0, r0
   12b4c:	00000000 	andeq	r0, r0, r0
   12b50:	00000000 	andeq	r0, r0, r0
   12b54:	00000000 	andeq	r0, r0, r0
   12b58:	00000000 	andeq	r0, r0, r0
   12b5c:	00000000 	andeq	r0, r0, r0
   12b60:	00000000 	andeq	r0, r0, r0
   12b64:	00000000 	andeq	r0, r0, r0
   12b68:	00000000 	andeq	r0, r0, r0
   12b6c:	00000000 	andeq	r0, r0, r0
   12b70:	00000000 	andeq	r0, r0, r0
   12b74:	00000000 	andeq	r0, r0, r0
   12b78:	00000000 	andeq	r0, r0, r0
   12b7c:	00000000 	andeq	r0, r0, r0
   12b80:	00000000 	andeq	r0, r0, r0
   12b84:	00000000 	andeq	r0, r0, r0
   12b88:	00000000 	andeq	r0, r0, r0
   12b8c:	00000000 	andeq	r0, r0, r0
   12b90:	00000000 	andeq	r0, r0, r0
   12b94:	00000000 	andeq	r0, r0, r0
   12b98:	00000000 	andeq	r0, r0, r0
   12b9c:	00000000 	andeq	r0, r0, r0
   12ba0:	00000000 	andeq	r0, r0, r0
   12ba4:	00000000 	andeq	r0, r0, r0
   12ba8:	00000000 	andeq	r0, r0, r0
   12bac:	00000000 	andeq	r0, r0, r0
   12bb0:	00000000 	andeq	r0, r0, r0
   12bb4:	00000000 	andeq	r0, r0, r0
   12bb8:	00000000 	andeq	r0, r0, r0
   12bbc:	00000000 	andeq	r0, r0, r0
   12bc0:	00000000 	andeq	r0, r0, r0
   12bc4:	00000000 	andeq	r0, r0, r0
   12bc8:	00000000 	andeq	r0, r0, r0
   12bcc:	00000000 	andeq	r0, r0, r0
   12bd0:	00000000 	andeq	r0, r0, r0
   12bd4:	00000000 	andeq	r0, r0, r0
   12bd8:	00000000 	andeq	r0, r0, r0
   12bdc:	00000000 	andeq	r0, r0, r0
   12be0:	00000000 	andeq	r0, r0, r0
   12be4:	00000000 	andeq	r0, r0, r0
   12be8:	00000000 	andeq	r0, r0, r0
   12bec:	00000000 	andeq	r0, r0, r0
   12bf0:	00000000 	andeq	r0, r0, r0
   12bf4:	00000000 	andeq	r0, r0, r0
   12bf8:	00000000 	andeq	r0, r0, r0
   12bfc:	00000000 	andeq	r0, r0, r0
   12c00:	00000000 	andeq	r0, r0, r0
   12c04:	00000000 	andeq	r0, r0, r0
   12c08:	00000000 	andeq	r0, r0, r0
   12c0c:	00000000 	andeq	r0, r0, r0
   12c10:	00000000 	andeq	r0, r0, r0
   12c14:	00000000 	andeq	r0, r0, r0
   12c18:	00000000 	andeq	r0, r0, r0
   12c1c:	00000000 	andeq	r0, r0, r0
   12c20:	00000000 	andeq	r0, r0, r0
   12c24:	00000000 	andeq	r0, r0, r0
   12c28:	00000000 	andeq	r0, r0, r0
   12c2c:	00000000 	andeq	r0, r0, r0
   12c30:	00000000 	andeq	r0, r0, r0
   12c34:	00000000 	andeq	r0, r0, r0
   12c38:	00000000 	andeq	r0, r0, r0
   12c3c:	00000000 	andeq	r0, r0, r0
   12c40:	00000000 	andeq	r0, r0, r0
   12c44:	00000000 	andeq	r0, r0, r0
   12c48:	00000000 	andeq	r0, r0, r0
   12c4c:	00000000 	andeq	r0, r0, r0
   12c50:	00000000 	andeq	r0, r0, r0
   12c54:	00000000 	andeq	r0, r0, r0
   12c58:	00000000 	andeq	r0, r0, r0
   12c5c:	00000000 	andeq	r0, r0, r0
   12c60:	00000000 	andeq	r0, r0, r0
   12c64:	00000000 	andeq	r0, r0, r0
   12c68:	00000000 	andeq	r0, r0, r0
   12c6c:	00000000 	andeq	r0, r0, r0
   12c70:	00000000 	andeq	r0, r0, r0
   12c74:	00000000 	andeq	r0, r0, r0
   12c78:	00000000 	andeq	r0, r0, r0
   12c7c:	00000000 	andeq	r0, r0, r0
   12c80:	00000000 	andeq	r0, r0, r0
   12c84:	00000000 	andeq	r0, r0, r0
   12c88:	00000000 	andeq	r0, r0, r0
   12c8c:	00000000 	andeq	r0, r0, r0
   12c90:	00000000 	andeq	r0, r0, r0
   12c94:	00000000 	andeq	r0, r0, r0
   12c98:	00000000 	andeq	r0, r0, r0
   12c9c:	00000000 	andeq	r0, r0, r0
   12ca0:	00000000 	andeq	r0, r0, r0
   12ca4:	00000000 	andeq	r0, r0, r0
   12ca8:	00000000 	andeq	r0, r0, r0
   12cac:	00000000 	andeq	r0, r0, r0
   12cb0:	00000000 	andeq	r0, r0, r0
   12cb4:	00000000 	andeq	r0, r0, r0
   12cb8:	00000000 	andeq	r0, r0, r0
   12cbc:	00000000 	andeq	r0, r0, r0
   12cc0:	00000000 	andeq	r0, r0, r0
   12cc4:	00000000 	andeq	r0, r0, r0
   12cc8:	00000000 	andeq	r0, r0, r0
   12ccc:	00000000 	andeq	r0, r0, r0
   12cd0:	00000000 	andeq	r0, r0, r0
   12cd4:	00000000 	andeq	r0, r0, r0
   12cd8:	00000000 	andeq	r0, r0, r0
   12cdc:	00000000 	andeq	r0, r0, r0
   12ce0:	00000000 	andeq	r0, r0, r0
   12ce4:	00000000 	andeq	r0, r0, r0
   12ce8:	00000000 	andeq	r0, r0, r0
   12cec:	00000000 	andeq	r0, r0, r0
   12cf0:	00000000 	andeq	r0, r0, r0
   12cf4:	00000000 	andeq	r0, r0, r0
   12cf8:	00000000 	andeq	r0, r0, r0
   12cfc:	00000000 	andeq	r0, r0, r0
   12d00:	00000000 	andeq	r0, r0, r0
   12d04:	00000000 	andeq	r0, r0, r0
   12d08:	00000000 	andeq	r0, r0, r0
   12d0c:	00000000 	andeq	r0, r0, r0
   12d10:	00000000 	andeq	r0, r0, r0
   12d14:	00000000 	andeq	r0, r0, r0
   12d18:	00000000 	andeq	r0, r0, r0
   12d1c:	00000000 	andeq	r0, r0, r0
   12d20:	00000000 	andeq	r0, r0, r0
   12d24:	00000000 	andeq	r0, r0, r0
   12d28:	00000000 	andeq	r0, r0, r0
   12d2c:	00000000 	andeq	r0, r0, r0
   12d30:	00000000 	andeq	r0, r0, r0
   12d34:	00000000 	andeq	r0, r0, r0
   12d38:	00000000 	andeq	r0, r0, r0
   12d3c:	00000000 	andeq	r0, r0, r0
   12d40:	00000000 	andeq	r0, r0, r0
   12d44:	00000000 	andeq	r0, r0, r0
   12d48:	00000000 	andeq	r0, r0, r0
   12d4c:	00000000 	andeq	r0, r0, r0
   12d50:	00000000 	andeq	r0, r0, r0
   12d54:	00000000 	andeq	r0, r0, r0
   12d58:	00000000 	andeq	r0, r0, r0
   12d5c:	00000000 	andeq	r0, r0, r0
   12d60:	00000000 	andeq	r0, r0, r0
   12d64:	00000000 	andeq	r0, r0, r0
   12d68:	00000000 	andeq	r0, r0, r0
   12d6c:	00000000 	andeq	r0, r0, r0
   12d70:	00000000 	andeq	r0, r0, r0
   12d74:	00000000 	andeq	r0, r0, r0
   12d78:	00000000 	andeq	r0, r0, r0
   12d7c:	00000000 	andeq	r0, r0, r0
   12d80:	00000000 	andeq	r0, r0, r0
   12d84:	00000000 	andeq	r0, r0, r0
   12d88:	00000000 	andeq	r0, r0, r0
   12d8c:	00000000 	andeq	r0, r0, r0
   12d90:	00000000 	andeq	r0, r0, r0
   12d94:	00000000 	andeq	r0, r0, r0
   12d98:	00000000 	andeq	r0, r0, r0
   12d9c:	00000000 	andeq	r0, r0, r0
   12da0:	00000000 	andeq	r0, r0, r0
   12da4:	00000000 	andeq	r0, r0, r0
   12da8:	00000000 	andeq	r0, r0, r0
   12dac:	00000000 	andeq	r0, r0, r0
   12db0:	00000000 	andeq	r0, r0, r0
   12db4:	00000000 	andeq	r0, r0, r0
   12db8:	00000000 	andeq	r0, r0, r0
   12dbc:	00000000 	andeq	r0, r0, r0
   12dc0:	00000000 	andeq	r0, r0, r0
   12dc4:	00000000 	andeq	r0, r0, r0
   12dc8:	00000000 	andeq	r0, r0, r0
   12dcc:	00000000 	andeq	r0, r0, r0
   12dd0:	00000000 	andeq	r0, r0, r0
   12dd4:	00000000 	andeq	r0, r0, r0
   12dd8:	00000000 	andeq	r0, r0, r0
   12ddc:	00000000 	andeq	r0, r0, r0
   12de0:	00000000 	andeq	r0, r0, r0
   12de4:	00000000 	andeq	r0, r0, r0
   12de8:	00000000 	andeq	r0, r0, r0
   12dec:	00000000 	andeq	r0, r0, r0
   12df0:	00000000 	andeq	r0, r0, r0
   12df4:	00000000 	andeq	r0, r0, r0
   12df8:	00000000 	andeq	r0, r0, r0
   12dfc:	00000000 	andeq	r0, r0, r0
   12e00:	00000000 	andeq	r0, r0, r0
   12e04:	00000000 	andeq	r0, r0, r0
   12e08:	00000000 	andeq	r0, r0, r0
   12e0c:	00000000 	andeq	r0, r0, r0
   12e10:	00000000 	andeq	r0, r0, r0
   12e14:	00000000 	andeq	r0, r0, r0
   12e18:	00000000 	andeq	r0, r0, r0
   12e1c:	00000000 	andeq	r0, r0, r0
   12e20:	00000000 	andeq	r0, r0, r0
   12e24:	00000000 	andeq	r0, r0, r0
   12e28:	00000000 	andeq	r0, r0, r0
   12e2c:	00000000 	andeq	r0, r0, r0
   12e30:	00000000 	andeq	r0, r0, r0
   12e34:	00000000 	andeq	r0, r0, r0
   12e38:	00000000 	andeq	r0, r0, r0
   12e3c:	00000000 	andeq	r0, r0, r0
   12e40:	00000000 	andeq	r0, r0, r0
   12e44:	00000000 	andeq	r0, r0, r0
   12e48:	00000000 	andeq	r0, r0, r0
   12e4c:	00000000 	andeq	r0, r0, r0
   12e50:	00000000 	andeq	r0, r0, r0
   12e54:	00000000 	andeq	r0, r0, r0
   12e58:	00000000 	andeq	r0, r0, r0
   12e5c:	00000000 	andeq	r0, r0, r0
   12e60:	00000000 	andeq	r0, r0, r0
   12e64:	00000000 	andeq	r0, r0, r0
   12e68:	00000000 	andeq	r0, r0, r0
   12e6c:	00000000 	andeq	r0, r0, r0
   12e70:	00000000 	andeq	r0, r0, r0
   12e74:	00000000 	andeq	r0, r0, r0
   12e78:	00000000 	andeq	r0, r0, r0
   12e7c:	00000000 	andeq	r0, r0, r0
   12e80:	00000000 	andeq	r0, r0, r0
   12e84:	00000000 	andeq	r0, r0, r0
   12e88:	00000000 	andeq	r0, r0, r0
   12e8c:	00000000 	andeq	r0, r0, r0
   12e90:	00000000 	andeq	r0, r0, r0
   12e94:	00000000 	andeq	r0, r0, r0
   12e98:	00000000 	andeq	r0, r0, r0
   12e9c:	00000000 	andeq	r0, r0, r0
   12ea0:	00000000 	andeq	r0, r0, r0
   12ea4:	00000000 	andeq	r0, r0, r0
   12ea8:	00000000 	andeq	r0, r0, r0
   12eac:	00000000 	andeq	r0, r0, r0
   12eb0:	00000000 	andeq	r0, r0, r0
   12eb4:	00000000 	andeq	r0, r0, r0
   12eb8:	00000000 	andeq	r0, r0, r0
   12ebc:	00000000 	andeq	r0, r0, r0
   12ec0:	00000000 	andeq	r0, r0, r0
   12ec4:	00000000 	andeq	r0, r0, r0
   12ec8:	00000000 	andeq	r0, r0, r0
   12ecc:	00000000 	andeq	r0, r0, r0
   12ed0:	00000000 	andeq	r0, r0, r0
   12ed4:	00000000 	andeq	r0, r0, r0
   12ed8:	00000000 	andeq	r0, r0, r0
   12edc:	00000000 	andeq	r0, r0, r0
   12ee0:	00000000 	andeq	r0, r0, r0
   12ee4:	00000000 	andeq	r0, r0, r0
   12ee8:	00000000 	andeq	r0, r0, r0
   12eec:	00000000 	andeq	r0, r0, r0
   12ef0:	00000000 	andeq	r0, r0, r0
   12ef4:	00000000 	andeq	r0, r0, r0
   12ef8:	00000000 	andeq	r0, r0, r0
   12efc:	00000000 	andeq	r0, r0, r0
   12f00:	00000000 	andeq	r0, r0, r0
   12f04:	00000000 	andeq	r0, r0, r0
   12f08:	00000000 	andeq	r0, r0, r0
   12f0c:	00000000 	andeq	r0, r0, r0
   12f10:	00000000 	andeq	r0, r0, r0
   12f14:	00000000 	andeq	r0, r0, r0
   12f18:	00000000 	andeq	r0, r0, r0
   12f1c:	00000000 	andeq	r0, r0, r0
   12f20:	00000000 	andeq	r0, r0, r0
   12f24:	00000000 	andeq	r0, r0, r0
   12f28:	00000000 	andeq	r0, r0, r0
   12f2c:	00000000 	andeq	r0, r0, r0
   12f30:	00000000 	andeq	r0, r0, r0
   12f34:	00000000 	andeq	r0, r0, r0
   12f38:	00000000 	andeq	r0, r0, r0
   12f3c:	00000000 	andeq	r0, r0, r0
   12f40:	00000000 	andeq	r0, r0, r0
   12f44:	00000000 	andeq	r0, r0, r0
   12f48:	00000000 	andeq	r0, r0, r0
   12f4c:	00000000 	andeq	r0, r0, r0
   12f50:	00000000 	andeq	r0, r0, r0
   12f54:	00000000 	andeq	r0, r0, r0
   12f58:	00000000 	andeq	r0, r0, r0
   12f5c:	00000000 	andeq	r0, r0, r0
   12f60:	00000000 	andeq	r0, r0, r0
   12f64:	00000000 	andeq	r0, r0, r0
   12f68:	00000000 	andeq	r0, r0, r0
   12f6c:	00000000 	andeq	r0, r0, r0
   12f70:	00000000 	andeq	r0, r0, r0
   12f74:	00000000 	andeq	r0, r0, r0
   12f78:	00000000 	andeq	r0, r0, r0
   12f7c:	00000000 	andeq	r0, r0, r0
   12f80:	00000000 	andeq	r0, r0, r0
   12f84:	00000000 	andeq	r0, r0, r0
   12f88:	00000000 	andeq	r0, r0, r0
   12f8c:	00000000 	andeq	r0, r0, r0
   12f90:	00000000 	andeq	r0, r0, r0
   12f94:	00000000 	andeq	r0, r0, r0
   12f98:	00000000 	andeq	r0, r0, r0
   12f9c:	00000000 	andeq	r0, r0, r0
   12fa0:	00000000 	andeq	r0, r0, r0
   12fa4:	00000000 	andeq	r0, r0, r0
   12fa8:	00000000 	andeq	r0, r0, r0
   12fac:	00000000 	andeq	r0, r0, r0
   12fb0:	00000000 	andeq	r0, r0, r0
   12fb4:	00000000 	andeq	r0, r0, r0
   12fb8:	00000000 	andeq	r0, r0, r0
   12fbc:	00000000 	andeq	r0, r0, r0
   12fc0:	00000000 	andeq	r0, r0, r0
   12fc4:	00000000 	andeq	r0, r0, r0
   12fc8:	00000000 	andeq	r0, r0, r0
   12fcc:	00000000 	andeq	r0, r0, r0
   12fd0:	00000000 	andeq	r0, r0, r0
   12fd4:	00000000 	andeq	r0, r0, r0
   12fd8:	00000000 	andeq	r0, r0, r0
   12fdc:	00000000 	andeq	r0, r0, r0
   12fe0:	00000000 	andeq	r0, r0, r0
   12fe4:	00000000 	andeq	r0, r0, r0
   12fe8:	00000000 	andeq	r0, r0, r0
   12fec:	00000000 	andeq	r0, r0, r0
   12ff0:	00000000 	andeq	r0, r0, r0
   12ff4:	00000000 	andeq	r0, r0, r0
   12ff8:	00000000 	andeq	r0, r0, r0
   12ffc:	00000000 	andeq	r0, r0, r0
   13000:	00000000 	andeq	r0, r0, r0
   13004:	00000000 	andeq	r0, r0, r0
   13008:	00000000 	andeq	r0, r0, r0
   1300c:	00000000 	andeq	r0, r0, r0
   13010:	00000000 	andeq	r0, r0, r0
   13014:	00000000 	andeq	r0, r0, r0
   13018:	00000000 	andeq	r0, r0, r0
   1301c:	00000000 	andeq	r0, r0, r0
   13020:	00000000 	andeq	r0, r0, r0
   13024:	00000000 	andeq	r0, r0, r0
   13028:	00000000 	andeq	r0, r0, r0
   1302c:	00000000 	andeq	r0, r0, r0
   13030:	00000000 	andeq	r0, r0, r0
   13034:	00000000 	andeq	r0, r0, r0
   13038:	00000000 	andeq	r0, r0, r0
   1303c:	00000000 	andeq	r0, r0, r0
   13040:	00000000 	andeq	r0, r0, r0
   13044:	00000000 	andeq	r0, r0, r0
   13048:	00000000 	andeq	r0, r0, r0
   1304c:	00000000 	andeq	r0, r0, r0
   13050:	00000000 	andeq	r0, r0, r0
   13054:	00000000 	andeq	r0, r0, r0
   13058:	00000000 	andeq	r0, r0, r0
   1305c:	00000000 	andeq	r0, r0, r0
   13060:	00000000 	andeq	r0, r0, r0
   13064:	00000000 	andeq	r0, r0, r0
   13068:	00000000 	andeq	r0, r0, r0
   1306c:	00000000 	andeq	r0, r0, r0
   13070:	00000000 	andeq	r0, r0, r0
   13074:	00000000 	andeq	r0, r0, r0
   13078:	00000000 	andeq	r0, r0, r0
   1307c:	00000000 	andeq	r0, r0, r0
   13080:	00000000 	andeq	r0, r0, r0
   13084:	00000000 	andeq	r0, r0, r0
   13088:	00000000 	andeq	r0, r0, r0
   1308c:	00000000 	andeq	r0, r0, r0
   13090:	00000000 	andeq	r0, r0, r0
   13094:	00000000 	andeq	r0, r0, r0
   13098:	00000000 	andeq	r0, r0, r0
   1309c:	00000000 	andeq	r0, r0, r0
   130a0:	00000000 	andeq	r0, r0, r0
   130a4:	00000000 	andeq	r0, r0, r0
   130a8:	00000000 	andeq	r0, r0, r0
   130ac:	00000000 	andeq	r0, r0, r0
   130b0:	00000000 	andeq	r0, r0, r0
   130b4:	00000000 	andeq	r0, r0, r0
   130b8:	00000000 	andeq	r0, r0, r0
   130bc:	00000000 	andeq	r0, r0, r0
   130c0:	00000000 	andeq	r0, r0, r0
   130c4:	00000000 	andeq	r0, r0, r0
   130c8:	00000000 	andeq	r0, r0, r0
   130cc:	00000000 	andeq	r0, r0, r0
   130d0:	00000000 	andeq	r0, r0, r0
   130d4:	00000000 	andeq	r0, r0, r0
   130d8:	00000000 	andeq	r0, r0, r0
   130dc:	00000000 	andeq	r0, r0, r0
   130e0:	00000000 	andeq	r0, r0, r0
   130e4:	00000000 	andeq	r0, r0, r0
   130e8:	00000000 	andeq	r0, r0, r0
   130ec:	00000000 	andeq	r0, r0, r0
   130f0:	00000000 	andeq	r0, r0, r0
   130f4:	00000000 	andeq	r0, r0, r0
   130f8:	00000000 	andeq	r0, r0, r0
   130fc:	00000000 	andeq	r0, r0, r0
   13100:	00000000 	andeq	r0, r0, r0
   13104:	00000000 	andeq	r0, r0, r0
   13108:	00000000 	andeq	r0, r0, r0
   1310c:	00000000 	andeq	r0, r0, r0
   13110:	00000000 	andeq	r0, r0, r0
   13114:	00000000 	andeq	r0, r0, r0
   13118:	00000000 	andeq	r0, r0, r0
   1311c:	00000000 	andeq	r0, r0, r0
   13120:	00000000 	andeq	r0, r0, r0
   13124:	00000000 	andeq	r0, r0, r0
   13128:	00000000 	andeq	r0, r0, r0
   1312c:	00000000 	andeq	r0, r0, r0
   13130:	00000000 	andeq	r0, r0, r0
   13134:	00000000 	andeq	r0, r0, r0
   13138:	00000000 	andeq	r0, r0, r0
   1313c:	00000000 	andeq	r0, r0, r0
   13140:	00000000 	andeq	r0, r0, r0
   13144:	00000000 	andeq	r0, r0, r0
   13148:	00000000 	andeq	r0, r0, r0
   1314c:	00000000 	andeq	r0, r0, r0
   13150:	00000000 	andeq	r0, r0, r0
   13154:	00000000 	andeq	r0, r0, r0
   13158:	00000000 	andeq	r0, r0, r0
   1315c:	00000000 	andeq	r0, r0, r0
   13160:	00000000 	andeq	r0, r0, r0
   13164:	00000000 	andeq	r0, r0, r0
   13168:	00000000 	andeq	r0, r0, r0
   1316c:	00000000 	andeq	r0, r0, r0
   13170:	00000000 	andeq	r0, r0, r0
   13174:	00000000 	andeq	r0, r0, r0
   13178:	00000000 	andeq	r0, r0, r0
   1317c:	00000000 	andeq	r0, r0, r0
   13180:	00000000 	andeq	r0, r0, r0
   13184:	00000000 	andeq	r0, r0, r0
   13188:	00000000 	andeq	r0, r0, r0
   1318c:	00000000 	andeq	r0, r0, r0
   13190:	00000000 	andeq	r0, r0, r0
   13194:	00000000 	andeq	r0, r0, r0
   13198:	00000000 	andeq	r0, r0, r0
   1319c:	00000000 	andeq	r0, r0, r0
   131a0:	00000000 	andeq	r0, r0, r0
   131a4:	00000000 	andeq	r0, r0, r0
   131a8:	00000000 	andeq	r0, r0, r0
   131ac:	00000000 	andeq	r0, r0, r0
   131b0:	00000000 	andeq	r0, r0, r0
   131b4:	00000000 	andeq	r0, r0, r0
   131b8:	00000000 	andeq	r0, r0, r0
   131bc:	00000000 	andeq	r0, r0, r0
   131c0:	00000000 	andeq	r0, r0, r0
   131c4:	00000000 	andeq	r0, r0, r0
   131c8:	00000000 	andeq	r0, r0, r0
   131cc:	00000000 	andeq	r0, r0, r0
   131d0:	00000000 	andeq	r0, r0, r0
   131d4:	00000000 	andeq	r0, r0, r0
   131d8:	00000000 	andeq	r0, r0, r0
   131dc:	00000000 	andeq	r0, r0, r0
   131e0:	00000000 	andeq	r0, r0, r0
   131e4:	00000000 	andeq	r0, r0, r0
   131e8:	00000000 	andeq	r0, r0, r0
   131ec:	00000000 	andeq	r0, r0, r0
   131f0:	00000000 	andeq	r0, r0, r0
   131f4:	00000000 	andeq	r0, r0, r0
   131f8:	00000000 	andeq	r0, r0, r0
   131fc:	00000000 	andeq	r0, r0, r0
   13200:	00000000 	andeq	r0, r0, r0
   13204:	00000000 	andeq	r0, r0, r0
   13208:	00000000 	andeq	r0, r0, r0
   1320c:	00000000 	andeq	r0, r0, r0
   13210:	00000000 	andeq	r0, r0, r0
   13214:	00000000 	andeq	r0, r0, r0
   13218:	00000000 	andeq	r0, r0, r0
   1321c:	00000000 	andeq	r0, r0, r0
   13220:	00000000 	andeq	r0, r0, r0
   13224:	00000000 	andeq	r0, r0, r0
   13228:	00000000 	andeq	r0, r0, r0
   1322c:	00000000 	andeq	r0, r0, r0
   13230:	00000000 	andeq	r0, r0, r0
   13234:	00000000 	andeq	r0, r0, r0
   13238:	00000000 	andeq	r0, r0, r0
   1323c:	00000000 	andeq	r0, r0, r0
   13240:	00000000 	andeq	r0, r0, r0
   13244:	00000000 	andeq	r0, r0, r0
   13248:	00000000 	andeq	r0, r0, r0
   1324c:	00000000 	andeq	r0, r0, r0
   13250:	00000000 	andeq	r0, r0, r0
   13254:	00000000 	andeq	r0, r0, r0
   13258:	00000000 	andeq	r0, r0, r0
   1325c:	00000000 	andeq	r0, r0, r0
   13260:	00000000 	andeq	r0, r0, r0
   13264:	00000000 	andeq	r0, r0, r0
   13268:	00000000 	andeq	r0, r0, r0
   1326c:	00000000 	andeq	r0, r0, r0
   13270:	00000000 	andeq	r0, r0, r0
   13274:	00000000 	andeq	r0, r0, r0
   13278:	00000000 	andeq	r0, r0, r0
   1327c:	00000000 	andeq	r0, r0, r0
   13280:	00000000 	andeq	r0, r0, r0
   13284:	00000000 	andeq	r0, r0, r0
   13288:	00000000 	andeq	r0, r0, r0
   1328c:	00000000 	andeq	r0, r0, r0
   13290:	00000000 	andeq	r0, r0, r0
   13294:	00000000 	andeq	r0, r0, r0
   13298:	00000000 	andeq	r0, r0, r0
   1329c:	00000000 	andeq	r0, r0, r0
   132a0:	00000000 	andeq	r0, r0, r0
   132a4:	00000000 	andeq	r0, r0, r0
   132a8:	00000000 	andeq	r0, r0, r0
   132ac:	00000000 	andeq	r0, r0, r0
   132b0:	00000000 	andeq	r0, r0, r0
   132b4:	00000000 	andeq	r0, r0, r0
   132b8:	00000000 	andeq	r0, r0, r0
   132bc:	00000000 	andeq	r0, r0, r0
   132c0:	00000000 	andeq	r0, r0, r0
   132c4:	00000000 	andeq	r0, r0, r0
   132c8:	00000000 	andeq	r0, r0, r0
   132cc:	00000000 	andeq	r0, r0, r0
   132d0:	00000000 	andeq	r0, r0, r0
   132d4:	00000000 	andeq	r0, r0, r0
   132d8:	00000000 	andeq	r0, r0, r0
   132dc:	00000000 	andeq	r0, r0, r0
   132e0:	00000000 	andeq	r0, r0, r0
   132e4:	00000000 	andeq	r0, r0, r0
   132e8:	00000000 	andeq	r0, r0, r0
   132ec:	00000000 	andeq	r0, r0, r0
   132f0:	00000000 	andeq	r0, r0, r0
   132f4:	00000000 	andeq	r0, r0, r0
   132f8:	00000000 	andeq	r0, r0, r0
   132fc:	00000000 	andeq	r0, r0, r0
   13300:	00000000 	andeq	r0, r0, r0
   13304:	00000000 	andeq	r0, r0, r0
   13308:	00000000 	andeq	r0, r0, r0
   1330c:	00000000 	andeq	r0, r0, r0
   13310:	00000000 	andeq	r0, r0, r0
   13314:	00000000 	andeq	r0, r0, r0
   13318:	00000000 	andeq	r0, r0, r0
   1331c:	00000000 	andeq	r0, r0, r0
   13320:	00000000 	andeq	r0, r0, r0
   13324:	00000000 	andeq	r0, r0, r0
   13328:	00000000 	andeq	r0, r0, r0
   1332c:	00000000 	andeq	r0, r0, r0
   13330:	00000000 	andeq	r0, r0, r0
   13334:	00000000 	andeq	r0, r0, r0
   13338:	00000000 	andeq	r0, r0, r0
   1333c:	00000000 	andeq	r0, r0, r0
   13340:	00000000 	andeq	r0, r0, r0
   13344:	00000000 	andeq	r0, r0, r0
   13348:	00000000 	andeq	r0, r0, r0
   1334c:	00000000 	andeq	r0, r0, r0
   13350:	00000000 	andeq	r0, r0, r0
   13354:	00000000 	andeq	r0, r0, r0
   13358:	00000000 	andeq	r0, r0, r0
   1335c:	00000000 	andeq	r0, r0, r0
   13360:	00000000 	andeq	r0, r0, r0
   13364:	00000000 	andeq	r0, r0, r0
   13368:	00000000 	andeq	r0, r0, r0
   1336c:	00000000 	andeq	r0, r0, r0
   13370:	00000000 	andeq	r0, r0, r0
   13374:	00000000 	andeq	r0, r0, r0
   13378:	00000000 	andeq	r0, r0, r0
   1337c:	00000000 	andeq	r0, r0, r0
   13380:	00000000 	andeq	r0, r0, r0
   13384:	00000000 	andeq	r0, r0, r0
   13388:	00000000 	andeq	r0, r0, r0
   1338c:	00000000 	andeq	r0, r0, r0
   13390:	00000000 	andeq	r0, r0, r0
   13394:	00000000 	andeq	r0, r0, r0
   13398:	00000000 	andeq	r0, r0, r0
   1339c:	00000000 	andeq	r0, r0, r0
   133a0:	00000000 	andeq	r0, r0, r0
   133a4:	00000000 	andeq	r0, r0, r0
   133a8:	00000000 	andeq	r0, r0, r0
   133ac:	00000000 	andeq	r0, r0, r0
   133b0:	00000000 	andeq	r0, r0, r0
   133b4:	00000000 	andeq	r0, r0, r0
   133b8:	00000000 	andeq	r0, r0, r0
   133bc:	00000000 	andeq	r0, r0, r0
   133c0:	00000000 	andeq	r0, r0, r0
   133c4:	00000000 	andeq	r0, r0, r0
   133c8:	00000000 	andeq	r0, r0, r0
   133cc:	00000000 	andeq	r0, r0, r0
   133d0:	00000000 	andeq	r0, r0, r0
   133d4:	00000000 	andeq	r0, r0, r0
   133d8:	00000000 	andeq	r0, r0, r0
   133dc:	00000000 	andeq	r0, r0, r0
   133e0:	00000000 	andeq	r0, r0, r0
   133e4:	00000000 	andeq	r0, r0, r0
   133e8:	00000000 	andeq	r0, r0, r0
   133ec:	00000000 	andeq	r0, r0, r0
   133f0:	00000000 	andeq	r0, r0, r0
   133f4:	00000000 	andeq	r0, r0, r0
   133f8:	00000000 	andeq	r0, r0, r0
   133fc:	00000000 	andeq	r0, r0, r0
   13400:	00000000 	andeq	r0, r0, r0
   13404:	00000000 	andeq	r0, r0, r0
   13408:	00000000 	andeq	r0, r0, r0
   1340c:	00000000 	andeq	r0, r0, r0
   13410:	00000000 	andeq	r0, r0, r0
   13414:	00000000 	andeq	r0, r0, r0
   13418:	00000000 	andeq	r0, r0, r0
   1341c:	00000000 	andeq	r0, r0, r0
   13420:	00000000 	andeq	r0, r0, r0
   13424:	00000000 	andeq	r0, r0, r0
   13428:	00000000 	andeq	r0, r0, r0
   1342c:	00000000 	andeq	r0, r0, r0
   13430:	00000000 	andeq	r0, r0, r0
   13434:	00000000 	andeq	r0, r0, r0
   13438:	00000000 	andeq	r0, r0, r0
   1343c:	00000000 	andeq	r0, r0, r0
   13440:	00000000 	andeq	r0, r0, r0
   13444:	00000000 	andeq	r0, r0, r0
   13448:	00000000 	andeq	r0, r0, r0
   1344c:	00000000 	andeq	r0, r0, r0
   13450:	00000000 	andeq	r0, r0, r0
   13454:	00000000 	andeq	r0, r0, r0
   13458:	00000000 	andeq	r0, r0, r0
   1345c:	00000000 	andeq	r0, r0, r0
   13460:	00000000 	andeq	r0, r0, r0
   13464:	00000000 	andeq	r0, r0, r0
   13468:	00000000 	andeq	r0, r0, r0
   1346c:	00000000 	andeq	r0, r0, r0
   13470:	00000000 	andeq	r0, r0, r0
   13474:	00000000 	andeq	r0, r0, r0
   13478:	00000000 	andeq	r0, r0, r0
   1347c:	00000000 	andeq	r0, r0, r0
   13480:	00000000 	andeq	r0, r0, r0
   13484:	00000000 	andeq	r0, r0, r0
   13488:	00000000 	andeq	r0, r0, r0
   1348c:	00000000 	andeq	r0, r0, r0
   13490:	00000000 	andeq	r0, r0, r0
   13494:	00000000 	andeq	r0, r0, r0
   13498:	00000000 	andeq	r0, r0, r0
   1349c:	00000000 	andeq	r0, r0, r0
   134a0:	00000000 	andeq	r0, r0, r0
   134a4:	00000000 	andeq	r0, r0, r0
   134a8:	00000000 	andeq	r0, r0, r0
   134ac:	00000000 	andeq	r0, r0, r0
   134b0:	00000000 	andeq	r0, r0, r0
   134b4:	00000000 	andeq	r0, r0, r0
   134b8:	00000000 	andeq	r0, r0, r0
   134bc:	00000000 	andeq	r0, r0, r0
   134c0:	00000000 	andeq	r0, r0, r0
   134c4:	00000000 	andeq	r0, r0, r0
   134c8:	00000000 	andeq	r0, r0, r0
   134cc:	00000000 	andeq	r0, r0, r0
   134d0:	00000000 	andeq	r0, r0, r0
   134d4:	00000000 	andeq	r0, r0, r0
   134d8:	00000000 	andeq	r0, r0, r0
   134dc:	00000000 	andeq	r0, r0, r0
   134e0:	00000000 	andeq	r0, r0, r0
   134e4:	00000000 	andeq	r0, r0, r0
   134e8:	00000000 	andeq	r0, r0, r0
   134ec:	00000000 	andeq	r0, r0, r0
   134f0:	00000000 	andeq	r0, r0, r0
   134f4:	00000000 	andeq	r0, r0, r0
   134f8:	00000000 	andeq	r0, r0, r0
   134fc:	00000000 	andeq	r0, r0, r0
   13500:	00000000 	andeq	r0, r0, r0
   13504:	00000000 	andeq	r0, r0, r0
   13508:	00000000 	andeq	r0, r0, r0
   1350c:	00000000 	andeq	r0, r0, r0
   13510:	00000000 	andeq	r0, r0, r0
   13514:	00000000 	andeq	r0, r0, r0
   13518:	00000000 	andeq	r0, r0, r0
   1351c:	00000000 	andeq	r0, r0, r0
   13520:	00000000 	andeq	r0, r0, r0
   13524:	00000000 	andeq	r0, r0, r0
   13528:	00000000 	andeq	r0, r0, r0
   1352c:	00000000 	andeq	r0, r0, r0
   13530:	00000000 	andeq	r0, r0, r0
   13534:	00000000 	andeq	r0, r0, r0
   13538:	00000000 	andeq	r0, r0, r0
   1353c:	00000000 	andeq	r0, r0, r0
   13540:	00000000 	andeq	r0, r0, r0
   13544:	00000000 	andeq	r0, r0, r0
   13548:	00000000 	andeq	r0, r0, r0
   1354c:	00000000 	andeq	r0, r0, r0
   13550:	00000000 	andeq	r0, r0, r0
   13554:	00000000 	andeq	r0, r0, r0
   13558:	00000000 	andeq	r0, r0, r0
   1355c:	00000000 	andeq	r0, r0, r0
   13560:	00000000 	andeq	r0, r0, r0
   13564:	00000000 	andeq	r0, r0, r0
   13568:	00000000 	andeq	r0, r0, r0
   1356c:	00000000 	andeq	r0, r0, r0
   13570:	00000000 	andeq	r0, r0, r0
   13574:	00000000 	andeq	r0, r0, r0
   13578:	00000000 	andeq	r0, r0, r0
   1357c:	00000000 	andeq	r0, r0, r0
   13580:	00000000 	andeq	r0, r0, r0
   13584:	00000000 	andeq	r0, r0, r0
   13588:	00000000 	andeq	r0, r0, r0
   1358c:	00000000 	andeq	r0, r0, r0
   13590:	00000000 	andeq	r0, r0, r0
   13594:	00000000 	andeq	r0, r0, r0
   13598:	00000000 	andeq	r0, r0, r0
   1359c:	00000000 	andeq	r0, r0, r0
   135a0:	00000000 	andeq	r0, r0, r0
   135a4:	00000000 	andeq	r0, r0, r0
   135a8:	00000000 	andeq	r0, r0, r0
   135ac:	00000000 	andeq	r0, r0, r0
   135b0:	00000000 	andeq	r0, r0, r0
   135b4:	00000000 	andeq	r0, r0, r0
   135b8:	00000000 	andeq	r0, r0, r0
   135bc:	00000000 	andeq	r0, r0, r0
   135c0:	00000000 	andeq	r0, r0, r0
   135c4:	00000000 	andeq	r0, r0, r0
   135c8:	00000000 	andeq	r0, r0, r0
   135cc:	00000000 	andeq	r0, r0, r0
   135d0:	00000000 	andeq	r0, r0, r0
   135d4:	00000000 	andeq	r0, r0, r0
   135d8:	00000000 	andeq	r0, r0, r0
   135dc:	00000000 	andeq	r0, r0, r0
   135e0:	00000000 	andeq	r0, r0, r0
   135e4:	00000000 	andeq	r0, r0, r0
   135e8:	00000000 	andeq	r0, r0, r0
   135ec:	00000000 	andeq	r0, r0, r0
   135f0:	00000000 	andeq	r0, r0, r0
   135f4:	00000000 	andeq	r0, r0, r0
   135f8:	00000000 	andeq	r0, r0, r0
   135fc:	00000000 	andeq	r0, r0, r0
   13600:	00000000 	andeq	r0, r0, r0
   13604:	00000000 	andeq	r0, r0, r0
   13608:	00000000 	andeq	r0, r0, r0
   1360c:	00000000 	andeq	r0, r0, r0
   13610:	00000000 	andeq	r0, r0, r0
   13614:	00000000 	andeq	r0, r0, r0
   13618:	00000000 	andeq	r0, r0, r0
   1361c:	00000000 	andeq	r0, r0, r0
   13620:	00000000 	andeq	r0, r0, r0
   13624:	00000000 	andeq	r0, r0, r0
   13628:	00000000 	andeq	r0, r0, r0
   1362c:	00000000 	andeq	r0, r0, r0
   13630:	00000000 	andeq	r0, r0, r0
   13634:	00000000 	andeq	r0, r0, r0
   13638:	00000000 	andeq	r0, r0, r0
   1363c:	00000000 	andeq	r0, r0, r0
   13640:	00000000 	andeq	r0, r0, r0
   13644:	00000000 	andeq	r0, r0, r0
   13648:	00000000 	andeq	r0, r0, r0
   1364c:	00000000 	andeq	r0, r0, r0
   13650:	00000000 	andeq	r0, r0, r0
   13654:	00000000 	andeq	r0, r0, r0
   13658:	00000000 	andeq	r0, r0, r0
   1365c:	00000000 	andeq	r0, r0, r0
   13660:	00000000 	andeq	r0, r0, r0
   13664:	00000000 	andeq	r0, r0, r0
   13668:	00000000 	andeq	r0, r0, r0
   1366c:	00000000 	andeq	r0, r0, r0
   13670:	00000000 	andeq	r0, r0, r0
   13674:	00000000 	andeq	r0, r0, r0
   13678:	00000000 	andeq	r0, r0, r0
   1367c:	00000000 	andeq	r0, r0, r0
   13680:	00000000 	andeq	r0, r0, r0
   13684:	00000000 	andeq	r0, r0, r0
   13688:	00000000 	andeq	r0, r0, r0
   1368c:	00000000 	andeq	r0, r0, r0
   13690:	00000000 	andeq	r0, r0, r0
   13694:	00000000 	andeq	r0, r0, r0
   13698:	00000000 	andeq	r0, r0, r0
   1369c:	00000000 	andeq	r0, r0, r0
   136a0:	00000000 	andeq	r0, r0, r0
   136a4:	00000000 	andeq	r0, r0, r0
   136a8:	00000000 	andeq	r0, r0, r0
   136ac:	00000000 	andeq	r0, r0, r0
   136b0:	00000000 	andeq	r0, r0, r0
   136b4:	00000000 	andeq	r0, r0, r0
   136b8:	00000000 	andeq	r0, r0, r0
   136bc:	00000000 	andeq	r0, r0, r0
   136c0:	00000000 	andeq	r0, r0, r0
   136c4:	00000000 	andeq	r0, r0, r0
   136c8:	00000000 	andeq	r0, r0, r0
   136cc:	00000000 	andeq	r0, r0, r0
   136d0:	00000000 	andeq	r0, r0, r0
   136d4:	00000000 	andeq	r0, r0, r0
   136d8:	00000000 	andeq	r0, r0, r0
   136dc:	00000000 	andeq	r0, r0, r0
   136e0:	00000000 	andeq	r0, r0, r0
   136e4:	00000000 	andeq	r0, r0, r0
   136e8:	00000000 	andeq	r0, r0, r0
   136ec:	00000000 	andeq	r0, r0, r0
   136f0:	00000000 	andeq	r0, r0, r0
   136f4:	00000000 	andeq	r0, r0, r0
   136f8:	00000000 	andeq	r0, r0, r0
   136fc:	00000000 	andeq	r0, r0, r0
   13700:	00000000 	andeq	r0, r0, r0
   13704:	00000000 	andeq	r0, r0, r0
   13708:	00000000 	andeq	r0, r0, r0
   1370c:	00000000 	andeq	r0, r0, r0
   13710:	00000000 	andeq	r0, r0, r0
   13714:	00000000 	andeq	r0, r0, r0
   13718:	00000000 	andeq	r0, r0, r0
   1371c:	00000000 	andeq	r0, r0, r0
   13720:	00000000 	andeq	r0, r0, r0
   13724:	00000000 	andeq	r0, r0, r0
   13728:	00000000 	andeq	r0, r0, r0
   1372c:	00000000 	andeq	r0, r0, r0
   13730:	00000000 	andeq	r0, r0, r0
   13734:	00000000 	andeq	r0, r0, r0
   13738:	00000000 	andeq	r0, r0, r0
   1373c:	00000000 	andeq	r0, r0, r0
   13740:	00000000 	andeq	r0, r0, r0
   13744:	00000000 	andeq	r0, r0, r0
   13748:	00000000 	andeq	r0, r0, r0
   1374c:	00000000 	andeq	r0, r0, r0
   13750:	00000000 	andeq	r0, r0, r0
   13754:	00000000 	andeq	r0, r0, r0
   13758:	00000000 	andeq	r0, r0, r0
   1375c:	00000000 	andeq	r0, r0, r0
   13760:	00000000 	andeq	r0, r0, r0
   13764:	00000000 	andeq	r0, r0, r0
   13768:	00000000 	andeq	r0, r0, r0
   1376c:	00000000 	andeq	r0, r0, r0
   13770:	00000000 	andeq	r0, r0, r0
   13774:	00000000 	andeq	r0, r0, r0
   13778:	00000000 	andeq	r0, r0, r0
   1377c:	00000000 	andeq	r0, r0, r0
   13780:	00000000 	andeq	r0, r0, r0
   13784:	00000000 	andeq	r0, r0, r0
   13788:	00000000 	andeq	r0, r0, r0
   1378c:	00000000 	andeq	r0, r0, r0
   13790:	00000000 	andeq	r0, r0, r0
   13794:	00000000 	andeq	r0, r0, r0
   13798:	00000000 	andeq	r0, r0, r0
   1379c:	00000000 	andeq	r0, r0, r0
   137a0:	00000000 	andeq	r0, r0, r0
   137a4:	00000000 	andeq	r0, r0, r0
   137a8:	00000000 	andeq	r0, r0, r0
   137ac:	00000000 	andeq	r0, r0, r0
   137b0:	00000000 	andeq	r0, r0, r0
   137b4:	00000000 	andeq	r0, r0, r0
   137b8:	00000000 	andeq	r0, r0, r0
   137bc:	00000000 	andeq	r0, r0, r0
   137c0:	00000000 	andeq	r0, r0, r0
   137c4:	00000000 	andeq	r0, r0, r0
   137c8:	00000000 	andeq	r0, r0, r0
   137cc:	00000000 	andeq	r0, r0, r0
   137d0:	00000000 	andeq	r0, r0, r0
   137d4:	00000000 	andeq	r0, r0, r0
   137d8:	00000000 	andeq	r0, r0, r0
   137dc:	00000000 	andeq	r0, r0, r0
   137e0:	00000000 	andeq	r0, r0, r0
   137e4:	00000000 	andeq	r0, r0, r0
   137e8:	00000000 	andeq	r0, r0, r0
   137ec:	00000000 	andeq	r0, r0, r0
   137f0:	00000000 	andeq	r0, r0, r0
   137f4:	00000000 	andeq	r0, r0, r0
   137f8:	00000000 	andeq	r0, r0, r0
   137fc:	00000000 	andeq	r0, r0, r0
   13800:	00000000 	andeq	r0, r0, r0
   13804:	00000000 	andeq	r0, r0, r0
   13808:	00000000 	andeq	r0, r0, r0
   1380c:	00000000 	andeq	r0, r0, r0
   13810:	00000000 	andeq	r0, r0, r0
   13814:	00000000 	andeq	r0, r0, r0
   13818:	00000000 	andeq	r0, r0, r0
   1381c:	00000000 	andeq	r0, r0, r0
   13820:	00000000 	andeq	r0, r0, r0
   13824:	00000000 	andeq	r0, r0, r0
   13828:	00000000 	andeq	r0, r0, r0
   1382c:	00000000 	andeq	r0, r0, r0
   13830:	00000000 	andeq	r0, r0, r0
   13834:	00000000 	andeq	r0, r0, r0
   13838:	00000000 	andeq	r0, r0, r0
   1383c:	00000000 	andeq	r0, r0, r0
   13840:	00000000 	andeq	r0, r0, r0
   13844:	00000000 	andeq	r0, r0, r0
   13848:	00000000 	andeq	r0, r0, r0
   1384c:	00000000 	andeq	r0, r0, r0
   13850:	00000000 	andeq	r0, r0, r0
   13854:	00000000 	andeq	r0, r0, r0
   13858:	00000000 	andeq	r0, r0, r0
   1385c:	00000000 	andeq	r0, r0, r0
   13860:	00000000 	andeq	r0, r0, r0
   13864:	00000000 	andeq	r0, r0, r0
   13868:	00000000 	andeq	r0, r0, r0
   1386c:	00000000 	andeq	r0, r0, r0
   13870:	00000000 	andeq	r0, r0, r0
   13874:	00000000 	andeq	r0, r0, r0
   13878:	00000000 	andeq	r0, r0, r0
   1387c:	00000000 	andeq	r0, r0, r0
   13880:	00000000 	andeq	r0, r0, r0
   13884:	00000000 	andeq	r0, r0, r0
   13888:	00000000 	andeq	r0, r0, r0
   1388c:	00000000 	andeq	r0, r0, r0
   13890:	00000000 	andeq	r0, r0, r0
   13894:	00000000 	andeq	r0, r0, r0
   13898:	00000000 	andeq	r0, r0, r0
   1389c:	00000000 	andeq	r0, r0, r0
   138a0:	00000000 	andeq	r0, r0, r0
   138a4:	00000000 	andeq	r0, r0, r0
   138a8:	00000000 	andeq	r0, r0, r0
   138ac:	00000000 	andeq	r0, r0, r0
   138b0:	00000000 	andeq	r0, r0, r0
   138b4:	00000000 	andeq	r0, r0, r0
   138b8:	00000000 	andeq	r0, r0, r0
   138bc:	00000000 	andeq	r0, r0, r0
   138c0:	00000000 	andeq	r0, r0, r0
   138c4:	00000000 	andeq	r0, r0, r0
   138c8:	00000000 	andeq	r0, r0, r0
   138cc:	00000000 	andeq	r0, r0, r0
   138d0:	00000000 	andeq	r0, r0, r0
   138d4:	00000000 	andeq	r0, r0, r0
   138d8:	00000000 	andeq	r0, r0, r0
   138dc:	00000000 	andeq	r0, r0, r0
   138e0:	00000000 	andeq	r0, r0, r0
   138e4:	00000000 	andeq	r0, r0, r0
   138e8:	00000000 	andeq	r0, r0, r0
   138ec:	00000000 	andeq	r0, r0, r0
   138f0:	00000000 	andeq	r0, r0, r0
   138f4:	00000000 	andeq	r0, r0, r0
   138f8:	00000000 	andeq	r0, r0, r0
   138fc:	00000000 	andeq	r0, r0, r0
   13900:	00000000 	andeq	r0, r0, r0
   13904:	00000000 	andeq	r0, r0, r0
   13908:	00000000 	andeq	r0, r0, r0
   1390c:	00000000 	andeq	r0, r0, r0
   13910:	00000000 	andeq	r0, r0, r0
   13914:	00000000 	andeq	r0, r0, r0
   13918:	00000000 	andeq	r0, r0, r0
   1391c:	00000000 	andeq	r0, r0, r0
   13920:	00000000 	andeq	r0, r0, r0
   13924:	00000000 	andeq	r0, r0, r0
   13928:	00000000 	andeq	r0, r0, r0
   1392c:	00000000 	andeq	r0, r0, r0
   13930:	00000000 	andeq	r0, r0, r0
   13934:	00000000 	andeq	r0, r0, r0
   13938:	00000000 	andeq	r0, r0, r0
   1393c:	00000000 	andeq	r0, r0, r0
   13940:	00000000 	andeq	r0, r0, r0
   13944:	00000000 	andeq	r0, r0, r0
   13948:	00000000 	andeq	r0, r0, r0
   1394c:	00000000 	andeq	r0, r0, r0
   13950:	00000000 	andeq	r0, r0, r0
   13954:	00000000 	andeq	r0, r0, r0
   13958:	00000000 	andeq	r0, r0, r0
   1395c:	00000000 	andeq	r0, r0, r0
   13960:	00000000 	andeq	r0, r0, r0
   13964:	00000000 	andeq	r0, r0, r0
   13968:	00000000 	andeq	r0, r0, r0
   1396c:	00000000 	andeq	r0, r0, r0
   13970:	00000000 	andeq	r0, r0, r0
   13974:	00000000 	andeq	r0, r0, r0
   13978:	00000000 	andeq	r0, r0, r0
   1397c:	00000000 	andeq	r0, r0, r0
   13980:	00000000 	andeq	r0, r0, r0
   13984:	00000000 	andeq	r0, r0, r0
   13988:	00000000 	andeq	r0, r0, r0
   1398c:	00000000 	andeq	r0, r0, r0
   13990:	00000000 	andeq	r0, r0, r0
   13994:	00000000 	andeq	r0, r0, r0
   13998:	00000000 	andeq	r0, r0, r0
   1399c:	00000000 	andeq	r0, r0, r0
   139a0:	00000000 	andeq	r0, r0, r0
   139a4:	00000000 	andeq	r0, r0, r0
   139a8:	00000000 	andeq	r0, r0, r0
   139ac:	00000000 	andeq	r0, r0, r0
   139b0:	00000000 	andeq	r0, r0, r0
   139b4:	00000000 	andeq	r0, r0, r0
   139b8:	00000000 	andeq	r0, r0, r0
   139bc:	00000000 	andeq	r0, r0, r0
   139c0:	00000000 	andeq	r0, r0, r0
   139c4:	00000000 	andeq	r0, r0, r0
   139c8:	00000000 	andeq	r0, r0, r0
   139cc:	00000000 	andeq	r0, r0, r0
   139d0:	00000000 	andeq	r0, r0, r0
   139d4:	00000000 	andeq	r0, r0, r0
   139d8:	00000000 	andeq	r0, r0, r0
   139dc:	00000000 	andeq	r0, r0, r0
   139e0:	00000000 	andeq	r0, r0, r0
   139e4:	00000000 	andeq	r0, r0, r0
   139e8:	00000000 	andeq	r0, r0, r0
   139ec:	00000000 	andeq	r0, r0, r0
   139f0:	00000000 	andeq	r0, r0, r0
   139f4:	00000000 	andeq	r0, r0, r0
   139f8:	00000000 	andeq	r0, r0, r0
   139fc:	00000000 	andeq	r0, r0, r0
   13a00:	00000000 	andeq	r0, r0, r0
   13a04:	00000000 	andeq	r0, r0, r0
   13a08:	00000000 	andeq	r0, r0, r0
   13a0c:	00000000 	andeq	r0, r0, r0
   13a10:	00000000 	andeq	r0, r0, r0
   13a14:	00000000 	andeq	r0, r0, r0
   13a18:	00000000 	andeq	r0, r0, r0
   13a1c:	00000000 	andeq	r0, r0, r0
   13a20:	00000000 	andeq	r0, r0, r0
   13a24:	00000000 	andeq	r0, r0, r0
   13a28:	00000000 	andeq	r0, r0, r0
   13a2c:	00000000 	andeq	r0, r0, r0
   13a30:	00000000 	andeq	r0, r0, r0
   13a34:	00000000 	andeq	r0, r0, r0
   13a38:	00000000 	andeq	r0, r0, r0
   13a3c:	00000000 	andeq	r0, r0, r0
   13a40:	00000000 	andeq	r0, r0, r0
   13a44:	00000000 	andeq	r0, r0, r0
   13a48:	00000000 	andeq	r0, r0, r0
   13a4c:	00000000 	andeq	r0, r0, r0
   13a50:	00000000 	andeq	r0, r0, r0
   13a54:	00000000 	andeq	r0, r0, r0
   13a58:	00000000 	andeq	r0, r0, r0
   13a5c:	00000000 	andeq	r0, r0, r0
   13a60:	00000000 	andeq	r0, r0, r0
   13a64:	00000000 	andeq	r0, r0, r0
   13a68:	00000000 	andeq	r0, r0, r0
   13a6c:	00000000 	andeq	r0, r0, r0
   13a70:	00000000 	andeq	r0, r0, r0
   13a74:	00000000 	andeq	r0, r0, r0
   13a78:	00000000 	andeq	r0, r0, r0
   13a7c:	00000000 	andeq	r0, r0, r0
   13a80:	00000000 	andeq	r0, r0, r0
   13a84:	00000000 	andeq	r0, r0, r0
   13a88:	00000000 	andeq	r0, r0, r0
   13a8c:	00000000 	andeq	r0, r0, r0
   13a90:	00000000 	andeq	r0, r0, r0
   13a94:	00000000 	andeq	r0, r0, r0
   13a98:	00000000 	andeq	r0, r0, r0
   13a9c:	00000000 	andeq	r0, r0, r0
   13aa0:	00000000 	andeq	r0, r0, r0
   13aa4:	00000000 	andeq	r0, r0, r0
   13aa8:	00000000 	andeq	r0, r0, r0
   13aac:	00000000 	andeq	r0, r0, r0
   13ab0:	00000000 	andeq	r0, r0, r0
   13ab4:	00000000 	andeq	r0, r0, r0
   13ab8:	00000000 	andeq	r0, r0, r0
   13abc:	00000000 	andeq	r0, r0, r0
   13ac0:	00000000 	andeq	r0, r0, r0
   13ac4:	00000000 	andeq	r0, r0, r0
   13ac8:	00000000 	andeq	r0, r0, r0
   13acc:	00000000 	andeq	r0, r0, r0
   13ad0:	00000000 	andeq	r0, r0, r0
   13ad4:	00000000 	andeq	r0, r0, r0
   13ad8:	00000000 	andeq	r0, r0, r0
   13adc:	00000000 	andeq	r0, r0, r0
   13ae0:	00000000 	andeq	r0, r0, r0
   13ae4:	00000000 	andeq	r0, r0, r0
   13ae8:	00000000 	andeq	r0, r0, r0
   13aec:	00000000 	andeq	r0, r0, r0
   13af0:	00000000 	andeq	r0, r0, r0
   13af4:	00000000 	andeq	r0, r0, r0
   13af8:	00000000 	andeq	r0, r0, r0
   13afc:	00000000 	andeq	r0, r0, r0
   13b00:	00000000 	andeq	r0, r0, r0
   13b04:	00000000 	andeq	r0, r0, r0
   13b08:	00000000 	andeq	r0, r0, r0
   13b0c:	00000000 	andeq	r0, r0, r0
   13b10:	00000000 	andeq	r0, r0, r0
   13b14:	00000000 	andeq	r0, r0, r0
   13b18:	00000000 	andeq	r0, r0, r0
   13b1c:	00000000 	andeq	r0, r0, r0
   13b20:	00000000 	andeq	r0, r0, r0
   13b24:	00000000 	andeq	r0, r0, r0
   13b28:	00000000 	andeq	r0, r0, r0
   13b2c:	00000000 	andeq	r0, r0, r0
   13b30:	00000000 	andeq	r0, r0, r0
   13b34:	00000000 	andeq	r0, r0, r0
   13b38:	00000000 	andeq	r0, r0, r0
   13b3c:	00000000 	andeq	r0, r0, r0
   13b40:	00000000 	andeq	r0, r0, r0
   13b44:	00000000 	andeq	r0, r0, r0
   13b48:	00000000 	andeq	r0, r0, r0
   13b4c:	00000000 	andeq	r0, r0, r0
   13b50:	00000000 	andeq	r0, r0, r0
   13b54:	00000000 	andeq	r0, r0, r0
   13b58:	00000000 	andeq	r0, r0, r0
   13b5c:	00000000 	andeq	r0, r0, r0
   13b60:	00000000 	andeq	r0, r0, r0
   13b64:	00000000 	andeq	r0, r0, r0
   13b68:	00000000 	andeq	r0, r0, r0
   13b6c:	00000000 	andeq	r0, r0, r0
   13b70:	00000000 	andeq	r0, r0, r0
   13b74:	00000000 	andeq	r0, r0, r0
   13b78:	00000000 	andeq	r0, r0, r0
   13b7c:	00000000 	andeq	r0, r0, r0
   13b80:	00000000 	andeq	r0, r0, r0
   13b84:	00000000 	andeq	r0, r0, r0
   13b88:	00000000 	andeq	r0, r0, r0
   13b8c:	00000000 	andeq	r0, r0, r0
   13b90:	00000000 	andeq	r0, r0, r0
   13b94:	00000000 	andeq	r0, r0, r0
   13b98:	00000000 	andeq	r0, r0, r0
   13b9c:	00000000 	andeq	r0, r0, r0
   13ba0:	00000000 	andeq	r0, r0, r0
   13ba4:	00000000 	andeq	r0, r0, r0
   13ba8:	00000000 	andeq	r0, r0, r0
   13bac:	00000000 	andeq	r0, r0, r0
   13bb0:	00000000 	andeq	r0, r0, r0
   13bb4:	00000000 	andeq	r0, r0, r0
   13bb8:	00000000 	andeq	r0, r0, r0
   13bbc:	00000000 	andeq	r0, r0, r0
   13bc0:	00000000 	andeq	r0, r0, r0
   13bc4:	00000000 	andeq	r0, r0, r0
   13bc8:	00000000 	andeq	r0, r0, r0
   13bcc:	00000000 	andeq	r0, r0, r0
   13bd0:	00000000 	andeq	r0, r0, r0
   13bd4:	00000000 	andeq	r0, r0, r0
   13bd8:	00000000 	andeq	r0, r0, r0
   13bdc:	00000000 	andeq	r0, r0, r0
   13be0:	00000000 	andeq	r0, r0, r0
   13be4:	00000000 	andeq	r0, r0, r0
   13be8:	00000000 	andeq	r0, r0, r0
   13bec:	00000000 	andeq	r0, r0, r0
   13bf0:	00000000 	andeq	r0, r0, r0
   13bf4:	00000000 	andeq	r0, r0, r0
   13bf8:	00000000 	andeq	r0, r0, r0
   13bfc:	00000000 	andeq	r0, r0, r0
   13c00:	00000000 	andeq	r0, r0, r0
   13c04:	00000000 	andeq	r0, r0, r0
   13c08:	00000000 	andeq	r0, r0, r0
   13c0c:	00000000 	andeq	r0, r0, r0
   13c10:	00000000 	andeq	r0, r0, r0
   13c14:	00000000 	andeq	r0, r0, r0
   13c18:	00000000 	andeq	r0, r0, r0
   13c1c:	00000000 	andeq	r0, r0, r0
   13c20:	00000000 	andeq	r0, r0, r0
   13c24:	00000000 	andeq	r0, r0, r0
   13c28:	00000000 	andeq	r0, r0, r0
   13c2c:	00000000 	andeq	r0, r0, r0
   13c30:	00000000 	andeq	r0, r0, r0
   13c34:	00000000 	andeq	r0, r0, r0
   13c38:	00000000 	andeq	r0, r0, r0
   13c3c:	00000000 	andeq	r0, r0, r0
   13c40:	00000000 	andeq	r0, r0, r0
   13c44:	00000000 	andeq	r0, r0, r0
   13c48:	00000000 	andeq	r0, r0, r0
   13c4c:	00000000 	andeq	r0, r0, r0
   13c50:	00000000 	andeq	r0, r0, r0
   13c54:	00000000 	andeq	r0, r0, r0
   13c58:	00000000 	andeq	r0, r0, r0
   13c5c:	00000000 	andeq	r0, r0, r0
   13c60:	00000000 	andeq	r0, r0, r0
   13c64:	00000000 	andeq	r0, r0, r0
   13c68:	00000000 	andeq	r0, r0, r0
   13c6c:	00000000 	andeq	r0, r0, r0
   13c70:	00000000 	andeq	r0, r0, r0
   13c74:	00000000 	andeq	r0, r0, r0
   13c78:	00000000 	andeq	r0, r0, r0
   13c7c:	00000000 	andeq	r0, r0, r0
   13c80:	00000000 	andeq	r0, r0, r0
   13c84:	00000000 	andeq	r0, r0, r0
   13c88:	00000000 	andeq	r0, r0, r0
   13c8c:	00000000 	andeq	r0, r0, r0
   13c90:	00000000 	andeq	r0, r0, r0
   13c94:	00000000 	andeq	r0, r0, r0
   13c98:	00000000 	andeq	r0, r0, r0
   13c9c:	00000000 	andeq	r0, r0, r0
   13ca0:	00000000 	andeq	r0, r0, r0
   13ca4:	00000000 	andeq	r0, r0, r0
   13ca8:	00000000 	andeq	r0, r0, r0
   13cac:	00000000 	andeq	r0, r0, r0
   13cb0:	00000000 	andeq	r0, r0, r0
   13cb4:	00000000 	andeq	r0, r0, r0
   13cb8:	00000000 	andeq	r0, r0, r0
   13cbc:	00000000 	andeq	r0, r0, r0
   13cc0:	00000000 	andeq	r0, r0, r0
   13cc4:	00000000 	andeq	r0, r0, r0
   13cc8:	00000000 	andeq	r0, r0, r0
   13ccc:	00000000 	andeq	r0, r0, r0
   13cd0:	00000000 	andeq	r0, r0, r0
   13cd4:	00000000 	andeq	r0, r0, r0
   13cd8:	00000000 	andeq	r0, r0, r0
   13cdc:	00000000 	andeq	r0, r0, r0
   13ce0:	00000000 	andeq	r0, r0, r0
   13ce4:	00000000 	andeq	r0, r0, r0
   13ce8:	00000000 	andeq	r0, r0, r0
   13cec:	00000000 	andeq	r0, r0, r0
   13cf0:	00000000 	andeq	r0, r0, r0
   13cf4:	00000000 	andeq	r0, r0, r0
   13cf8:	00000000 	andeq	r0, r0, r0
   13cfc:	00000000 	andeq	r0, r0, r0
   13d00:	00000000 	andeq	r0, r0, r0
   13d04:	00000000 	andeq	r0, r0, r0
   13d08:	00000000 	andeq	r0, r0, r0
   13d0c:	00000000 	andeq	r0, r0, r0
   13d10:	00000000 	andeq	r0, r0, r0
   13d14:	00000000 	andeq	r0, r0, r0
   13d18:	00000000 	andeq	r0, r0, r0
   13d1c:	00000000 	andeq	r0, r0, r0
   13d20:	00000000 	andeq	r0, r0, r0
   13d24:	00000000 	andeq	r0, r0, r0
   13d28:	00000000 	andeq	r0, r0, r0
   13d2c:	00000000 	andeq	r0, r0, r0
   13d30:	00000000 	andeq	r0, r0, r0
   13d34:	00000000 	andeq	r0, r0, r0
   13d38:	00000000 	andeq	r0, r0, r0
   13d3c:	00000000 	andeq	r0, r0, r0
   13d40:	00000000 	andeq	r0, r0, r0
   13d44:	00000000 	andeq	r0, r0, r0
   13d48:	00000000 	andeq	r0, r0, r0
   13d4c:	00000000 	andeq	r0, r0, r0
   13d50:	00000000 	andeq	r0, r0, r0
   13d54:	00000000 	andeq	r0, r0, r0
   13d58:	00000000 	andeq	r0, r0, r0
   13d5c:	00000000 	andeq	r0, r0, r0
   13d60:	00000000 	andeq	r0, r0, r0
   13d64:	00000000 	andeq	r0, r0, r0
   13d68:	00000000 	andeq	r0, r0, r0
   13d6c:	00000000 	andeq	r0, r0, r0
   13d70:	00000000 	andeq	r0, r0, r0
   13d74:	00000000 	andeq	r0, r0, r0
   13d78:	00000000 	andeq	r0, r0, r0
   13d7c:	00000000 	andeq	r0, r0, r0
   13d80:	00000000 	andeq	r0, r0, r0
   13d84:	00000000 	andeq	r0, r0, r0
   13d88:	00000000 	andeq	r0, r0, r0
   13d8c:	00000000 	andeq	r0, r0, r0
   13d90:	00000000 	andeq	r0, r0, r0
   13d94:	00000000 	andeq	r0, r0, r0
   13d98:	00000000 	andeq	r0, r0, r0
   13d9c:	00000000 	andeq	r0, r0, r0
   13da0:	00000000 	andeq	r0, r0, r0
   13da4:	00000000 	andeq	r0, r0, r0
   13da8:	00000000 	andeq	r0, r0, r0
   13dac:	00000000 	andeq	r0, r0, r0
   13db0:	00000000 	andeq	r0, r0, r0
   13db4:	00000000 	andeq	r0, r0, r0
   13db8:	00000000 	andeq	r0, r0, r0
   13dbc:	00000000 	andeq	r0, r0, r0
   13dc0:	00000000 	andeq	r0, r0, r0
   13dc4:	00000000 	andeq	r0, r0, r0
   13dc8:	00000000 	andeq	r0, r0, r0
   13dcc:	00000000 	andeq	r0, r0, r0
   13dd0:	00000000 	andeq	r0, r0, r0
   13dd4:	00000000 	andeq	r0, r0, r0
   13dd8:	00000000 	andeq	r0, r0, r0
   13ddc:	00000000 	andeq	r0, r0, r0
   13de0:	00000000 	andeq	r0, r0, r0
   13de4:	00000000 	andeq	r0, r0, r0
   13de8:	00000000 	andeq	r0, r0, r0
   13dec:	00000000 	andeq	r0, r0, r0
   13df0:	00000000 	andeq	r0, r0, r0
   13df4:	00000000 	andeq	r0, r0, r0
   13df8:	00000000 	andeq	r0, r0, r0

00013dfc <ModuleFactory::creation_funcs>:
	static inline SeqMap<ModuleTypeSlug, CreateModuleFunc, MAX_MODULE_TYPES> creation_funcs;
   13dfc:	00000000 	andeq	r0, r0, r0
   13e00:	00000000 	andeq	r0, r0, r0
   13e04:	00000000 	andeq	r0, r0, r0
   13e08:	00000000 	andeq	r0, r0, r0
   13e0c:	00000000 	andeq	r0, r0, r0
   13e10:	00000000 	andeq	r0, r0, r0
   13e14:	00000000 	andeq	r0, r0, r0
   13e18:	00000000 	andeq	r0, r0, r0
   13e1c:	00000000 	andeq	r0, r0, r0
   13e20:	00000000 	andeq	r0, r0, r0
   13e24:	00000000 	andeq	r0, r0, r0
   13e28:	00000000 	andeq	r0, r0, r0
   13e2c:	00000000 	andeq	r0, r0, r0
   13e30:	00000000 	andeq	r0, r0, r0
   13e34:	00000000 	andeq	r0, r0, r0
   13e38:	00000000 	andeq	r0, r0, r0
   13e3c:	00000000 	andeq	r0, r0, r0
   13e40:	00000000 	andeq	r0, r0, r0
   13e44:	00000000 	andeq	r0, r0, r0
   13e48:	00000000 	andeq	r0, r0, r0
   13e4c:	00000000 	andeq	r0, r0, r0
   13e50:	00000000 	andeq	r0, r0, r0
   13e54:	00000000 	andeq	r0, r0, r0
   13e58:	00000000 	andeq	r0, r0, r0
   13e5c:	00000000 	andeq	r0, r0, r0
   13e60:	00000000 	andeq	r0, r0, r0
   13e64:	00000000 	andeq	r0, r0, r0
   13e68:	00000000 	andeq	r0, r0, r0
   13e6c:	00000000 	andeq	r0, r0, r0
   13e70:	00000000 	andeq	r0, r0, r0
   13e74:	00000000 	andeq	r0, r0, r0
   13e78:	00000000 	andeq	r0, r0, r0
   13e7c:	00000000 	andeq	r0, r0, r0
   13e80:	00000000 	andeq	r0, r0, r0
   13e84:	00000000 	andeq	r0, r0, r0
   13e88:	00000000 	andeq	r0, r0, r0
   13e8c:	00000000 	andeq	r0, r0, r0
   13e90:	00000000 	andeq	r0, r0, r0
   13e94:	00000000 	andeq	r0, r0, r0
   13e98:	00000000 	andeq	r0, r0, r0
   13e9c:	00000000 	andeq	r0, r0, r0
   13ea0:	00000000 	andeq	r0, r0, r0
   13ea4:	00000000 	andeq	r0, r0, r0
   13ea8:	00000000 	andeq	r0, r0, r0
   13eac:	00000000 	andeq	r0, r0, r0
   13eb0:	00000000 	andeq	r0, r0, r0
   13eb4:	00000000 	andeq	r0, r0, r0
   13eb8:	00000000 	andeq	r0, r0, r0
   13ebc:	00000000 	andeq	r0, r0, r0
   13ec0:	00000000 	andeq	r0, r0, r0
   13ec4:	00000000 	andeq	r0, r0, r0
   13ec8:	00000000 	andeq	r0, r0, r0
   13ecc:	00000000 	andeq	r0, r0, r0
   13ed0:	00000000 	andeq	r0, r0, r0
   13ed4:	00000000 	andeq	r0, r0, r0
   13ed8:	00000000 	andeq	r0, r0, r0
   13edc:	00000000 	andeq	r0, r0, r0
   13ee0:	00000000 	andeq	r0, r0, r0
   13ee4:	00000000 	andeq	r0, r0, r0
   13ee8:	00000000 	andeq	r0, r0, r0
   13eec:	00000000 	andeq	r0, r0, r0
   13ef0:	00000000 	andeq	r0, r0, r0
   13ef4:	00000000 	andeq	r0, r0, r0
   13ef8:	00000000 	andeq	r0, r0, r0
   13efc:	00000000 	andeq	r0, r0, r0
   13f00:	00000000 	andeq	r0, r0, r0
   13f04:	00000000 	andeq	r0, r0, r0
   13f08:	00000000 	andeq	r0, r0, r0
   13f0c:	00000000 	andeq	r0, r0, r0
   13f10:	00000000 	andeq	r0, r0, r0
   13f14:	00000000 	andeq	r0, r0, r0
   13f18:	00000000 	andeq	r0, r0, r0
   13f1c:	00000000 	andeq	r0, r0, r0
   13f20:	00000000 	andeq	r0, r0, r0
   13f24:	00000000 	andeq	r0, r0, r0
   13f28:	00000000 	andeq	r0, r0, r0
   13f2c:	00000000 	andeq	r0, r0, r0
   13f30:	00000000 	andeq	r0, r0, r0
   13f34:	00000000 	andeq	r0, r0, r0
   13f38:	00000000 	andeq	r0, r0, r0
   13f3c:	00000000 	andeq	r0, r0, r0
   13f40:	00000000 	andeq	r0, r0, r0
   13f44:	00000000 	andeq	r0, r0, r0
   13f48:	00000000 	andeq	r0, r0, r0
   13f4c:	00000000 	andeq	r0, r0, r0
   13f50:	00000000 	andeq	r0, r0, r0
   13f54:	00000000 	andeq	r0, r0, r0
   13f58:	00000000 	andeq	r0, r0, r0
   13f5c:	00000000 	andeq	r0, r0, r0
   13f60:	00000000 	andeq	r0, r0, r0
   13f64:	00000000 	andeq	r0, r0, r0
   13f68:	00000000 	andeq	r0, r0, r0
   13f6c:	00000000 	andeq	r0, r0, r0
   13f70:	00000000 	andeq	r0, r0, r0
   13f74:	00000000 	andeq	r0, r0, r0
   13f78:	00000000 	andeq	r0, r0, r0
   13f7c:	00000000 	andeq	r0, r0, r0
   13f80:	00000000 	andeq	r0, r0, r0
   13f84:	00000000 	andeq	r0, r0, r0
   13f88:	00000000 	andeq	r0, r0, r0
   13f8c:	00000000 	andeq	r0, r0, r0
   13f90:	00000000 	andeq	r0, r0, r0
   13f94:	00000000 	andeq	r0, r0, r0
   13f98:	00000000 	andeq	r0, r0, r0
   13f9c:	00000000 	andeq	r0, r0, r0
   13fa0:	00000000 	andeq	r0, r0, r0
   13fa4:	00000000 	andeq	r0, r0, r0
   13fa8:	00000000 	andeq	r0, r0, r0
   13fac:	00000000 	andeq	r0, r0, r0
   13fb0:	00000000 	andeq	r0, r0, r0
   13fb4:	00000000 	andeq	r0, r0, r0
   13fb8:	00000000 	andeq	r0, r0, r0
   13fbc:	00000000 	andeq	r0, r0, r0
   13fc0:	00000000 	andeq	r0, r0, r0
   13fc4:	00000000 	andeq	r0, r0, r0
   13fc8:	00000000 	andeq	r0, r0, r0
   13fcc:	00000000 	andeq	r0, r0, r0
   13fd0:	00000000 	andeq	r0, r0, r0
   13fd4:	00000000 	andeq	r0, r0, r0
   13fd8:	00000000 	andeq	r0, r0, r0
   13fdc:	00000000 	andeq	r0, r0, r0
   13fe0:	00000000 	andeq	r0, r0, r0
   13fe4:	00000000 	andeq	r0, r0, r0
   13fe8:	00000000 	andeq	r0, r0, r0
   13fec:	00000000 	andeq	r0, r0, r0
   13ff0:	00000000 	andeq	r0, r0, r0
   13ff4:	00000000 	andeq	r0, r0, r0
   13ff8:	00000000 	andeq	r0, r0, r0
   13ffc:	00000000 	andeq	r0, r0, r0
   14000:	00000000 	andeq	r0, r0, r0
   14004:	00000000 	andeq	r0, r0, r0
   14008:	00000000 	andeq	r0, r0, r0
   1400c:	00000000 	andeq	r0, r0, r0
   14010:	00000000 	andeq	r0, r0, r0
   14014:	00000000 	andeq	r0, r0, r0
   14018:	00000000 	andeq	r0, r0, r0
   1401c:	00000000 	andeq	r0, r0, r0
   14020:	00000000 	andeq	r0, r0, r0
   14024:	00000000 	andeq	r0, r0, r0
   14028:	00000000 	andeq	r0, r0, r0
   1402c:	00000000 	andeq	r0, r0, r0
   14030:	00000000 	andeq	r0, r0, r0
   14034:	00000000 	andeq	r0, r0, r0
   14038:	00000000 	andeq	r0, r0, r0
   1403c:	00000000 	andeq	r0, r0, r0
   14040:	00000000 	andeq	r0, r0, r0
   14044:	00000000 	andeq	r0, r0, r0
   14048:	00000000 	andeq	r0, r0, r0
   1404c:	00000000 	andeq	r0, r0, r0
   14050:	00000000 	andeq	r0, r0, r0
   14054:	00000000 	andeq	r0, r0, r0
   14058:	00000000 	andeq	r0, r0, r0
   1405c:	00000000 	andeq	r0, r0, r0
   14060:	00000000 	andeq	r0, r0, r0
   14064:	00000000 	andeq	r0, r0, r0
   14068:	00000000 	andeq	r0, r0, r0
   1406c:	00000000 	andeq	r0, r0, r0
   14070:	00000000 	andeq	r0, r0, r0
   14074:	00000000 	andeq	r0, r0, r0
   14078:	00000000 	andeq	r0, r0, r0
   1407c:	00000000 	andeq	r0, r0, r0
   14080:	00000000 	andeq	r0, r0, r0
   14084:	00000000 	andeq	r0, r0, r0
   14088:	00000000 	andeq	r0, r0, r0
   1408c:	00000000 	andeq	r0, r0, r0
   14090:	00000000 	andeq	r0, r0, r0
   14094:	00000000 	andeq	r0, r0, r0
   14098:	00000000 	andeq	r0, r0, r0
   1409c:	00000000 	andeq	r0, r0, r0
   140a0:	00000000 	andeq	r0, r0, r0
   140a4:	00000000 	andeq	r0, r0, r0
   140a8:	00000000 	andeq	r0, r0, r0
   140ac:	00000000 	andeq	r0, r0, r0
   140b0:	00000000 	andeq	r0, r0, r0
   140b4:	00000000 	andeq	r0, r0, r0
   140b8:	00000000 	andeq	r0, r0, r0
   140bc:	00000000 	andeq	r0, r0, r0
   140c0:	00000000 	andeq	r0, r0, r0
   140c4:	00000000 	andeq	r0, r0, r0
   140c8:	00000000 	andeq	r0, r0, r0
   140cc:	00000000 	andeq	r0, r0, r0
   140d0:	00000000 	andeq	r0, r0, r0
   140d4:	00000000 	andeq	r0, r0, r0
   140d8:	00000000 	andeq	r0, r0, r0
   140dc:	00000000 	andeq	r0, r0, r0
   140e0:	00000000 	andeq	r0, r0, r0
   140e4:	00000000 	andeq	r0, r0, r0
   140e8:	00000000 	andeq	r0, r0, r0
   140ec:	00000000 	andeq	r0, r0, r0
   140f0:	00000000 	andeq	r0, r0, r0
   140f4:	00000000 	andeq	r0, r0, r0
   140f8:	00000000 	andeq	r0, r0, r0
   140fc:	00000000 	andeq	r0, r0, r0
   14100:	00000000 	andeq	r0, r0, r0
   14104:	00000000 	andeq	r0, r0, r0
   14108:	00000000 	andeq	r0, r0, r0
   1410c:	00000000 	andeq	r0, r0, r0
   14110:	00000000 	andeq	r0, r0, r0
   14114:	00000000 	andeq	r0, r0, r0
   14118:	00000000 	andeq	r0, r0, r0
   1411c:	00000000 	andeq	r0, r0, r0
   14120:	00000000 	andeq	r0, r0, r0
   14124:	00000000 	andeq	r0, r0, r0
   14128:	00000000 	andeq	r0, r0, r0
   1412c:	00000000 	andeq	r0, r0, r0
   14130:	00000000 	andeq	r0, r0, r0
   14134:	00000000 	andeq	r0, r0, r0
   14138:	00000000 	andeq	r0, r0, r0
   1413c:	00000000 	andeq	r0, r0, r0
   14140:	00000000 	andeq	r0, r0, r0
   14144:	00000000 	andeq	r0, r0, r0
   14148:	00000000 	andeq	r0, r0, r0
   1414c:	00000000 	andeq	r0, r0, r0
   14150:	00000000 	andeq	r0, r0, r0
   14154:	00000000 	andeq	r0, r0, r0
   14158:	00000000 	andeq	r0, r0, r0
   1415c:	00000000 	andeq	r0, r0, r0
   14160:	00000000 	andeq	r0, r0, r0
   14164:	00000000 	andeq	r0, r0, r0
   14168:	00000000 	andeq	r0, r0, r0
   1416c:	00000000 	andeq	r0, r0, r0
   14170:	00000000 	andeq	r0, r0, r0
   14174:	00000000 	andeq	r0, r0, r0
   14178:	00000000 	andeq	r0, r0, r0
   1417c:	00000000 	andeq	r0, r0, r0
   14180:	00000000 	andeq	r0, r0, r0
   14184:	00000000 	andeq	r0, r0, r0
   14188:	00000000 	andeq	r0, r0, r0
   1418c:	00000000 	andeq	r0, r0, r0
   14190:	00000000 	andeq	r0, r0, r0
   14194:	00000000 	andeq	r0, r0, r0
   14198:	00000000 	andeq	r0, r0, r0
   1419c:	00000000 	andeq	r0, r0, r0
   141a0:	00000000 	andeq	r0, r0, r0
   141a4:	00000000 	andeq	r0, r0, r0
   141a8:	00000000 	andeq	r0, r0, r0
   141ac:	00000000 	andeq	r0, r0, r0
   141b0:	00000000 	andeq	r0, r0, r0
   141b4:	00000000 	andeq	r0, r0, r0
   141b8:	00000000 	andeq	r0, r0, r0
   141bc:	00000000 	andeq	r0, r0, r0
   141c0:	00000000 	andeq	r0, r0, r0
   141c4:	00000000 	andeq	r0, r0, r0
   141c8:	00000000 	andeq	r0, r0, r0
   141cc:	00000000 	andeq	r0, r0, r0
   141d0:	00000000 	andeq	r0, r0, r0
   141d4:	00000000 	andeq	r0, r0, r0
   141d8:	00000000 	andeq	r0, r0, r0
   141dc:	00000000 	andeq	r0, r0, r0
   141e0:	00000000 	andeq	r0, r0, r0
   141e4:	00000000 	andeq	r0, r0, r0
   141e8:	00000000 	andeq	r0, r0, r0
   141ec:	00000000 	andeq	r0, r0, r0
   141f0:	00000000 	andeq	r0, r0, r0
   141f4:	00000000 	andeq	r0, r0, r0
   141f8:	00000000 	andeq	r0, r0, r0
   141fc:	00000000 	andeq	r0, r0, r0
   14200:	00000000 	andeq	r0, r0, r0
   14204:	00000000 	andeq	r0, r0, r0
   14208:	00000000 	andeq	r0, r0, r0
   1420c:	00000000 	andeq	r0, r0, r0
   14210:	00000000 	andeq	r0, r0, r0
   14214:	00000000 	andeq	r0, r0, r0
   14218:	00000000 	andeq	r0, r0, r0
   1421c:	00000000 	andeq	r0, r0, r0
   14220:	00000000 	andeq	r0, r0, r0
   14224:	00000000 	andeq	r0, r0, r0
   14228:	00000000 	andeq	r0, r0, r0
   1422c:	00000000 	andeq	r0, r0, r0
   14230:	00000000 	andeq	r0, r0, r0
   14234:	00000000 	andeq	r0, r0, r0
   14238:	00000000 	andeq	r0, r0, r0
   1423c:	00000000 	andeq	r0, r0, r0
   14240:	00000000 	andeq	r0, r0, r0
   14244:	00000000 	andeq	r0, r0, r0
   14248:	00000000 	andeq	r0, r0, r0
   1424c:	00000000 	andeq	r0, r0, r0
   14250:	00000000 	andeq	r0, r0, r0
   14254:	00000000 	andeq	r0, r0, r0
   14258:	00000000 	andeq	r0, r0, r0
   1425c:	00000000 	andeq	r0, r0, r0
   14260:	00000000 	andeq	r0, r0, r0
   14264:	00000000 	andeq	r0, r0, r0
   14268:	00000000 	andeq	r0, r0, r0
   1426c:	00000000 	andeq	r0, r0, r0
   14270:	00000000 	andeq	r0, r0, r0
   14274:	00000000 	andeq	r0, r0, r0
   14278:	00000000 	andeq	r0, r0, r0
   1427c:	00000000 	andeq	r0, r0, r0
   14280:	00000000 	andeq	r0, r0, r0
   14284:	00000000 	andeq	r0, r0, r0
   14288:	00000000 	andeq	r0, r0, r0
   1428c:	00000000 	andeq	r0, r0, r0
   14290:	00000000 	andeq	r0, r0, r0
   14294:	00000000 	andeq	r0, r0, r0
   14298:	00000000 	andeq	r0, r0, r0
   1429c:	00000000 	andeq	r0, r0, r0
   142a0:	00000000 	andeq	r0, r0, r0
   142a4:	00000000 	andeq	r0, r0, r0
   142a8:	00000000 	andeq	r0, r0, r0
   142ac:	00000000 	andeq	r0, r0, r0
   142b0:	00000000 	andeq	r0, r0, r0
   142b4:	00000000 	andeq	r0, r0, r0
   142b8:	00000000 	andeq	r0, r0, r0
   142bc:	00000000 	andeq	r0, r0, r0
   142c0:	00000000 	andeq	r0, r0, r0
   142c4:	00000000 	andeq	r0, r0, r0
   142c8:	00000000 	andeq	r0, r0, r0
   142cc:	00000000 	andeq	r0, r0, r0
   142d0:	00000000 	andeq	r0, r0, r0
   142d4:	00000000 	andeq	r0, r0, r0
   142d8:	00000000 	andeq	r0, r0, r0
   142dc:	00000000 	andeq	r0, r0, r0
   142e0:	00000000 	andeq	r0, r0, r0
   142e4:	00000000 	andeq	r0, r0, r0
   142e8:	00000000 	andeq	r0, r0, r0
   142ec:	00000000 	andeq	r0, r0, r0
   142f0:	00000000 	andeq	r0, r0, r0
   142f4:	00000000 	andeq	r0, r0, r0
   142f8:	00000000 	andeq	r0, r0, r0
   142fc:	00000000 	andeq	r0, r0, r0
   14300:	00000000 	andeq	r0, r0, r0
   14304:	00000000 	andeq	r0, r0, r0
   14308:	00000000 	andeq	r0, r0, r0
   1430c:	00000000 	andeq	r0, r0, r0
   14310:	00000000 	andeq	r0, r0, r0
   14314:	00000000 	andeq	r0, r0, r0
   14318:	00000000 	andeq	r0, r0, r0
   1431c:	00000000 	andeq	r0, r0, r0
   14320:	00000000 	andeq	r0, r0, r0
   14324:	00000000 	andeq	r0, r0, r0
   14328:	00000000 	andeq	r0, r0, r0
   1432c:	00000000 	andeq	r0, r0, r0
   14330:	00000000 	andeq	r0, r0, r0
   14334:	00000000 	andeq	r0, r0, r0
   14338:	00000000 	andeq	r0, r0, r0
   1433c:	00000000 	andeq	r0, r0, r0
   14340:	00000000 	andeq	r0, r0, r0
   14344:	00000000 	andeq	r0, r0, r0
   14348:	00000000 	andeq	r0, r0, r0
   1434c:	00000000 	andeq	r0, r0, r0
   14350:	00000000 	andeq	r0, r0, r0
   14354:	00000000 	andeq	r0, r0, r0
   14358:	00000000 	andeq	r0, r0, r0
   1435c:	00000000 	andeq	r0, r0, r0
   14360:	00000000 	andeq	r0, r0, r0
   14364:	00000000 	andeq	r0, r0, r0
   14368:	00000000 	andeq	r0, r0, r0
   1436c:	00000000 	andeq	r0, r0, r0
   14370:	00000000 	andeq	r0, r0, r0
   14374:	00000000 	andeq	r0, r0, r0
   14378:	00000000 	andeq	r0, r0, r0
   1437c:	00000000 	andeq	r0, r0, r0
   14380:	00000000 	andeq	r0, r0, r0
   14384:	00000000 	andeq	r0, r0, r0
   14388:	00000000 	andeq	r0, r0, r0
   1438c:	00000000 	andeq	r0, r0, r0
   14390:	00000000 	andeq	r0, r0, r0
   14394:	00000000 	andeq	r0, r0, r0
   14398:	00000000 	andeq	r0, r0, r0
   1439c:	00000000 	andeq	r0, r0, r0
   143a0:	00000000 	andeq	r0, r0, r0
   143a4:	00000000 	andeq	r0, r0, r0
   143a8:	00000000 	andeq	r0, r0, r0
   143ac:	00000000 	andeq	r0, r0, r0
   143b0:	00000000 	andeq	r0, r0, r0
   143b4:	00000000 	andeq	r0, r0, r0
   143b8:	00000000 	andeq	r0, r0, r0
   143bc:	00000000 	andeq	r0, r0, r0
   143c0:	00000000 	andeq	r0, r0, r0
   143c4:	00000000 	andeq	r0, r0, r0
   143c8:	00000000 	andeq	r0, r0, r0
   143cc:	00000000 	andeq	r0, r0, r0
   143d0:	00000000 	andeq	r0, r0, r0
   143d4:	00000000 	andeq	r0, r0, r0
   143d8:	00000000 	andeq	r0, r0, r0
   143dc:	00000000 	andeq	r0, r0, r0
   143e0:	00000000 	andeq	r0, r0, r0
   143e4:	00000000 	andeq	r0, r0, r0
   143e8:	00000000 	andeq	r0, r0, r0
   143ec:	00000000 	andeq	r0, r0, r0
   143f0:	00000000 	andeq	r0, r0, r0
   143f4:	00000000 	andeq	r0, r0, r0
   143f8:	00000000 	andeq	r0, r0, r0
   143fc:	00000000 	andeq	r0, r0, r0
   14400:	00000000 	andeq	r0, r0, r0
   14404:	00000000 	andeq	r0, r0, r0
   14408:	00000000 	andeq	r0, r0, r0
   1440c:	00000000 	andeq	r0, r0, r0
   14410:	00000000 	andeq	r0, r0, r0
   14414:	00000000 	andeq	r0, r0, r0
   14418:	00000000 	andeq	r0, r0, r0
   1441c:	00000000 	andeq	r0, r0, r0
   14420:	00000000 	andeq	r0, r0, r0
   14424:	00000000 	andeq	r0, r0, r0
   14428:	00000000 	andeq	r0, r0, r0
   1442c:	00000000 	andeq	r0, r0, r0
   14430:	00000000 	andeq	r0, r0, r0
   14434:	00000000 	andeq	r0, r0, r0
   14438:	00000000 	andeq	r0, r0, r0
   1443c:	00000000 	andeq	r0, r0, r0
   14440:	00000000 	andeq	r0, r0, r0
   14444:	00000000 	andeq	r0, r0, r0
   14448:	00000000 	andeq	r0, r0, r0
   1444c:	00000000 	andeq	r0, r0, r0
   14450:	00000000 	andeq	r0, r0, r0
   14454:	00000000 	andeq	r0, r0, r0
   14458:	00000000 	andeq	r0, r0, r0
   1445c:	00000000 	andeq	r0, r0, r0
   14460:	00000000 	andeq	r0, r0, r0
   14464:	00000000 	andeq	r0, r0, r0
   14468:	00000000 	andeq	r0, r0, r0
   1446c:	00000000 	andeq	r0, r0, r0
   14470:	00000000 	andeq	r0, r0, r0
   14474:	00000000 	andeq	r0, r0, r0
   14478:	00000000 	andeq	r0, r0, r0
   1447c:	00000000 	andeq	r0, r0, r0
   14480:	00000000 	andeq	r0, r0, r0
   14484:	00000000 	andeq	r0, r0, r0
   14488:	00000000 	andeq	r0, r0, r0
   1448c:	00000000 	andeq	r0, r0, r0
   14490:	00000000 	andeq	r0, r0, r0
   14494:	00000000 	andeq	r0, r0, r0
   14498:	00000000 	andeq	r0, r0, r0
   1449c:	00000000 	andeq	r0, r0, r0
   144a0:	00000000 	andeq	r0, r0, r0
   144a4:	00000000 	andeq	r0, r0, r0
   144a8:	00000000 	andeq	r0, r0, r0
   144ac:	00000000 	andeq	r0, r0, r0
   144b0:	00000000 	andeq	r0, r0, r0
   144b4:	00000000 	andeq	r0, r0, r0
   144b8:	00000000 	andeq	r0, r0, r0
   144bc:	00000000 	andeq	r0, r0, r0
   144c0:	00000000 	andeq	r0, r0, r0
   144c4:	00000000 	andeq	r0, r0, r0
   144c8:	00000000 	andeq	r0, r0, r0
   144cc:	00000000 	andeq	r0, r0, r0
   144d0:	00000000 	andeq	r0, r0, r0
   144d4:	00000000 	andeq	r0, r0, r0
   144d8:	00000000 	andeq	r0, r0, r0
   144dc:	00000000 	andeq	r0, r0, r0
   144e0:	00000000 	andeq	r0, r0, r0
   144e4:	00000000 	andeq	r0, r0, r0
   144e8:	00000000 	andeq	r0, r0, r0
   144ec:	00000000 	andeq	r0, r0, r0
   144f0:	00000000 	andeq	r0, r0, r0
   144f4:	00000000 	andeq	r0, r0, r0
   144f8:	00000000 	andeq	r0, r0, r0
   144fc:	00000000 	andeq	r0, r0, r0
   14500:	00000000 	andeq	r0, r0, r0
   14504:	00000000 	andeq	r0, r0, r0
   14508:	00000000 	andeq	r0, r0, r0
   1450c:	00000000 	andeq	r0, r0, r0
   14510:	00000000 	andeq	r0, r0, r0
   14514:	00000000 	andeq	r0, r0, r0
   14518:	00000000 	andeq	r0, r0, r0
   1451c:	00000000 	andeq	r0, r0, r0
   14520:	00000000 	andeq	r0, r0, r0
   14524:	00000000 	andeq	r0, r0, r0
   14528:	00000000 	andeq	r0, r0, r0
   1452c:	00000000 	andeq	r0, r0, r0
   14530:	00000000 	andeq	r0, r0, r0
   14534:	00000000 	andeq	r0, r0, r0
   14538:	00000000 	andeq	r0, r0, r0
   1453c:	00000000 	andeq	r0, r0, r0
   14540:	00000000 	andeq	r0, r0, r0
   14544:	00000000 	andeq	r0, r0, r0
   14548:	00000000 	andeq	r0, r0, r0
   1454c:	00000000 	andeq	r0, r0, r0
   14550:	00000000 	andeq	r0, r0, r0
   14554:	00000000 	andeq	r0, r0, r0
   14558:	00000000 	andeq	r0, r0, r0
   1455c:	00000000 	andeq	r0, r0, r0
   14560:	00000000 	andeq	r0, r0, r0
   14564:	00000000 	andeq	r0, r0, r0
   14568:	00000000 	andeq	r0, r0, r0
   1456c:	00000000 	andeq	r0, r0, r0
   14570:	00000000 	andeq	r0, r0, r0
   14574:	00000000 	andeq	r0, r0, r0
   14578:	00000000 	andeq	r0, r0, r0
   1457c:	00000000 	andeq	r0, r0, r0
   14580:	00000000 	andeq	r0, r0, r0
   14584:	00000000 	andeq	r0, r0, r0
   14588:	00000000 	andeq	r0, r0, r0
   1458c:	00000000 	andeq	r0, r0, r0
   14590:	00000000 	andeq	r0, r0, r0
   14594:	00000000 	andeq	r0, r0, r0
   14598:	00000000 	andeq	r0, r0, r0
   1459c:	00000000 	andeq	r0, r0, r0
   145a0:	00000000 	andeq	r0, r0, r0
   145a4:	00000000 	andeq	r0, r0, r0
   145a8:	00000000 	andeq	r0, r0, r0
   145ac:	00000000 	andeq	r0, r0, r0
   145b0:	00000000 	andeq	r0, r0, r0
   145b4:	00000000 	andeq	r0, r0, r0
   145b8:	00000000 	andeq	r0, r0, r0
   145bc:	00000000 	andeq	r0, r0, r0
   145c0:	00000000 	andeq	r0, r0, r0
   145c4:	00000000 	andeq	r0, r0, r0
   145c8:	00000000 	andeq	r0, r0, r0
   145cc:	00000000 	andeq	r0, r0, r0
   145d0:	00000000 	andeq	r0, r0, r0
   145d4:	00000000 	andeq	r0, r0, r0
   145d8:	00000000 	andeq	r0, r0, r0
   145dc:	00000000 	andeq	r0, r0, r0
   145e0:	00000000 	andeq	r0, r0, r0
   145e4:	00000000 	andeq	r0, r0, r0
   145e8:	00000000 	andeq	r0, r0, r0
   145ec:	00000000 	andeq	r0, r0, r0
   145f0:	00000000 	andeq	r0, r0, r0
   145f4:	00000000 	andeq	r0, r0, r0
   145f8:	00000000 	andeq	r0, r0, r0
   145fc:	00000000 	andeq	r0, r0, r0
   14600:	00000000 	andeq	r0, r0, r0
   14604:	00000000 	andeq	r0, r0, r0
   14608:	00000000 	andeq	r0, r0, r0
   1460c:	00000000 	andeq	r0, r0, r0
   14610:	00000000 	andeq	r0, r0, r0
   14614:	00000000 	andeq	r0, r0, r0
   14618:	00000000 	andeq	r0, r0, r0
   1461c:	00000000 	andeq	r0, r0, r0
   14620:	00000000 	andeq	r0, r0, r0
   14624:	00000000 	andeq	r0, r0, r0
   14628:	00000000 	andeq	r0, r0, r0
   1462c:	00000000 	andeq	r0, r0, r0
   14630:	00000000 	andeq	r0, r0, r0
   14634:	00000000 	andeq	r0, r0, r0
   14638:	00000000 	andeq	r0, r0, r0
   1463c:	00000000 	andeq	r0, r0, r0
   14640:	00000000 	andeq	r0, r0, r0
   14644:	00000000 	andeq	r0, r0, r0
   14648:	00000000 	andeq	r0, r0, r0
   1464c:	00000000 	andeq	r0, r0, r0
   14650:	00000000 	andeq	r0, r0, r0
   14654:	00000000 	andeq	r0, r0, r0
   14658:	00000000 	andeq	r0, r0, r0
   1465c:	00000000 	andeq	r0, r0, r0
   14660:	00000000 	andeq	r0, r0, r0
   14664:	00000000 	andeq	r0, r0, r0
   14668:	00000000 	andeq	r0, r0, r0
   1466c:	00000000 	andeq	r0, r0, r0
   14670:	00000000 	andeq	r0, r0, r0
   14674:	00000000 	andeq	r0, r0, r0
   14678:	00000000 	andeq	r0, r0, r0
   1467c:	00000000 	andeq	r0, r0, r0
   14680:	00000000 	andeq	r0, r0, r0
   14684:	00000000 	andeq	r0, r0, r0
   14688:	00000000 	andeq	r0, r0, r0
   1468c:	00000000 	andeq	r0, r0, r0
   14690:	00000000 	andeq	r0, r0, r0
   14694:	00000000 	andeq	r0, r0, r0
   14698:	00000000 	andeq	r0, r0, r0
   1469c:	00000000 	andeq	r0, r0, r0
   146a0:	00000000 	andeq	r0, r0, r0
   146a4:	00000000 	andeq	r0, r0, r0
   146a8:	00000000 	andeq	r0, r0, r0
   146ac:	00000000 	andeq	r0, r0, r0
   146b0:	00000000 	andeq	r0, r0, r0
   146b4:	00000000 	andeq	r0, r0, r0
   146b8:	00000000 	andeq	r0, r0, r0
   146bc:	00000000 	andeq	r0, r0, r0
   146c0:	00000000 	andeq	r0, r0, r0
   146c4:	00000000 	andeq	r0, r0, r0
   146c8:	00000000 	andeq	r0, r0, r0
   146cc:	00000000 	andeq	r0, r0, r0
   146d0:	00000000 	andeq	r0, r0, r0
   146d4:	00000000 	andeq	r0, r0, r0
   146d8:	00000000 	andeq	r0, r0, r0
   146dc:	00000000 	andeq	r0, r0, r0
   146e0:	00000000 	andeq	r0, r0, r0
   146e4:	00000000 	andeq	r0, r0, r0
   146e8:	00000000 	andeq	r0, r0, r0
   146ec:	00000000 	andeq	r0, r0, r0
   146f0:	00000000 	andeq	r0, r0, r0
   146f4:	00000000 	andeq	r0, r0, r0
   146f8:	00000000 	andeq	r0, r0, r0
   146fc:	00000000 	andeq	r0, r0, r0
   14700:	00000000 	andeq	r0, r0, r0
   14704:	00000000 	andeq	r0, r0, r0
   14708:	00000000 	andeq	r0, r0, r0
   1470c:	00000000 	andeq	r0, r0, r0
   14710:	00000000 	andeq	r0, r0, r0
   14714:	00000000 	andeq	r0, r0, r0
   14718:	00000000 	andeq	r0, r0, r0
   1471c:	00000000 	andeq	r0, r0, r0
   14720:	00000000 	andeq	r0, r0, r0
   14724:	00000000 	andeq	r0, r0, r0
   14728:	00000000 	andeq	r0, r0, r0
   1472c:	00000000 	andeq	r0, r0, r0
   14730:	00000000 	andeq	r0, r0, r0
   14734:	00000000 	andeq	r0, r0, r0
   14738:	00000000 	andeq	r0, r0, r0
   1473c:	00000000 	andeq	r0, r0, r0
   14740:	00000000 	andeq	r0, r0, r0
   14744:	00000000 	andeq	r0, r0, r0
   14748:	00000000 	andeq	r0, r0, r0
   1474c:	00000000 	andeq	r0, r0, r0
   14750:	00000000 	andeq	r0, r0, r0
   14754:	00000000 	andeq	r0, r0, r0
   14758:	00000000 	andeq	r0, r0, r0
   1475c:	00000000 	andeq	r0, r0, r0
   14760:	00000000 	andeq	r0, r0, r0
   14764:	00000000 	andeq	r0, r0, r0
   14768:	00000000 	andeq	r0, r0, r0
   1476c:	00000000 	andeq	r0, r0, r0
   14770:	00000000 	andeq	r0, r0, r0
   14774:	00000000 	andeq	r0, r0, r0
   14778:	00000000 	andeq	r0, r0, r0
   1477c:	00000000 	andeq	r0, r0, r0
   14780:	00000000 	andeq	r0, r0, r0
   14784:	00000000 	andeq	r0, r0, r0
   14788:	00000000 	andeq	r0, r0, r0
   1478c:	00000000 	andeq	r0, r0, r0
   14790:	00000000 	andeq	r0, r0, r0
   14794:	00000000 	andeq	r0, r0, r0
   14798:	00000000 	andeq	r0, r0, r0
   1479c:	00000000 	andeq	r0, r0, r0
   147a0:	00000000 	andeq	r0, r0, r0
   147a4:	00000000 	andeq	r0, r0, r0
   147a8:	00000000 	andeq	r0, r0, r0
   147ac:	00000000 	andeq	r0, r0, r0
   147b0:	00000000 	andeq	r0, r0, r0
   147b4:	00000000 	andeq	r0, r0, r0
   147b8:	00000000 	andeq	r0, r0, r0
   147bc:	00000000 	andeq	r0, r0, r0
   147c0:	00000000 	andeq	r0, r0, r0
   147c4:	00000000 	andeq	r0, r0, r0
   147c8:	00000000 	andeq	r0, r0, r0
   147cc:	00000000 	andeq	r0, r0, r0
   147d0:	00000000 	andeq	r0, r0, r0
   147d4:	00000000 	andeq	r0, r0, r0
   147d8:	00000000 	andeq	r0, r0, r0
   147dc:	00000000 	andeq	r0, r0, r0
   147e0:	00000000 	andeq	r0, r0, r0
   147e4:	00000000 	andeq	r0, r0, r0
   147e8:	00000000 	andeq	r0, r0, r0
   147ec:	00000000 	andeq	r0, r0, r0
   147f0:	00000000 	andeq	r0, r0, r0
   147f4:	00000000 	andeq	r0, r0, r0
   147f8:	00000000 	andeq	r0, r0, r0
   147fc:	00000000 	andeq	r0, r0, r0
   14800:	00000000 	andeq	r0, r0, r0
   14804:	00000000 	andeq	r0, r0, r0
   14808:	00000000 	andeq	r0, r0, r0
   1480c:	00000000 	andeq	r0, r0, r0
   14810:	00000000 	andeq	r0, r0, r0
   14814:	00000000 	andeq	r0, r0, r0
   14818:	00000000 	andeq	r0, r0, r0
   1481c:	00000000 	andeq	r0, r0, r0
   14820:	00000000 	andeq	r0, r0, r0
   14824:	00000000 	andeq	r0, r0, r0
   14828:	00000000 	andeq	r0, r0, r0
   1482c:	00000000 	andeq	r0, r0, r0
   14830:	00000000 	andeq	r0, r0, r0
   14834:	00000000 	andeq	r0, r0, r0
   14838:	00000000 	andeq	r0, r0, r0
   1483c:	00000000 	andeq	r0, r0, r0
   14840:	00000000 	andeq	r0, r0, r0
   14844:	00000000 	andeq	r0, r0, r0
   14848:	00000000 	andeq	r0, r0, r0
   1484c:	00000000 	andeq	r0, r0, r0
   14850:	00000000 	andeq	r0, r0, r0
   14854:	00000000 	andeq	r0, r0, r0
   14858:	00000000 	andeq	r0, r0, r0
   1485c:	00000000 	andeq	r0, r0, r0
   14860:	00000000 	andeq	r0, r0, r0
   14864:	00000000 	andeq	r0, r0, r0
   14868:	00000000 	andeq	r0, r0, r0
   1486c:	00000000 	andeq	r0, r0, r0
   14870:	00000000 	andeq	r0, r0, r0
   14874:	00000000 	andeq	r0, r0, r0
   14878:	00000000 	andeq	r0, r0, r0
   1487c:	00000000 	andeq	r0, r0, r0
   14880:	00000000 	andeq	r0, r0, r0
   14884:	00000000 	andeq	r0, r0, r0
   14888:	00000000 	andeq	r0, r0, r0
   1488c:	00000000 	andeq	r0, r0, r0
   14890:	00000000 	andeq	r0, r0, r0
   14894:	00000000 	andeq	r0, r0, r0
   14898:	00000000 	andeq	r0, r0, r0
   1489c:	00000000 	andeq	r0, r0, r0
   148a0:	00000000 	andeq	r0, r0, r0
   148a4:	00000000 	andeq	r0, r0, r0
   148a8:	00000000 	andeq	r0, r0, r0
   148ac:	00000000 	andeq	r0, r0, r0
   148b0:	00000000 	andeq	r0, r0, r0
   148b4:	00000000 	andeq	r0, r0, r0
   148b8:	00000000 	andeq	r0, r0, r0
   148bc:	00000000 	andeq	r0, r0, r0
   148c0:	00000000 	andeq	r0, r0, r0
   148c4:	00000000 	andeq	r0, r0, r0
   148c8:	00000000 	andeq	r0, r0, r0
   148cc:	00000000 	andeq	r0, r0, r0
   148d0:	00000000 	andeq	r0, r0, r0
   148d4:	00000000 	andeq	r0, r0, r0
   148d8:	00000000 	andeq	r0, r0, r0
   148dc:	00000000 	andeq	r0, r0, r0
   148e0:	00000000 	andeq	r0, r0, r0
   148e4:	00000000 	andeq	r0, r0, r0
   148e8:	00000000 	andeq	r0, r0, r0
   148ec:	00000000 	andeq	r0, r0, r0
   148f0:	00000000 	andeq	r0, r0, r0
   148f4:	00000000 	andeq	r0, r0, r0
   148f8:	00000000 	andeq	r0, r0, r0
   148fc:	00000000 	andeq	r0, r0, r0
   14900:	00000000 	andeq	r0, r0, r0
   14904:	00000000 	andeq	r0, r0, r0
   14908:	00000000 	andeq	r0, r0, r0
   1490c:	00000000 	andeq	r0, r0, r0
   14910:	00000000 	andeq	r0, r0, r0
   14914:	00000000 	andeq	r0, r0, r0
   14918:	00000000 	andeq	r0, r0, r0
   1491c:	00000000 	andeq	r0, r0, r0
   14920:	00000000 	andeq	r0, r0, r0
   14924:	00000000 	andeq	r0, r0, r0
   14928:	00000000 	andeq	r0, r0, r0
   1492c:	00000000 	andeq	r0, r0, r0
   14930:	00000000 	andeq	r0, r0, r0
   14934:	00000000 	andeq	r0, r0, r0
   14938:	00000000 	andeq	r0, r0, r0
   1493c:	00000000 	andeq	r0, r0, r0
   14940:	00000000 	andeq	r0, r0, r0
   14944:	00000000 	andeq	r0, r0, r0
   14948:	00000000 	andeq	r0, r0, r0
   1494c:	00000000 	andeq	r0, r0, r0
   14950:	00000000 	andeq	r0, r0, r0
   14954:	00000000 	andeq	r0, r0, r0
   14958:	00000000 	andeq	r0, r0, r0
   1495c:	00000000 	andeq	r0, r0, r0
   14960:	00000000 	andeq	r0, r0, r0
   14964:	00000000 	andeq	r0, r0, r0
   14968:	00000000 	andeq	r0, r0, r0
   1496c:	00000000 	andeq	r0, r0, r0
   14970:	00000000 	andeq	r0, r0, r0
   14974:	00000000 	andeq	r0, r0, r0
   14978:	00000000 	andeq	r0, r0, r0
   1497c:	00000000 	andeq	r0, r0, r0
   14980:	00000000 	andeq	r0, r0, r0
   14984:	00000000 	andeq	r0, r0, r0
   14988:	00000000 	andeq	r0, r0, r0
   1498c:	00000000 	andeq	r0, r0, r0
   14990:	00000000 	andeq	r0, r0, r0
   14994:	00000000 	andeq	r0, r0, r0
   14998:	00000000 	andeq	r0, r0, r0
   1499c:	00000000 	andeq	r0, r0, r0
   149a0:	00000000 	andeq	r0, r0, r0
   149a4:	00000000 	andeq	r0, r0, r0
   149a8:	00000000 	andeq	r0, r0, r0
   149ac:	00000000 	andeq	r0, r0, r0
   149b0:	00000000 	andeq	r0, r0, r0
   149b4:	00000000 	andeq	r0, r0, r0
   149b8:	00000000 	andeq	r0, r0, r0
   149bc:	00000000 	andeq	r0, r0, r0
   149c0:	00000000 	andeq	r0, r0, r0
   149c4:	00000000 	andeq	r0, r0, r0
   149c8:	00000000 	andeq	r0, r0, r0
   149cc:	00000000 	andeq	r0, r0, r0
   149d0:	00000000 	andeq	r0, r0, r0
   149d4:	00000000 	andeq	r0, r0, r0
   149d8:	00000000 	andeq	r0, r0, r0
   149dc:	00000000 	andeq	r0, r0, r0
   149e0:	00000000 	andeq	r0, r0, r0
   149e4:	00000000 	andeq	r0, r0, r0
   149e8:	00000000 	andeq	r0, r0, r0
   149ec:	00000000 	andeq	r0, r0, r0
   149f0:	00000000 	andeq	r0, r0, r0
   149f4:	00000000 	andeq	r0, r0, r0
   149f8:	00000000 	andeq	r0, r0, r0
   149fc:	00000000 	andeq	r0, r0, r0
   14a00:	00000000 	andeq	r0, r0, r0
   14a04:	00000000 	andeq	r0, r0, r0
   14a08:	00000000 	andeq	r0, r0, r0
   14a0c:	00000000 	andeq	r0, r0, r0
   14a10:	00000000 	andeq	r0, r0, r0
   14a14:	00000000 	andeq	r0, r0, r0
   14a18:	00000000 	andeq	r0, r0, r0
   14a1c:	00000000 	andeq	r0, r0, r0
   14a20:	00000000 	andeq	r0, r0, r0
   14a24:	00000000 	andeq	r0, r0, r0
   14a28:	00000000 	andeq	r0, r0, r0
   14a2c:	00000000 	andeq	r0, r0, r0
   14a30:	00000000 	andeq	r0, r0, r0
   14a34:	00000000 	andeq	r0, r0, r0
   14a38:	00000000 	andeq	r0, r0, r0
   14a3c:	00000000 	andeq	r0, r0, r0
   14a40:	00000000 	andeq	r0, r0, r0
   14a44:	00000000 	andeq	r0, r0, r0
   14a48:	00000000 	andeq	r0, r0, r0
   14a4c:	00000000 	andeq	r0, r0, r0
   14a50:	00000000 	andeq	r0, r0, r0
   14a54:	00000000 	andeq	r0, r0, r0
   14a58:	00000000 	andeq	r0, r0, r0
   14a5c:	00000000 	andeq	r0, r0, r0
   14a60:	00000000 	andeq	r0, r0, r0
   14a64:	00000000 	andeq	r0, r0, r0
   14a68:	00000000 	andeq	r0, r0, r0
   14a6c:	00000000 	andeq	r0, r0, r0
   14a70:	00000000 	andeq	r0, r0, r0
   14a74:	00000000 	andeq	r0, r0, r0
   14a78:	00000000 	andeq	r0, r0, r0
   14a7c:	00000000 	andeq	r0, r0, r0
   14a80:	00000000 	andeq	r0, r0, r0
   14a84:	00000000 	andeq	r0, r0, r0
   14a88:	00000000 	andeq	r0, r0, r0
   14a8c:	00000000 	andeq	r0, r0, r0
   14a90:	00000000 	andeq	r0, r0, r0
   14a94:	00000000 	andeq	r0, r0, r0
   14a98:	00000000 	andeq	r0, r0, r0
   14a9c:	00000000 	andeq	r0, r0, r0
   14aa0:	00000000 	andeq	r0, r0, r0
   14aa4:	00000000 	andeq	r0, r0, r0
   14aa8:	00000000 	andeq	r0, r0, r0
   14aac:	00000000 	andeq	r0, r0, r0
   14ab0:	00000000 	andeq	r0, r0, r0
   14ab4:	00000000 	andeq	r0, r0, r0
   14ab8:	00000000 	andeq	r0, r0, r0
   14abc:	00000000 	andeq	r0, r0, r0
   14ac0:	00000000 	andeq	r0, r0, r0
   14ac4:	00000000 	andeq	r0, r0, r0
   14ac8:	00000000 	andeq	r0, r0, r0
   14acc:	00000000 	andeq	r0, r0, r0
   14ad0:	00000000 	andeq	r0, r0, r0
   14ad4:	00000000 	andeq	r0, r0, r0
   14ad8:	00000000 	andeq	r0, r0, r0
   14adc:	00000000 	andeq	r0, r0, r0
   14ae0:	00000000 	andeq	r0, r0, r0
   14ae4:	00000000 	andeq	r0, r0, r0
   14ae8:	00000000 	andeq	r0, r0, r0
   14aec:	00000000 	andeq	r0, r0, r0
   14af0:	00000000 	andeq	r0, r0, r0
   14af4:	00000000 	andeq	r0, r0, r0
   14af8:	00000000 	andeq	r0, r0, r0
   14afc:	00000000 	andeq	r0, r0, r0
   14b00:	00000000 	andeq	r0, r0, r0
   14b04:	00000000 	andeq	r0, r0, r0
   14b08:	00000000 	andeq	r0, r0, r0
   14b0c:	00000000 	andeq	r0, r0, r0
   14b10:	00000000 	andeq	r0, r0, r0
   14b14:	00000000 	andeq	r0, r0, r0
   14b18:	00000000 	andeq	r0, r0, r0
   14b1c:	00000000 	andeq	r0, r0, r0
   14b20:	00000000 	andeq	r0, r0, r0
   14b24:	00000000 	andeq	r0, r0, r0
   14b28:	00000000 	andeq	r0, r0, r0
   14b2c:	00000000 	andeq	r0, r0, r0
   14b30:	00000000 	andeq	r0, r0, r0
   14b34:	00000000 	andeq	r0, r0, r0
   14b38:	00000000 	andeq	r0, r0, r0
   14b3c:	00000000 	andeq	r0, r0, r0
   14b40:	00000000 	andeq	r0, r0, r0
   14b44:	00000000 	andeq	r0, r0, r0
   14b48:	00000000 	andeq	r0, r0, r0
   14b4c:	00000000 	andeq	r0, r0, r0
   14b50:	00000000 	andeq	r0, r0, r0
   14b54:	00000000 	andeq	r0, r0, r0
   14b58:	00000000 	andeq	r0, r0, r0
   14b5c:	00000000 	andeq	r0, r0, r0
   14b60:	00000000 	andeq	r0, r0, r0
   14b64:	00000000 	andeq	r0, r0, r0
   14b68:	00000000 	andeq	r0, r0, r0
   14b6c:	00000000 	andeq	r0, r0, r0
   14b70:	00000000 	andeq	r0, r0, r0
   14b74:	00000000 	andeq	r0, r0, r0
   14b78:	00000000 	andeq	r0, r0, r0
   14b7c:	00000000 	andeq	r0, r0, r0
   14b80:	00000000 	andeq	r0, r0, r0
   14b84:	00000000 	andeq	r0, r0, r0
   14b88:	00000000 	andeq	r0, r0, r0
   14b8c:	00000000 	andeq	r0, r0, r0
   14b90:	00000000 	andeq	r0, r0, r0
   14b94:	00000000 	andeq	r0, r0, r0
   14b98:	00000000 	andeq	r0, r0, r0
   14b9c:	00000000 	andeq	r0, r0, r0
   14ba0:	00000000 	andeq	r0, r0, r0
   14ba4:	00000000 	andeq	r0, r0, r0
   14ba8:	00000000 	andeq	r0, r0, r0
   14bac:	00000000 	andeq	r0, r0, r0
   14bb0:	00000000 	andeq	r0, r0, r0
   14bb4:	00000000 	andeq	r0, r0, r0
   14bb8:	00000000 	andeq	r0, r0, r0
   14bbc:	00000000 	andeq	r0, r0, r0
   14bc0:	00000000 	andeq	r0, r0, r0
   14bc4:	00000000 	andeq	r0, r0, r0
   14bc8:	00000000 	andeq	r0, r0, r0
   14bcc:	00000000 	andeq	r0, r0, r0
   14bd0:	00000000 	andeq	r0, r0, r0
   14bd4:	00000000 	andeq	r0, r0, r0
   14bd8:	00000000 	andeq	r0, r0, r0
   14bdc:	00000000 	andeq	r0, r0, r0
   14be0:	00000000 	andeq	r0, r0, r0
   14be4:	00000000 	andeq	r0, r0, r0
   14be8:	00000000 	andeq	r0, r0, r0
   14bec:	00000000 	andeq	r0, r0, r0
   14bf0:	00000000 	andeq	r0, r0, r0
   14bf4:	00000000 	andeq	r0, r0, r0
   14bf8:	00000000 	andeq	r0, r0, r0
   14bfc:	00000000 	andeq	r0, r0, r0
   14c00:	00000000 	andeq	r0, r0, r0
   14c04:	00000000 	andeq	r0, r0, r0
   14c08:	00000000 	andeq	r0, r0, r0
   14c0c:	00000000 	andeq	r0, r0, r0
   14c10:	00000000 	andeq	r0, r0, r0
   14c14:	00000000 	andeq	r0, r0, r0
   14c18:	00000000 	andeq	r0, r0, r0
   14c1c:	00000000 	andeq	r0, r0, r0
   14c20:	00000000 	andeq	r0, r0, r0
   14c24:	00000000 	andeq	r0, r0, r0
   14c28:	00000000 	andeq	r0, r0, r0
   14c2c:	00000000 	andeq	r0, r0, r0
   14c30:	00000000 	andeq	r0, r0, r0
   14c34:	00000000 	andeq	r0, r0, r0
   14c38:	00000000 	andeq	r0, r0, r0
   14c3c:	00000000 	andeq	r0, r0, r0
   14c40:	00000000 	andeq	r0, r0, r0
   14c44:	00000000 	andeq	r0, r0, r0
   14c48:	00000000 	andeq	r0, r0, r0
   14c4c:	00000000 	andeq	r0, r0, r0
   14c50:	00000000 	andeq	r0, r0, r0
   14c54:	00000000 	andeq	r0, r0, r0
   14c58:	00000000 	andeq	r0, r0, r0
   14c5c:	00000000 	andeq	r0, r0, r0
   14c60:	00000000 	andeq	r0, r0, r0
   14c64:	00000000 	andeq	r0, r0, r0
   14c68:	00000000 	andeq	r0, r0, r0
   14c6c:	00000000 	andeq	r0, r0, r0
   14c70:	00000000 	andeq	r0, r0, r0
   14c74:	00000000 	andeq	r0, r0, r0
   14c78:	00000000 	andeq	r0, r0, r0
   14c7c:	00000000 	andeq	r0, r0, r0
   14c80:	00000000 	andeq	r0, r0, r0
   14c84:	00000000 	andeq	r0, r0, r0
   14c88:	00000000 	andeq	r0, r0, r0
   14c8c:	00000000 	andeq	r0, r0, r0
   14c90:	00000000 	andeq	r0, r0, r0
   14c94:	00000000 	andeq	r0, r0, r0
   14c98:	00000000 	andeq	r0, r0, r0
   14c9c:	00000000 	andeq	r0, r0, r0
   14ca0:	00000000 	andeq	r0, r0, r0
   14ca4:	00000000 	andeq	r0, r0, r0
   14ca8:	00000000 	andeq	r0, r0, r0
   14cac:	00000000 	andeq	r0, r0, r0
   14cb0:	00000000 	andeq	r0, r0, r0
   14cb4:	00000000 	andeq	r0, r0, r0
   14cb8:	00000000 	andeq	r0, r0, r0
   14cbc:	00000000 	andeq	r0, r0, r0
   14cc0:	00000000 	andeq	r0, r0, r0
   14cc4:	00000000 	andeq	r0, r0, r0
   14cc8:	00000000 	andeq	r0, r0, r0
   14ccc:	00000000 	andeq	r0, r0, r0
   14cd0:	00000000 	andeq	r0, r0, r0
   14cd4:	00000000 	andeq	r0, r0, r0
   14cd8:	00000000 	andeq	r0, r0, r0
   14cdc:	00000000 	andeq	r0, r0, r0
   14ce0:	00000000 	andeq	r0, r0, r0
   14ce4:	00000000 	andeq	r0, r0, r0
   14ce8:	00000000 	andeq	r0, r0, r0
   14cec:	00000000 	andeq	r0, r0, r0
   14cf0:	00000000 	andeq	r0, r0, r0
   14cf4:	00000000 	andeq	r0, r0, r0
   14cf8:	00000000 	andeq	r0, r0, r0
   14cfc:	00000000 	andeq	r0, r0, r0
   14d00:	00000000 	andeq	r0, r0, r0
   14d04:	00000000 	andeq	r0, r0, r0
   14d08:	00000000 	andeq	r0, r0, r0
   14d0c:	00000000 	andeq	r0, r0, r0
   14d10:	00000000 	andeq	r0, r0, r0
   14d14:	00000000 	andeq	r0, r0, r0
   14d18:	00000000 	andeq	r0, r0, r0
   14d1c:	00000000 	andeq	r0, r0, r0
   14d20:	00000000 	andeq	r0, r0, r0
   14d24:	00000000 	andeq	r0, r0, r0
   14d28:	00000000 	andeq	r0, r0, r0
   14d2c:	00000000 	andeq	r0, r0, r0
   14d30:	00000000 	andeq	r0, r0, r0
   14d34:	00000000 	andeq	r0, r0, r0
   14d38:	00000000 	andeq	r0, r0, r0
   14d3c:	00000000 	andeq	r0, r0, r0
   14d40:	00000000 	andeq	r0, r0, r0
   14d44:	00000000 	andeq	r0, r0, r0
   14d48:	00000000 	andeq	r0, r0, r0
   14d4c:	00000000 	andeq	r0, r0, r0
   14d50:	00000000 	andeq	r0, r0, r0
   14d54:	00000000 	andeq	r0, r0, r0
   14d58:	00000000 	andeq	r0, r0, r0
   14d5c:	00000000 	andeq	r0, r0, r0
   14d60:	00000000 	andeq	r0, r0, r0
   14d64:	00000000 	andeq	r0, r0, r0
   14d68:	00000000 	andeq	r0, r0, r0
   14d6c:	00000000 	andeq	r0, r0, r0
   14d70:	00000000 	andeq	r0, r0, r0
   14d74:	00000000 	andeq	r0, r0, r0
   14d78:	00000000 	andeq	r0, r0, r0
   14d7c:	00000000 	andeq	r0, r0, r0
   14d80:	00000000 	andeq	r0, r0, r0
   14d84:	00000000 	andeq	r0, r0, r0
   14d88:	00000000 	andeq	r0, r0, r0
   14d8c:	00000000 	andeq	r0, r0, r0
   14d90:	00000000 	andeq	r0, r0, r0
   14d94:	00000000 	andeq	r0, r0, r0
   14d98:	00000000 	andeq	r0, r0, r0
   14d9c:	00000000 	andeq	r0, r0, r0
   14da0:	00000000 	andeq	r0, r0, r0
   14da4:	00000000 	andeq	r0, r0, r0
   14da8:	00000000 	andeq	r0, r0, r0
   14dac:	00000000 	andeq	r0, r0, r0
   14db0:	00000000 	andeq	r0, r0, r0
   14db4:	00000000 	andeq	r0, r0, r0
   14db8:	00000000 	andeq	r0, r0, r0
   14dbc:	00000000 	andeq	r0, r0, r0
   14dc0:	00000000 	andeq	r0, r0, r0
   14dc4:	00000000 	andeq	r0, r0, r0
   14dc8:	00000000 	andeq	r0, r0, r0
   14dcc:	00000000 	andeq	r0, r0, r0
   14dd0:	00000000 	andeq	r0, r0, r0
   14dd4:	00000000 	andeq	r0, r0, r0
   14dd8:	00000000 	andeq	r0, r0, r0
   14ddc:	00000000 	andeq	r0, r0, r0
   14de0:	00000000 	andeq	r0, r0, r0
   14de4:	00000000 	andeq	r0, r0, r0
   14de8:	00000000 	andeq	r0, r0, r0
   14dec:	00000000 	andeq	r0, r0, r0
   14df0:	00000000 	andeq	r0, r0, r0
   14df4:	00000000 	andeq	r0, r0, r0
   14df8:	00000000 	andeq	r0, r0, r0
   14dfc:	00000000 	andeq	r0, r0, r0
   14e00:	00000000 	andeq	r0, r0, r0
   14e04:	00000000 	andeq	r0, r0, r0
   14e08:	00000000 	andeq	r0, r0, r0
   14e0c:	00000000 	andeq	r0, r0, r0
   14e10:	00000000 	andeq	r0, r0, r0
   14e14:	00000000 	andeq	r0, r0, r0
   14e18:	00000000 	andeq	r0, r0, r0
   14e1c:	00000000 	andeq	r0, r0, r0
   14e20:	00000000 	andeq	r0, r0, r0
   14e24:	00000000 	andeq	r0, r0, r0
   14e28:	00000000 	andeq	r0, r0, r0
   14e2c:	00000000 	andeq	r0, r0, r0
   14e30:	00000000 	andeq	r0, r0, r0
   14e34:	00000000 	andeq	r0, r0, r0
   14e38:	00000000 	andeq	r0, r0, r0
   14e3c:	00000000 	andeq	r0, r0, r0
   14e40:	00000000 	andeq	r0, r0, r0
   14e44:	00000000 	andeq	r0, r0, r0
   14e48:	00000000 	andeq	r0, r0, r0
   14e4c:	00000000 	andeq	r0, r0, r0
   14e50:	00000000 	andeq	r0, r0, r0
   14e54:	00000000 	andeq	r0, r0, r0
   14e58:	00000000 	andeq	r0, r0, r0
   14e5c:	00000000 	andeq	r0, r0, r0
   14e60:	00000000 	andeq	r0, r0, r0
   14e64:	00000000 	andeq	r0, r0, r0
   14e68:	00000000 	andeq	r0, r0, r0
   14e6c:	00000000 	andeq	r0, r0, r0
   14e70:	00000000 	andeq	r0, r0, r0
   14e74:	00000000 	andeq	r0, r0, r0
   14e78:	00000000 	andeq	r0, r0, r0
   14e7c:	00000000 	andeq	r0, r0, r0
   14e80:	00000000 	andeq	r0, r0, r0
   14e84:	00000000 	andeq	r0, r0, r0
   14e88:	00000000 	andeq	r0, r0, r0
   14e8c:	00000000 	andeq	r0, r0, r0
   14e90:	00000000 	andeq	r0, r0, r0
   14e94:	00000000 	andeq	r0, r0, r0
   14e98:	00000000 	andeq	r0, r0, r0
   14e9c:	00000000 	andeq	r0, r0, r0
   14ea0:	00000000 	andeq	r0, r0, r0
   14ea4:	00000000 	andeq	r0, r0, r0
   14ea8:	00000000 	andeq	r0, r0, r0
   14eac:	00000000 	andeq	r0, r0, r0
   14eb0:	00000000 	andeq	r0, r0, r0
   14eb4:	00000000 	andeq	r0, r0, r0
   14eb8:	00000000 	andeq	r0, r0, r0
   14ebc:	00000000 	andeq	r0, r0, r0
   14ec0:	00000000 	andeq	r0, r0, r0
   14ec4:	00000000 	andeq	r0, r0, r0
   14ec8:	00000000 	andeq	r0, r0, r0
   14ecc:	00000000 	andeq	r0, r0, r0
   14ed0:	00000000 	andeq	r0, r0, r0
   14ed4:	00000000 	andeq	r0, r0, r0
   14ed8:	00000000 	andeq	r0, r0, r0
   14edc:	00000000 	andeq	r0, r0, r0
   14ee0:	00000000 	andeq	r0, r0, r0
   14ee4:	00000000 	andeq	r0, r0, r0
   14ee8:	00000000 	andeq	r0, r0, r0
   14eec:	00000000 	andeq	r0, r0, r0
   14ef0:	00000000 	andeq	r0, r0, r0
   14ef4:	00000000 	andeq	r0, r0, r0
   14ef8:	00000000 	andeq	r0, r0, r0
   14efc:	00000000 	andeq	r0, r0, r0
   14f00:	00000000 	andeq	r0, r0, r0
   14f04:	00000000 	andeq	r0, r0, r0
   14f08:	00000000 	andeq	r0, r0, r0
   14f0c:	00000000 	andeq	r0, r0, r0
   14f10:	00000000 	andeq	r0, r0, r0
   14f14:	00000000 	andeq	r0, r0, r0
   14f18:	00000000 	andeq	r0, r0, r0
   14f1c:	00000000 	andeq	r0, r0, r0
   14f20:	00000000 	andeq	r0, r0, r0
   14f24:	00000000 	andeq	r0, r0, r0
   14f28:	00000000 	andeq	r0, r0, r0
   14f2c:	00000000 	andeq	r0, r0, r0
   14f30:	00000000 	andeq	r0, r0, r0
   14f34:	00000000 	andeq	r0, r0, r0
   14f38:	00000000 	andeq	r0, r0, r0
   14f3c:	00000000 	andeq	r0, r0, r0
   14f40:	00000000 	andeq	r0, r0, r0
   14f44:	00000000 	andeq	r0, r0, r0
   14f48:	00000000 	andeq	r0, r0, r0
   14f4c:	00000000 	andeq	r0, r0, r0
   14f50:	00000000 	andeq	r0, r0, r0
   14f54:	00000000 	andeq	r0, r0, r0
   14f58:	00000000 	andeq	r0, r0, r0
   14f5c:	00000000 	andeq	r0, r0, r0
   14f60:	00000000 	andeq	r0, r0, r0
   14f64:	00000000 	andeq	r0, r0, r0
   14f68:	00000000 	andeq	r0, r0, r0
   14f6c:	00000000 	andeq	r0, r0, r0
   14f70:	00000000 	andeq	r0, r0, r0
   14f74:	00000000 	andeq	r0, r0, r0
   14f78:	00000000 	andeq	r0, r0, r0
   14f7c:	00000000 	andeq	r0, r0, r0
   14f80:	00000000 	andeq	r0, r0, r0
   14f84:	00000000 	andeq	r0, r0, r0
   14f88:	00000000 	andeq	r0, r0, r0
   14f8c:	00000000 	andeq	r0, r0, r0
   14f90:	00000000 	andeq	r0, r0, r0
   14f94:	00000000 	andeq	r0, r0, r0
   14f98:	00000000 	andeq	r0, r0, r0
   14f9c:	00000000 	andeq	r0, r0, r0
   14fa0:	00000000 	andeq	r0, r0, r0
   14fa4:	00000000 	andeq	r0, r0, r0
   14fa8:	00000000 	andeq	r0, r0, r0
   14fac:	00000000 	andeq	r0, r0, r0
   14fb0:	00000000 	andeq	r0, r0, r0
   14fb4:	00000000 	andeq	r0, r0, r0
   14fb8:	00000000 	andeq	r0, r0, r0
   14fbc:	00000000 	andeq	r0, r0, r0
   14fc0:	00000000 	andeq	r0, r0, r0
   14fc4:	00000000 	andeq	r0, r0, r0
   14fc8:	00000000 	andeq	r0, r0, r0
   14fcc:	00000000 	andeq	r0, r0, r0
   14fd0:	00000000 	andeq	r0, r0, r0
   14fd4:	00000000 	andeq	r0, r0, r0
   14fd8:	00000000 	andeq	r0, r0, r0
   14fdc:	00000000 	andeq	r0, r0, r0
   14fe0:	00000000 	andeq	r0, r0, r0
   14fe4:	00000000 	andeq	r0, r0, r0
   14fe8:	00000000 	andeq	r0, r0, r0
   14fec:	00000000 	andeq	r0, r0, r0
   14ff0:	00000000 	andeq	r0, r0, r0
   14ff4:	00000000 	andeq	r0, r0, r0
   14ff8:	00000000 	andeq	r0, r0, r0
   14ffc:	00000000 	andeq	r0, r0, r0
   15000:	00000000 	andeq	r0, r0, r0
   15004:	00000000 	andeq	r0, r0, r0
   15008:	00000000 	andeq	r0, r0, r0
   1500c:	00000000 	andeq	r0, r0, r0
   15010:	00000000 	andeq	r0, r0, r0
   15014:	00000000 	andeq	r0, r0, r0
   15018:	00000000 	andeq	r0, r0, r0
   1501c:	00000000 	andeq	r0, r0, r0
   15020:	00000000 	andeq	r0, r0, r0
   15024:	00000000 	andeq	r0, r0, r0
   15028:	00000000 	andeq	r0, r0, r0
   1502c:	00000000 	andeq	r0, r0, r0
   15030:	00000000 	andeq	r0, r0, r0
   15034:	00000000 	andeq	r0, r0, r0
   15038:	00000000 	andeq	r0, r0, r0
   1503c:	00000000 	andeq	r0, r0, r0
   15040:	00000000 	andeq	r0, r0, r0
   15044:	00000000 	andeq	r0, r0, r0
   15048:	00000000 	andeq	r0, r0, r0
   1504c:	00000000 	andeq	r0, r0, r0
   15050:	00000000 	andeq	r0, r0, r0
   15054:	00000000 	andeq	r0, r0, r0
   15058:	00000000 	andeq	r0, r0, r0
   1505c:	00000000 	andeq	r0, r0, r0
   15060:	00000000 	andeq	r0, r0, r0
   15064:	00000000 	andeq	r0, r0, r0
   15068:	00000000 	andeq	r0, r0, r0
   1506c:	00000000 	andeq	r0, r0, r0
   15070:	00000000 	andeq	r0, r0, r0
   15074:	00000000 	andeq	r0, r0, r0
   15078:	00000000 	andeq	r0, r0, r0
   1507c:	00000000 	andeq	r0, r0, r0
   15080:	00000000 	andeq	r0, r0, r0
   15084:	00000000 	andeq	r0, r0, r0
   15088:	00000000 	andeq	r0, r0, r0
   1508c:	00000000 	andeq	r0, r0, r0
   15090:	00000000 	andeq	r0, r0, r0
   15094:	00000000 	andeq	r0, r0, r0
   15098:	00000000 	andeq	r0, r0, r0
   1509c:	00000000 	andeq	r0, r0, r0
   150a0:	00000000 	andeq	r0, r0, r0
   150a4:	00000000 	andeq	r0, r0, r0
   150a8:	00000000 	andeq	r0, r0, r0
   150ac:	00000000 	andeq	r0, r0, r0
   150b0:	00000000 	andeq	r0, r0, r0
   150b4:	00000000 	andeq	r0, r0, r0
   150b8:	00000000 	andeq	r0, r0, r0
   150bc:	00000000 	andeq	r0, r0, r0
   150c0:	00000000 	andeq	r0, r0, r0
   150c4:	00000000 	andeq	r0, r0, r0
   150c8:	00000000 	andeq	r0, r0, r0
   150cc:	00000000 	andeq	r0, r0, r0
   150d0:	00000000 	andeq	r0, r0, r0
   150d4:	00000000 	andeq	r0, r0, r0
   150d8:	00000000 	andeq	r0, r0, r0
   150dc:	00000000 	andeq	r0, r0, r0
   150e0:	00000000 	andeq	r0, r0, r0
   150e4:	00000000 	andeq	r0, r0, r0
   150e8:	00000000 	andeq	r0, r0, r0
   150ec:	00000000 	andeq	r0, r0, r0
   150f0:	00000000 	andeq	r0, r0, r0
   150f4:	00000000 	andeq	r0, r0, r0
   150f8:	00000000 	andeq	r0, r0, r0
   150fc:	00000000 	andeq	r0, r0, r0
   15100:	00000000 	andeq	r0, r0, r0
   15104:	00000000 	andeq	r0, r0, r0
   15108:	00000000 	andeq	r0, r0, r0
   1510c:	00000000 	andeq	r0, r0, r0
   15110:	00000000 	andeq	r0, r0, r0
   15114:	00000000 	andeq	r0, r0, r0
   15118:	00000000 	andeq	r0, r0, r0
   1511c:	00000000 	andeq	r0, r0, r0
   15120:	00000000 	andeq	r0, r0, r0
   15124:	00000000 	andeq	r0, r0, r0
   15128:	00000000 	andeq	r0, r0, r0
   1512c:	00000000 	andeq	r0, r0, r0
   15130:	00000000 	andeq	r0, r0, r0
   15134:	00000000 	andeq	r0, r0, r0
   15138:	00000000 	andeq	r0, r0, r0
   1513c:	00000000 	andeq	r0, r0, r0
   15140:	00000000 	andeq	r0, r0, r0
   15144:	00000000 	andeq	r0, r0, r0
   15148:	00000000 	andeq	r0, r0, r0
   1514c:	00000000 	andeq	r0, r0, r0
   15150:	00000000 	andeq	r0, r0, r0
   15154:	00000000 	andeq	r0, r0, r0
   15158:	00000000 	andeq	r0, r0, r0
   1515c:	00000000 	andeq	r0, r0, r0
   15160:	00000000 	andeq	r0, r0, r0
   15164:	00000000 	andeq	r0, r0, r0
   15168:	00000000 	andeq	r0, r0, r0
   1516c:	00000000 	andeq	r0, r0, r0
   15170:	00000000 	andeq	r0, r0, r0
   15174:	00000000 	andeq	r0, r0, r0
   15178:	00000000 	andeq	r0, r0, r0
   1517c:	00000000 	andeq	r0, r0, r0
   15180:	00000000 	andeq	r0, r0, r0
   15184:	00000000 	andeq	r0, r0, r0
   15188:	00000000 	andeq	r0, r0, r0
   1518c:	00000000 	andeq	r0, r0, r0
   15190:	00000000 	andeq	r0, r0, r0
   15194:	00000000 	andeq	r0, r0, r0
   15198:	00000000 	andeq	r0, r0, r0
   1519c:	00000000 	andeq	r0, r0, r0
   151a0:	00000000 	andeq	r0, r0, r0
   151a4:	00000000 	andeq	r0, r0, r0
   151a8:	00000000 	andeq	r0, r0, r0
   151ac:	00000000 	andeq	r0, r0, r0
   151b0:	00000000 	andeq	r0, r0, r0
   151b4:	00000000 	andeq	r0, r0, r0
   151b8:	00000000 	andeq	r0, r0, r0
   151bc:	00000000 	andeq	r0, r0, r0
   151c0:	00000000 	andeq	r0, r0, r0
   151c4:	00000000 	andeq	r0, r0, r0
   151c8:	00000000 	andeq	r0, r0, r0
   151cc:	00000000 	andeq	r0, r0, r0
   151d0:	00000000 	andeq	r0, r0, r0
   151d4:	00000000 	andeq	r0, r0, r0
   151d8:	00000000 	andeq	r0, r0, r0
   151dc:	00000000 	andeq	r0, r0, r0
   151e0:	00000000 	andeq	r0, r0, r0
   151e4:	00000000 	andeq	r0, r0, r0
   151e8:	00000000 	andeq	r0, r0, r0
   151ec:	00000000 	andeq	r0, r0, r0
   151f0:	00000000 	andeq	r0, r0, r0
   151f4:	00000000 	andeq	r0, r0, r0
   151f8:	00000000 	andeq	r0, r0, r0
   151fc:	00000000 	andeq	r0, r0, r0
   15200:	00000000 	andeq	r0, r0, r0
   15204:	00000000 	andeq	r0, r0, r0
   15208:	00000000 	andeq	r0, r0, r0
   1520c:	00000000 	andeq	r0, r0, r0
   15210:	00000000 	andeq	r0, r0, r0
   15214:	00000000 	andeq	r0, r0, r0
   15218:	00000000 	andeq	r0, r0, r0
   1521c:	00000000 	andeq	r0, r0, r0
   15220:	00000000 	andeq	r0, r0, r0
   15224:	00000000 	andeq	r0, r0, r0
   15228:	00000000 	andeq	r0, r0, r0
   1522c:	00000000 	andeq	r0, r0, r0
   15230:	00000000 	andeq	r0, r0, r0
   15234:	00000000 	andeq	r0, r0, r0
   15238:	00000000 	andeq	r0, r0, r0
   1523c:	00000000 	andeq	r0, r0, r0
   15240:	00000000 	andeq	r0, r0, r0
   15244:	00000000 	andeq	r0, r0, r0
   15248:	00000000 	andeq	r0, r0, r0
   1524c:	00000000 	andeq	r0, r0, r0
   15250:	00000000 	andeq	r0, r0, r0
   15254:	00000000 	andeq	r0, r0, r0
   15258:	00000000 	andeq	r0, r0, r0
   1525c:	00000000 	andeq	r0, r0, r0
   15260:	00000000 	andeq	r0, r0, r0
   15264:	00000000 	andeq	r0, r0, r0
   15268:	00000000 	andeq	r0, r0, r0
   1526c:	00000000 	andeq	r0, r0, r0
   15270:	00000000 	andeq	r0, r0, r0
   15274:	00000000 	andeq	r0, r0, r0
   15278:	00000000 	andeq	r0, r0, r0
   1527c:	00000000 	andeq	r0, r0, r0
   15280:	00000000 	andeq	r0, r0, r0
   15284:	00000000 	andeq	r0, r0, r0
   15288:	00000000 	andeq	r0, r0, r0
   1528c:	00000000 	andeq	r0, r0, r0
   15290:	00000000 	andeq	r0, r0, r0
   15294:	00000000 	andeq	r0, r0, r0
   15298:	00000000 	andeq	r0, r0, r0
   1529c:	00000000 	andeq	r0, r0, r0
   152a0:	00000000 	andeq	r0, r0, r0
   152a4:	00000000 	andeq	r0, r0, r0
   152a8:	00000000 	andeq	r0, r0, r0
   152ac:	00000000 	andeq	r0, r0, r0
   152b0:	00000000 	andeq	r0, r0, r0
   152b4:	00000000 	andeq	r0, r0, r0
   152b8:	00000000 	andeq	r0, r0, r0
   152bc:	00000000 	andeq	r0, r0, r0
   152c0:	00000000 	andeq	r0, r0, r0
   152c4:	00000000 	andeq	r0, r0, r0
   152c8:	00000000 	andeq	r0, r0, r0
   152cc:	00000000 	andeq	r0, r0, r0
   152d0:	00000000 	andeq	r0, r0, r0
   152d4:	00000000 	andeq	r0, r0, r0
   152d8:	00000000 	andeq	r0, r0, r0
   152dc:	00000000 	andeq	r0, r0, r0
   152e0:	00000000 	andeq	r0, r0, r0
   152e4:	00000000 	andeq	r0, r0, r0
   152e8:	00000000 	andeq	r0, r0, r0
   152ec:	00000000 	andeq	r0, r0, r0
   152f0:	00000000 	andeq	r0, r0, r0
   152f4:	00000000 	andeq	r0, r0, r0
   152f8:	00000000 	andeq	r0, r0, r0
   152fc:	00000000 	andeq	r0, r0, r0
   15300:	00000000 	andeq	r0, r0, r0
   15304:	00000000 	andeq	r0, r0, r0
   15308:	00000000 	andeq	r0, r0, r0
   1530c:	00000000 	andeq	r0, r0, r0
   15310:	00000000 	andeq	r0, r0, r0
   15314:	00000000 	andeq	r0, r0, r0
   15318:	00000000 	andeq	r0, r0, r0
   1531c:	00000000 	andeq	r0, r0, r0
   15320:	00000000 	andeq	r0, r0, r0
   15324:	00000000 	andeq	r0, r0, r0
   15328:	00000000 	andeq	r0, r0, r0
   1532c:	00000000 	andeq	r0, r0, r0
   15330:	00000000 	andeq	r0, r0, r0
   15334:	00000000 	andeq	r0, r0, r0
   15338:	00000000 	andeq	r0, r0, r0
   1533c:	00000000 	andeq	r0, r0, r0
   15340:	00000000 	andeq	r0, r0, r0
   15344:	00000000 	andeq	r0, r0, r0
   15348:	00000000 	andeq	r0, r0, r0
   1534c:	00000000 	andeq	r0, r0, r0
   15350:	00000000 	andeq	r0, r0, r0
   15354:	00000000 	andeq	r0, r0, r0
   15358:	00000000 	andeq	r0, r0, r0
   1535c:	00000000 	andeq	r0, r0, r0
   15360:	00000000 	andeq	r0, r0, r0
   15364:	00000000 	andeq	r0, r0, r0
   15368:	00000000 	andeq	r0, r0, r0
   1536c:	00000000 	andeq	r0, r0, r0
   15370:	00000000 	andeq	r0, r0, r0
   15374:	00000000 	andeq	r0, r0, r0
   15378:	00000000 	andeq	r0, r0, r0
   1537c:	00000000 	andeq	r0, r0, r0
   15380:	00000000 	andeq	r0, r0, r0
   15384:	00000000 	andeq	r0, r0, r0
   15388:	00000000 	andeq	r0, r0, r0
   1538c:	00000000 	andeq	r0, r0, r0
   15390:	00000000 	andeq	r0, r0, r0
   15394:	00000000 	andeq	r0, r0, r0
   15398:	00000000 	andeq	r0, r0, r0
   1539c:	00000000 	andeq	r0, r0, r0
   153a0:	00000000 	andeq	r0, r0, r0
   153a4:	00000000 	andeq	r0, r0, r0
   153a8:	00000000 	andeq	r0, r0, r0
   153ac:	00000000 	andeq	r0, r0, r0
   153b0:	00000000 	andeq	r0, r0, r0
   153b4:	00000000 	andeq	r0, r0, r0
   153b8:	00000000 	andeq	r0, r0, r0
   153bc:	00000000 	andeq	r0, r0, r0
   153c0:	00000000 	andeq	r0, r0, r0
   153c4:	00000000 	andeq	r0, r0, r0
   153c8:	00000000 	andeq	r0, r0, r0
   153cc:	00000000 	andeq	r0, r0, r0
   153d0:	00000000 	andeq	r0, r0, r0
   153d4:	00000000 	andeq	r0, r0, r0
   153d8:	00000000 	andeq	r0, r0, r0
   153dc:	00000000 	andeq	r0, r0, r0
   153e0:	00000000 	andeq	r0, r0, r0
   153e4:	00000000 	andeq	r0, r0, r0
   153e8:	00000000 	andeq	r0, r0, r0
   153ec:	00000000 	andeq	r0, r0, r0
   153f0:	00000000 	andeq	r0, r0, r0
   153f4:	00000000 	andeq	r0, r0, r0
   153f8:	00000000 	andeq	r0, r0, r0
   153fc:	00000000 	andeq	r0, r0, r0
   15400:	00000000 	andeq	r0, r0, r0
   15404:	00000000 	andeq	r0, r0, r0
   15408:	00000000 	andeq	r0, r0, r0
   1540c:	00000000 	andeq	r0, r0, r0
   15410:	00000000 	andeq	r0, r0, r0
   15414:	00000000 	andeq	r0, r0, r0
   15418:	00000000 	andeq	r0, r0, r0
   1541c:	00000000 	andeq	r0, r0, r0
   15420:	00000000 	andeq	r0, r0, r0
   15424:	00000000 	andeq	r0, r0, r0
   15428:	00000000 	andeq	r0, r0, r0
   1542c:	00000000 	andeq	r0, r0, r0
   15430:	00000000 	andeq	r0, r0, r0
   15434:	00000000 	andeq	r0, r0, r0
   15438:	00000000 	andeq	r0, r0, r0
   1543c:	00000000 	andeq	r0, r0, r0
   15440:	00000000 	andeq	r0, r0, r0
   15444:	00000000 	andeq	r0, r0, r0
   15448:	00000000 	andeq	r0, r0, r0
   1544c:	00000000 	andeq	r0, r0, r0
   15450:	00000000 	andeq	r0, r0, r0
   15454:	00000000 	andeq	r0, r0, r0
   15458:	00000000 	andeq	r0, r0, r0
   1545c:	00000000 	andeq	r0, r0, r0
   15460:	00000000 	andeq	r0, r0, r0
   15464:	00000000 	andeq	r0, r0, r0
   15468:	00000000 	andeq	r0, r0, r0
   1546c:	00000000 	andeq	r0, r0, r0
   15470:	00000000 	andeq	r0, r0, r0
   15474:	00000000 	andeq	r0, r0, r0
   15478:	00000000 	andeq	r0, r0, r0
   1547c:	00000000 	andeq	r0, r0, r0
   15480:	00000000 	andeq	r0, r0, r0
   15484:	00000000 	andeq	r0, r0, r0
   15488:	00000000 	andeq	r0, r0, r0
   1548c:	00000000 	andeq	r0, r0, r0
   15490:	00000000 	andeq	r0, r0, r0
   15494:	00000000 	andeq	r0, r0, r0
   15498:	00000000 	andeq	r0, r0, r0
   1549c:	00000000 	andeq	r0, r0, r0
   154a0:	00000000 	andeq	r0, r0, r0
   154a4:	00000000 	andeq	r0, r0, r0
   154a8:	00000000 	andeq	r0, r0, r0
   154ac:	00000000 	andeq	r0, r0, r0
   154b0:	00000000 	andeq	r0, r0, r0
   154b4:	00000000 	andeq	r0, r0, r0
   154b8:	00000000 	andeq	r0, r0, r0
   154bc:	00000000 	andeq	r0, r0, r0
   154c0:	00000000 	andeq	r0, r0, r0
   154c4:	00000000 	andeq	r0, r0, r0
   154c8:	00000000 	andeq	r0, r0, r0
   154cc:	00000000 	andeq	r0, r0, r0
   154d0:	00000000 	andeq	r0, r0, r0
   154d4:	00000000 	andeq	r0, r0, r0
   154d8:	00000000 	andeq	r0, r0, r0
   154dc:	00000000 	andeq	r0, r0, r0
   154e0:	00000000 	andeq	r0, r0, r0
   154e4:	00000000 	andeq	r0, r0, r0
   154e8:	00000000 	andeq	r0, r0, r0
   154ec:	00000000 	andeq	r0, r0, r0
   154f0:	00000000 	andeq	r0, r0, r0
   154f4:	00000000 	andeq	r0, r0, r0
   154f8:	00000000 	andeq	r0, r0, r0
   154fc:	00000000 	andeq	r0, r0, r0
   15500:	00000000 	andeq	r0, r0, r0
   15504:	00000000 	andeq	r0, r0, r0
   15508:	00000000 	andeq	r0, r0, r0
   1550c:	00000000 	andeq	r0, r0, r0
   15510:	00000000 	andeq	r0, r0, r0
   15514:	00000000 	andeq	r0, r0, r0
   15518:	00000000 	andeq	r0, r0, r0
   1551c:	00000000 	andeq	r0, r0, r0
   15520:	00000000 	andeq	r0, r0, r0
   15524:	00000000 	andeq	r0, r0, r0
   15528:	00000000 	andeq	r0, r0, r0
   1552c:	00000000 	andeq	r0, r0, r0
   15530:	00000000 	andeq	r0, r0, r0
   15534:	00000000 	andeq	r0, r0, r0
   15538:	00000000 	andeq	r0, r0, r0
   1553c:	00000000 	andeq	r0, r0, r0
   15540:	00000000 	andeq	r0, r0, r0
   15544:	00000000 	andeq	r0, r0, r0
   15548:	00000000 	andeq	r0, r0, r0
   1554c:	00000000 	andeq	r0, r0, r0
   15550:	00000000 	andeq	r0, r0, r0
   15554:	00000000 	andeq	r0, r0, r0
   15558:	00000000 	andeq	r0, r0, r0
   1555c:	00000000 	andeq	r0, r0, r0
   15560:	00000000 	andeq	r0, r0, r0
   15564:	00000000 	andeq	r0, r0, r0
   15568:	00000000 	andeq	r0, r0, r0
   1556c:	00000000 	andeq	r0, r0, r0
   15570:	00000000 	andeq	r0, r0, r0
   15574:	00000000 	andeq	r0, r0, r0
   15578:	00000000 	andeq	r0, r0, r0
   1557c:	00000000 	andeq	r0, r0, r0
   15580:	00000000 	andeq	r0, r0, r0
   15584:	00000000 	andeq	r0, r0, r0
   15588:	00000000 	andeq	r0, r0, r0
   1558c:	00000000 	andeq	r0, r0, r0
   15590:	00000000 	andeq	r0, r0, r0
   15594:	00000000 	andeq	r0, r0, r0
   15598:	00000000 	andeq	r0, r0, r0
   1559c:	00000000 	andeq	r0, r0, r0
   155a0:	00000000 	andeq	r0, r0, r0
   155a4:	00000000 	andeq	r0, r0, r0
   155a8:	00000000 	andeq	r0, r0, r0
   155ac:	00000000 	andeq	r0, r0, r0
   155b0:	00000000 	andeq	r0, r0, r0
   155b4:	00000000 	andeq	r0, r0, r0
   155b8:	00000000 	andeq	r0, r0, r0
   155bc:	00000000 	andeq	r0, r0, r0
   155c0:	00000000 	andeq	r0, r0, r0
   155c4:	00000000 	andeq	r0, r0, r0
   155c8:	00000000 	andeq	r0, r0, r0
   155cc:	00000000 	andeq	r0, r0, r0
   155d0:	00000000 	andeq	r0, r0, r0
   155d4:	00000000 	andeq	r0, r0, r0
   155d8:	00000000 	andeq	r0, r0, r0
   155dc:	00000000 	andeq	r0, r0, r0
   155e0:	00000000 	andeq	r0, r0, r0
   155e4:	00000000 	andeq	r0, r0, r0
   155e8:	00000000 	andeq	r0, r0, r0
   155ec:	00000000 	andeq	r0, r0, r0
   155f0:	00000000 	andeq	r0, r0, r0
   155f4:	00000000 	andeq	r0, r0, r0
   155f8:	00000000 	andeq	r0, r0, r0
   155fc:	00000000 	andeq	r0, r0, r0
   15600:	00000000 	andeq	r0, r0, r0
   15604:	00000000 	andeq	r0, r0, r0
   15608:	00000000 	andeq	r0, r0, r0
   1560c:	00000000 	andeq	r0, r0, r0
   15610:	00000000 	andeq	r0, r0, r0
   15614:	00000000 	andeq	r0, r0, r0
   15618:	00000000 	andeq	r0, r0, r0
   1561c:	00000000 	andeq	r0, r0, r0
   15620:	00000000 	andeq	r0, r0, r0
   15624:	00000000 	andeq	r0, r0, r0
   15628:	00000000 	andeq	r0, r0, r0
   1562c:	00000000 	andeq	r0, r0, r0
   15630:	00000000 	andeq	r0, r0, r0
   15634:	00000000 	andeq	r0, r0, r0
   15638:	00000000 	andeq	r0, r0, r0
   1563c:	00000000 	andeq	r0, r0, r0
   15640:	00000000 	andeq	r0, r0, r0
   15644:	00000000 	andeq	r0, r0, r0
   15648:	00000000 	andeq	r0, r0, r0
   1564c:	00000000 	andeq	r0, r0, r0
   15650:	00000000 	andeq	r0, r0, r0
   15654:	00000000 	andeq	r0, r0, r0
   15658:	00000000 	andeq	r0, r0, r0
   1565c:	00000000 	andeq	r0, r0, r0
   15660:	00000000 	andeq	r0, r0, r0
   15664:	00000000 	andeq	r0, r0, r0
   15668:	00000000 	andeq	r0, r0, r0
   1566c:	00000000 	andeq	r0, r0, r0
   15670:	00000000 	andeq	r0, r0, r0
   15674:	00000000 	andeq	r0, r0, r0
   15678:	00000000 	andeq	r0, r0, r0
   1567c:	00000000 	andeq	r0, r0, r0
   15680:	00000000 	andeq	r0, r0, r0
   15684:	00000000 	andeq	r0, r0, r0
   15688:	00000000 	andeq	r0, r0, r0
   1568c:	00000000 	andeq	r0, r0, r0
   15690:	00000000 	andeq	r0, r0, r0
   15694:	00000000 	andeq	r0, r0, r0
   15698:	00000000 	andeq	r0, r0, r0
   1569c:	00000000 	andeq	r0, r0, r0
   156a0:	00000000 	andeq	r0, r0, r0
   156a4:	00000000 	andeq	r0, r0, r0
   156a8:	00000000 	andeq	r0, r0, r0
   156ac:	00000000 	andeq	r0, r0, r0
   156b0:	00000000 	andeq	r0, r0, r0
   156b4:	00000000 	andeq	r0, r0, r0
   156b8:	00000000 	andeq	r0, r0, r0
   156bc:	00000000 	andeq	r0, r0, r0
   156c0:	00000000 	andeq	r0, r0, r0
   156c4:	00000000 	andeq	r0, r0, r0
   156c8:	00000000 	andeq	r0, r0, r0
   156cc:	00000000 	andeq	r0, r0, r0
   156d0:	00000000 	andeq	r0, r0, r0
   156d4:	00000000 	andeq	r0, r0, r0
   156d8:	00000000 	andeq	r0, r0, r0
   156dc:	00000000 	andeq	r0, r0, r0
   156e0:	00000000 	andeq	r0, r0, r0
   156e4:	00000000 	andeq	r0, r0, r0
   156e8:	00000000 	andeq	r0, r0, r0
   156ec:	00000000 	andeq	r0, r0, r0
   156f0:	00000000 	andeq	r0, r0, r0
   156f4:	00000000 	andeq	r0, r0, r0
   156f8:	00000000 	andeq	r0, r0, r0
   156fc:	00000000 	andeq	r0, r0, r0
   15700:	00000000 	andeq	r0, r0, r0
   15704:	00000000 	andeq	r0, r0, r0
   15708:	00000000 	andeq	r0, r0, r0
   1570c:	00000000 	andeq	r0, r0, r0
   15710:	00000000 	andeq	r0, r0, r0
   15714:	00000000 	andeq	r0, r0, r0
   15718:	00000000 	andeq	r0, r0, r0
   1571c:	00000000 	andeq	r0, r0, r0
   15720:	00000000 	andeq	r0, r0, r0
   15724:	00000000 	andeq	r0, r0, r0
   15728:	00000000 	andeq	r0, r0, r0
   1572c:	00000000 	andeq	r0, r0, r0
   15730:	00000000 	andeq	r0, r0, r0
   15734:	00000000 	andeq	r0, r0, r0
   15738:	00000000 	andeq	r0, r0, r0
   1573c:	00000000 	andeq	r0, r0, r0
   15740:	00000000 	andeq	r0, r0, r0
   15744:	00000000 	andeq	r0, r0, r0
   15748:	00000000 	andeq	r0, r0, r0
   1574c:	00000000 	andeq	r0, r0, r0
   15750:	00000000 	andeq	r0, r0, r0
   15754:	00000000 	andeq	r0, r0, r0
   15758:	00000000 	andeq	r0, r0, r0
   1575c:	00000000 	andeq	r0, r0, r0
   15760:	00000000 	andeq	r0, r0, r0
   15764:	00000000 	andeq	r0, r0, r0
   15768:	00000000 	andeq	r0, r0, r0
   1576c:	00000000 	andeq	r0, r0, r0
   15770:	00000000 	andeq	r0, r0, r0
   15774:	00000000 	andeq	r0, r0, r0
   15778:	00000000 	andeq	r0, r0, r0
   1577c:	00000000 	andeq	r0, r0, r0
   15780:	00000000 	andeq	r0, r0, r0
   15784:	00000000 	andeq	r0, r0, r0
   15788:	00000000 	andeq	r0, r0, r0
   1578c:	00000000 	andeq	r0, r0, r0
   15790:	00000000 	andeq	r0, r0, r0
   15794:	00000000 	andeq	r0, r0, r0
   15798:	00000000 	andeq	r0, r0, r0
   1579c:	00000000 	andeq	r0, r0, r0
   157a0:	00000000 	andeq	r0, r0, r0
   157a4:	00000000 	andeq	r0, r0, r0
   157a8:	00000000 	andeq	r0, r0, r0
   157ac:	00000000 	andeq	r0, r0, r0
   157b0:	00000000 	andeq	r0, r0, r0
   157b4:	00000000 	andeq	r0, r0, r0
   157b8:	00000000 	andeq	r0, r0, r0
   157bc:	00000000 	andeq	r0, r0, r0
   157c0:	00000000 	andeq	r0, r0, r0
   157c4:	00000000 	andeq	r0, r0, r0
   157c8:	00000000 	andeq	r0, r0, r0
   157cc:	00000000 	andeq	r0, r0, r0
   157d0:	00000000 	andeq	r0, r0, r0
   157d4:	00000000 	andeq	r0, r0, r0
   157d8:	00000000 	andeq	r0, r0, r0
   157dc:	00000000 	andeq	r0, r0, r0
   157e0:	00000000 	andeq	r0, r0, r0
   157e4:	00000000 	andeq	r0, r0, r0
   157e8:	00000000 	andeq	r0, r0, r0
   157ec:	00000000 	andeq	r0, r0, r0
   157f0:	00000000 	andeq	r0, r0, r0
   157f4:	00000000 	andeq	r0, r0, r0
   157f8:	00000000 	andeq	r0, r0, r0
   157fc:	00000000 	andeq	r0, r0, r0
   15800:	00000000 	andeq	r0, r0, r0
   15804:	00000000 	andeq	r0, r0, r0
   15808:	00000000 	andeq	r0, r0, r0
   1580c:	00000000 	andeq	r0, r0, r0
   15810:	00000000 	andeq	r0, r0, r0
   15814:	00000000 	andeq	r0, r0, r0
   15818:	00000000 	andeq	r0, r0, r0
   1581c:	00000000 	andeq	r0, r0, r0
   15820:	00000000 	andeq	r0, r0, r0
   15824:	00000000 	andeq	r0, r0, r0
   15828:	00000000 	andeq	r0, r0, r0
   1582c:	00000000 	andeq	r0, r0, r0
   15830:	00000000 	andeq	r0, r0, r0
   15834:	00000000 	andeq	r0, r0, r0
   15838:	00000000 	andeq	r0, r0, r0
   1583c:	00000000 	andeq	r0, r0, r0
   15840:	00000000 	andeq	r0, r0, r0
   15844:	00000000 	andeq	r0, r0, r0
   15848:	00000000 	andeq	r0, r0, r0
   1584c:	00000000 	andeq	r0, r0, r0
   15850:	00000000 	andeq	r0, r0, r0
   15854:	00000000 	andeq	r0, r0, r0
   15858:	00000000 	andeq	r0, r0, r0
   1585c:	00000000 	andeq	r0, r0, r0
   15860:	00000000 	andeq	r0, r0, r0
   15864:	00000000 	andeq	r0, r0, r0
   15868:	00000000 	andeq	r0, r0, r0
   1586c:	00000000 	andeq	r0, r0, r0
   15870:	00000000 	andeq	r0, r0, r0
   15874:	00000000 	andeq	r0, r0, r0
   15878:	00000000 	andeq	r0, r0, r0
   1587c:	00000000 	andeq	r0, r0, r0
   15880:	00000000 	andeq	r0, r0, r0
   15884:	00000000 	andeq	r0, r0, r0
   15888:	00000000 	andeq	r0, r0, r0
   1588c:	00000000 	andeq	r0, r0, r0
   15890:	00000000 	andeq	r0, r0, r0
   15894:	00000000 	andeq	r0, r0, r0
   15898:	00000000 	andeq	r0, r0, r0
   1589c:	00000000 	andeq	r0, r0, r0
   158a0:	00000000 	andeq	r0, r0, r0
   158a4:	00000000 	andeq	r0, r0, r0
   158a8:	00000000 	andeq	r0, r0, r0
   158ac:	00000000 	andeq	r0, r0, r0
   158b0:	00000000 	andeq	r0, r0, r0
   158b4:	00000000 	andeq	r0, r0, r0
   158b8:	00000000 	andeq	r0, r0, r0
   158bc:	00000000 	andeq	r0, r0, r0
   158c0:	00000000 	andeq	r0, r0, r0
   158c4:	00000000 	andeq	r0, r0, r0
   158c8:	00000000 	andeq	r0, r0, r0
   158cc:	00000000 	andeq	r0, r0, r0
   158d0:	00000000 	andeq	r0, r0, r0
   158d4:	00000000 	andeq	r0, r0, r0
   158d8:	00000000 	andeq	r0, r0, r0
   158dc:	00000000 	andeq	r0, r0, r0
   158e0:	00000000 	andeq	r0, r0, r0
   158e4:	00000000 	andeq	r0, r0, r0
   158e8:	00000000 	andeq	r0, r0, r0
   158ec:	00000000 	andeq	r0, r0, r0
   158f0:	00000000 	andeq	r0, r0, r0
   158f4:	00000000 	andeq	r0, r0, r0
   158f8:	00000000 	andeq	r0, r0, r0
   158fc:	00000000 	andeq	r0, r0, r0
   15900:	00000000 	andeq	r0, r0, r0
   15904:	00000000 	andeq	r0, r0, r0
   15908:	00000000 	andeq	r0, r0, r0
   1590c:	00000000 	andeq	r0, r0, r0
   15910:	00000000 	andeq	r0, r0, r0
   15914:	00000000 	andeq	r0, r0, r0
   15918:	00000000 	andeq	r0, r0, r0
   1591c:	00000000 	andeq	r0, r0, r0
   15920:	00000000 	andeq	r0, r0, r0
   15924:	00000000 	andeq	r0, r0, r0
   15928:	00000000 	andeq	r0, r0, r0
   1592c:	00000000 	andeq	r0, r0, r0
   15930:	00000000 	andeq	r0, r0, r0
   15934:	00000000 	andeq	r0, r0, r0
   15938:	00000000 	andeq	r0, r0, r0
   1593c:	00000000 	andeq	r0, r0, r0
   15940:	00000000 	andeq	r0, r0, r0
   15944:	00000000 	andeq	r0, r0, r0
   15948:	00000000 	andeq	r0, r0, r0
   1594c:	00000000 	andeq	r0, r0, r0
   15950:	00000000 	andeq	r0, r0, r0
   15954:	00000000 	andeq	r0, r0, r0
   15958:	00000000 	andeq	r0, r0, r0
   1595c:	00000000 	andeq	r0, r0, r0
   15960:	00000000 	andeq	r0, r0, r0
   15964:	00000000 	andeq	r0, r0, r0
   15968:	00000000 	andeq	r0, r0, r0
   1596c:	00000000 	andeq	r0, r0, r0
   15970:	00000000 	andeq	r0, r0, r0
   15974:	00000000 	andeq	r0, r0, r0
   15978:	00000000 	andeq	r0, r0, r0
   1597c:	00000000 	andeq	r0, r0, r0
   15980:	00000000 	andeq	r0, r0, r0
   15984:	00000000 	andeq	r0, r0, r0
   15988:	00000000 	andeq	r0, r0, r0
   1598c:	00000000 	andeq	r0, r0, r0
   15990:	00000000 	andeq	r0, r0, r0
   15994:	00000000 	andeq	r0, r0, r0
   15998:	00000000 	andeq	r0, r0, r0
   1599c:	00000000 	andeq	r0, r0, r0
   159a0:	00000000 	andeq	r0, r0, r0
   159a4:	00000000 	andeq	r0, r0, r0
   159a8:	00000000 	andeq	r0, r0, r0
   159ac:	00000000 	andeq	r0, r0, r0
   159b0:	00000000 	andeq	r0, r0, r0
   159b4:	00000000 	andeq	r0, r0, r0
   159b8:	00000000 	andeq	r0, r0, r0
   159bc:	00000000 	andeq	r0, r0, r0
   159c0:	00000000 	andeq	r0, r0, r0
   159c4:	00000000 	andeq	r0, r0, r0
   159c8:	00000000 	andeq	r0, r0, r0
   159cc:	00000000 	andeq	r0, r0, r0
   159d0:	00000000 	andeq	r0, r0, r0
   159d4:	00000000 	andeq	r0, r0, r0
   159d8:	00000000 	andeq	r0, r0, r0
   159dc:	00000000 	andeq	r0, r0, r0
   159e0:	00000000 	andeq	r0, r0, r0
   159e4:	00000000 	andeq	r0, r0, r0
   159e8:	00000000 	andeq	r0, r0, r0
   159ec:	00000000 	andeq	r0, r0, r0
   159f0:	00000000 	andeq	r0, r0, r0
   159f4:	00000000 	andeq	r0, r0, r0
   159f8:	00000000 	andeq	r0, r0, r0
   159fc:	00000000 	andeq	r0, r0, r0
   15a00:	00000000 	andeq	r0, r0, r0
   15a04:	00000000 	andeq	r0, r0, r0
   15a08:	00000000 	andeq	r0, r0, r0
   15a0c:	00000000 	andeq	r0, r0, r0
   15a10:	00000000 	andeq	r0, r0, r0
   15a14:	00000000 	andeq	r0, r0, r0
   15a18:	00000000 	andeq	r0, r0, r0
   15a1c:	00000000 	andeq	r0, r0, r0
   15a20:	00000000 	andeq	r0, r0, r0
   15a24:	00000000 	andeq	r0, r0, r0
   15a28:	00000000 	andeq	r0, r0, r0
   15a2c:	00000000 	andeq	r0, r0, r0
   15a30:	00000000 	andeq	r0, r0, r0
   15a34:	00000000 	andeq	r0, r0, r0
   15a38:	00000000 	andeq	r0, r0, r0
   15a3c:	00000000 	andeq	r0, r0, r0
   15a40:	00000000 	andeq	r0, r0, r0
   15a44:	00000000 	andeq	r0, r0, r0
   15a48:	00000000 	andeq	r0, r0, r0
   15a4c:	00000000 	andeq	r0, r0, r0
   15a50:	00000000 	andeq	r0, r0, r0
   15a54:	00000000 	andeq	r0, r0, r0
   15a58:	00000000 	andeq	r0, r0, r0
   15a5c:	00000000 	andeq	r0, r0, r0
   15a60:	00000000 	andeq	r0, r0, r0
   15a64:	00000000 	andeq	r0, r0, r0
   15a68:	00000000 	andeq	r0, r0, r0
   15a6c:	00000000 	andeq	r0, r0, r0
   15a70:	00000000 	andeq	r0, r0, r0
   15a74:	00000000 	andeq	r0, r0, r0
   15a78:	00000000 	andeq	r0, r0, r0
   15a7c:	00000000 	andeq	r0, r0, r0
   15a80:	00000000 	andeq	r0, r0, r0
   15a84:	00000000 	andeq	r0, r0, r0
   15a88:	00000000 	andeq	r0, r0, r0
   15a8c:	00000000 	andeq	r0, r0, r0
   15a90:	00000000 	andeq	r0, r0, r0
   15a94:	00000000 	andeq	r0, r0, r0
   15a98:	00000000 	andeq	r0, r0, r0
   15a9c:	00000000 	andeq	r0, r0, r0
   15aa0:	00000000 	andeq	r0, r0, r0
   15aa4:	00000000 	andeq	r0, r0, r0
   15aa8:	00000000 	andeq	r0, r0, r0
   15aac:	00000000 	andeq	r0, r0, r0
   15ab0:	00000000 	andeq	r0, r0, r0
   15ab4:	00000000 	andeq	r0, r0, r0
   15ab8:	00000000 	andeq	r0, r0, r0
   15abc:	00000000 	andeq	r0, r0, r0
   15ac0:	00000000 	andeq	r0, r0, r0
   15ac4:	00000000 	andeq	r0, r0, r0
   15ac8:	00000000 	andeq	r0, r0, r0
   15acc:	00000000 	andeq	r0, r0, r0
   15ad0:	00000000 	andeq	r0, r0, r0
   15ad4:	00000000 	andeq	r0, r0, r0
   15ad8:	00000000 	andeq	r0, r0, r0
   15adc:	00000000 	andeq	r0, r0, r0
   15ae0:	00000000 	andeq	r0, r0, r0
   15ae4:	00000000 	andeq	r0, r0, r0
   15ae8:	00000000 	andeq	r0, r0, r0
   15aec:	00000000 	andeq	r0, r0, r0
   15af0:	00000000 	andeq	r0, r0, r0
   15af4:	00000000 	andeq	r0, r0, r0
   15af8:	00000000 	andeq	r0, r0, r0
   15afc:	00000000 	andeq	r0, r0, r0
   15b00:	00000000 	andeq	r0, r0, r0
   15b04:	00000000 	andeq	r0, r0, r0
   15b08:	00000000 	andeq	r0, r0, r0
   15b0c:	00000000 	andeq	r0, r0, r0
   15b10:	00000000 	andeq	r0, r0, r0
   15b14:	00000000 	andeq	r0, r0, r0
   15b18:	00000000 	andeq	r0, r0, r0
   15b1c:	00000000 	andeq	r0, r0, r0
   15b20:	00000000 	andeq	r0, r0, r0
   15b24:	00000000 	andeq	r0, r0, r0
   15b28:	00000000 	andeq	r0, r0, r0
   15b2c:	00000000 	andeq	r0, r0, r0
   15b30:	00000000 	andeq	r0, r0, r0
   15b34:	00000000 	andeq	r0, r0, r0
   15b38:	00000000 	andeq	r0, r0, r0
   15b3c:	00000000 	andeq	r0, r0, r0
   15b40:	00000000 	andeq	r0, r0, r0
   15b44:	00000000 	andeq	r0, r0, r0
   15b48:	00000000 	andeq	r0, r0, r0
   15b4c:	00000000 	andeq	r0, r0, r0
   15b50:	00000000 	andeq	r0, r0, r0
   15b54:	00000000 	andeq	r0, r0, r0
   15b58:	00000000 	andeq	r0, r0, r0
   15b5c:	00000000 	andeq	r0, r0, r0
   15b60:	00000000 	andeq	r0, r0, r0
   15b64:	00000000 	andeq	r0, r0, r0
   15b68:	00000000 	andeq	r0, r0, r0
   15b6c:	00000000 	andeq	r0, r0, r0
   15b70:	00000000 	andeq	r0, r0, r0
   15b74:	00000000 	andeq	r0, r0, r0
   15b78:	00000000 	andeq	r0, r0, r0
   15b7c:	00000000 	andeq	r0, r0, r0
   15b80:	00000000 	andeq	r0, r0, r0
   15b84:	00000000 	andeq	r0, r0, r0
   15b88:	00000000 	andeq	r0, r0, r0
   15b8c:	00000000 	andeq	r0, r0, r0
   15b90:	00000000 	andeq	r0, r0, r0
   15b94:	00000000 	andeq	r0, r0, r0
   15b98:	00000000 	andeq	r0, r0, r0
   15b9c:	00000000 	andeq	r0, r0, r0
   15ba0:	00000000 	andeq	r0, r0, r0
   15ba4:	00000000 	andeq	r0, r0, r0
   15ba8:	00000000 	andeq	r0, r0, r0
   15bac:	00000000 	andeq	r0, r0, r0
   15bb0:	00000000 	andeq	r0, r0, r0
   15bb4:	00000000 	andeq	r0, r0, r0
   15bb8:	00000000 	andeq	r0, r0, r0
   15bbc:	00000000 	andeq	r0, r0, r0
   15bc0:	00000000 	andeq	r0, r0, r0
   15bc4:	00000000 	andeq	r0, r0, r0
   15bc8:	00000000 	andeq	r0, r0, r0
   15bcc:	00000000 	andeq	r0, r0, r0
   15bd0:	00000000 	andeq	r0, r0, r0
   15bd4:	00000000 	andeq	r0, r0, r0
   15bd8:	00000000 	andeq	r0, r0, r0
   15bdc:	00000000 	andeq	r0, r0, r0
   15be0:	00000000 	andeq	r0, r0, r0
   15be4:	00000000 	andeq	r0, r0, r0
   15be8:	00000000 	andeq	r0, r0, r0
   15bec:	00000000 	andeq	r0, r0, r0
   15bf0:	00000000 	andeq	r0, r0, r0
   15bf4:	00000000 	andeq	r0, r0, r0
   15bf8:	00000000 	andeq	r0, r0, r0
   15bfc:	00000000 	andeq	r0, r0, r0
   15c00:	00000000 	andeq	r0, r0, r0
   15c04:	00000000 	andeq	r0, r0, r0
   15c08:	00000000 	andeq	r0, r0, r0
   15c0c:	00000000 	andeq	r0, r0, r0
   15c10:	00000000 	andeq	r0, r0, r0
   15c14:	00000000 	andeq	r0, r0, r0
   15c18:	00000000 	andeq	r0, r0, r0
   15c1c:	00000000 	andeq	r0, r0, r0
   15c20:	00000000 	andeq	r0, r0, r0
   15c24:	00000000 	andeq	r0, r0, r0
   15c28:	00000000 	andeq	r0, r0, r0
   15c2c:	00000000 	andeq	r0, r0, r0
   15c30:	00000000 	andeq	r0, r0, r0
   15c34:	00000000 	andeq	r0, r0, r0
   15c38:	00000000 	andeq	r0, r0, r0
   15c3c:	00000000 	andeq	r0, r0, r0
   15c40:	00000000 	andeq	r0, r0, r0
   15c44:	00000000 	andeq	r0, r0, r0
   15c48:	00000000 	andeq	r0, r0, r0
   15c4c:	00000000 	andeq	r0, r0, r0
   15c50:	00000000 	andeq	r0, r0, r0
   15c54:	00000000 	andeq	r0, r0, r0
   15c58:	00000000 	andeq	r0, r0, r0
   15c5c:	00000000 	andeq	r0, r0, r0
   15c60:	00000000 	andeq	r0, r0, r0
   15c64:	00000000 	andeq	r0, r0, r0
   15c68:	00000000 	andeq	r0, r0, r0
   15c6c:	00000000 	andeq	r0, r0, r0
   15c70:	00000000 	andeq	r0, r0, r0
   15c74:	00000000 	andeq	r0, r0, r0
   15c78:	00000000 	andeq	r0, r0, r0
   15c7c:	00000000 	andeq	r0, r0, r0
   15c80:	00000000 	andeq	r0, r0, r0
   15c84:	00000000 	andeq	r0, r0, r0
   15c88:	00000000 	andeq	r0, r0, r0
   15c8c:	00000000 	andeq	r0, r0, r0
   15c90:	00000000 	andeq	r0, r0, r0
   15c94:	00000000 	andeq	r0, r0, r0
   15c98:	00000000 	andeq	r0, r0, r0
   15c9c:	00000000 	andeq	r0, r0, r0
   15ca0:	00000000 	andeq	r0, r0, r0
   15ca4:	00000000 	andeq	r0, r0, r0
   15ca8:	00000000 	andeq	r0, r0, r0
   15cac:	00000000 	andeq	r0, r0, r0
   15cb0:	00000000 	andeq	r0, r0, r0
   15cb4:	00000000 	andeq	r0, r0, r0
   15cb8:	00000000 	andeq	r0, r0, r0
   15cbc:	00000000 	andeq	r0, r0, r0
   15cc0:	00000000 	andeq	r0, r0, r0
   15cc4:	00000000 	andeq	r0, r0, r0
   15cc8:	00000000 	andeq	r0, r0, r0
   15ccc:	00000000 	andeq	r0, r0, r0
   15cd0:	00000000 	andeq	r0, r0, r0
   15cd4:	00000000 	andeq	r0, r0, r0
   15cd8:	00000000 	andeq	r0, r0, r0
   15cdc:	00000000 	andeq	r0, r0, r0
   15ce0:	00000000 	andeq	r0, r0, r0
   15ce4:	00000000 	andeq	r0, r0, r0
   15ce8:	00000000 	andeq	r0, r0, r0
   15cec:	00000000 	andeq	r0, r0, r0
   15cf0:	00000000 	andeq	r0, r0, r0
   15cf4:	00000000 	andeq	r0, r0, r0
   15cf8:	00000000 	andeq	r0, r0, r0
   15cfc:	00000000 	andeq	r0, r0, r0
   15d00:	00000000 	andeq	r0, r0, r0
   15d04:	00000000 	andeq	r0, r0, r0
   15d08:	00000000 	andeq	r0, r0, r0
   15d0c:	00000000 	andeq	r0, r0, r0
   15d10:	00000000 	andeq	r0, r0, r0
   15d14:	00000000 	andeq	r0, r0, r0
   15d18:	00000000 	andeq	r0, r0, r0
   15d1c:	00000000 	andeq	r0, r0, r0
   15d20:	00000000 	andeq	r0, r0, r0
   15d24:	00000000 	andeq	r0, r0, r0
   15d28:	00000000 	andeq	r0, r0, r0
   15d2c:	00000000 	andeq	r0, r0, r0
   15d30:	00000000 	andeq	r0, r0, r0
   15d34:	00000000 	andeq	r0, r0, r0
   15d38:	00000000 	andeq	r0, r0, r0
   15d3c:	00000000 	andeq	r0, r0, r0
   15d40:	00000000 	andeq	r0, r0, r0
   15d44:	00000000 	andeq	r0, r0, r0
   15d48:	00000000 	andeq	r0, r0, r0
   15d4c:	00000000 	andeq	r0, r0, r0
   15d50:	00000000 	andeq	r0, r0, r0
   15d54:	00000000 	andeq	r0, r0, r0
   15d58:	00000000 	andeq	r0, r0, r0
   15d5c:	00000000 	andeq	r0, r0, r0
   15d60:	00000000 	andeq	r0, r0, r0
   15d64:	00000000 	andeq	r0, r0, r0
   15d68:	00000000 	andeq	r0, r0, r0
   15d6c:	00000000 	andeq	r0, r0, r0
   15d70:	00000000 	andeq	r0, r0, r0
   15d74:	00000000 	andeq	r0, r0, r0
   15d78:	00000000 	andeq	r0, r0, r0
   15d7c:	00000000 	andeq	r0, r0, r0
   15d80:	00000000 	andeq	r0, r0, r0
   15d84:	00000000 	andeq	r0, r0, r0
   15d88:	00000000 	andeq	r0, r0, r0
   15d8c:	00000000 	andeq	r0, r0, r0
   15d90:	00000000 	andeq	r0, r0, r0
   15d94:	00000000 	andeq	r0, r0, r0
   15d98:	00000000 	andeq	r0, r0, r0
   15d9c:	00000000 	andeq	r0, r0, r0
   15da0:	00000000 	andeq	r0, r0, r0
   15da4:	00000000 	andeq	r0, r0, r0
   15da8:	00000000 	andeq	r0, r0, r0
   15dac:	00000000 	andeq	r0, r0, r0
   15db0:	00000000 	andeq	r0, r0, r0
   15db4:	00000000 	andeq	r0, r0, r0
   15db8:	00000000 	andeq	r0, r0, r0
   15dbc:	00000000 	andeq	r0, r0, r0
   15dc0:	00000000 	andeq	r0, r0, r0
   15dc4:	00000000 	andeq	r0, r0, r0
   15dc8:	00000000 	andeq	r0, r0, r0
   15dcc:	00000000 	andeq	r0, r0, r0
   15dd0:	00000000 	andeq	r0, r0, r0
   15dd4:	00000000 	andeq	r0, r0, r0
   15dd8:	00000000 	andeq	r0, r0, r0
   15ddc:	00000000 	andeq	r0, r0, r0
   15de0:	00000000 	andeq	r0, r0, r0
   15de4:	00000000 	andeq	r0, r0, r0
   15de8:	00000000 	andeq	r0, r0, r0
   15dec:	00000000 	andeq	r0, r0, r0
   15df0:	00000000 	andeq	r0, r0, r0
   15df4:	00000000 	andeq	r0, r0, r0
   15df8:	00000000 	andeq	r0, r0, r0
   15dfc:	00000000 	andeq	r0, r0, r0
   15e00:	00000000 	andeq	r0, r0, r0
   15e04:	00000000 	andeq	r0, r0, r0
   15e08:	00000000 	andeq	r0, r0, r0
   15e0c:	00000000 	andeq	r0, r0, r0
   15e10:	00000000 	andeq	r0, r0, r0
   15e14:	00000000 	andeq	r0, r0, r0
   15e18:	00000000 	andeq	r0, r0, r0
   15e1c:	00000000 	andeq	r0, r0, r0
   15e20:	00000000 	andeq	r0, r0, r0
   15e24:	00000000 	andeq	r0, r0, r0
   15e28:	00000000 	andeq	r0, r0, r0
   15e2c:	00000000 	andeq	r0, r0, r0
   15e30:	00000000 	andeq	r0, r0, r0
   15e34:	00000000 	andeq	r0, r0, r0
   15e38:	00000000 	andeq	r0, r0, r0
   15e3c:	00000000 	andeq	r0, r0, r0
   15e40:	00000000 	andeq	r0, r0, r0
   15e44:	00000000 	andeq	r0, r0, r0
   15e48:	00000000 	andeq	r0, r0, r0
   15e4c:	00000000 	andeq	r0, r0, r0
   15e50:	00000000 	andeq	r0, r0, r0
   15e54:	00000000 	andeq	r0, r0, r0
   15e58:	00000000 	andeq	r0, r0, r0
   15e5c:	00000000 	andeq	r0, r0, r0
   15e60:	00000000 	andeq	r0, r0, r0
   15e64:	00000000 	andeq	r0, r0, r0
   15e68:	00000000 	andeq	r0, r0, r0
   15e6c:	00000000 	andeq	r0, r0, r0
   15e70:	00000000 	andeq	r0, r0, r0
   15e74:	00000000 	andeq	r0, r0, r0
   15e78:	00000000 	andeq	r0, r0, r0
   15e7c:	00000000 	andeq	r0, r0, r0
   15e80:	00000000 	andeq	r0, r0, r0
   15e84:	00000000 	andeq	r0, r0, r0
   15e88:	00000000 	andeq	r0, r0, r0
   15e8c:	00000000 	andeq	r0, r0, r0
   15e90:	00000000 	andeq	r0, r0, r0
   15e94:	00000000 	andeq	r0, r0, r0
   15e98:	00000000 	andeq	r0, r0, r0
   15e9c:	00000000 	andeq	r0, r0, r0
   15ea0:	00000000 	andeq	r0, r0, r0
   15ea4:	00000000 	andeq	r0, r0, r0
   15ea8:	00000000 	andeq	r0, r0, r0
   15eac:	00000000 	andeq	r0, r0, r0
   15eb0:	00000000 	andeq	r0, r0, r0
   15eb4:	00000000 	andeq	r0, r0, r0
   15eb8:	00000000 	andeq	r0, r0, r0
   15ebc:	00000000 	andeq	r0, r0, r0
   15ec0:	00000000 	andeq	r0, r0, r0
   15ec4:	00000000 	andeq	r0, r0, r0
   15ec8:	00000000 	andeq	r0, r0, r0
   15ecc:	00000000 	andeq	r0, r0, r0
   15ed0:	00000000 	andeq	r0, r0, r0
   15ed4:	00000000 	andeq	r0, r0, r0
   15ed8:	00000000 	andeq	r0, r0, r0
   15edc:	00000000 	andeq	r0, r0, r0
   15ee0:	00000000 	andeq	r0, r0, r0
   15ee4:	00000000 	andeq	r0, r0, r0
   15ee8:	00000000 	andeq	r0, r0, r0
   15eec:	00000000 	andeq	r0, r0, r0
   15ef0:	00000000 	andeq	r0, r0, r0
   15ef4:	00000000 	andeq	r0, r0, r0
   15ef8:	00000000 	andeq	r0, r0, r0
   15efc:	00000000 	andeq	r0, r0, r0
   15f00:	00000000 	andeq	r0, r0, r0
   15f04:	00000000 	andeq	r0, r0, r0
   15f08:	00000000 	andeq	r0, r0, r0
   15f0c:	00000000 	andeq	r0, r0, r0
   15f10:	00000000 	andeq	r0, r0, r0
   15f14:	00000000 	andeq	r0, r0, r0
   15f18:	00000000 	andeq	r0, r0, r0
   15f1c:	00000000 	andeq	r0, r0, r0
   15f20:	00000000 	andeq	r0, r0, r0
   15f24:	00000000 	andeq	r0, r0, r0
   15f28:	00000000 	andeq	r0, r0, r0
   15f2c:	00000000 	andeq	r0, r0, r0
   15f30:	00000000 	andeq	r0, r0, r0
   15f34:	00000000 	andeq	r0, r0, r0
   15f38:	00000000 	andeq	r0, r0, r0
   15f3c:	00000000 	andeq	r0, r0, r0
   15f40:	00000000 	andeq	r0, r0, r0
   15f44:	00000000 	andeq	r0, r0, r0
   15f48:	00000000 	andeq	r0, r0, r0
   15f4c:	00000000 	andeq	r0, r0, r0
   15f50:	00000000 	andeq	r0, r0, r0
   15f54:	00000000 	andeq	r0, r0, r0
   15f58:	00000000 	andeq	r0, r0, r0
   15f5c:	00000000 	andeq	r0, r0, r0
   15f60:	00000000 	andeq	r0, r0, r0
   15f64:	00000000 	andeq	r0, r0, r0
   15f68:	00000000 	andeq	r0, r0, r0
   15f6c:	00000000 	andeq	r0, r0, r0
   15f70:	00000000 	andeq	r0, r0, r0
   15f74:	00000000 	andeq	r0, r0, r0
   15f78:	00000000 	andeq	r0, r0, r0
   15f7c:	00000000 	andeq	r0, r0, r0
   15f80:	00000000 	andeq	r0, r0, r0
   15f84:	00000000 	andeq	r0, r0, r0
   15f88:	00000000 	andeq	r0, r0, r0
   15f8c:	00000000 	andeq	r0, r0, r0
   15f90:	00000000 	andeq	r0, r0, r0
   15f94:	00000000 	andeq	r0, r0, r0
   15f98:	00000000 	andeq	r0, r0, r0
   15f9c:	00000000 	andeq	r0, r0, r0
   15fa0:	00000000 	andeq	r0, r0, r0
   15fa4:	00000000 	andeq	r0, r0, r0
   15fa8:	00000000 	andeq	r0, r0, r0
   15fac:	00000000 	andeq	r0, r0, r0
   15fb0:	00000000 	andeq	r0, r0, r0
   15fb4:	00000000 	andeq	r0, r0, r0
   15fb8:	00000000 	andeq	r0, r0, r0
   15fbc:	00000000 	andeq	r0, r0, r0
   15fc0:	00000000 	andeq	r0, r0, r0
   15fc4:	00000000 	andeq	r0, r0, r0
   15fc8:	00000000 	andeq	r0, r0, r0
   15fcc:	00000000 	andeq	r0, r0, r0
   15fd0:	00000000 	andeq	r0, r0, r0
   15fd4:	00000000 	andeq	r0, r0, r0
   15fd8:	00000000 	andeq	r0, r0, r0
   15fdc:	00000000 	andeq	r0, r0, r0
   15fe0:	00000000 	andeq	r0, r0, r0
   15fe4:	00000000 	andeq	r0, r0, r0
   15fe8:	00000000 	andeq	r0, r0, r0
   15fec:	00000000 	andeq	r0, r0, r0
   15ff0:	00000000 	andeq	r0, r0, r0
   15ff4:	00000000 	andeq	r0, r0, r0
   15ff8:	00000000 	andeq	r0, r0, r0
   15ffc:	00000000 	andeq	r0, r0, r0
   16000:	00000000 	andeq	r0, r0, r0
   16004:	00000000 	andeq	r0, r0, r0
   16008:	00000000 	andeq	r0, r0, r0
   1600c:	00000000 	andeq	r0, r0, r0
   16010:	00000000 	andeq	r0, r0, r0
   16014:	00000000 	andeq	r0, r0, r0
   16018:	00000000 	andeq	r0, r0, r0
   1601c:	00000000 	andeq	r0, r0, r0
   16020:	00000000 	andeq	r0, r0, r0
   16024:	00000000 	andeq	r0, r0, r0
   16028:	00000000 	andeq	r0, r0, r0
   1602c:	00000000 	andeq	r0, r0, r0
   16030:	00000000 	andeq	r0, r0, r0
   16034:	00000000 	andeq	r0, r0, r0
   16038:	00000000 	andeq	r0, r0, r0
   1603c:	00000000 	andeq	r0, r0, r0
   16040:	00000000 	andeq	r0, r0, r0
   16044:	00000000 	andeq	r0, r0, r0
   16048:	00000000 	andeq	r0, r0, r0
   1604c:	00000000 	andeq	r0, r0, r0
   16050:	00000000 	andeq	r0, r0, r0
   16054:	00000000 	andeq	r0, r0, r0
   16058:	00000000 	andeq	r0, r0, r0
   1605c:	00000000 	andeq	r0, r0, r0
   16060:	00000000 	andeq	r0, r0, r0
   16064:	00000000 	andeq	r0, r0, r0
   16068:	00000000 	andeq	r0, r0, r0
   1606c:	00000000 	andeq	r0, r0, r0
   16070:	00000000 	andeq	r0, r0, r0
   16074:	00000000 	andeq	r0, r0, r0
   16078:	00000000 	andeq	r0, r0, r0
   1607c:	00000000 	andeq	r0, r0, r0
   16080:	00000000 	andeq	r0, r0, r0
   16084:	00000000 	andeq	r0, r0, r0
   16088:	00000000 	andeq	r0, r0, r0
   1608c:	00000000 	andeq	r0, r0, r0
   16090:	00000000 	andeq	r0, r0, r0
   16094:	00000000 	andeq	r0, r0, r0
   16098:	00000000 	andeq	r0, r0, r0
   1609c:	00000000 	andeq	r0, r0, r0
   160a0:	00000000 	andeq	r0, r0, r0
   160a4:	00000000 	andeq	r0, r0, r0
   160a8:	00000000 	andeq	r0, r0, r0
   160ac:	00000000 	andeq	r0, r0, r0
   160b0:	00000000 	andeq	r0, r0, r0
   160b4:	00000000 	andeq	r0, r0, r0
   160b8:	00000000 	andeq	r0, r0, r0
   160bc:	00000000 	andeq	r0, r0, r0
   160c0:	00000000 	andeq	r0, r0, r0
   160c4:	00000000 	andeq	r0, r0, r0
   160c8:	00000000 	andeq	r0, r0, r0
   160cc:	00000000 	andeq	r0, r0, r0
   160d0:	00000000 	andeq	r0, r0, r0
   160d4:	00000000 	andeq	r0, r0, r0
   160d8:	00000000 	andeq	r0, r0, r0
   160dc:	00000000 	andeq	r0, r0, r0
   160e0:	00000000 	andeq	r0, r0, r0
   160e4:	00000000 	andeq	r0, r0, r0
   160e8:	00000000 	andeq	r0, r0, r0
   160ec:	00000000 	andeq	r0, r0, r0
   160f0:	00000000 	andeq	r0, r0, r0
   160f4:	00000000 	andeq	r0, r0, r0
   160f8:	00000000 	andeq	r0, r0, r0
   160fc:	00000000 	andeq	r0, r0, r0
   16100:	00000000 	andeq	r0, r0, r0
   16104:	00000000 	andeq	r0, r0, r0
   16108:	00000000 	andeq	r0, r0, r0
   1610c:	00000000 	andeq	r0, r0, r0
   16110:	00000000 	andeq	r0, r0, r0
   16114:	00000000 	andeq	r0, r0, r0
   16118:	00000000 	andeq	r0, r0, r0
   1611c:	00000000 	andeq	r0, r0, r0
   16120:	00000000 	andeq	r0, r0, r0
   16124:	00000000 	andeq	r0, r0, r0
   16128:	00000000 	andeq	r0, r0, r0
   1612c:	00000000 	andeq	r0, r0, r0
   16130:	00000000 	andeq	r0, r0, r0
   16134:	00000000 	andeq	r0, r0, r0
   16138:	00000000 	andeq	r0, r0, r0
   1613c:	00000000 	andeq	r0, r0, r0
   16140:	00000000 	andeq	r0, r0, r0
   16144:	00000000 	andeq	r0, r0, r0
   16148:	00000000 	andeq	r0, r0, r0
   1614c:	00000000 	andeq	r0, r0, r0
   16150:	00000000 	andeq	r0, r0, r0
   16154:	00000000 	andeq	r0, r0, r0
   16158:	00000000 	andeq	r0, r0, r0
   1615c:	00000000 	andeq	r0, r0, r0
   16160:	00000000 	andeq	r0, r0, r0
   16164:	00000000 	andeq	r0, r0, r0
   16168:	00000000 	andeq	r0, r0, r0
   1616c:	00000000 	andeq	r0, r0, r0
   16170:	00000000 	andeq	r0, r0, r0
   16174:	00000000 	andeq	r0, r0, r0
   16178:	00000000 	andeq	r0, r0, r0
   1617c:	00000000 	andeq	r0, r0, r0
   16180:	00000000 	andeq	r0, r0, r0
   16184:	00000000 	andeq	r0, r0, r0
   16188:	00000000 	andeq	r0, r0, r0
   1618c:	00000000 	andeq	r0, r0, r0
   16190:	00000000 	andeq	r0, r0, r0
   16194:	00000000 	andeq	r0, r0, r0
   16198:	00000000 	andeq	r0, r0, r0
   1619c:	00000000 	andeq	r0, r0, r0
   161a0:	00000000 	andeq	r0, r0, r0
   161a4:	00000000 	andeq	r0, r0, r0
   161a8:	00000000 	andeq	r0, r0, r0
   161ac:	00000000 	andeq	r0, r0, r0
   161b0:	00000000 	andeq	r0, r0, r0
   161b4:	00000000 	andeq	r0, r0, r0
   161b8:	00000000 	andeq	r0, r0, r0
   161bc:	00000000 	andeq	r0, r0, r0
   161c0:	00000000 	andeq	r0, r0, r0
   161c4:	00000000 	andeq	r0, r0, r0
   161c8:	00000000 	andeq	r0, r0, r0
   161cc:	00000000 	andeq	r0, r0, r0
   161d0:	00000000 	andeq	r0, r0, r0
   161d4:	00000000 	andeq	r0, r0, r0
   161d8:	00000000 	andeq	r0, r0, r0
   161dc:	00000000 	andeq	r0, r0, r0
   161e0:	00000000 	andeq	r0, r0, r0
   161e4:	00000000 	andeq	r0, r0, r0
   161e8:	00000000 	andeq	r0, r0, r0
   161ec:	00000000 	andeq	r0, r0, r0
   161f0:	00000000 	andeq	r0, r0, r0
   161f4:	00000000 	andeq	r0, r0, r0
   161f8:	00000000 	andeq	r0, r0, r0
   161fc:	00000000 	andeq	r0, r0, r0
   16200:	00000000 	andeq	r0, r0, r0
   16204:	00000000 	andeq	r0, r0, r0
   16208:	00000000 	andeq	r0, r0, r0
   1620c:	00000000 	andeq	r0, r0, r0
   16210:	00000000 	andeq	r0, r0, r0
   16214:	00000000 	andeq	r0, r0, r0
   16218:	00000000 	andeq	r0, r0, r0
   1621c:	00000000 	andeq	r0, r0, r0
   16220:	00000000 	andeq	r0, r0, r0
   16224:	00000000 	andeq	r0, r0, r0
   16228:	00000000 	andeq	r0, r0, r0
   1622c:	00000000 	andeq	r0, r0, r0
   16230:	00000000 	andeq	r0, r0, r0
   16234:	00000000 	andeq	r0, r0, r0
   16238:	00000000 	andeq	r0, r0, r0
   1623c:	00000000 	andeq	r0, r0, r0
   16240:	00000000 	andeq	r0, r0, r0
   16244:	00000000 	andeq	r0, r0, r0
   16248:	00000000 	andeq	r0, r0, r0
   1624c:	00000000 	andeq	r0, r0, r0
   16250:	00000000 	andeq	r0, r0, r0
   16254:	00000000 	andeq	r0, r0, r0
   16258:	00000000 	andeq	r0, r0, r0
   1625c:	00000000 	andeq	r0, r0, r0
   16260:	00000000 	andeq	r0, r0, r0
   16264:	00000000 	andeq	r0, r0, r0
   16268:	00000000 	andeq	r0, r0, r0
   1626c:	00000000 	andeq	r0, r0, r0
   16270:	00000000 	andeq	r0, r0, r0
   16274:	00000000 	andeq	r0, r0, r0
   16278:	00000000 	andeq	r0, r0, r0
   1627c:	00000000 	andeq	r0, r0, r0
   16280:	00000000 	andeq	r0, r0, r0
   16284:	00000000 	andeq	r0, r0, r0
   16288:	00000000 	andeq	r0, r0, r0
   1628c:	00000000 	andeq	r0, r0, r0
   16290:	00000000 	andeq	r0, r0, r0
   16294:	00000000 	andeq	r0, r0, r0
   16298:	00000000 	andeq	r0, r0, r0
   1629c:	00000000 	andeq	r0, r0, r0
   162a0:	00000000 	andeq	r0, r0, r0
   162a4:	00000000 	andeq	r0, r0, r0
   162a8:	00000000 	andeq	r0, r0, r0
   162ac:	00000000 	andeq	r0, r0, r0
   162b0:	00000000 	andeq	r0, r0, r0
   162b4:	00000000 	andeq	r0, r0, r0
   162b8:	00000000 	andeq	r0, r0, r0
   162bc:	00000000 	andeq	r0, r0, r0
   162c0:	00000000 	andeq	r0, r0, r0
   162c4:	00000000 	andeq	r0, r0, r0
   162c8:	00000000 	andeq	r0, r0, r0
   162cc:	00000000 	andeq	r0, r0, r0
   162d0:	00000000 	andeq	r0, r0, r0
   162d4:	00000000 	andeq	r0, r0, r0
   162d8:	00000000 	andeq	r0, r0, r0
   162dc:	00000000 	andeq	r0, r0, r0
   162e0:	00000000 	andeq	r0, r0, r0
   162e4:	00000000 	andeq	r0, r0, r0
   162e8:	00000000 	andeq	r0, r0, r0
   162ec:	00000000 	andeq	r0, r0, r0
   162f0:	00000000 	andeq	r0, r0, r0
   162f4:	00000000 	andeq	r0, r0, r0
   162f8:	00000000 	andeq	r0, r0, r0
   162fc:	00000000 	andeq	r0, r0, r0
   16300:	00000000 	andeq	r0, r0, r0
   16304:	00000000 	andeq	r0, r0, r0
   16308:	00000000 	andeq	r0, r0, r0
   1630c:	00000000 	andeq	r0, r0, r0
   16310:	00000000 	andeq	r0, r0, r0
   16314:	00000000 	andeq	r0, r0, r0
   16318:	00000000 	andeq	r0, r0, r0
   1631c:	00000000 	andeq	r0, r0, r0
   16320:	00000000 	andeq	r0, r0, r0
   16324:	00000000 	andeq	r0, r0, r0
   16328:	00000000 	andeq	r0, r0, r0
   1632c:	00000000 	andeq	r0, r0, r0
   16330:	00000000 	andeq	r0, r0, r0
   16334:	00000000 	andeq	r0, r0, r0
   16338:	00000000 	andeq	r0, r0, r0
   1633c:	00000000 	andeq	r0, r0, r0
   16340:	00000000 	andeq	r0, r0, r0
   16344:	00000000 	andeq	r0, r0, r0
   16348:	00000000 	andeq	r0, r0, r0
   1634c:	00000000 	andeq	r0, r0, r0
   16350:	00000000 	andeq	r0, r0, r0
   16354:	00000000 	andeq	r0, r0, r0
   16358:	00000000 	andeq	r0, r0, r0
   1635c:	00000000 	andeq	r0, r0, r0
   16360:	00000000 	andeq	r0, r0, r0
   16364:	00000000 	andeq	r0, r0, r0
   16368:	00000000 	andeq	r0, r0, r0
   1636c:	00000000 	andeq	r0, r0, r0
   16370:	00000000 	andeq	r0, r0, r0
   16374:	00000000 	andeq	r0, r0, r0
   16378:	00000000 	andeq	r0, r0, r0
   1637c:	00000000 	andeq	r0, r0, r0
   16380:	00000000 	andeq	r0, r0, r0
   16384:	00000000 	andeq	r0, r0, r0
   16388:	00000000 	andeq	r0, r0, r0
   1638c:	00000000 	andeq	r0, r0, r0
   16390:	00000000 	andeq	r0, r0, r0
   16394:	00000000 	andeq	r0, r0, r0
   16398:	00000000 	andeq	r0, r0, r0
   1639c:	00000000 	andeq	r0, r0, r0
   163a0:	00000000 	andeq	r0, r0, r0
   163a4:	00000000 	andeq	r0, r0, r0
   163a8:	00000000 	andeq	r0, r0, r0
   163ac:	00000000 	andeq	r0, r0, r0
   163b0:	00000000 	andeq	r0, r0, r0
   163b4:	00000000 	andeq	r0, r0, r0
   163b8:	00000000 	andeq	r0, r0, r0
   163bc:	00000000 	andeq	r0, r0, r0
   163c0:	00000000 	andeq	r0, r0, r0
   163c4:	00000000 	andeq	r0, r0, r0
   163c8:	00000000 	andeq	r0, r0, r0
   163cc:	00000000 	andeq	r0, r0, r0
   163d0:	00000000 	andeq	r0, r0, r0
   163d4:	00000000 	andeq	r0, r0, r0
   163d8:	00000000 	andeq	r0, r0, r0
   163dc:	00000000 	andeq	r0, r0, r0
   163e0:	00000000 	andeq	r0, r0, r0
   163e4:	00000000 	andeq	r0, r0, r0
   163e8:	00000000 	andeq	r0, r0, r0
   163ec:	00000000 	andeq	r0, r0, r0
   163f0:	00000000 	andeq	r0, r0, r0
   163f4:	00000000 	andeq	r0, r0, r0
   163f8:	00000000 	andeq	r0, r0, r0
   163fc:	00000000 	andeq	r0, r0, r0
   16400:	00000000 	andeq	r0, r0, r0
   16404:	00000000 	andeq	r0, r0, r0
   16408:	00000000 	andeq	r0, r0, r0
   1640c:	00000000 	andeq	r0, r0, r0
   16410:	00000000 	andeq	r0, r0, r0
   16414:	00000000 	andeq	r0, r0, r0
   16418:	00000000 	andeq	r0, r0, r0
   1641c:	00000000 	andeq	r0, r0, r0
   16420:	00000000 	andeq	r0, r0, r0
   16424:	00000000 	andeq	r0, r0, r0
   16428:	00000000 	andeq	r0, r0, r0
   1642c:	00000000 	andeq	r0, r0, r0
   16430:	00000000 	andeq	r0, r0, r0
   16434:	00000000 	andeq	r0, r0, r0
   16438:	00000000 	andeq	r0, r0, r0
   1643c:	00000000 	andeq	r0, r0, r0
   16440:	00000000 	andeq	r0, r0, r0
   16444:	00000000 	andeq	r0, r0, r0
   16448:	00000000 	andeq	r0, r0, r0
   1644c:	00000000 	andeq	r0, r0, r0
   16450:	00000000 	andeq	r0, r0, r0
   16454:	00000000 	andeq	r0, r0, r0
   16458:	00000000 	andeq	r0, r0, r0
   1645c:	00000000 	andeq	r0, r0, r0
   16460:	00000000 	andeq	r0, r0, r0
   16464:	00000000 	andeq	r0, r0, r0
   16468:	00000000 	andeq	r0, r0, r0
   1646c:	00000000 	andeq	r0, r0, r0
   16470:	00000000 	andeq	r0, r0, r0
   16474:	00000000 	andeq	r0, r0, r0
   16478:	00000000 	andeq	r0, r0, r0
   1647c:	00000000 	andeq	r0, r0, r0
   16480:	00000000 	andeq	r0, r0, r0
   16484:	00000000 	andeq	r0, r0, r0
   16488:	00000000 	andeq	r0, r0, r0
   1648c:	00000000 	andeq	r0, r0, r0
   16490:	00000000 	andeq	r0, r0, r0
   16494:	00000000 	andeq	r0, r0, r0
   16498:	00000000 	andeq	r0, r0, r0
   1649c:	00000000 	andeq	r0, r0, r0
   164a0:	00000000 	andeq	r0, r0, r0
   164a4:	00000000 	andeq	r0, r0, r0
   164a8:	00000000 	andeq	r0, r0, r0
   164ac:	00000000 	andeq	r0, r0, r0
   164b0:	00000000 	andeq	r0, r0, r0
   164b4:	00000000 	andeq	r0, r0, r0
   164b8:	00000000 	andeq	r0, r0, r0
   164bc:	00000000 	andeq	r0, r0, r0
   164c0:	00000000 	andeq	r0, r0, r0
   164c4:	00000000 	andeq	r0, r0, r0
   164c8:	00000000 	andeq	r0, r0, r0
   164cc:	00000000 	andeq	r0, r0, r0
   164d0:	00000000 	andeq	r0, r0, r0
   164d4:	00000000 	andeq	r0, r0, r0
   164d8:	00000000 	andeq	r0, r0, r0
   164dc:	00000000 	andeq	r0, r0, r0
   164e0:	00000000 	andeq	r0, r0, r0
   164e4:	00000000 	andeq	r0, r0, r0
   164e8:	00000000 	andeq	r0, r0, r0
   164ec:	00000000 	andeq	r0, r0, r0
   164f0:	00000000 	andeq	r0, r0, r0
   164f4:	00000000 	andeq	r0, r0, r0
   164f8:	00000000 	andeq	r0, r0, r0
   164fc:	00000000 	andeq	r0, r0, r0
   16500:	00000000 	andeq	r0, r0, r0
   16504:	00000000 	andeq	r0, r0, r0
   16508:	00000000 	andeq	r0, r0, r0
   1650c:	00000000 	andeq	r0, r0, r0
   16510:	00000000 	andeq	r0, r0, r0
   16514:	00000000 	andeq	r0, r0, r0
   16518:	00000000 	andeq	r0, r0, r0
   1651c:	00000000 	andeq	r0, r0, r0
   16520:	00000000 	andeq	r0, r0, r0
   16524:	00000000 	andeq	r0, r0, r0
   16528:	00000000 	andeq	r0, r0, r0
   1652c:	00000000 	andeq	r0, r0, r0
   16530:	00000000 	andeq	r0, r0, r0
   16534:	00000000 	andeq	r0, r0, r0
   16538:	00000000 	andeq	r0, r0, r0
   1653c:	00000000 	andeq	r0, r0, r0
   16540:	00000000 	andeq	r0, r0, r0
   16544:	00000000 	andeq	r0, r0, r0
   16548:	00000000 	andeq	r0, r0, r0
   1654c:	00000000 	andeq	r0, r0, r0
   16550:	00000000 	andeq	r0, r0, r0
   16554:	00000000 	andeq	r0, r0, r0
   16558:	00000000 	andeq	r0, r0, r0
   1655c:	00000000 	andeq	r0, r0, r0
   16560:	00000000 	andeq	r0, r0, r0
   16564:	00000000 	andeq	r0, r0, r0
   16568:	00000000 	andeq	r0, r0, r0
   1656c:	00000000 	andeq	r0, r0, r0
   16570:	00000000 	andeq	r0, r0, r0
   16574:	00000000 	andeq	r0, r0, r0
   16578:	00000000 	andeq	r0, r0, r0
   1657c:	00000000 	andeq	r0, r0, r0
   16580:	00000000 	andeq	r0, r0, r0
   16584:	00000000 	andeq	r0, r0, r0
   16588:	00000000 	andeq	r0, r0, r0
   1658c:	00000000 	andeq	r0, r0, r0
   16590:	00000000 	andeq	r0, r0, r0
   16594:	00000000 	andeq	r0, r0, r0
   16598:	00000000 	andeq	r0, r0, r0
   1659c:	00000000 	andeq	r0, r0, r0
   165a0:	00000000 	andeq	r0, r0, r0
   165a4:	00000000 	andeq	r0, r0, r0
   165a8:	00000000 	andeq	r0, r0, r0
   165ac:	00000000 	andeq	r0, r0, r0
   165b0:	00000000 	andeq	r0, r0, r0
   165b4:	00000000 	andeq	r0, r0, r0
   165b8:	00000000 	andeq	r0, r0, r0
   165bc:	00000000 	andeq	r0, r0, r0
   165c0:	00000000 	andeq	r0, r0, r0
   165c4:	00000000 	andeq	r0, r0, r0
   165c8:	00000000 	andeq	r0, r0, r0
   165cc:	00000000 	andeq	r0, r0, r0
   165d0:	00000000 	andeq	r0, r0, r0
   165d4:	00000000 	andeq	r0, r0, r0
   165d8:	00000000 	andeq	r0, r0, r0
   165dc:	00000000 	andeq	r0, r0, r0
   165e0:	00000000 	andeq	r0, r0, r0
   165e4:	00000000 	andeq	r0, r0, r0
   165e8:	00000000 	andeq	r0, r0, r0
   165ec:	00000000 	andeq	r0, r0, r0
   165f0:	00000000 	andeq	r0, r0, r0
   165f4:	00000000 	andeq	r0, r0, r0
   165f8:	00000000 	andeq	r0, r0, r0
   165fc:	00000000 	andeq	r0, r0, r0
   16600:	00000000 	andeq	r0, r0, r0
   16604:	00000000 	andeq	r0, r0, r0
   16608:	00000000 	andeq	r0, r0, r0
   1660c:	00000000 	andeq	r0, r0, r0
   16610:	00000000 	andeq	r0, r0, r0
   16614:	00000000 	andeq	r0, r0, r0
   16618:	00000000 	andeq	r0, r0, r0
   1661c:	00000000 	andeq	r0, r0, r0
   16620:	00000000 	andeq	r0, r0, r0
   16624:	00000000 	andeq	r0, r0, r0
   16628:	00000000 	andeq	r0, r0, r0
   1662c:	00000000 	andeq	r0, r0, r0
   16630:	00000000 	andeq	r0, r0, r0
   16634:	00000000 	andeq	r0, r0, r0
   16638:	00000000 	andeq	r0, r0, r0
   1663c:	00000000 	andeq	r0, r0, r0
   16640:	00000000 	andeq	r0, r0, r0
   16644:	00000000 	andeq	r0, r0, r0
   16648:	00000000 	andeq	r0, r0, r0
   1664c:	00000000 	andeq	r0, r0, r0
   16650:	00000000 	andeq	r0, r0, r0
   16654:	00000000 	andeq	r0, r0, r0
   16658:	00000000 	andeq	r0, r0, r0
   1665c:	00000000 	andeq	r0, r0, r0
   16660:	00000000 	andeq	r0, r0, r0
   16664:	00000000 	andeq	r0, r0, r0
   16668:	00000000 	andeq	r0, r0, r0
   1666c:	00000000 	andeq	r0, r0, r0
   16670:	00000000 	andeq	r0, r0, r0
   16674:	00000000 	andeq	r0, r0, r0
   16678:	00000000 	andeq	r0, r0, r0
   1667c:	00000000 	andeq	r0, r0, r0
   16680:	00000000 	andeq	r0, r0, r0
   16684:	00000000 	andeq	r0, r0, r0
   16688:	00000000 	andeq	r0, r0, r0
   1668c:	00000000 	andeq	r0, r0, r0
   16690:	00000000 	andeq	r0, r0, r0
   16694:	00000000 	andeq	r0, r0, r0
   16698:	00000000 	andeq	r0, r0, r0
   1669c:	00000000 	andeq	r0, r0, r0
   166a0:	00000000 	andeq	r0, r0, r0
   166a4:	00000000 	andeq	r0, r0, r0
   166a8:	00000000 	andeq	r0, r0, r0
   166ac:	00000000 	andeq	r0, r0, r0
   166b0:	00000000 	andeq	r0, r0, r0
   166b4:	00000000 	andeq	r0, r0, r0
   166b8:	00000000 	andeq	r0, r0, r0
   166bc:	00000000 	andeq	r0, r0, r0
   166c0:	00000000 	andeq	r0, r0, r0
   166c4:	00000000 	andeq	r0, r0, r0
   166c8:	00000000 	andeq	r0, r0, r0
   166cc:	00000000 	andeq	r0, r0, r0
   166d0:	00000000 	andeq	r0, r0, r0
   166d4:	00000000 	andeq	r0, r0, r0
   166d8:	00000000 	andeq	r0, r0, r0
   166dc:	00000000 	andeq	r0, r0, r0
   166e0:	00000000 	andeq	r0, r0, r0
   166e4:	00000000 	andeq	r0, r0, r0
   166e8:	00000000 	andeq	r0, r0, r0
   166ec:	00000000 	andeq	r0, r0, r0
   166f0:	00000000 	andeq	r0, r0, r0
   166f4:	00000000 	andeq	r0, r0, r0
   166f8:	00000000 	andeq	r0, r0, r0
   166fc:	00000000 	andeq	r0, r0, r0
   16700:	00000000 	andeq	r0, r0, r0
   16704:	00000000 	andeq	r0, r0, r0
   16708:	00000000 	andeq	r0, r0, r0
   1670c:	00000000 	andeq	r0, r0, r0
   16710:	00000000 	andeq	r0, r0, r0
   16714:	00000000 	andeq	r0, r0, r0
   16718:	00000000 	andeq	r0, r0, r0
   1671c:	00000000 	andeq	r0, r0, r0
   16720:	00000000 	andeq	r0, r0, r0
   16724:	00000000 	andeq	r0, r0, r0
   16728:	00000000 	andeq	r0, r0, r0
   1672c:	00000000 	andeq	r0, r0, r0
   16730:	00000000 	andeq	r0, r0, r0
   16734:	00000000 	andeq	r0, r0, r0
   16738:	00000000 	andeq	r0, r0, r0
   1673c:	00000000 	andeq	r0, r0, r0
   16740:	00000000 	andeq	r0, r0, r0
   16744:	00000000 	andeq	r0, r0, r0
   16748:	00000000 	andeq	r0, r0, r0
   1674c:	00000000 	andeq	r0, r0, r0
   16750:	00000000 	andeq	r0, r0, r0
   16754:	00000000 	andeq	r0, r0, r0
   16758:	00000000 	andeq	r0, r0, r0
   1675c:	00000000 	andeq	r0, r0, r0
   16760:	00000000 	andeq	r0, r0, r0
   16764:	00000000 	andeq	r0, r0, r0
   16768:	00000000 	andeq	r0, r0, r0
   1676c:	00000000 	andeq	r0, r0, r0
   16770:	00000000 	andeq	r0, r0, r0
   16774:	00000000 	andeq	r0, r0, r0
   16778:	00000000 	andeq	r0, r0, r0
   1677c:	00000000 	andeq	r0, r0, r0
   16780:	00000000 	andeq	r0, r0, r0
   16784:	00000000 	andeq	r0, r0, r0
   16788:	00000000 	andeq	r0, r0, r0
   1678c:	00000000 	andeq	r0, r0, r0
   16790:	00000000 	andeq	r0, r0, r0
   16794:	00000000 	andeq	r0, r0, r0
   16798:	00000000 	andeq	r0, r0, r0
   1679c:	00000000 	andeq	r0, r0, r0
   167a0:	00000000 	andeq	r0, r0, r0
   167a4:	00000000 	andeq	r0, r0, r0
   167a8:	00000000 	andeq	r0, r0, r0
   167ac:	00000000 	andeq	r0, r0, r0
   167b0:	00000000 	andeq	r0, r0, r0
   167b4:	00000000 	andeq	r0, r0, r0
   167b8:	00000000 	andeq	r0, r0, r0
   167bc:	00000000 	andeq	r0, r0, r0
   167c0:	00000000 	andeq	r0, r0, r0
   167c4:	00000000 	andeq	r0, r0, r0
   167c8:	00000000 	andeq	r0, r0, r0
   167cc:	00000000 	andeq	r0, r0, r0
   167d0:	00000000 	andeq	r0, r0, r0
   167d4:	00000000 	andeq	r0, r0, r0
   167d8:	00000000 	andeq	r0, r0, r0
   167dc:	00000000 	andeq	r0, r0, r0
   167e0:	00000000 	andeq	r0, r0, r0
   167e4:	00000000 	andeq	r0, r0, r0
   167e8:	00000000 	andeq	r0, r0, r0
   167ec:	00000000 	andeq	r0, r0, r0
   167f0:	00000000 	andeq	r0, r0, r0
   167f4:	00000000 	andeq	r0, r0, r0
   167f8:	00000000 	andeq	r0, r0, r0
   167fc:	00000000 	andeq	r0, r0, r0
   16800:	00000000 	andeq	r0, r0, r0
   16804:	00000000 	andeq	r0, r0, r0
   16808:	00000000 	andeq	r0, r0, r0
   1680c:	00000000 	andeq	r0, r0, r0
   16810:	00000000 	andeq	r0, r0, r0
   16814:	00000000 	andeq	r0, r0, r0
   16818:	00000000 	andeq	r0, r0, r0
   1681c:	00000000 	andeq	r0, r0, r0
   16820:	00000000 	andeq	r0, r0, r0
   16824:	00000000 	andeq	r0, r0, r0
   16828:	00000000 	andeq	r0, r0, r0
   1682c:	00000000 	andeq	r0, r0, r0
   16830:	00000000 	andeq	r0, r0, r0
   16834:	00000000 	andeq	r0, r0, r0
   16838:	00000000 	andeq	r0, r0, r0
   1683c:	00000000 	andeq	r0, r0, r0
   16840:	00000000 	andeq	r0, r0, r0
   16844:	00000000 	andeq	r0, r0, r0
   16848:	00000000 	andeq	r0, r0, r0
   1684c:	00000000 	andeq	r0, r0, r0
   16850:	00000000 	andeq	r0, r0, r0
   16854:	00000000 	andeq	r0, r0, r0
   16858:	00000000 	andeq	r0, r0, r0
   1685c:	00000000 	andeq	r0, r0, r0
   16860:	00000000 	andeq	r0, r0, r0
   16864:	00000000 	andeq	r0, r0, r0
   16868:	00000000 	andeq	r0, r0, r0
   1686c:	00000000 	andeq	r0, r0, r0
   16870:	00000000 	andeq	r0, r0, r0
   16874:	00000000 	andeq	r0, r0, r0
   16878:	00000000 	andeq	r0, r0, r0
   1687c:	00000000 	andeq	r0, r0, r0
   16880:	00000000 	andeq	r0, r0, r0
   16884:	00000000 	andeq	r0, r0, r0
   16888:	00000000 	andeq	r0, r0, r0
   1688c:	00000000 	andeq	r0, r0, r0
   16890:	00000000 	andeq	r0, r0, r0
   16894:	00000000 	andeq	r0, r0, r0
   16898:	00000000 	andeq	r0, r0, r0
   1689c:	00000000 	andeq	r0, r0, r0
   168a0:	00000000 	andeq	r0, r0, r0
   168a4:	00000000 	andeq	r0, r0, r0
   168a8:	00000000 	andeq	r0, r0, r0
   168ac:	00000000 	andeq	r0, r0, r0
   168b0:	00000000 	andeq	r0, r0, r0
   168b4:	00000000 	andeq	r0, r0, r0
   168b8:	00000000 	andeq	r0, r0, r0
   168bc:	00000000 	andeq	r0, r0, r0
   168c0:	00000000 	andeq	r0, r0, r0
   168c4:	00000000 	andeq	r0, r0, r0
   168c8:	00000000 	andeq	r0, r0, r0
   168cc:	00000000 	andeq	r0, r0, r0
   168d0:	00000000 	andeq	r0, r0, r0
   168d4:	00000000 	andeq	r0, r0, r0
   168d8:	00000000 	andeq	r0, r0, r0
   168dc:	00000000 	andeq	r0, r0, r0
   168e0:	00000000 	andeq	r0, r0, r0
   168e4:	00000000 	andeq	r0, r0, r0
   168e8:	00000000 	andeq	r0, r0, r0
   168ec:	00000000 	andeq	r0, r0, r0
   168f0:	00000000 	andeq	r0, r0, r0
   168f4:	00000000 	andeq	r0, r0, r0
   168f8:	00000000 	andeq	r0, r0, r0
   168fc:	00000000 	andeq	r0, r0, r0
   16900:	00000000 	andeq	r0, r0, r0
   16904:	00000000 	andeq	r0, r0, r0
   16908:	00000000 	andeq	r0, r0, r0
   1690c:	00000000 	andeq	r0, r0, r0
   16910:	00000000 	andeq	r0, r0, r0
   16914:	00000000 	andeq	r0, r0, r0
   16918:	00000000 	andeq	r0, r0, r0
   1691c:	00000000 	andeq	r0, r0, r0
   16920:	00000000 	andeq	r0, r0, r0
   16924:	00000000 	andeq	r0, r0, r0
   16928:	00000000 	andeq	r0, r0, r0
   1692c:	00000000 	andeq	r0, r0, r0
   16930:	00000000 	andeq	r0, r0, r0
   16934:	00000000 	andeq	r0, r0, r0
   16938:	00000000 	andeq	r0, r0, r0
   1693c:	00000000 	andeq	r0, r0, r0
   16940:	00000000 	andeq	r0, r0, r0
   16944:	00000000 	andeq	r0, r0, r0
   16948:	00000000 	andeq	r0, r0, r0
   1694c:	00000000 	andeq	r0, r0, r0
   16950:	00000000 	andeq	r0, r0, r0
   16954:	00000000 	andeq	r0, r0, r0
   16958:	00000000 	andeq	r0, r0, r0
   1695c:	00000000 	andeq	r0, r0, r0
   16960:	00000000 	andeq	r0, r0, r0
   16964:	00000000 	andeq	r0, r0, r0
   16968:	00000000 	andeq	r0, r0, r0
   1696c:	00000000 	andeq	r0, r0, r0
   16970:	00000000 	andeq	r0, r0, r0
   16974:	00000000 	andeq	r0, r0, r0
   16978:	00000000 	andeq	r0, r0, r0
   1697c:	00000000 	andeq	r0, r0, r0
   16980:	00000000 	andeq	r0, r0, r0
   16984:	00000000 	andeq	r0, r0, r0
   16988:	00000000 	andeq	r0, r0, r0
   1698c:	00000000 	andeq	r0, r0, r0
   16990:	00000000 	andeq	r0, r0, r0
   16994:	00000000 	andeq	r0, r0, r0
   16998:	00000000 	andeq	r0, r0, r0
   1699c:	00000000 	andeq	r0, r0, r0
   169a0:	00000000 	andeq	r0, r0, r0
   169a4:	00000000 	andeq	r0, r0, r0
   169a8:	00000000 	andeq	r0, r0, r0
   169ac:	00000000 	andeq	r0, r0, r0
   169b0:	00000000 	andeq	r0, r0, r0
   169b4:	00000000 	andeq	r0, r0, r0
   169b8:	00000000 	andeq	r0, r0, r0
   169bc:	00000000 	andeq	r0, r0, r0
   169c0:	00000000 	andeq	r0, r0, r0
   169c4:	00000000 	andeq	r0, r0, r0
   169c8:	00000000 	andeq	r0, r0, r0
   169cc:	00000000 	andeq	r0, r0, r0
   169d0:	00000000 	andeq	r0, r0, r0
   169d4:	00000000 	andeq	r0, r0, r0
   169d8:	00000000 	andeq	r0, r0, r0
   169dc:	00000000 	andeq	r0, r0, r0
   169e0:	00000000 	andeq	r0, r0, r0
   169e4:	00000000 	andeq	r0, r0, r0
   169e8:	00000000 	andeq	r0, r0, r0
   169ec:	00000000 	andeq	r0, r0, r0
   169f0:	00000000 	andeq	r0, r0, r0
   169f4:	00000000 	andeq	r0, r0, r0
   169f8:	00000000 	andeq	r0, r0, r0
   169fc:	00000000 	andeq	r0, r0, r0
   16a00:	00000000 	andeq	r0, r0, r0
   16a04:	00000000 	andeq	r0, r0, r0
   16a08:	00000000 	andeq	r0, r0, r0
   16a0c:	00000000 	andeq	r0, r0, r0
   16a10:	00000000 	andeq	r0, r0, r0
   16a14:	00000000 	andeq	r0, r0, r0
   16a18:	00000000 	andeq	r0, r0, r0
   16a1c:	00000000 	andeq	r0, r0, r0
   16a20:	00000000 	andeq	r0, r0, r0
   16a24:	00000000 	andeq	r0, r0, r0
   16a28:	00000000 	andeq	r0, r0, r0
   16a2c:	00000000 	andeq	r0, r0, r0
   16a30:	00000000 	andeq	r0, r0, r0
   16a34:	00000000 	andeq	r0, r0, r0
   16a38:	00000000 	andeq	r0, r0, r0
   16a3c:	00000000 	andeq	r0, r0, r0
   16a40:	00000000 	andeq	r0, r0, r0
   16a44:	00000000 	andeq	r0, r0, r0
   16a48:	00000000 	andeq	r0, r0, r0
   16a4c:	00000000 	andeq	r0, r0, r0
   16a50:	00000000 	andeq	r0, r0, r0
   16a54:	00000000 	andeq	r0, r0, r0
   16a58:	00000000 	andeq	r0, r0, r0
   16a5c:	00000000 	andeq	r0, r0, r0
   16a60:	00000000 	andeq	r0, r0, r0
   16a64:	00000000 	andeq	r0, r0, r0
   16a68:	00000000 	andeq	r0, r0, r0
   16a6c:	00000000 	andeq	r0, r0, r0
   16a70:	00000000 	andeq	r0, r0, r0
   16a74:	00000000 	andeq	r0, r0, r0
   16a78:	00000000 	andeq	r0, r0, r0
   16a7c:	00000000 	andeq	r0, r0, r0
   16a80:	00000000 	andeq	r0, r0, r0
   16a84:	00000000 	andeq	r0, r0, r0
   16a88:	00000000 	andeq	r0, r0, r0
   16a8c:	00000000 	andeq	r0, r0, r0
   16a90:	00000000 	andeq	r0, r0, r0
   16a94:	00000000 	andeq	r0, r0, r0
   16a98:	00000000 	andeq	r0, r0, r0
   16a9c:	00000000 	andeq	r0, r0, r0
   16aa0:	00000000 	andeq	r0, r0, r0
   16aa4:	00000000 	andeq	r0, r0, r0
   16aa8:	00000000 	andeq	r0, r0, r0
   16aac:	00000000 	andeq	r0, r0, r0
   16ab0:	00000000 	andeq	r0, r0, r0
   16ab4:	00000000 	andeq	r0, r0, r0
   16ab8:	00000000 	andeq	r0, r0, r0
   16abc:	00000000 	andeq	r0, r0, r0
   16ac0:	00000000 	andeq	r0, r0, r0
   16ac4:	00000000 	andeq	r0, r0, r0
   16ac8:	00000000 	andeq	r0, r0, r0
   16acc:	00000000 	andeq	r0, r0, r0
   16ad0:	00000000 	andeq	r0, r0, r0
   16ad4:	00000000 	andeq	r0, r0, r0
   16ad8:	00000000 	andeq	r0, r0, r0
   16adc:	00000000 	andeq	r0, r0, r0
   16ae0:	00000000 	andeq	r0, r0, r0
   16ae4:	00000000 	andeq	r0, r0, r0
   16ae8:	00000000 	andeq	r0, r0, r0
   16aec:	00000000 	andeq	r0, r0, r0
   16af0:	00000000 	andeq	r0, r0, r0
   16af4:	00000000 	andeq	r0, r0, r0
   16af8:	00000000 	andeq	r0, r0, r0
   16afc:	00000000 	andeq	r0, r0, r0
   16b00:	00000000 	andeq	r0, r0, r0
   16b04:	00000000 	andeq	r0, r0, r0
   16b08:	00000000 	andeq	r0, r0, r0
   16b0c:	00000000 	andeq	r0, r0, r0
   16b10:	00000000 	andeq	r0, r0, r0
   16b14:	00000000 	andeq	r0, r0, r0
   16b18:	00000000 	andeq	r0, r0, r0
   16b1c:	00000000 	andeq	r0, r0, r0
   16b20:	00000000 	andeq	r0, r0, r0
   16b24:	00000000 	andeq	r0, r0, r0
   16b28:	00000000 	andeq	r0, r0, r0
   16b2c:	00000000 	andeq	r0, r0, r0
   16b30:	00000000 	andeq	r0, r0, r0
   16b34:	00000000 	andeq	r0, r0, r0
   16b38:	00000000 	andeq	r0, r0, r0
   16b3c:	00000000 	andeq	r0, r0, r0
   16b40:	00000000 	andeq	r0, r0, r0
   16b44:	00000000 	andeq	r0, r0, r0
   16b48:	00000000 	andeq	r0, r0, r0
   16b4c:	00000000 	andeq	r0, r0, r0
   16b50:	00000000 	andeq	r0, r0, r0
   16b54:	00000000 	andeq	r0, r0, r0
   16b58:	00000000 	andeq	r0, r0, r0
   16b5c:	00000000 	andeq	r0, r0, r0
   16b60:	00000000 	andeq	r0, r0, r0
   16b64:	00000000 	andeq	r0, r0, r0
   16b68:	00000000 	andeq	r0, r0, r0
   16b6c:	00000000 	andeq	r0, r0, r0
   16b70:	00000000 	andeq	r0, r0, r0
   16b74:	00000000 	andeq	r0, r0, r0
   16b78:	00000000 	andeq	r0, r0, r0
   16b7c:	00000000 	andeq	r0, r0, r0
   16b80:	00000000 	andeq	r0, r0, r0
   16b84:	00000000 	andeq	r0, r0, r0
   16b88:	00000000 	andeq	r0, r0, r0
   16b8c:	00000000 	andeq	r0, r0, r0
   16b90:	00000000 	andeq	r0, r0, r0
   16b94:	00000000 	andeq	r0, r0, r0
   16b98:	00000000 	andeq	r0, r0, r0
   16b9c:	00000000 	andeq	r0, r0, r0
   16ba0:	00000000 	andeq	r0, r0, r0
   16ba4:	00000000 	andeq	r0, r0, r0
   16ba8:	00000000 	andeq	r0, r0, r0
   16bac:	00000000 	andeq	r0, r0, r0
   16bb0:	00000000 	andeq	r0, r0, r0
   16bb4:	00000000 	andeq	r0, r0, r0
   16bb8:	00000000 	andeq	r0, r0, r0
   16bbc:	00000000 	andeq	r0, r0, r0
   16bc0:	00000000 	andeq	r0, r0, r0
   16bc4:	00000000 	andeq	r0, r0, r0
   16bc8:	00000000 	andeq	r0, r0, r0
   16bcc:	00000000 	andeq	r0, r0, r0
   16bd0:	00000000 	andeq	r0, r0, r0
   16bd4:	00000000 	andeq	r0, r0, r0
   16bd8:	00000000 	andeq	r0, r0, r0
   16bdc:	00000000 	andeq	r0, r0, r0
   16be0:	00000000 	andeq	r0, r0, r0
   16be4:	00000000 	andeq	r0, r0, r0
   16be8:	00000000 	andeq	r0, r0, r0
   16bec:	00000000 	andeq	r0, r0, r0
   16bf0:	00000000 	andeq	r0, r0, r0
   16bf4:	00000000 	andeq	r0, r0, r0
   16bf8:	00000000 	andeq	r0, r0, r0
   16bfc:	00000000 	andeq	r0, r0, r0
   16c00:	00000000 	andeq	r0, r0, r0
   16c04:	00000000 	andeq	r0, r0, r0
   16c08:	00000000 	andeq	r0, r0, r0
   16c0c:	00000000 	andeq	r0, r0, r0
   16c10:	00000000 	andeq	r0, r0, r0
   16c14:	00000000 	andeq	r0, r0, r0
   16c18:	00000000 	andeq	r0, r0, r0
   16c1c:	00000000 	andeq	r0, r0, r0
   16c20:	00000000 	andeq	r0, r0, r0
   16c24:	00000000 	andeq	r0, r0, r0
   16c28:	00000000 	andeq	r0, r0, r0
   16c2c:	00000000 	andeq	r0, r0, r0
   16c30:	00000000 	andeq	r0, r0, r0
   16c34:	00000000 	andeq	r0, r0, r0
   16c38:	00000000 	andeq	r0, r0, r0
   16c3c:	00000000 	andeq	r0, r0, r0
   16c40:	00000000 	andeq	r0, r0, r0
   16c44:	00000000 	andeq	r0, r0, r0
   16c48:	00000000 	andeq	r0, r0, r0
   16c4c:	00000000 	andeq	r0, r0, r0
   16c50:	00000000 	andeq	r0, r0, r0
   16c54:	00000000 	andeq	r0, r0, r0
   16c58:	00000000 	andeq	r0, r0, r0
   16c5c:	00000000 	andeq	r0, r0, r0
   16c60:	00000000 	andeq	r0, r0, r0
   16c64:	00000000 	andeq	r0, r0, r0
   16c68:	00000000 	andeq	r0, r0, r0
   16c6c:	00000000 	andeq	r0, r0, r0
   16c70:	00000000 	andeq	r0, r0, r0
   16c74:	00000000 	andeq	r0, r0, r0
   16c78:	00000000 	andeq	r0, r0, r0
   16c7c:	00000000 	andeq	r0, r0, r0
   16c80:	00000000 	andeq	r0, r0, r0
   16c84:	00000000 	andeq	r0, r0, r0
   16c88:	00000000 	andeq	r0, r0, r0
   16c8c:	00000000 	andeq	r0, r0, r0
   16c90:	00000000 	andeq	r0, r0, r0
   16c94:	00000000 	andeq	r0, r0, r0
   16c98:	00000000 	andeq	r0, r0, r0
   16c9c:	00000000 	andeq	r0, r0, r0
   16ca0:	00000000 	andeq	r0, r0, r0
   16ca4:	00000000 	andeq	r0, r0, r0
   16ca8:	00000000 	andeq	r0, r0, r0
   16cac:	00000000 	andeq	r0, r0, r0
   16cb0:	00000000 	andeq	r0, r0, r0
   16cb4:	00000000 	andeq	r0, r0, r0
   16cb8:	00000000 	andeq	r0, r0, r0
   16cbc:	00000000 	andeq	r0, r0, r0
   16cc0:	00000000 	andeq	r0, r0, r0
   16cc4:	00000000 	andeq	r0, r0, r0
   16cc8:	00000000 	andeq	r0, r0, r0
   16ccc:	00000000 	andeq	r0, r0, r0
   16cd0:	00000000 	andeq	r0, r0, r0
   16cd4:	00000000 	andeq	r0, r0, r0
   16cd8:	00000000 	andeq	r0, r0, r0
   16cdc:	00000000 	andeq	r0, r0, r0
   16ce0:	00000000 	andeq	r0, r0, r0
   16ce4:	00000000 	andeq	r0, r0, r0
   16ce8:	00000000 	andeq	r0, r0, r0
   16cec:	00000000 	andeq	r0, r0, r0
   16cf0:	00000000 	andeq	r0, r0, r0
   16cf4:	00000000 	andeq	r0, r0, r0
   16cf8:	00000000 	andeq	r0, r0, r0
   16cfc:	00000000 	andeq	r0, r0, r0
   16d00:	00000000 	andeq	r0, r0, r0
   16d04:	00000000 	andeq	r0, r0, r0
   16d08:	00000000 	andeq	r0, r0, r0
   16d0c:	00000000 	andeq	r0, r0, r0
   16d10:	00000000 	andeq	r0, r0, r0
   16d14:	00000000 	andeq	r0, r0, r0
   16d18:	00000000 	andeq	r0, r0, r0
   16d1c:	00000000 	andeq	r0, r0, r0
   16d20:	00000000 	andeq	r0, r0, r0
   16d24:	00000000 	andeq	r0, r0, r0
   16d28:	00000000 	andeq	r0, r0, r0
   16d2c:	00000000 	andeq	r0, r0, r0
   16d30:	00000000 	andeq	r0, r0, r0
   16d34:	00000000 	andeq	r0, r0, r0
   16d38:	00000000 	andeq	r0, r0, r0
   16d3c:	00000000 	andeq	r0, r0, r0
   16d40:	00000000 	andeq	r0, r0, r0
   16d44:	00000000 	andeq	r0, r0, r0
   16d48:	00000000 	andeq	r0, r0, r0
   16d4c:	00000000 	andeq	r0, r0, r0
   16d50:	00000000 	andeq	r0, r0, r0
   16d54:	00000000 	andeq	r0, r0, r0
   16d58:	00000000 	andeq	r0, r0, r0
   16d5c:	00000000 	andeq	r0, r0, r0
   16d60:	00000000 	andeq	r0, r0, r0
   16d64:	00000000 	andeq	r0, r0, r0
   16d68:	00000000 	andeq	r0, r0, r0
   16d6c:	00000000 	andeq	r0, r0, r0
   16d70:	00000000 	andeq	r0, r0, r0
   16d74:	00000000 	andeq	r0, r0, r0
   16d78:	00000000 	andeq	r0, r0, r0
   16d7c:	00000000 	andeq	r0, r0, r0
   16d80:	00000000 	andeq	r0, r0, r0
   16d84:	00000000 	andeq	r0, r0, r0
   16d88:	00000000 	andeq	r0, r0, r0
   16d8c:	00000000 	andeq	r0, r0, r0
   16d90:	00000000 	andeq	r0, r0, r0
   16d94:	00000000 	andeq	r0, r0, r0
   16d98:	00000000 	andeq	r0, r0, r0
   16d9c:	00000000 	andeq	r0, r0, r0
   16da0:	00000000 	andeq	r0, r0, r0
   16da4:	00000000 	andeq	r0, r0, r0
   16da8:	00000000 	andeq	r0, r0, r0
   16dac:	00000000 	andeq	r0, r0, r0
   16db0:	00000000 	andeq	r0, r0, r0
   16db4:	00000000 	andeq	r0, r0, r0
   16db8:	00000000 	andeq	r0, r0, r0
   16dbc:	00000000 	andeq	r0, r0, r0
   16dc0:	00000000 	andeq	r0, r0, r0
   16dc4:	00000000 	andeq	r0, r0, r0
   16dc8:	00000000 	andeq	r0, r0, r0
   16dcc:	00000000 	andeq	r0, r0, r0
   16dd0:	00000000 	andeq	r0, r0, r0
   16dd4:	00000000 	andeq	r0, r0, r0
   16dd8:	00000000 	andeq	r0, r0, r0
   16ddc:	00000000 	andeq	r0, r0, r0
   16de0:	00000000 	andeq	r0, r0, r0
   16de4:	00000000 	andeq	r0, r0, r0
   16de8:	00000000 	andeq	r0, r0, r0
   16dec:	00000000 	andeq	r0, r0, r0
   16df0:	00000000 	andeq	r0, r0, r0
   16df4:	00000000 	andeq	r0, r0, r0
   16df8:	00000000 	andeq	r0, r0, r0
   16dfc:	00000000 	andeq	r0, r0, r0
   16e00:	00000000 	andeq	r0, r0, r0
   16e04:	00000000 	andeq	r0, r0, r0
   16e08:	00000000 	andeq	r0, r0, r0
   16e0c:	00000000 	andeq	r0, r0, r0
   16e10:	00000000 	andeq	r0, r0, r0
   16e14:	00000000 	andeq	r0, r0, r0
   16e18:	00000000 	andeq	r0, r0, r0
   16e1c:	00000000 	andeq	r0, r0, r0
   16e20:	00000000 	andeq	r0, r0, r0
   16e24:	00000000 	andeq	r0, r0, r0
   16e28:	00000000 	andeq	r0, r0, r0
   16e2c:	00000000 	andeq	r0, r0, r0
   16e30:	00000000 	andeq	r0, r0, r0
   16e34:	00000000 	andeq	r0, r0, r0
   16e38:	00000000 	andeq	r0, r0, r0
   16e3c:	00000000 	andeq	r0, r0, r0
   16e40:	00000000 	andeq	r0, r0, r0
   16e44:	00000000 	andeq	r0, r0, r0
   16e48:	00000000 	andeq	r0, r0, r0
   16e4c:	00000000 	andeq	r0, r0, r0
   16e50:	00000000 	andeq	r0, r0, r0
   16e54:	00000000 	andeq	r0, r0, r0
   16e58:	00000000 	andeq	r0, r0, r0
   16e5c:	00000000 	andeq	r0, r0, r0
   16e60:	00000000 	andeq	r0, r0, r0
   16e64:	00000000 	andeq	r0, r0, r0
   16e68:	00000000 	andeq	r0, r0, r0
   16e6c:	00000000 	andeq	r0, r0, r0
   16e70:	00000000 	andeq	r0, r0, r0
   16e74:	00000000 	andeq	r0, r0, r0
   16e78:	00000000 	andeq	r0, r0, r0
   16e7c:	00000000 	andeq	r0, r0, r0
   16e80:	00000000 	andeq	r0, r0, r0
   16e84:	00000000 	andeq	r0, r0, r0
   16e88:	00000000 	andeq	r0, r0, r0
   16e8c:	00000000 	andeq	r0, r0, r0
   16e90:	00000000 	andeq	r0, r0, r0
   16e94:	00000000 	andeq	r0, r0, r0
   16e98:	00000000 	andeq	r0, r0, r0
   16e9c:	00000000 	andeq	r0, r0, r0
   16ea0:	00000000 	andeq	r0, r0, r0
   16ea4:	00000000 	andeq	r0, r0, r0
   16ea8:	00000000 	andeq	r0, r0, r0
   16eac:	00000000 	andeq	r0, r0, r0
   16eb0:	00000000 	andeq	r0, r0, r0
   16eb4:	00000000 	andeq	r0, r0, r0
   16eb8:	00000000 	andeq	r0, r0, r0
   16ebc:	00000000 	andeq	r0, r0, r0
   16ec0:	00000000 	andeq	r0, r0, r0
   16ec4:	00000000 	andeq	r0, r0, r0
   16ec8:	00000000 	andeq	r0, r0, r0
   16ecc:	00000000 	andeq	r0, r0, r0
   16ed0:	00000000 	andeq	r0, r0, r0
   16ed4:	00000000 	andeq	r0, r0, r0
   16ed8:	00000000 	andeq	r0, r0, r0
   16edc:	00000000 	andeq	r0, r0, r0
   16ee0:	00000000 	andeq	r0, r0, r0
   16ee4:	00000000 	andeq	r0, r0, r0
   16ee8:	00000000 	andeq	r0, r0, r0
   16eec:	00000000 	andeq	r0, r0, r0
   16ef0:	00000000 	andeq	r0, r0, r0
   16ef4:	00000000 	andeq	r0, r0, r0
   16ef8:	00000000 	andeq	r0, r0, r0
   16efc:	00000000 	andeq	r0, r0, r0
   16f00:	00000000 	andeq	r0, r0, r0
   16f04:	00000000 	andeq	r0, r0, r0
   16f08:	00000000 	andeq	r0, r0, r0
   16f0c:	00000000 	andeq	r0, r0, r0
   16f10:	00000000 	andeq	r0, r0, r0
   16f14:	00000000 	andeq	r0, r0, r0
   16f18:	00000000 	andeq	r0, r0, r0
   16f1c:	00000000 	andeq	r0, r0, r0
   16f20:	00000000 	andeq	r0, r0, r0
   16f24:	00000000 	andeq	r0, r0, r0
   16f28:	00000000 	andeq	r0, r0, r0
   16f2c:	00000000 	andeq	r0, r0, r0
   16f30:	00000000 	andeq	r0, r0, r0
   16f34:	00000000 	andeq	r0, r0, r0
   16f38:	00000000 	andeq	r0, r0, r0
   16f3c:	00000000 	andeq	r0, r0, r0
   16f40:	00000000 	andeq	r0, r0, r0
   16f44:	00000000 	andeq	r0, r0, r0
   16f48:	00000000 	andeq	r0, r0, r0
   16f4c:	00000000 	andeq	r0, r0, r0
   16f50:	00000000 	andeq	r0, r0, r0
   16f54:	00000000 	andeq	r0, r0, r0
   16f58:	00000000 	andeq	r0, r0, r0
   16f5c:	00000000 	andeq	r0, r0, r0
   16f60:	00000000 	andeq	r0, r0, r0
   16f64:	00000000 	andeq	r0, r0, r0
   16f68:	00000000 	andeq	r0, r0, r0
   16f6c:	00000000 	andeq	r0, r0, r0
   16f70:	00000000 	andeq	r0, r0, r0
   16f74:	00000000 	andeq	r0, r0, r0
   16f78:	00000000 	andeq	r0, r0, r0
   16f7c:	00000000 	andeq	r0, r0, r0
   16f80:	00000000 	andeq	r0, r0, r0
   16f84:	00000000 	andeq	r0, r0, r0
   16f88:	00000000 	andeq	r0, r0, r0
   16f8c:	00000000 	andeq	r0, r0, r0
   16f90:	00000000 	andeq	r0, r0, r0
   16f94:	00000000 	andeq	r0, r0, r0
   16f98:	00000000 	andeq	r0, r0, r0
   16f9c:	00000000 	andeq	r0, r0, r0
   16fa0:	00000000 	andeq	r0, r0, r0
   16fa4:	00000000 	andeq	r0, r0, r0
   16fa8:	00000000 	andeq	r0, r0, r0
   16fac:	00000000 	andeq	r0, r0, r0
   16fb0:	00000000 	andeq	r0, r0, r0
   16fb4:	00000000 	andeq	r0, r0, r0
   16fb8:	00000000 	andeq	r0, r0, r0
   16fbc:	00000000 	andeq	r0, r0, r0
   16fc0:	00000000 	andeq	r0, r0, r0
   16fc4:	00000000 	andeq	r0, r0, r0
   16fc8:	00000000 	andeq	r0, r0, r0
   16fcc:	00000000 	andeq	r0, r0, r0
   16fd0:	00000000 	andeq	r0, r0, r0
   16fd4:	00000000 	andeq	r0, r0, r0
   16fd8:	00000000 	andeq	r0, r0, r0
   16fdc:	00000000 	andeq	r0, r0, r0
   16fe0:	00000000 	andeq	r0, r0, r0
   16fe4:	00000000 	andeq	r0, r0, r0
   16fe8:	00000000 	andeq	r0, r0, r0
   16fec:	00000000 	andeq	r0, r0, r0
   16ff0:	00000000 	andeq	r0, r0, r0
   16ff4:	00000000 	andeq	r0, r0, r0
   16ff8:	00000000 	andeq	r0, r0, r0
   16ffc:	00000000 	andeq	r0, r0, r0
   17000:	00000000 	andeq	r0, r0, r0
   17004:	00000000 	andeq	r0, r0, r0
   17008:	00000000 	andeq	r0, r0, r0
   1700c:	00000000 	andeq	r0, r0, r0
   17010:	00000000 	andeq	r0, r0, r0
   17014:	00000000 	andeq	r0, r0, r0
   17018:	00000000 	andeq	r0, r0, r0
   1701c:	00000000 	andeq	r0, r0, r0
   17020:	00000000 	andeq	r0, r0, r0
   17024:	00000000 	andeq	r0, r0, r0
   17028:	00000000 	andeq	r0, r0, r0
   1702c:	00000000 	andeq	r0, r0, r0
   17030:	00000000 	andeq	r0, r0, r0
   17034:	00000000 	andeq	r0, r0, r0
   17038:	00000000 	andeq	r0, r0, r0
   1703c:	00000000 	andeq	r0, r0, r0
   17040:	00000000 	andeq	r0, r0, r0
   17044:	00000000 	andeq	r0, r0, r0
   17048:	00000000 	andeq	r0, r0, r0
   1704c:	00000000 	andeq	r0, r0, r0
   17050:	00000000 	andeq	r0, r0, r0
   17054:	00000000 	andeq	r0, r0, r0
   17058:	00000000 	andeq	r0, r0, r0
   1705c:	00000000 	andeq	r0, r0, r0
   17060:	00000000 	andeq	r0, r0, r0
   17064:	00000000 	andeq	r0, r0, r0
   17068:	00000000 	andeq	r0, r0, r0
   1706c:	00000000 	andeq	r0, r0, r0
   17070:	00000000 	andeq	r0, r0, r0
   17074:	00000000 	andeq	r0, r0, r0
   17078:	00000000 	andeq	r0, r0, r0
   1707c:	00000000 	andeq	r0, r0, r0
   17080:	00000000 	andeq	r0, r0, r0
   17084:	00000000 	andeq	r0, r0, r0
   17088:	00000000 	andeq	r0, r0, r0
   1708c:	00000000 	andeq	r0, r0, r0
   17090:	00000000 	andeq	r0, r0, r0
   17094:	00000000 	andeq	r0, r0, r0
   17098:	00000000 	andeq	r0, r0, r0
   1709c:	00000000 	andeq	r0, r0, r0
   170a0:	00000000 	andeq	r0, r0, r0
   170a4:	00000000 	andeq	r0, r0, r0
   170a8:	00000000 	andeq	r0, r0, r0
   170ac:	00000000 	andeq	r0, r0, r0
   170b0:	00000000 	andeq	r0, r0, r0
   170b4:	00000000 	andeq	r0, r0, r0
   170b8:	00000000 	andeq	r0, r0, r0
   170bc:	00000000 	andeq	r0, r0, r0
   170c0:	00000000 	andeq	r0, r0, r0
   170c4:	00000000 	andeq	r0, r0, r0
   170c8:	00000000 	andeq	r0, r0, r0
   170cc:	00000000 	andeq	r0, r0, r0
   170d0:	00000000 	andeq	r0, r0, r0
   170d4:	00000000 	andeq	r0, r0, r0
   170d8:	00000000 	andeq	r0, r0, r0
   170dc:	00000000 	andeq	r0, r0, r0
   170e0:	00000000 	andeq	r0, r0, r0
   170e4:	00000000 	andeq	r0, r0, r0
   170e8:	00000000 	andeq	r0, r0, r0
   170ec:	00000000 	andeq	r0, r0, r0
   170f0:	00000000 	andeq	r0, r0, r0
   170f4:	00000000 	andeq	r0, r0, r0
   170f8:	00000000 	andeq	r0, r0, r0
   170fc:	00000000 	andeq	r0, r0, r0
   17100:	00000000 	andeq	r0, r0, r0
   17104:	00000000 	andeq	r0, r0, r0
   17108:	00000000 	andeq	r0, r0, r0
   1710c:	00000000 	andeq	r0, r0, r0
   17110:	00000000 	andeq	r0, r0, r0
   17114:	00000000 	andeq	r0, r0, r0
   17118:	00000000 	andeq	r0, r0, r0
   1711c:	00000000 	andeq	r0, r0, r0
   17120:	00000000 	andeq	r0, r0, r0
   17124:	00000000 	andeq	r0, r0, r0
   17128:	00000000 	andeq	r0, r0, r0
   1712c:	00000000 	andeq	r0, r0, r0
   17130:	00000000 	andeq	r0, r0, r0
   17134:	00000000 	andeq	r0, r0, r0
   17138:	00000000 	andeq	r0, r0, r0
   1713c:	00000000 	andeq	r0, r0, r0
   17140:	00000000 	andeq	r0, r0, r0
   17144:	00000000 	andeq	r0, r0, r0
   17148:	00000000 	andeq	r0, r0, r0
   1714c:	00000000 	andeq	r0, r0, r0
   17150:	00000000 	andeq	r0, r0, r0
   17154:	00000000 	andeq	r0, r0, r0
   17158:	00000000 	andeq	r0, r0, r0
   1715c:	00000000 	andeq	r0, r0, r0
   17160:	00000000 	andeq	r0, r0, r0
   17164:	00000000 	andeq	r0, r0, r0
   17168:	00000000 	andeq	r0, r0, r0
   1716c:	00000000 	andeq	r0, r0, r0
   17170:	00000000 	andeq	r0, r0, r0
   17174:	00000000 	andeq	r0, r0, r0
   17178:	00000000 	andeq	r0, r0, r0
   1717c:	00000000 	andeq	r0, r0, r0
   17180:	00000000 	andeq	r0, r0, r0
   17184:	00000000 	andeq	r0, r0, r0
   17188:	00000000 	andeq	r0, r0, r0
   1718c:	00000000 	andeq	r0, r0, r0
   17190:	00000000 	andeq	r0, r0, r0
   17194:	00000000 	andeq	r0, r0, r0
   17198:	00000000 	andeq	r0, r0, r0
   1719c:	00000000 	andeq	r0, r0, r0
   171a0:	00000000 	andeq	r0, r0, r0
   171a4:	00000000 	andeq	r0, r0, r0
   171a8:	00000000 	andeq	r0, r0, r0
   171ac:	00000000 	andeq	r0, r0, r0
   171b0:	00000000 	andeq	r0, r0, r0
   171b4:	00000000 	andeq	r0, r0, r0
   171b8:	00000000 	andeq	r0, r0, r0
   171bc:	00000000 	andeq	r0, r0, r0
   171c0:	00000000 	andeq	r0, r0, r0
   171c4:	00000000 	andeq	r0, r0, r0
   171c8:	00000000 	andeq	r0, r0, r0
   171cc:	00000000 	andeq	r0, r0, r0
   171d0:	00000000 	andeq	r0, r0, r0
   171d4:	00000000 	andeq	r0, r0, r0
   171d8:	00000000 	andeq	r0, r0, r0
   171dc:	00000000 	andeq	r0, r0, r0
   171e0:	00000000 	andeq	r0, r0, r0
   171e4:	00000000 	andeq	r0, r0, r0
   171e8:	00000000 	andeq	r0, r0, r0
   171ec:	00000000 	andeq	r0, r0, r0
   171f0:	00000000 	andeq	r0, r0, r0
   171f4:	00000000 	andeq	r0, r0, r0
   171f8:	00000000 	andeq	r0, r0, r0
   171fc:	00000000 	andeq	r0, r0, r0
   17200:	00000000 	andeq	r0, r0, r0
   17204:	00000000 	andeq	r0, r0, r0
   17208:	00000000 	andeq	r0, r0, r0
   1720c:	00000000 	andeq	r0, r0, r0
   17210:	00000000 	andeq	r0, r0, r0
   17214:	00000000 	andeq	r0, r0, r0
   17218:	00000000 	andeq	r0, r0, r0
   1721c:	00000000 	andeq	r0, r0, r0
   17220:	00000000 	andeq	r0, r0, r0
   17224:	00000000 	andeq	r0, r0, r0
   17228:	00000000 	andeq	r0, r0, r0
   1722c:	00000000 	andeq	r0, r0, r0
   17230:	00000000 	andeq	r0, r0, r0
   17234:	00000000 	andeq	r0, r0, r0
   17238:	00000000 	andeq	r0, r0, r0
   1723c:	00000000 	andeq	r0, r0, r0
   17240:	00000000 	andeq	r0, r0, r0
   17244:	00000000 	andeq	r0, r0, r0
   17248:	00000000 	andeq	r0, r0, r0
   1724c:	00000000 	andeq	r0, r0, r0
   17250:	00000000 	andeq	r0, r0, r0
   17254:	00000000 	andeq	r0, r0, r0
   17258:	00000000 	andeq	r0, r0, r0
   1725c:	00000000 	andeq	r0, r0, r0
   17260:	00000000 	andeq	r0, r0, r0
   17264:	00000000 	andeq	r0, r0, r0
   17268:	00000000 	andeq	r0, r0, r0
   1726c:	00000000 	andeq	r0, r0, r0
   17270:	00000000 	andeq	r0, r0, r0
   17274:	00000000 	andeq	r0, r0, r0
   17278:	00000000 	andeq	r0, r0, r0
   1727c:	00000000 	andeq	r0, r0, r0
   17280:	00000000 	andeq	r0, r0, r0
   17284:	00000000 	andeq	r0, r0, r0
   17288:	00000000 	andeq	r0, r0, r0
   1728c:	00000000 	andeq	r0, r0, r0
   17290:	00000000 	andeq	r0, r0, r0
   17294:	00000000 	andeq	r0, r0, r0
   17298:	00000000 	andeq	r0, r0, r0
   1729c:	00000000 	andeq	r0, r0, r0
   172a0:	00000000 	andeq	r0, r0, r0
   172a4:	00000000 	andeq	r0, r0, r0
   172a8:	00000000 	andeq	r0, r0, r0
   172ac:	00000000 	andeq	r0, r0, r0
   172b0:	00000000 	andeq	r0, r0, r0
   172b4:	00000000 	andeq	r0, r0, r0
   172b8:	00000000 	andeq	r0, r0, r0
   172bc:	00000000 	andeq	r0, r0, r0
   172c0:	00000000 	andeq	r0, r0, r0
   172c4:	00000000 	andeq	r0, r0, r0
   172c8:	00000000 	andeq	r0, r0, r0
   172cc:	00000000 	andeq	r0, r0, r0
   172d0:	00000000 	andeq	r0, r0, r0
   172d4:	00000000 	andeq	r0, r0, r0
   172d8:	00000000 	andeq	r0, r0, r0
   172dc:	00000000 	andeq	r0, r0, r0
   172e0:	00000000 	andeq	r0, r0, r0
   172e4:	00000000 	andeq	r0, r0, r0
   172e8:	00000000 	andeq	r0, r0, r0
   172ec:	00000000 	andeq	r0, r0, r0
   172f0:	00000000 	andeq	r0, r0, r0
   172f4:	00000000 	andeq	r0, r0, r0
   172f8:	00000000 	andeq	r0, r0, r0
   172fc:	00000000 	andeq	r0, r0, r0
   17300:	00000000 	andeq	r0, r0, r0
   17304:	00000000 	andeq	r0, r0, r0
   17308:	00000000 	andeq	r0, r0, r0
   1730c:	00000000 	andeq	r0, r0, r0
   17310:	00000000 	andeq	r0, r0, r0
   17314:	00000000 	andeq	r0, r0, r0
   17318:	00000000 	andeq	r0, r0, r0
   1731c:	00000000 	andeq	r0, r0, r0
   17320:	00000000 	andeq	r0, r0, r0
   17324:	00000000 	andeq	r0, r0, r0
   17328:	00000000 	andeq	r0, r0, r0
   1732c:	00000000 	andeq	r0, r0, r0
   17330:	00000000 	andeq	r0, r0, r0
   17334:	00000000 	andeq	r0, r0, r0
   17338:	00000000 	andeq	r0, r0, r0
   1733c:	00000000 	andeq	r0, r0, r0
   17340:	00000000 	andeq	r0, r0, r0
   17344:	00000000 	andeq	r0, r0, r0
   17348:	00000000 	andeq	r0, r0, r0
   1734c:	00000000 	andeq	r0, r0, r0
   17350:	00000000 	andeq	r0, r0, r0
   17354:	00000000 	andeq	r0, r0, r0
   17358:	00000000 	andeq	r0, r0, r0
   1735c:	00000000 	andeq	r0, r0, r0
   17360:	00000000 	andeq	r0, r0, r0
   17364:	00000000 	andeq	r0, r0, r0
   17368:	00000000 	andeq	r0, r0, r0
   1736c:	00000000 	andeq	r0, r0, r0
   17370:	00000000 	andeq	r0, r0, r0
   17374:	00000000 	andeq	r0, r0, r0
   17378:	00000000 	andeq	r0, r0, r0
   1737c:	00000000 	andeq	r0, r0, r0
   17380:	00000000 	andeq	r0, r0, r0
   17384:	00000000 	andeq	r0, r0, r0
   17388:	00000000 	andeq	r0, r0, r0
   1738c:	00000000 	andeq	r0, r0, r0
   17390:	00000000 	andeq	r0, r0, r0
   17394:	00000000 	andeq	r0, r0, r0
   17398:	00000000 	andeq	r0, r0, r0
   1739c:	00000000 	andeq	r0, r0, r0
   173a0:	00000000 	andeq	r0, r0, r0
   173a4:	00000000 	andeq	r0, r0, r0
   173a8:	00000000 	andeq	r0, r0, r0
   173ac:	00000000 	andeq	r0, r0, r0
   173b0:	00000000 	andeq	r0, r0, r0
   173b4:	00000000 	andeq	r0, r0, r0
   173b8:	00000000 	andeq	r0, r0, r0
   173bc:	00000000 	andeq	r0, r0, r0
   173c0:	00000000 	andeq	r0, r0, r0
   173c4:	00000000 	andeq	r0, r0, r0
   173c8:	00000000 	andeq	r0, r0, r0
   173cc:	00000000 	andeq	r0, r0, r0
   173d0:	00000000 	andeq	r0, r0, r0
   173d4:	00000000 	andeq	r0, r0, r0
   173d8:	00000000 	andeq	r0, r0, r0
   173dc:	00000000 	andeq	r0, r0, r0
   173e0:	00000000 	andeq	r0, r0, r0
   173e4:	00000000 	andeq	r0, r0, r0
   173e8:	00000000 	andeq	r0, r0, r0
   173ec:	00000000 	andeq	r0, r0, r0
   173f0:	00000000 	andeq	r0, r0, r0
   173f4:	00000000 	andeq	r0, r0, r0
   173f8:	00000000 	andeq	r0, r0, r0
   173fc:	00000000 	andeq	r0, r0, r0
   17400:	00000000 	andeq	r0, r0, r0
   17404:	00000000 	andeq	r0, r0, r0
   17408:	00000000 	andeq	r0, r0, r0
   1740c:	00000000 	andeq	r0, r0, r0
   17410:	00000000 	andeq	r0, r0, r0
   17414:	00000000 	andeq	r0, r0, r0
   17418:	00000000 	andeq	r0, r0, r0
   1741c:	00000000 	andeq	r0, r0, r0
   17420:	00000000 	andeq	r0, r0, r0
   17424:	00000000 	andeq	r0, r0, r0
   17428:	00000000 	andeq	r0, r0, r0
   1742c:	00000000 	andeq	r0, r0, r0
   17430:	00000000 	andeq	r0, r0, r0
   17434:	00000000 	andeq	r0, r0, r0
   17438:	00000000 	andeq	r0, r0, r0
   1743c:	00000000 	andeq	r0, r0, r0
   17440:	00000000 	andeq	r0, r0, r0
   17444:	00000000 	andeq	r0, r0, r0
   17448:	00000000 	andeq	r0, r0, r0
   1744c:	00000000 	andeq	r0, r0, r0
   17450:	00000000 	andeq	r0, r0, r0
   17454:	00000000 	andeq	r0, r0, r0
   17458:	00000000 	andeq	r0, r0, r0
   1745c:	00000000 	andeq	r0, r0, r0
   17460:	00000000 	andeq	r0, r0, r0
   17464:	00000000 	andeq	r0, r0, r0
   17468:	00000000 	andeq	r0, r0, r0
   1746c:	00000000 	andeq	r0, r0, r0
   17470:	00000000 	andeq	r0, r0, r0
   17474:	00000000 	andeq	r0, r0, r0
   17478:	00000000 	andeq	r0, r0, r0
   1747c:	00000000 	andeq	r0, r0, r0
   17480:	00000000 	andeq	r0, r0, r0
   17484:	00000000 	andeq	r0, r0, r0
   17488:	00000000 	andeq	r0, r0, r0
   1748c:	00000000 	andeq	r0, r0, r0
   17490:	00000000 	andeq	r0, r0, r0
   17494:	00000000 	andeq	r0, r0, r0
   17498:	00000000 	andeq	r0, r0, r0
   1749c:	00000000 	andeq	r0, r0, r0
   174a0:	00000000 	andeq	r0, r0, r0
   174a4:	00000000 	andeq	r0, r0, r0
   174a8:	00000000 	andeq	r0, r0, r0
   174ac:	00000000 	andeq	r0, r0, r0
   174b0:	00000000 	andeq	r0, r0, r0
   174b4:	00000000 	andeq	r0, r0, r0
   174b8:	00000000 	andeq	r0, r0, r0
   174bc:	00000000 	andeq	r0, r0, r0
   174c0:	00000000 	andeq	r0, r0, r0
   174c4:	00000000 	andeq	r0, r0, r0
   174c8:	00000000 	andeq	r0, r0, r0
   174cc:	00000000 	andeq	r0, r0, r0
   174d0:	00000000 	andeq	r0, r0, r0
   174d4:	00000000 	andeq	r0, r0, r0
   174d8:	00000000 	andeq	r0, r0, r0
   174dc:	00000000 	andeq	r0, r0, r0
   174e0:	00000000 	andeq	r0, r0, r0
   174e4:	00000000 	andeq	r0, r0, r0
   174e8:	00000000 	andeq	r0, r0, r0
   174ec:	00000000 	andeq	r0, r0, r0
   174f0:	00000000 	andeq	r0, r0, r0
   174f4:	00000000 	andeq	r0, r0, r0
   174f8:	00000000 	andeq	r0, r0, r0
   174fc:	00000000 	andeq	r0, r0, r0
   17500:	00000000 	andeq	r0, r0, r0
   17504:	00000000 	andeq	r0, r0, r0
   17508:	00000000 	andeq	r0, r0, r0
   1750c:	00000000 	andeq	r0, r0, r0
   17510:	00000000 	andeq	r0, r0, r0
   17514:	00000000 	andeq	r0, r0, r0
   17518:	00000000 	andeq	r0, r0, r0
   1751c:	00000000 	andeq	r0, r0, r0
   17520:	00000000 	andeq	r0, r0, r0
   17524:	00000000 	andeq	r0, r0, r0
   17528:	00000000 	andeq	r0, r0, r0
   1752c:	00000000 	andeq	r0, r0, r0
   17530:	00000000 	andeq	r0, r0, r0
   17534:	00000000 	andeq	r0, r0, r0
   17538:	00000000 	andeq	r0, r0, r0
   1753c:	00000000 	andeq	r0, r0, r0
   17540:	00000000 	andeq	r0, r0, r0
   17544:	00000000 	andeq	r0, r0, r0
   17548:	00000000 	andeq	r0, r0, r0
   1754c:	00000000 	andeq	r0, r0, r0
   17550:	00000000 	andeq	r0, r0, r0
   17554:	00000000 	andeq	r0, r0, r0
   17558:	00000000 	andeq	r0, r0, r0
   1755c:	00000000 	andeq	r0, r0, r0
   17560:	00000000 	andeq	r0, r0, r0
   17564:	00000000 	andeq	r0, r0, r0
   17568:	00000000 	andeq	r0, r0, r0
   1756c:	00000000 	andeq	r0, r0, r0
   17570:	00000000 	andeq	r0, r0, r0
   17574:	00000000 	andeq	r0, r0, r0
   17578:	00000000 	andeq	r0, r0, r0
   1757c:	00000000 	andeq	r0, r0, r0
   17580:	00000000 	andeq	r0, r0, r0
   17584:	00000000 	andeq	r0, r0, r0
   17588:	00000000 	andeq	r0, r0, r0
   1758c:	00000000 	andeq	r0, r0, r0
   17590:	00000000 	andeq	r0, r0, r0
   17594:	00000000 	andeq	r0, r0, r0
   17598:	00000000 	andeq	r0, r0, r0
   1759c:	00000000 	andeq	r0, r0, r0
   175a0:	00000000 	andeq	r0, r0, r0
   175a4:	00000000 	andeq	r0, r0, r0
   175a8:	00000000 	andeq	r0, r0, r0
   175ac:	00000000 	andeq	r0, r0, r0
   175b0:	00000000 	andeq	r0, r0, r0
   175b4:	00000000 	andeq	r0, r0, r0
   175b8:	00000000 	andeq	r0, r0, r0
   175bc:	00000000 	andeq	r0, r0, r0
   175c0:	00000000 	andeq	r0, r0, r0
   175c4:	00000000 	andeq	r0, r0, r0
   175c8:	00000000 	andeq	r0, r0, r0
   175cc:	00000000 	andeq	r0, r0, r0
   175d0:	00000000 	andeq	r0, r0, r0
   175d4:	00000000 	andeq	r0, r0, r0
   175d8:	00000000 	andeq	r0, r0, r0
   175dc:	00000000 	andeq	r0, r0, r0
   175e0:	00000000 	andeq	r0, r0, r0
   175e4:	00000000 	andeq	r0, r0, r0
   175e8:	00000000 	andeq	r0, r0, r0
   175ec:	00000000 	andeq	r0, r0, r0
   175f0:	00000000 	andeq	r0, r0, r0
   175f4:	00000000 	andeq	r0, r0, r0
   175f8:	00000000 	andeq	r0, r0, r0
   175fc:	00000000 	andeq	r0, r0, r0
   17600:	00000000 	andeq	r0, r0, r0
   17604:	00000000 	andeq	r0, r0, r0
   17608:	00000000 	andeq	r0, r0, r0
   1760c:	00000000 	andeq	r0, r0, r0
   17610:	00000000 	andeq	r0, r0, r0
   17614:	00000000 	andeq	r0, r0, r0
   17618:	00000000 	andeq	r0, r0, r0
   1761c:	00000000 	andeq	r0, r0, r0
   17620:	00000000 	andeq	r0, r0, r0
   17624:	00000000 	andeq	r0, r0, r0
   17628:	00000000 	andeq	r0, r0, r0
   1762c:	00000000 	andeq	r0, r0, r0
   17630:	00000000 	andeq	r0, r0, r0
   17634:	00000000 	andeq	r0, r0, r0
   17638:	00000000 	andeq	r0, r0, r0
   1763c:	00000000 	andeq	r0, r0, r0
   17640:	00000000 	andeq	r0, r0, r0
   17644:	00000000 	andeq	r0, r0, r0
   17648:	00000000 	andeq	r0, r0, r0
   1764c:	00000000 	andeq	r0, r0, r0
   17650:	00000000 	andeq	r0, r0, r0
   17654:	00000000 	andeq	r0, r0, r0
   17658:	00000000 	andeq	r0, r0, r0
   1765c:	00000000 	andeq	r0, r0, r0
   17660:	00000000 	andeq	r0, r0, r0
   17664:	00000000 	andeq	r0, r0, r0
   17668:	00000000 	andeq	r0, r0, r0
   1766c:	00000000 	andeq	r0, r0, r0
   17670:	00000000 	andeq	r0, r0, r0
   17674:	00000000 	andeq	r0, r0, r0
   17678:	00000000 	andeq	r0, r0, r0
   1767c:	00000000 	andeq	r0, r0, r0
   17680:	00000000 	andeq	r0, r0, r0
   17684:	00000000 	andeq	r0, r0, r0
   17688:	00000000 	andeq	r0, r0, r0
   1768c:	00000000 	andeq	r0, r0, r0
   17690:	00000000 	andeq	r0, r0, r0
   17694:	00000000 	andeq	r0, r0, r0
   17698:	00000000 	andeq	r0, r0, r0
   1769c:	00000000 	andeq	r0, r0, r0
   176a0:	00000000 	andeq	r0, r0, r0
   176a4:	00000000 	andeq	r0, r0, r0
   176a8:	00000000 	andeq	r0, r0, r0
   176ac:	00000000 	andeq	r0, r0, r0
   176b0:	00000000 	andeq	r0, r0, r0
   176b4:	00000000 	andeq	r0, r0, r0
   176b8:	00000000 	andeq	r0, r0, r0
   176bc:	00000000 	andeq	r0, r0, r0
   176c0:	00000000 	andeq	r0, r0, r0
   176c4:	00000000 	andeq	r0, r0, r0
   176c8:	00000000 	andeq	r0, r0, r0
   176cc:	00000000 	andeq	r0, r0, r0
   176d0:	00000000 	andeq	r0, r0, r0
   176d4:	00000000 	andeq	r0, r0, r0
   176d8:	00000000 	andeq	r0, r0, r0
   176dc:	00000000 	andeq	r0, r0, r0
   176e0:	00000000 	andeq	r0, r0, r0
   176e4:	00000000 	andeq	r0, r0, r0
   176e8:	00000000 	andeq	r0, r0, r0
   176ec:	00000000 	andeq	r0, r0, r0
   176f0:	00000000 	andeq	r0, r0, r0
   176f4:	00000000 	andeq	r0, r0, r0
   176f8:	00000000 	andeq	r0, r0, r0
   176fc:	00000000 	andeq	r0, r0, r0
   17700:	00000000 	andeq	r0, r0, r0
   17704:	00000000 	andeq	r0, r0, r0
   17708:	00000000 	andeq	r0, r0, r0
   1770c:	00000000 	andeq	r0, r0, r0
   17710:	00000000 	andeq	r0, r0, r0
   17714:	00000000 	andeq	r0, r0, r0
   17718:	00000000 	andeq	r0, r0, r0
   1771c:	00000000 	andeq	r0, r0, r0
   17720:	00000000 	andeq	r0, r0, r0
   17724:	00000000 	andeq	r0, r0, r0
   17728:	00000000 	andeq	r0, r0, r0
   1772c:	00000000 	andeq	r0, r0, r0
   17730:	00000000 	andeq	r0, r0, r0
   17734:	00000000 	andeq	r0, r0, r0
   17738:	00000000 	andeq	r0, r0, r0
   1773c:	00000000 	andeq	r0, r0, r0
   17740:	00000000 	andeq	r0, r0, r0
   17744:	00000000 	andeq	r0, r0, r0
   17748:	00000000 	andeq	r0, r0, r0
   1774c:	00000000 	andeq	r0, r0, r0
   17750:	00000000 	andeq	r0, r0, r0
   17754:	00000000 	andeq	r0, r0, r0
   17758:	00000000 	andeq	r0, r0, r0
   1775c:	00000000 	andeq	r0, r0, r0
   17760:	00000000 	andeq	r0, r0, r0
   17764:	00000000 	andeq	r0, r0, r0
   17768:	00000000 	andeq	r0, r0, r0
   1776c:	00000000 	andeq	r0, r0, r0
   17770:	00000000 	andeq	r0, r0, r0
   17774:	00000000 	andeq	r0, r0, r0
   17778:	00000000 	andeq	r0, r0, r0
   1777c:	00000000 	andeq	r0, r0, r0
   17780:	00000000 	andeq	r0, r0, r0
   17784:	00000000 	andeq	r0, r0, r0
   17788:	00000000 	andeq	r0, r0, r0
   1778c:	00000000 	andeq	r0, r0, r0
   17790:	00000000 	andeq	r0, r0, r0
   17794:	00000000 	andeq	r0, r0, r0
   17798:	00000000 	andeq	r0, r0, r0
   1779c:	00000000 	andeq	r0, r0, r0
   177a0:	00000000 	andeq	r0, r0, r0
   177a4:	00000000 	andeq	r0, r0, r0
   177a8:	00000000 	andeq	r0, r0, r0
   177ac:	00000000 	andeq	r0, r0, r0
   177b0:	00000000 	andeq	r0, r0, r0
   177b4:	00000000 	andeq	r0, r0, r0
   177b8:	00000000 	andeq	r0, r0, r0
   177bc:	00000000 	andeq	r0, r0, r0
   177c0:	00000000 	andeq	r0, r0, r0
   177c4:	00000000 	andeq	r0, r0, r0
   177c8:	00000000 	andeq	r0, r0, r0
   177cc:	00000000 	andeq	r0, r0, r0
   177d0:	00000000 	andeq	r0, r0, r0
   177d4:	00000000 	andeq	r0, r0, r0
   177d8:	00000000 	andeq	r0, r0, r0
   177dc:	00000000 	andeq	r0, r0, r0
   177e0:	00000000 	andeq	r0, r0, r0
   177e4:	00000000 	andeq	r0, r0, r0
   177e8:	00000000 	andeq	r0, r0, r0
   177ec:	00000000 	andeq	r0, r0, r0
   177f0:	00000000 	andeq	r0, r0, r0
   177f4:	00000000 	andeq	r0, r0, r0
   177f8:	00000000 	andeq	r0, r0, r0
   177fc:	00000000 	andeq	r0, r0, r0
   17800:	00000000 	andeq	r0, r0, r0
   17804:	00000000 	andeq	r0, r0, r0
   17808:	00000000 	andeq	r0, r0, r0
   1780c:	00000000 	andeq	r0, r0, r0
   17810:	00000000 	andeq	r0, r0, r0
   17814:	00000000 	andeq	r0, r0, r0
   17818:	00000000 	andeq	r0, r0, r0
   1781c:	00000000 	andeq	r0, r0, r0
   17820:	00000000 	andeq	r0, r0, r0
   17824:	00000000 	andeq	r0, r0, r0
   17828:	00000000 	andeq	r0, r0, r0
   1782c:	00000000 	andeq	r0, r0, r0
   17830:	00000000 	andeq	r0, r0, r0
   17834:	00000000 	andeq	r0, r0, r0
   17838:	00000000 	andeq	r0, r0, r0
   1783c:	00000000 	andeq	r0, r0, r0
   17840:	00000000 	andeq	r0, r0, r0
   17844:	00000000 	andeq	r0, r0, r0
   17848:	00000000 	andeq	r0, r0, r0
   1784c:	00000000 	andeq	r0, r0, r0
   17850:	00000000 	andeq	r0, r0, r0
   17854:	00000000 	andeq	r0, r0, r0
   17858:	00000000 	andeq	r0, r0, r0
   1785c:	00000000 	andeq	r0, r0, r0
   17860:	00000000 	andeq	r0, r0, r0
   17864:	00000000 	andeq	r0, r0, r0
   17868:	00000000 	andeq	r0, r0, r0
   1786c:	00000000 	andeq	r0, r0, r0
   17870:	00000000 	andeq	r0, r0, r0
   17874:	00000000 	andeq	r0, r0, r0
   17878:	00000000 	andeq	r0, r0, r0
   1787c:	00000000 	andeq	r0, r0, r0
   17880:	00000000 	andeq	r0, r0, r0
   17884:	00000000 	andeq	r0, r0, r0
   17888:	00000000 	andeq	r0, r0, r0
   1788c:	00000000 	andeq	r0, r0, r0
   17890:	00000000 	andeq	r0, r0, r0
   17894:	00000000 	andeq	r0, r0, r0
   17898:	00000000 	andeq	r0, r0, r0
   1789c:	00000000 	andeq	r0, r0, r0
   178a0:	00000000 	andeq	r0, r0, r0
   178a4:	00000000 	andeq	r0, r0, r0
   178a8:	00000000 	andeq	r0, r0, r0
   178ac:	00000000 	andeq	r0, r0, r0
   178b0:	00000000 	andeq	r0, r0, r0
   178b4:	00000000 	andeq	r0, r0, r0
   178b8:	00000000 	andeq	r0, r0, r0
   178bc:	00000000 	andeq	r0, r0, r0
   178c0:	00000000 	andeq	r0, r0, r0
   178c4:	00000000 	andeq	r0, r0, r0
   178c8:	00000000 	andeq	r0, r0, r0
   178cc:	00000000 	andeq	r0, r0, r0
   178d0:	00000000 	andeq	r0, r0, r0
   178d4:	00000000 	andeq	r0, r0, r0
   178d8:	00000000 	andeq	r0, r0, r0
   178dc:	00000000 	andeq	r0, r0, r0
   178e0:	00000000 	andeq	r0, r0, r0
   178e4:	00000000 	andeq	r0, r0, r0
   178e8:	00000000 	andeq	r0, r0, r0
   178ec:	00000000 	andeq	r0, r0, r0
   178f0:	00000000 	andeq	r0, r0, r0
   178f4:	00000000 	andeq	r0, r0, r0
   178f8:	00000000 	andeq	r0, r0, r0
   178fc:	00000000 	andeq	r0, r0, r0
   17900:	00000000 	andeq	r0, r0, r0
   17904:	00000000 	andeq	r0, r0, r0
   17908:	00000000 	andeq	r0, r0, r0
   1790c:	00000000 	andeq	r0, r0, r0
   17910:	00000000 	andeq	r0, r0, r0
   17914:	00000000 	andeq	r0, r0, r0
   17918:	00000000 	andeq	r0, r0, r0
   1791c:	00000000 	andeq	r0, r0, r0
   17920:	00000000 	andeq	r0, r0, r0
   17924:	00000000 	andeq	r0, r0, r0
   17928:	00000000 	andeq	r0, r0, r0
   1792c:	00000000 	andeq	r0, r0, r0
   17930:	00000000 	andeq	r0, r0, r0
   17934:	00000000 	andeq	r0, r0, r0
   17938:	00000000 	andeq	r0, r0, r0
   1793c:	00000000 	andeq	r0, r0, r0
   17940:	00000000 	andeq	r0, r0, r0
   17944:	00000000 	andeq	r0, r0, r0
   17948:	00000000 	andeq	r0, r0, r0
   1794c:	00000000 	andeq	r0, r0, r0
   17950:	00000000 	andeq	r0, r0, r0
   17954:	00000000 	andeq	r0, r0, r0
   17958:	00000000 	andeq	r0, r0, r0
   1795c:	00000000 	andeq	r0, r0, r0
   17960:	00000000 	andeq	r0, r0, r0
   17964:	00000000 	andeq	r0, r0, r0
   17968:	00000000 	andeq	r0, r0, r0
   1796c:	00000000 	andeq	r0, r0, r0
   17970:	00000000 	andeq	r0, r0, r0
   17974:	00000000 	andeq	r0, r0, r0
   17978:	00000000 	andeq	r0, r0, r0
   1797c:	00000000 	andeq	r0, r0, r0
   17980:	00000000 	andeq	r0, r0, r0
   17984:	00000000 	andeq	r0, r0, r0
   17988:	00000000 	andeq	r0, r0, r0
   1798c:	00000000 	andeq	r0, r0, r0
   17990:	00000000 	andeq	r0, r0, r0
   17994:	00000000 	andeq	r0, r0, r0
   17998:	00000000 	andeq	r0, r0, r0
   1799c:	00000000 	andeq	r0, r0, r0
   179a0:	00000000 	andeq	r0, r0, r0
   179a4:	00000000 	andeq	r0, r0, r0
   179a8:	00000000 	andeq	r0, r0, r0
   179ac:	00000000 	andeq	r0, r0, r0
   179b0:	00000000 	andeq	r0, r0, r0
   179b4:	00000000 	andeq	r0, r0, r0
   179b8:	00000000 	andeq	r0, r0, r0
   179bc:	00000000 	andeq	r0, r0, r0
   179c0:	00000000 	andeq	r0, r0, r0
   179c4:	00000000 	andeq	r0, r0, r0
   179c8:	00000000 	andeq	r0, r0, r0
   179cc:	00000000 	andeq	r0, r0, r0
   179d0:	00000000 	andeq	r0, r0, r0
   179d4:	00000000 	andeq	r0, r0, r0
   179d8:	00000000 	andeq	r0, r0, r0
   179dc:	00000000 	andeq	r0, r0, r0
   179e0:	00000000 	andeq	r0, r0, r0
   179e4:	00000000 	andeq	r0, r0, r0
   179e8:	00000000 	andeq	r0, r0, r0
   179ec:	00000000 	andeq	r0, r0, r0
   179f0:	00000000 	andeq	r0, r0, r0
   179f4:	00000000 	andeq	r0, r0, r0
   179f8:	00000000 	andeq	r0, r0, r0
   179fc:	00000000 	andeq	r0, r0, r0
   17a00:	00000000 	andeq	r0, r0, r0
   17a04:	00000000 	andeq	r0, r0, r0
   17a08:	00000000 	andeq	r0, r0, r0
   17a0c:	00000000 	andeq	r0, r0, r0
   17a10:	00000000 	andeq	r0, r0, r0
   17a14:	00000000 	andeq	r0, r0, r0
   17a18:	00000000 	andeq	r0, r0, r0
   17a1c:	00000000 	andeq	r0, r0, r0
   17a20:	00000000 	andeq	r0, r0, r0
   17a24:	00000000 	andeq	r0, r0, r0
   17a28:	00000000 	andeq	r0, r0, r0
   17a2c:	00000000 	andeq	r0, r0, r0
   17a30:	00000000 	andeq	r0, r0, r0
   17a34:	00000000 	andeq	r0, r0, r0
   17a38:	00000000 	andeq	r0, r0, r0
   17a3c:	00000000 	andeq	r0, r0, r0
   17a40:	00000000 	andeq	r0, r0, r0
   17a44:	00000000 	andeq	r0, r0, r0
   17a48:	00000000 	andeq	r0, r0, r0
   17a4c:	00000000 	andeq	r0, r0, r0
   17a50:	00000000 	andeq	r0, r0, r0
   17a54:	00000000 	andeq	r0, r0, r0
   17a58:	00000000 	andeq	r0, r0, r0
   17a5c:	00000000 	andeq	r0, r0, r0
   17a60:	00000000 	andeq	r0, r0, r0
   17a64:	00000000 	andeq	r0, r0, r0
   17a68:	00000000 	andeq	r0, r0, r0
   17a6c:	00000000 	andeq	r0, r0, r0
   17a70:	00000000 	andeq	r0, r0, r0
   17a74:	00000000 	andeq	r0, r0, r0
   17a78:	00000000 	andeq	r0, r0, r0
   17a7c:	00000000 	andeq	r0, r0, r0
   17a80:	00000000 	andeq	r0, r0, r0
   17a84:	00000000 	andeq	r0, r0, r0
   17a88:	00000000 	andeq	r0, r0, r0
   17a8c:	00000000 	andeq	r0, r0, r0
   17a90:	00000000 	andeq	r0, r0, r0
   17a94:	00000000 	andeq	r0, r0, r0
   17a98:	00000000 	andeq	r0, r0, r0
   17a9c:	00000000 	andeq	r0, r0, r0
   17aa0:	00000000 	andeq	r0, r0, r0
   17aa4:	00000000 	andeq	r0, r0, r0
   17aa8:	00000000 	andeq	r0, r0, r0
   17aac:	00000000 	andeq	r0, r0, r0
   17ab0:	00000000 	andeq	r0, r0, r0
   17ab4:	00000000 	andeq	r0, r0, r0
   17ab8:	00000000 	andeq	r0, r0, r0
   17abc:	00000000 	andeq	r0, r0, r0
   17ac0:	00000000 	andeq	r0, r0, r0
   17ac4:	00000000 	andeq	r0, r0, r0
   17ac8:	00000000 	andeq	r0, r0, r0
   17acc:	00000000 	andeq	r0, r0, r0
   17ad0:	00000000 	andeq	r0, r0, r0
   17ad4:	00000000 	andeq	r0, r0, r0
   17ad8:	00000000 	andeq	r0, r0, r0
   17adc:	00000000 	andeq	r0, r0, r0
   17ae0:	00000000 	andeq	r0, r0, r0
   17ae4:	00000000 	andeq	r0, r0, r0
   17ae8:	00000000 	andeq	r0, r0, r0
   17aec:	00000000 	andeq	r0, r0, r0
   17af0:	00000000 	andeq	r0, r0, r0
   17af4:	00000000 	andeq	r0, r0, r0
   17af8:	00000000 	andeq	r0, r0, r0
   17afc:	00000000 	andeq	r0, r0, r0
   17b00:	00000000 	andeq	r0, r0, r0
   17b04:	00000000 	andeq	r0, r0, r0
   17b08:	00000000 	andeq	r0, r0, r0
   17b0c:	00000000 	andeq	r0, r0, r0
   17b10:	00000000 	andeq	r0, r0, r0
   17b14:	00000000 	andeq	r0, r0, r0
   17b18:	00000000 	andeq	r0, r0, r0
   17b1c:	00000000 	andeq	r0, r0, r0
   17b20:	00000000 	andeq	r0, r0, r0
   17b24:	00000000 	andeq	r0, r0, r0
   17b28:	00000000 	andeq	r0, r0, r0
   17b2c:	00000000 	andeq	r0, r0, r0
   17b30:	00000000 	andeq	r0, r0, r0
   17b34:	00000000 	andeq	r0, r0, r0
   17b38:	00000000 	andeq	r0, r0, r0
   17b3c:	00000000 	andeq	r0, r0, r0
   17b40:	00000000 	andeq	r0, r0, r0
   17b44:	00000000 	andeq	r0, r0, r0
   17b48:	00000000 	andeq	r0, r0, r0
   17b4c:	00000000 	andeq	r0, r0, r0
   17b50:	00000000 	andeq	r0, r0, r0
   17b54:	00000000 	andeq	r0, r0, r0
   17b58:	00000000 	andeq	r0, r0, r0
   17b5c:	00000000 	andeq	r0, r0, r0
   17b60:	00000000 	andeq	r0, r0, r0
   17b64:	00000000 	andeq	r0, r0, r0
   17b68:	00000000 	andeq	r0, r0, r0
   17b6c:	00000000 	andeq	r0, r0, r0
   17b70:	00000000 	andeq	r0, r0, r0
   17b74:	00000000 	andeq	r0, r0, r0
   17b78:	00000000 	andeq	r0, r0, r0
   17b7c:	00000000 	andeq	r0, r0, r0
   17b80:	00000000 	andeq	r0, r0, r0
   17b84:	00000000 	andeq	r0, r0, r0
   17b88:	00000000 	andeq	r0, r0, r0
   17b8c:	00000000 	andeq	r0, r0, r0
   17b90:	00000000 	andeq	r0, r0, r0
   17b94:	00000000 	andeq	r0, r0, r0
   17b98:	00000000 	andeq	r0, r0, r0
   17b9c:	00000000 	andeq	r0, r0, r0
   17ba0:	00000000 	andeq	r0, r0, r0
   17ba4:	00000000 	andeq	r0, r0, r0
   17ba8:	00000000 	andeq	r0, r0, r0
   17bac:	00000000 	andeq	r0, r0, r0
   17bb0:	00000000 	andeq	r0, r0, r0
   17bb4:	00000000 	andeq	r0, r0, r0
   17bb8:	00000000 	andeq	r0, r0, r0
   17bbc:	00000000 	andeq	r0, r0, r0
   17bc0:	00000000 	andeq	r0, r0, r0
   17bc4:	00000000 	andeq	r0, r0, r0
   17bc8:	00000000 	andeq	r0, r0, r0
   17bcc:	00000000 	andeq	r0, r0, r0
   17bd0:	00000000 	andeq	r0, r0, r0
   17bd4:	00000000 	andeq	r0, r0, r0
   17bd8:	00000000 	andeq	r0, r0, r0
   17bdc:	00000000 	andeq	r0, r0, r0
   17be0:	00000000 	andeq	r0, r0, r0
   17be4:	00000000 	andeq	r0, r0, r0
   17be8:	00000000 	andeq	r0, r0, r0
   17bec:	00000000 	andeq	r0, r0, r0
   17bf0:	00000000 	andeq	r0, r0, r0
   17bf4:	00000000 	andeq	r0, r0, r0
   17bf8:	00000000 	andeq	r0, r0, r0
   17bfc:	00000000 	andeq	r0, r0, r0
   17c00:	00000000 	andeq	r0, r0, r0
   17c04:	00000000 	andeq	r0, r0, r0
   17c08:	00000000 	andeq	r0, r0, r0
   17c0c:	00000000 	andeq	r0, r0, r0
   17c10:	00000000 	andeq	r0, r0, r0
   17c14:	00000000 	andeq	r0, r0, r0
   17c18:	00000000 	andeq	r0, r0, r0
   17c1c:	00000000 	andeq	r0, r0, r0
   17c20:	00000000 	andeq	r0, r0, r0
   17c24:	00000000 	andeq	r0, r0, r0
   17c28:	00000000 	andeq	r0, r0, r0
   17c2c:	00000000 	andeq	r0, r0, r0
   17c30:	00000000 	andeq	r0, r0, r0
   17c34:	00000000 	andeq	r0, r0, r0
   17c38:	00000000 	andeq	r0, r0, r0
   17c3c:	00000000 	andeq	r0, r0, r0
   17c40:	00000000 	andeq	r0, r0, r0
   17c44:	00000000 	andeq	r0, r0, r0
   17c48:	00000000 	andeq	r0, r0, r0
   17c4c:	00000000 	andeq	r0, r0, r0
   17c50:	00000000 	andeq	r0, r0, r0
   17c54:	00000000 	andeq	r0, r0, r0
   17c58:	00000000 	andeq	r0, r0, r0
   17c5c:	00000000 	andeq	r0, r0, r0
   17c60:	00000000 	andeq	r0, r0, r0
   17c64:	00000000 	andeq	r0, r0, r0
   17c68:	00000000 	andeq	r0, r0, r0
   17c6c:	00000000 	andeq	r0, r0, r0
   17c70:	00000000 	andeq	r0, r0, r0
   17c74:	00000000 	andeq	r0, r0, r0
   17c78:	00000000 	andeq	r0, r0, r0
   17c7c:	00000000 	andeq	r0, r0, r0
   17c80:	00000000 	andeq	r0, r0, r0
   17c84:	00000000 	andeq	r0, r0, r0
   17c88:	00000000 	andeq	r0, r0, r0
   17c8c:	00000000 	andeq	r0, r0, r0
   17c90:	00000000 	andeq	r0, r0, r0
   17c94:	00000000 	andeq	r0, r0, r0
   17c98:	00000000 	andeq	r0, r0, r0
   17c9c:	00000000 	andeq	r0, r0, r0
   17ca0:	00000000 	andeq	r0, r0, r0
   17ca4:	00000000 	andeq	r0, r0, r0
   17ca8:	00000000 	andeq	r0, r0, r0
   17cac:	00000000 	andeq	r0, r0, r0
   17cb0:	00000000 	andeq	r0, r0, r0
   17cb4:	00000000 	andeq	r0, r0, r0
   17cb8:	00000000 	andeq	r0, r0, r0
   17cbc:	00000000 	andeq	r0, r0, r0
   17cc0:	00000000 	andeq	r0, r0, r0
   17cc4:	00000000 	andeq	r0, r0, r0
   17cc8:	00000000 	andeq	r0, r0, r0
   17ccc:	00000000 	andeq	r0, r0, r0
   17cd0:	00000000 	andeq	r0, r0, r0
   17cd4:	00000000 	andeq	r0, r0, r0
   17cd8:	00000000 	andeq	r0, r0, r0
   17cdc:	00000000 	andeq	r0, r0, r0
   17ce0:	00000000 	andeq	r0, r0, r0
   17ce4:	00000000 	andeq	r0, r0, r0
   17ce8:	00000000 	andeq	r0, r0, r0
   17cec:	00000000 	andeq	r0, r0, r0
   17cf0:	00000000 	andeq	r0, r0, r0
   17cf4:	00000000 	andeq	r0, r0, r0
   17cf8:	00000000 	andeq	r0, r0, r0
   17cfc:	00000000 	andeq	r0, r0, r0
   17d00:	00000000 	andeq	r0, r0, r0
   17d04:	00000000 	andeq	r0, r0, r0
   17d08:	00000000 	andeq	r0, r0, r0
   17d0c:	00000000 	andeq	r0, r0, r0
   17d10:	00000000 	andeq	r0, r0, r0
   17d14:	00000000 	andeq	r0, r0, r0
   17d18:	00000000 	andeq	r0, r0, r0
   17d1c:	00000000 	andeq	r0, r0, r0
   17d20:	00000000 	andeq	r0, r0, r0
   17d24:	00000000 	andeq	r0, r0, r0
   17d28:	00000000 	andeq	r0, r0, r0
   17d2c:	00000000 	andeq	r0, r0, r0
   17d30:	00000000 	andeq	r0, r0, r0
   17d34:	00000000 	andeq	r0, r0, r0
   17d38:	00000000 	andeq	r0, r0, r0
   17d3c:	00000000 	andeq	r0, r0, r0
   17d40:	00000000 	andeq	r0, r0, r0
   17d44:	00000000 	andeq	r0, r0, r0
   17d48:	00000000 	andeq	r0, r0, r0
   17d4c:	00000000 	andeq	r0, r0, r0
   17d50:	00000000 	andeq	r0, r0, r0
   17d54:	00000000 	andeq	r0, r0, r0
   17d58:	00000000 	andeq	r0, r0, r0
   17d5c:	00000000 	andeq	r0, r0, r0
   17d60:	00000000 	andeq	r0, r0, r0
   17d64:	00000000 	andeq	r0, r0, r0
   17d68:	00000000 	andeq	r0, r0, r0
   17d6c:	00000000 	andeq	r0, r0, r0
   17d70:	00000000 	andeq	r0, r0, r0
   17d74:	00000000 	andeq	r0, r0, r0
   17d78:	00000000 	andeq	r0, r0, r0
   17d7c:	00000000 	andeq	r0, r0, r0
   17d80:	00000000 	andeq	r0, r0, r0
   17d84:	00000000 	andeq	r0, r0, r0
   17d88:	00000000 	andeq	r0, r0, r0
   17d8c:	00000000 	andeq	r0, r0, r0
   17d90:	00000000 	andeq	r0, r0, r0
   17d94:	00000000 	andeq	r0, r0, r0
   17d98:	00000000 	andeq	r0, r0, r0
   17d9c:	00000000 	andeq	r0, r0, r0
   17da0:	00000000 	andeq	r0, r0, r0
   17da4:	00000000 	andeq	r0, r0, r0
   17da8:	00000000 	andeq	r0, r0, r0
   17dac:	00000000 	andeq	r0, r0, r0
   17db0:	00000000 	andeq	r0, r0, r0
   17db4:	00000000 	andeq	r0, r0, r0
   17db8:	00000000 	andeq	r0, r0, r0
   17dbc:	00000000 	andeq	r0, r0, r0
   17dc0:	00000000 	andeq	r0, r0, r0
   17dc4:	00000000 	andeq	r0, r0, r0
   17dc8:	00000000 	andeq	r0, r0, r0
   17dcc:	00000000 	andeq	r0, r0, r0
   17dd0:	00000000 	andeq	r0, r0, r0
   17dd4:	00000000 	andeq	r0, r0, r0
   17dd8:	00000000 	andeq	r0, r0, r0
   17ddc:	00000000 	andeq	r0, r0, r0
   17de0:	00000000 	andeq	r0, r0, r0
   17de4:	00000000 	andeq	r0, r0, r0
   17de8:	00000000 	andeq	r0, r0, r0
   17dec:	00000000 	andeq	r0, r0, r0
   17df0:	00000000 	andeq	r0, r0, r0
   17df4:	00000000 	andeq	r0, r0, r0
   17df8:	00000000 	andeq	r0, r0, r0
   17dfc:	00000000 	andeq	r0, r0, r0
   17e00:	00000000 	andeq	r0, r0, r0
   17e04:	00000000 	andeq	r0, r0, r0
   17e08:	00000000 	andeq	r0, r0, r0
   17e0c:	00000000 	andeq	r0, r0, r0
   17e10:	00000000 	andeq	r0, r0, r0
   17e14:	00000000 	andeq	r0, r0, r0
   17e18:	00000000 	andeq	r0, r0, r0
   17e1c:	00000000 	andeq	r0, r0, r0
   17e20:	00000000 	andeq	r0, r0, r0
   17e24:	00000000 	andeq	r0, r0, r0
   17e28:	00000000 	andeq	r0, r0, r0
   17e2c:	00000000 	andeq	r0, r0, r0
   17e30:	00000000 	andeq	r0, r0, r0
   17e34:	00000000 	andeq	r0, r0, r0
   17e38:	00000000 	andeq	r0, r0, r0
   17e3c:	00000000 	andeq	r0, r0, r0
   17e40:	00000000 	andeq	r0, r0, r0
   17e44:	00000000 	andeq	r0, r0, r0
   17e48:	00000000 	andeq	r0, r0, r0
   17e4c:	00000000 	andeq	r0, r0, r0
   17e50:	00000000 	andeq	r0, r0, r0
   17e54:	00000000 	andeq	r0, r0, r0
   17e58:	00000000 	andeq	r0, r0, r0
   17e5c:	00000000 	andeq	r0, r0, r0
   17e60:	00000000 	andeq	r0, r0, r0
   17e64:	00000000 	andeq	r0, r0, r0
   17e68:	00000000 	andeq	r0, r0, r0
   17e6c:	00000000 	andeq	r0, r0, r0
   17e70:	00000000 	andeq	r0, r0, r0
   17e74:	00000000 	andeq	r0, r0, r0
   17e78:	00000000 	andeq	r0, r0, r0
   17e7c:	00000000 	andeq	r0, r0, r0
   17e80:	00000000 	andeq	r0, r0, r0
   17e84:	00000000 	andeq	r0, r0, r0
   17e88:	00000000 	andeq	r0, r0, r0
   17e8c:	00000000 	andeq	r0, r0, r0
   17e90:	00000000 	andeq	r0, r0, r0
   17e94:	00000000 	andeq	r0, r0, r0
   17e98:	00000000 	andeq	r0, r0, r0
   17e9c:	00000000 	andeq	r0, r0, r0
   17ea0:	00000000 	andeq	r0, r0, r0
   17ea4:	00000000 	andeq	r0, r0, r0
   17ea8:	00000000 	andeq	r0, r0, r0
   17eac:	00000000 	andeq	r0, r0, r0
   17eb0:	00000000 	andeq	r0, r0, r0
   17eb4:	00000000 	andeq	r0, r0, r0
   17eb8:	00000000 	andeq	r0, r0, r0
   17ebc:	00000000 	andeq	r0, r0, r0
   17ec0:	00000000 	andeq	r0, r0, r0
   17ec4:	00000000 	andeq	r0, r0, r0
   17ec8:	00000000 	andeq	r0, r0, r0
   17ecc:	00000000 	andeq	r0, r0, r0
   17ed0:	00000000 	andeq	r0, r0, r0
   17ed4:	00000000 	andeq	r0, r0, r0
   17ed8:	00000000 	andeq	r0, r0, r0
   17edc:	00000000 	andeq	r0, r0, r0
   17ee0:	00000000 	andeq	r0, r0, r0
   17ee4:	00000000 	andeq	r0, r0, r0
   17ee8:	00000000 	andeq	r0, r0, r0
   17eec:	00000000 	andeq	r0, r0, r0
   17ef0:	00000000 	andeq	r0, r0, r0
   17ef4:	00000000 	andeq	r0, r0, r0
   17ef8:	00000000 	andeq	r0, r0, r0
   17efc:	00000000 	andeq	r0, r0, r0
   17f00:	00000000 	andeq	r0, r0, r0
   17f04:	00000000 	andeq	r0, r0, r0
   17f08:	00000000 	andeq	r0, r0, r0
   17f0c:	00000000 	andeq	r0, r0, r0
   17f10:	00000000 	andeq	r0, r0, r0
   17f14:	00000000 	andeq	r0, r0, r0
   17f18:	00000000 	andeq	r0, r0, r0
   17f1c:	00000000 	andeq	r0, r0, r0
   17f20:	00000000 	andeq	r0, r0, r0
   17f24:	00000000 	andeq	r0, r0, r0
   17f28:	00000000 	andeq	r0, r0, r0
   17f2c:	00000000 	andeq	r0, r0, r0
   17f30:	00000000 	andeq	r0, r0, r0
   17f34:	00000000 	andeq	r0, r0, r0
   17f38:	00000000 	andeq	r0, r0, r0
   17f3c:	00000000 	andeq	r0, r0, r0
   17f40:	00000000 	andeq	r0, r0, r0
   17f44:	00000000 	andeq	r0, r0, r0
   17f48:	00000000 	andeq	r0, r0, r0
   17f4c:	00000000 	andeq	r0, r0, r0
   17f50:	00000000 	andeq	r0, r0, r0
   17f54:	00000000 	andeq	r0, r0, r0
   17f58:	00000000 	andeq	r0, r0, r0
   17f5c:	00000000 	andeq	r0, r0, r0
   17f60:	00000000 	andeq	r0, r0, r0
   17f64:	00000000 	andeq	r0, r0, r0
   17f68:	00000000 	andeq	r0, r0, r0
   17f6c:	00000000 	andeq	r0, r0, r0
   17f70:	00000000 	andeq	r0, r0, r0
   17f74:	00000000 	andeq	r0, r0, r0
   17f78:	00000000 	andeq	r0, r0, r0
   17f7c:	00000000 	andeq	r0, r0, r0
   17f80:	00000000 	andeq	r0, r0, r0
   17f84:	00000000 	andeq	r0, r0, r0
   17f88:	00000000 	andeq	r0, r0, r0
   17f8c:	00000000 	andeq	r0, r0, r0
   17f90:	00000000 	andeq	r0, r0, r0
   17f94:	00000000 	andeq	r0, r0, r0
   17f98:	00000000 	andeq	r0, r0, r0
   17f9c:	00000000 	andeq	r0, r0, r0
   17fa0:	00000000 	andeq	r0, r0, r0
   17fa4:	00000000 	andeq	r0, r0, r0
   17fa8:	00000000 	andeq	r0, r0, r0
   17fac:	00000000 	andeq	r0, r0, r0
   17fb0:	00000000 	andeq	r0, r0, r0
   17fb4:	00000000 	andeq	r0, r0, r0
   17fb8:	00000000 	andeq	r0, r0, r0
   17fbc:	00000000 	andeq	r0, r0, r0
   17fc0:	00000000 	andeq	r0, r0, r0
   17fc4:	00000000 	andeq	r0, r0, r0
   17fc8:	00000000 	andeq	r0, r0, r0
   17fcc:	00000000 	andeq	r0, r0, r0
   17fd0:	00000000 	andeq	r0, r0, r0
   17fd4:	00000000 	andeq	r0, r0, r0
   17fd8:	00000000 	andeq	r0, r0, r0
   17fdc:	00000000 	andeq	r0, r0, r0
   17fe0:	00000000 	andeq	r0, r0, r0
   17fe4:	00000000 	andeq	r0, r0, r0
   17fe8:	00000000 	andeq	r0, r0, r0
   17fec:	00000000 	andeq	r0, r0, r0
   17ff0:	00000000 	andeq	r0, r0, r0
   17ff4:	00000000 	andeq	r0, r0, r0
   17ff8:	00000000 	andeq	r0, r0, r0
   17ffc:	00000000 	andeq	r0, r0, r0
   18000:	00000000 	andeq	r0, r0, r0
   18004:	00000000 	andeq	r0, r0, r0
   18008:	00000000 	andeq	r0, r0, r0
   1800c:	00000000 	andeq	r0, r0, r0
   18010:	00000000 	andeq	r0, r0, r0
   18014:	00000000 	andeq	r0, r0, r0
   18018:	00000000 	andeq	r0, r0, r0
   1801c:	00000000 	andeq	r0, r0, r0
   18020:	00000000 	andeq	r0, r0, r0
   18024:	00000000 	andeq	r0, r0, r0
   18028:	00000000 	andeq	r0, r0, r0
   1802c:	00000000 	andeq	r0, r0, r0
   18030:	00000000 	andeq	r0, r0, r0
   18034:	00000000 	andeq	r0, r0, r0
   18038:	00000000 	andeq	r0, r0, r0
   1803c:	00000000 	andeq	r0, r0, r0
   18040:	00000000 	andeq	r0, r0, r0
   18044:	00000000 	andeq	r0, r0, r0
   18048:	00000000 	andeq	r0, r0, r0
   1804c:	00000000 	andeq	r0, r0, r0
   18050:	00000000 	andeq	r0, r0, r0
   18054:	00000000 	andeq	r0, r0, r0
   18058:	00000000 	andeq	r0, r0, r0
   1805c:	00000000 	andeq	r0, r0, r0
   18060:	00000000 	andeq	r0, r0, r0
   18064:	00000000 	andeq	r0, r0, r0
   18068:	00000000 	andeq	r0, r0, r0
   1806c:	00000000 	andeq	r0, r0, r0
   18070:	00000000 	andeq	r0, r0, r0
   18074:	00000000 	andeq	r0, r0, r0
   18078:	00000000 	andeq	r0, r0, r0
   1807c:	00000000 	andeq	r0, r0, r0
   18080:	00000000 	andeq	r0, r0, r0
   18084:	00000000 	andeq	r0, r0, r0
   18088:	00000000 	andeq	r0, r0, r0
   1808c:	00000000 	andeq	r0, r0, r0
   18090:	00000000 	andeq	r0, r0, r0
   18094:	00000000 	andeq	r0, r0, r0
   18098:	00000000 	andeq	r0, r0, r0
   1809c:	00000000 	andeq	r0, r0, r0
   180a0:	00000000 	andeq	r0, r0, r0
   180a4:	00000000 	andeq	r0, r0, r0
   180a8:	00000000 	andeq	r0, r0, r0
   180ac:	00000000 	andeq	r0, r0, r0
   180b0:	00000000 	andeq	r0, r0, r0
   180b4:	00000000 	andeq	r0, r0, r0
   180b8:	00000000 	andeq	r0, r0, r0
   180bc:	00000000 	andeq	r0, r0, r0
   180c0:	00000000 	andeq	r0, r0, r0
   180c4:	00000000 	andeq	r0, r0, r0
   180c8:	00000000 	andeq	r0, r0, r0
   180cc:	00000000 	andeq	r0, r0, r0
   180d0:	00000000 	andeq	r0, r0, r0
   180d4:	00000000 	andeq	r0, r0, r0
   180d8:	00000000 	andeq	r0, r0, r0
   180dc:	00000000 	andeq	r0, r0, r0
   180e0:	00000000 	andeq	r0, r0, r0
   180e4:	00000000 	andeq	r0, r0, r0
   180e8:	00000000 	andeq	r0, r0, r0
   180ec:	00000000 	andeq	r0, r0, r0
   180f0:	00000000 	andeq	r0, r0, r0
   180f4:	00000000 	andeq	r0, r0, r0
   180f8:	00000000 	andeq	r0, r0, r0
   180fc:	00000000 	andeq	r0, r0, r0
   18100:	00000000 	andeq	r0, r0, r0
   18104:	00000000 	andeq	r0, r0, r0
   18108:	00000000 	andeq	r0, r0, r0
   1810c:	00000000 	andeq	r0, r0, r0
   18110:	00000000 	andeq	r0, r0, r0
   18114:	00000000 	andeq	r0, r0, r0
   18118:	00000000 	andeq	r0, r0, r0
   1811c:	00000000 	andeq	r0, r0, r0
   18120:	00000000 	andeq	r0, r0, r0
   18124:	00000000 	andeq	r0, r0, r0
   18128:	00000000 	andeq	r0, r0, r0
   1812c:	00000000 	andeq	r0, r0, r0
   18130:	00000000 	andeq	r0, r0, r0
   18134:	00000000 	andeq	r0, r0, r0
   18138:	00000000 	andeq	r0, r0, r0
   1813c:	00000000 	andeq	r0, r0, r0
   18140:	00000000 	andeq	r0, r0, r0
   18144:	00000000 	andeq	r0, r0, r0
   18148:	00000000 	andeq	r0, r0, r0
   1814c:	00000000 	andeq	r0, r0, r0
   18150:	00000000 	andeq	r0, r0, r0
   18154:	00000000 	andeq	r0, r0, r0
   18158:	00000000 	andeq	r0, r0, r0
   1815c:	00000000 	andeq	r0, r0, r0
   18160:	00000000 	andeq	r0, r0, r0
   18164:	00000000 	andeq	r0, r0, r0
   18168:	00000000 	andeq	r0, r0, r0
   1816c:	00000000 	andeq	r0, r0, r0
   18170:	00000000 	andeq	r0, r0, r0
   18174:	00000000 	andeq	r0, r0, r0
   18178:	00000000 	andeq	r0, r0, r0
   1817c:	00000000 	andeq	r0, r0, r0
   18180:	00000000 	andeq	r0, r0, r0
   18184:	00000000 	andeq	r0, r0, r0
   18188:	00000000 	andeq	r0, r0, r0
   1818c:	00000000 	andeq	r0, r0, r0
   18190:	00000000 	andeq	r0, r0, r0
   18194:	00000000 	andeq	r0, r0, r0
   18198:	00000000 	andeq	r0, r0, r0
   1819c:	00000000 	andeq	r0, r0, r0
   181a0:	00000000 	andeq	r0, r0, r0
   181a4:	00000000 	andeq	r0, r0, r0
   181a8:	00000000 	andeq	r0, r0, r0
   181ac:	00000000 	andeq	r0, r0, r0
   181b0:	00000000 	andeq	r0, r0, r0
   181b4:	00000000 	andeq	r0, r0, r0
   181b8:	00000000 	andeq	r0, r0, r0
   181bc:	00000000 	andeq	r0, r0, r0
   181c0:	00000000 	andeq	r0, r0, r0
   181c4:	00000000 	andeq	r0, r0, r0
   181c8:	00000000 	andeq	r0, r0, r0
   181cc:	00000000 	andeq	r0, r0, r0
   181d0:	00000000 	andeq	r0, r0, r0
   181d4:	00000000 	andeq	r0, r0, r0
   181d8:	00000000 	andeq	r0, r0, r0
   181dc:	00000000 	andeq	r0, r0, r0
   181e0:	00000000 	andeq	r0, r0, r0
   181e4:	00000000 	andeq	r0, r0, r0
   181e8:	00000000 	andeq	r0, r0, r0
   181ec:	00000000 	andeq	r0, r0, r0
   181f0:	00000000 	andeq	r0, r0, r0
   181f4:	00000000 	andeq	r0, r0, r0
   181f8:	00000000 	andeq	r0, r0, r0
   181fc:	00000000 	andeq	r0, r0, r0
   18200:	00000000 	andeq	r0, r0, r0
   18204:	00000000 	andeq	r0, r0, r0
   18208:	00000000 	andeq	r0, r0, r0
   1820c:	00000000 	andeq	r0, r0, r0
   18210:	00000000 	andeq	r0, r0, r0
   18214:	00000000 	andeq	r0, r0, r0
   18218:	00000000 	andeq	r0, r0, r0
   1821c:	00000000 	andeq	r0, r0, r0
   18220:	00000000 	andeq	r0, r0, r0
   18224:	00000000 	andeq	r0, r0, r0
   18228:	00000000 	andeq	r0, r0, r0
   1822c:	00000000 	andeq	r0, r0, r0
   18230:	00000000 	andeq	r0, r0, r0
   18234:	00000000 	andeq	r0, r0, r0
   18238:	00000000 	andeq	r0, r0, r0
   1823c:	00000000 	andeq	r0, r0, r0
   18240:	00000000 	andeq	r0, r0, r0
   18244:	00000000 	andeq	r0, r0, r0
   18248:	00000000 	andeq	r0, r0, r0
   1824c:	00000000 	andeq	r0, r0, r0
   18250:	00000000 	andeq	r0, r0, r0
   18254:	00000000 	andeq	r0, r0, r0
   18258:	00000000 	andeq	r0, r0, r0
   1825c:	00000000 	andeq	r0, r0, r0
   18260:	00000000 	andeq	r0, r0, r0
   18264:	00000000 	andeq	r0, r0, r0
   18268:	00000000 	andeq	r0, r0, r0
   1826c:	00000000 	andeq	r0, r0, r0
   18270:	00000000 	andeq	r0, r0, r0
   18274:	00000000 	andeq	r0, r0, r0
   18278:	00000000 	andeq	r0, r0, r0
   1827c:	00000000 	andeq	r0, r0, r0
   18280:	00000000 	andeq	r0, r0, r0
   18284:	00000000 	andeq	r0, r0, r0
   18288:	00000000 	andeq	r0, r0, r0
   1828c:	00000000 	andeq	r0, r0, r0
   18290:	00000000 	andeq	r0, r0, r0
   18294:	00000000 	andeq	r0, r0, r0
   18298:	00000000 	andeq	r0, r0, r0
   1829c:	00000000 	andeq	r0, r0, r0
   182a0:	00000000 	andeq	r0, r0, r0
   182a4:	00000000 	andeq	r0, r0, r0
   182a8:	00000000 	andeq	r0, r0, r0
   182ac:	00000000 	andeq	r0, r0, r0
   182b0:	00000000 	andeq	r0, r0, r0
   182b4:	00000000 	andeq	r0, r0, r0
   182b8:	00000000 	andeq	r0, r0, r0
   182bc:	00000000 	andeq	r0, r0, r0
   182c0:	00000000 	andeq	r0, r0, r0
   182c4:	00000000 	andeq	r0, r0, r0
   182c8:	00000000 	andeq	r0, r0, r0
   182cc:	00000000 	andeq	r0, r0, r0
   182d0:	00000000 	andeq	r0, r0, r0
   182d4:	00000000 	andeq	r0, r0, r0
   182d8:	00000000 	andeq	r0, r0, r0
   182dc:	00000000 	andeq	r0, r0, r0
   182e0:	00000000 	andeq	r0, r0, r0
   182e4:	00000000 	andeq	r0, r0, r0
   182e8:	00000000 	andeq	r0, r0, r0
   182ec:	00000000 	andeq	r0, r0, r0
   182f0:	00000000 	andeq	r0, r0, r0
   182f4:	00000000 	andeq	r0, r0, r0
   182f8:	00000000 	andeq	r0, r0, r0
   182fc:	00000000 	andeq	r0, r0, r0
   18300:	00000000 	andeq	r0, r0, r0
   18304:	00000000 	andeq	r0, r0, r0
   18308:	00000000 	andeq	r0, r0, r0
   1830c:	00000000 	andeq	r0, r0, r0
   18310:	00000000 	andeq	r0, r0, r0
   18314:	00000000 	andeq	r0, r0, r0
   18318:	00000000 	andeq	r0, r0, r0
   1831c:	00000000 	andeq	r0, r0, r0
   18320:	00000000 	andeq	r0, r0, r0
   18324:	00000000 	andeq	r0, r0, r0
   18328:	00000000 	andeq	r0, r0, r0
   1832c:	00000000 	andeq	r0, r0, r0
   18330:	00000000 	andeq	r0, r0, r0
   18334:	00000000 	andeq	r0, r0, r0
   18338:	00000000 	andeq	r0, r0, r0
   1833c:	00000000 	andeq	r0, r0, r0
   18340:	00000000 	andeq	r0, r0, r0
   18344:	00000000 	andeq	r0, r0, r0
   18348:	00000000 	andeq	r0, r0, r0
   1834c:	00000000 	andeq	r0, r0, r0
   18350:	00000000 	andeq	r0, r0, r0
   18354:	00000000 	andeq	r0, r0, r0
   18358:	00000000 	andeq	r0, r0, r0
   1835c:	00000000 	andeq	r0, r0, r0
   18360:	00000000 	andeq	r0, r0, r0
   18364:	00000000 	andeq	r0, r0, r0
   18368:	00000000 	andeq	r0, r0, r0
   1836c:	00000000 	andeq	r0, r0, r0
   18370:	00000000 	andeq	r0, r0, r0
   18374:	00000000 	andeq	r0, r0, r0
   18378:	00000000 	andeq	r0, r0, r0
   1837c:	00000000 	andeq	r0, r0, r0
   18380:	00000000 	andeq	r0, r0, r0
   18384:	00000000 	andeq	r0, r0, r0
   18388:	00000000 	andeq	r0, r0, r0
   1838c:	00000000 	andeq	r0, r0, r0
   18390:	00000000 	andeq	r0, r0, r0
   18394:	00000000 	andeq	r0, r0, r0
   18398:	00000000 	andeq	r0, r0, r0
   1839c:	00000000 	andeq	r0, r0, r0
   183a0:	00000000 	andeq	r0, r0, r0
   183a4:	00000000 	andeq	r0, r0, r0
   183a8:	00000000 	andeq	r0, r0, r0
   183ac:	00000000 	andeq	r0, r0, r0
   183b0:	00000000 	andeq	r0, r0, r0
   183b4:	00000000 	andeq	r0, r0, r0
   183b8:	00000000 	andeq	r0, r0, r0
   183bc:	00000000 	andeq	r0, r0, r0
   183c0:	00000000 	andeq	r0, r0, r0
   183c4:	00000000 	andeq	r0, r0, r0
   183c8:	00000000 	andeq	r0, r0, r0
   183cc:	00000000 	andeq	r0, r0, r0
   183d0:	00000000 	andeq	r0, r0, r0
   183d4:	00000000 	andeq	r0, r0, r0
   183d8:	00000000 	andeq	r0, r0, r0
   183dc:	00000000 	andeq	r0, r0, r0
   183e0:	00000000 	andeq	r0, r0, r0
   183e4:	00000000 	andeq	r0, r0, r0
   183e8:	00000000 	andeq	r0, r0, r0
   183ec:	00000000 	andeq	r0, r0, r0
   183f0:	00000000 	andeq	r0, r0, r0
   183f4:	00000000 	andeq	r0, r0, r0
   183f8:	00000000 	andeq	r0, r0, r0
   183fc:	00000000 	andeq	r0, r0, r0
   18400:	00000000 	andeq	r0, r0, r0
   18404:	00000000 	andeq	r0, r0, r0
   18408:	00000000 	andeq	r0, r0, r0
   1840c:	00000000 	andeq	r0, r0, r0
   18410:	00000000 	andeq	r0, r0, r0
   18414:	00000000 	andeq	r0, r0, r0
   18418:	00000000 	andeq	r0, r0, r0
   1841c:	00000000 	andeq	r0, r0, r0
   18420:	00000000 	andeq	r0, r0, r0
   18424:	00000000 	andeq	r0, r0, r0
   18428:	00000000 	andeq	r0, r0, r0
   1842c:	00000000 	andeq	r0, r0, r0
   18430:	00000000 	andeq	r0, r0, r0
   18434:	00000000 	andeq	r0, r0, r0
   18438:	00000000 	andeq	r0, r0, r0
   1843c:	00000000 	andeq	r0, r0, r0
   18440:	00000000 	andeq	r0, r0, r0
   18444:	00000000 	andeq	r0, r0, r0
   18448:	00000000 	andeq	r0, r0, r0
   1844c:	00000000 	andeq	r0, r0, r0
   18450:	00000000 	andeq	r0, r0, r0
   18454:	00000000 	andeq	r0, r0, r0
   18458:	00000000 	andeq	r0, r0, r0
   1845c:	00000000 	andeq	r0, r0, r0
   18460:	00000000 	andeq	r0, r0, r0
   18464:	00000000 	andeq	r0, r0, r0
   18468:	00000000 	andeq	r0, r0, r0
   1846c:	00000000 	andeq	r0, r0, r0
   18470:	00000000 	andeq	r0, r0, r0
   18474:	00000000 	andeq	r0, r0, r0
   18478:	00000000 	andeq	r0, r0, r0
   1847c:	00000000 	andeq	r0, r0, r0
   18480:	00000000 	andeq	r0, r0, r0
   18484:	00000000 	andeq	r0, r0, r0
   18488:	00000000 	andeq	r0, r0, r0
   1848c:	00000000 	andeq	r0, r0, r0
   18490:	00000000 	andeq	r0, r0, r0
   18494:	00000000 	andeq	r0, r0, r0
   18498:	00000000 	andeq	r0, r0, r0
   1849c:	00000000 	andeq	r0, r0, r0
   184a0:	00000000 	andeq	r0, r0, r0
   184a4:	00000000 	andeq	r0, r0, r0
   184a8:	00000000 	andeq	r0, r0, r0
   184ac:	00000000 	andeq	r0, r0, r0
   184b0:	00000000 	andeq	r0, r0, r0
   184b4:	00000000 	andeq	r0, r0, r0
   184b8:	00000000 	andeq	r0, r0, r0
   184bc:	00000000 	andeq	r0, r0, r0
   184c0:	00000000 	andeq	r0, r0, r0
   184c4:	00000000 	andeq	r0, r0, r0
   184c8:	00000000 	andeq	r0, r0, r0
   184cc:	00000000 	andeq	r0, r0, r0
   184d0:	00000000 	andeq	r0, r0, r0
   184d4:	00000000 	andeq	r0, r0, r0
   184d8:	00000000 	andeq	r0, r0, r0
   184dc:	00000000 	andeq	r0, r0, r0
   184e0:	00000000 	andeq	r0, r0, r0
   184e4:	00000000 	andeq	r0, r0, r0
   184e8:	00000000 	andeq	r0, r0, r0
   184ec:	00000000 	andeq	r0, r0, r0
   184f0:	00000000 	andeq	r0, r0, r0
   184f4:	00000000 	andeq	r0, r0, r0
   184f8:	00000000 	andeq	r0, r0, r0
   184fc:	00000000 	andeq	r0, r0, r0
   18500:	00000000 	andeq	r0, r0, r0
   18504:	00000000 	andeq	r0, r0, r0
   18508:	00000000 	andeq	r0, r0, r0
   1850c:	00000000 	andeq	r0, r0, r0
   18510:	00000000 	andeq	r0, r0, r0
   18514:	00000000 	andeq	r0, r0, r0
   18518:	00000000 	andeq	r0, r0, r0
   1851c:	00000000 	andeq	r0, r0, r0
   18520:	00000000 	andeq	r0, r0, r0
   18524:	00000000 	andeq	r0, r0, r0
   18528:	00000000 	andeq	r0, r0, r0
   1852c:	00000000 	andeq	r0, r0, r0
   18530:	00000000 	andeq	r0, r0, r0
   18534:	00000000 	andeq	r0, r0, r0
   18538:	00000000 	andeq	r0, r0, r0
   1853c:	00000000 	andeq	r0, r0, r0
   18540:	00000000 	andeq	r0, r0, r0
   18544:	00000000 	andeq	r0, r0, r0
   18548:	00000000 	andeq	r0, r0, r0
   1854c:	00000000 	andeq	r0, r0, r0
   18550:	00000000 	andeq	r0, r0, r0
   18554:	00000000 	andeq	r0, r0, r0
   18558:	00000000 	andeq	r0, r0, r0
   1855c:	00000000 	andeq	r0, r0, r0
   18560:	00000000 	andeq	r0, r0, r0
   18564:	00000000 	andeq	r0, r0, r0
   18568:	00000000 	andeq	r0, r0, r0
   1856c:	00000000 	andeq	r0, r0, r0
   18570:	00000000 	andeq	r0, r0, r0
   18574:	00000000 	andeq	r0, r0, r0
   18578:	00000000 	andeq	r0, r0, r0
   1857c:	00000000 	andeq	r0, r0, r0
   18580:	00000000 	andeq	r0, r0, r0
   18584:	00000000 	andeq	r0, r0, r0
   18588:	00000000 	andeq	r0, r0, r0
   1858c:	00000000 	andeq	r0, r0, r0
   18590:	00000000 	andeq	r0, r0, r0
   18594:	00000000 	andeq	r0, r0, r0
   18598:	00000000 	andeq	r0, r0, r0
   1859c:	00000000 	andeq	r0, r0, r0
   185a0:	00000000 	andeq	r0, r0, r0
   185a4:	00000000 	andeq	r0, r0, r0
   185a8:	00000000 	andeq	r0, r0, r0
   185ac:	00000000 	andeq	r0, r0, r0
   185b0:	00000000 	andeq	r0, r0, r0
   185b4:	00000000 	andeq	r0, r0, r0
   185b8:	00000000 	andeq	r0, r0, r0
   185bc:	00000000 	andeq	r0, r0, r0
   185c0:	00000000 	andeq	r0, r0, r0
   185c4:	00000000 	andeq	r0, r0, r0
   185c8:	00000000 	andeq	r0, r0, r0
   185cc:	00000000 	andeq	r0, r0, r0
   185d0:	00000000 	andeq	r0, r0, r0
   185d4:	00000000 	andeq	r0, r0, r0
   185d8:	00000000 	andeq	r0, r0, r0
   185dc:	00000000 	andeq	r0, r0, r0
   185e0:	00000000 	andeq	r0, r0, r0
   185e4:	00000000 	andeq	r0, r0, r0
   185e8:	00000000 	andeq	r0, r0, r0
   185ec:	00000000 	andeq	r0, r0, r0
   185f0:	00000000 	andeq	r0, r0, r0
   185f4:	00000000 	andeq	r0, r0, r0
   185f8:	00000000 	andeq	r0, r0, r0
   185fc:	00000000 	andeq	r0, r0, r0

00018600 <rack::settings::moduleWhitelist[abi:cxx11]>:
   18600:	00000000 	andeq	r0, r0, r0
   18604:	00000000 	andeq	r0, r0, r0
   18608:	00000000 	andeq	r0, r0, r0
   1860c:	00000000 	andeq	r0, r0, r0
   18610:	00000000 	andeq	r0, r0, r0
   18614:	00000000 	andeq	r0, r0, r0

00018618 <rack::settings::moduleInfos[abi:cxx11]>:
	static inline std::map<std::string, std::map<std::string, ModuleInfo>> moduleInfos;
   18618:	00000000 	andeq	r0, r0, r0
   1861c:	00000000 	andeq	r0, r0, r0
   18620:	00000000 	andeq	r0, r0, r0
   18624:	00000000 	andeq	r0, r0, r0
   18628:	00000000 	andeq	r0, r0, r0
   1862c:	00000000 	andeq	r0, r0, r0

00018630 <rack::settings::cableColors>:
	static inline std::vector<NVGcolor> cableColors;
   18630:	00000000 	andeq	r0, r0, r0
   18634:	00000000 	andeq	r0, r0, r0
   18638:	00000000 	andeq	r0, r0, r0

0001863c <rack::settings::recentPatchPaths[abi:cxx11]>:
	static inline std::list<std::string> recentPatchPaths;
   1863c:	00000000 	andeq	r0, r0, r0
   18640:	00000000 	andeq	r0, r0, r0
   18644:	00000000 	andeq	r0, r0, r0

00018648 <rack::settings::uiTheme[abi:cxx11]>:
	static inline std::string uiTheme;
   18648:	00000000 	andeq	r0, r0, r0
   1864c:	00000000 	andeq	r0, r0, r0
   18650:	00000000 	andeq	r0, r0, r0
   18654:	00000000 	andeq	r0, r0, r0
   18658:	00000000 	andeq	r0, r0, r0
   1865c:	00000000 	andeq	r0, r0, r0

00018660 <rack::settings::token[abi:cxx11]>:
	static inline std::string token;
   18660:	00000000 	andeq	r0, r0, r0
   18664:	00000000 	andeq	r0, r0, r0
   18668:	00000000 	andeq	r0, r0, r0
   1866c:	00000000 	andeq	r0, r0, r0
   18670:	00000000 	andeq	r0, r0, r0
   18674:	00000000 	andeq	r0, r0, r0

00018678 <pluginInstance>:
Plugin *pluginInstance;
   18678:	00000000 	andeq	r0, r0, r0

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_stack+0x1050d24>
   4:	72412820 	subvc	r2, r1, #32, 16	@ 0x200000
   8:	4e47206d 	cdpmi	0, 4, cr2, cr7, cr13, {3}
   c:	6f542055 	svcvs	0x00542055
  10:	68636c6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^
  14:	206e6961 	rsbcs	r6, lr, r1, ror #18
  18:	332e3231 			@ <UNDEFINED> instruction: 0x332e3231
  1c:	6c65522e 	sfmvs	f5, 2, [r5], #-184	@ 0xffffff48
  20:	42282031 	eormi	r2, r8, #49	@ 0x31
  24:	646c6975 	strbtvs	r6, [ip], #-2421	@ 0xfffff68b
  28:	6d726120 	ldfvse	f6, [r2, #-128]!	@ 0xffffff80
  2c:	2e32312d 	rsfcssp	f3, f2, #5.0
  30:	29293533 	stmdbcs	r9!, {r0, r1, r4, r5, r8, sl, ip, sp}
  34:	2e323120 	rsfcssp	f3, f2, f0
  38:	20312e33 	eorscs	r2, r1, r3, lsr lr
  3c:	33323032 	teqcc	r2, #50	@ 0x32
  40:	36323630 			@ <UNDEFINED> instruction: 0x36323630
  44:	Address 0x44 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000284 	andeq	r0, r0, r4, lsl #5
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	00003a1c 	andeq	r3, r0, ip, lsl sl
  14:	00000004 	andeq	r0, r0, r4
  18:	00003a20 	andeq	r3, r0, r0, lsr #20
  1c:	00000004 	andeq	r0, r0, r4
  20:	00003a24 	andeq	r3, r0, r4, lsr #20
  24:	00000004 	andeq	r0, r0, r4
  28:	00003a28 	andeq	r3, r0, r8, lsr #20
  2c:	00000004 	andeq	r0, r0, r4
  30:	00003a2c 	andeq	r3, r0, ip, lsr #20
  34:	00000004 	andeq	r0, r0, r4
  38:	00003a30 	andeq	r3, r0, r0, lsr sl
  3c:	00000004 	andeq	r0, r0, r4
  40:	00003a34 	andeq	r3, r0, r4, lsr sl
  44:	00000004 	andeq	r0, r0, r4
  48:	00003a38 	andeq	r3, r0, r8, lsr sl
  4c:	00000004 	andeq	r0, r0, r4
  50:	00003a3c 	andeq	r3, r0, ip, lsr sl
  54:	00000004 	andeq	r0, r0, r4
  58:	00003a40 	andeq	r3, r0, r0, asr #20
  5c:	00000004 	andeq	r0, r0, r4
  60:	00003a44 	andeq	r3, r0, r4, asr #20
  64:	00000004 	andeq	r0, r0, r4
  68:	00003a48 	andeq	r3, r0, r8, asr #20
  6c:	00000004 	andeq	r0, r0, r4
  70:	00003a4c 	andeq	r3, r0, ip, asr #20
  74:	00000004 	andeq	r0, r0, r4
  78:	00003a50 	andeq	r3, r0, r0, asr sl
  7c:	00000004 	andeq	r0, r0, r4
  80:	00003a54 	andeq	r3, r0, r4, asr sl
  84:	0000001c 	andeq	r0, r0, ip, lsl r0
  88:	00003a70 	andeq	r3, r0, r0, ror sl
  8c:	00000004 	andeq	r0, r0, r4
  90:	00003a74 	andeq	r3, r0, r4, ror sl
  94:	00000008 	andeq	r0, r0, r8
  98:	00003a7c 	andeq	r3, r0, ip, ror sl
  9c:	00000004 	andeq	r0, r0, r4
  a0:	00003a80 	andeq	r3, r0, r0, lsl #21
  a4:	00000008 	andeq	r0, r0, r8
  a8:	00003a88 	andeq	r3, r0, r8, lsl #21
  ac:	00000004 	andeq	r0, r0, r4
  b0:	00003a8c 	andeq	r3, r0, ip, lsl #21
  b4:	00000008 	andeq	r0, r0, r8
  b8:	00003a94 	muleq	r0, r4, sl
  bc:	00000004 	andeq	r0, r0, r4
  c0:	00003a98 	muleq	r0, r8, sl
  c4:	00000004 	andeq	r0, r0, r4
  c8:	00003a9c 	muleq	r0, ip, sl
  cc:	00000004 	andeq	r0, r0, r4
  d0:	00003aa0 	andeq	r3, r0, r0, lsr #21
  d4:	00000004 	andeq	r0, r0, r4
  d8:	00003aa4 	andeq	r3, r0, r4, lsr #21
  dc:	00000004 	andeq	r0, r0, r4
  e0:	00003aa8 	andeq	r3, r0, r8, lsr #21
  e4:	00000004 	andeq	r0, r0, r4
  e8:	00003aac 	andeq	r3, r0, ip, lsr #21
  ec:	00000004 	andeq	r0, r0, r4
  f0:	00003ab0 			@ <UNDEFINED> instruction: 0x00003ab0
  f4:	00000014 	andeq	r0, r0, r4, lsl r0
  f8:	00003ac4 	andeq	r3, r0, r4, asr #21
  fc:	00000030 	andeq	r0, r0, r0, lsr r0
 100:	00003af4 	strdeq	r3, [r0], -r4
 104:	00000004 	andeq	r0, r0, r4
 108:	00003af8 	strdeq	r3, [r0], -r8
 10c:	00000004 	andeq	r0, r0, r4
 110:	00003afc 	strdeq	r3, [r0], -ip
 114:	00000004 	andeq	r0, r0, r4
 118:	00003b00 	andeq	r3, r0, r0, lsl #22
 11c:	00000004 	andeq	r0, r0, r4
 120:	00003b04 	andeq	r3, r0, r4, lsl #22
 124:	00000004 	andeq	r0, r0, r4
 128:	00003b08 	andeq	r3, r0, r8, lsl #22
 12c:	00000004 	andeq	r0, r0, r4
 130:	00003b0c 	andeq	r3, r0, ip, lsl #22
 134:	00000004 	andeq	r0, r0, r4
 138:	00003b10 	andeq	r3, r0, r0, lsl fp
 13c:	00000004 	andeq	r0, r0, r4
 140:	00003b14 	andeq	r3, r0, r4, lsl fp
 144:	00000004 	andeq	r0, r0, r4
 148:	00003b18 	andeq	r3, r0, r8, lsl fp
 14c:	00000004 	andeq	r0, r0, r4
 150:	00003b1c 	andeq	r3, r0, ip, lsl fp
 154:	00000004 	andeq	r0, r0, r4
 158:	00003b20 	andeq	r3, r0, r0, lsr #22
 15c:	00000004 	andeq	r0, r0, r4
 160:	00003b24 	andeq	r3, r0, r4, lsr #22
 164:	00000018 	andeq	r0, r0, r8, lsl r0
 168:	00003b3c 	andeq	r3, r0, ip, lsr fp
 16c:	00000028 	andeq	r0, r0, r8, lsr #32
 170:	00003b64 	andeq	r3, r0, r4, ror #22
 174:	0000002c 	andeq	r0, r0, ip, lsr #32
 178:	00003b90 	muleq	r0, r0, fp
 17c:	00000028 	andeq	r0, r0, r8, lsr #32
 180:	00003bb8 			@ <UNDEFINED> instruction: 0x00003bb8
 184:	00000028 	andeq	r0, r0, r8, lsr #32
 188:	00003be0 	andeq	r3, r0, r0, ror #23
 18c:	00000064 	andeq	r0, r0, r4, rrx
 190:	00003c44 	andeq	r3, r0, r4, asr #24
 194:	00000090 	muleq	r0, r0, r0
 198:	00003cd4 	ldrdeq	r3, [r0], -r4
 19c:	00000090 	muleq	r0, r0, r0
 1a0:	00003d64 	andeq	r3, r0, r4, ror #26
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	00003d90 	muleq	r0, r0, sp
 1ac:	0000009c 	muleq	r0, ip, r0
 1b0:	00003e2c 	andeq	r3, r0, ip, lsr #28
 1b4:	0000009c 	muleq	r0, ip, r0
 1b8:	00003ec8 	andeq	r3, r0, r8, asr #29
 1bc:	00000254 	andeq	r0, r0, r4, asr r2
 1c0:	0000411c 	andeq	r4, r0, ip, lsl r1
 1c4:	00000034 	andeq	r0, r0, r4, lsr r0
 1c8:	00004150 	andeq	r4, r0, r0, asr r1
 1cc:	00000040 	andeq	r0, r0, r0, asr #32
 1d0:	00004190 	muleq	r0, r0, r1
 1d4:	00000020 	andeq	r0, r0, r0, lsr #32
 1d8:	000041b0 			@ <UNDEFINED> instruction: 0x000041b0
 1dc:	00000124 	andeq	r0, r0, r4, lsr #2
 1e0:	000042d4 	ldrdeq	r4, [r0], -r4	@ <UNPREDICTABLE>
 1e4:	00000148 	andeq	r0, r0, r8, asr #2
 1e8:	0000441c 	andeq	r4, r0, ip, lsl r4
 1ec:	00000148 	andeq	r0, r0, r8, asr #2
 1f0:	00004564 	andeq	r4, r0, r4, ror #10
 1f4:	00000124 	andeq	r0, r0, r4, lsr #2
 1f8:	00004688 	andeq	r4, r0, r8, lsl #13
 1fc:	0000012c 	andeq	r0, r0, ip, lsr #2
 200:	000047b4 			@ <UNDEFINED> instruction: 0x000047b4
 204:	0000012c 	andeq	r0, r0, ip, lsr #2
 208:	000048e0 	andeq	r4, r0, r0, ror #17
 20c:	0000012c 	andeq	r0, r0, ip, lsr #2
 210:	00004a0c 	andeq	r4, r0, ip, lsl #20
 214:	000003d0 	ldrdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 218:	00004ddc 	ldrdeq	r4, [r0], -ip
 21c:	000000c0 	andeq	r0, r0, r0, asr #1
 220:	00004e9c 	muleq	r0, ip, lr
 224:	000003bc 			@ <UNDEFINED> instruction: 0x000003bc
 228:	00005258 	andeq	r5, r0, r8, asr r2
 22c:	000001d4 	ldrdeq	r0, [r0], -r4
 230:	0000542c 	andeq	r5, r0, ip, lsr #8
 234:	00000180 	andeq	r0, r0, r0, lsl #3
 238:	000055ac 	andeq	r5, r0, ip, lsr #11
 23c:	000007d4 	ldrdeq	r0, [r0], -r4
 240:	00005d80 	andeq	r5, r0, r0, lsl #27
 244:	00000468 	andeq	r0, r0, r8, ror #8
 248:	000061e8 	andeq	r6, r0, r8, ror #3
 24c:	00000060 	andeq	r0, r0, r0, rrx
 250:	00006248 	andeq	r6, r0, r8, asr #4
 254:	0000006c 	andeq	r0, r0, ip, rrx
 258:	000062b4 			@ <UNDEFINED> instruction: 0x000062b4
 25c:	00000018 	andeq	r0, r0, r8, lsl r0
 260:	000062cc 	andeq	r6, r0, ip, asr #5
 264:	00000060 	andeq	r0, r0, r0, rrx
 268:	0000632c 	andeq	r6, r0, ip, lsr #6
 26c:	0000006c 	andeq	r0, r0, ip, rrx
 270:	00006398 	muleq	r0, r8, r3
 274:	00000018 	andeq	r0, r0, r8, lsl r0
 278:	000063b0 			@ <UNDEFINED> instruction: 0x000063b0
 27c:	00000014 	andeq	r0, r0, r4, lsl r0
 280:	00000000 	andeq	r0, r0, r0
 284:	00000000 	andeq	r0, r0, r0
 288:	00000074 	andeq	r0, r0, r4, ror r0
 28c:	14f60002 	ldrbtne	r0, [r6], #2
 290:	00040005 	andeq	r0, r4, r5
 294:	00000000 	andeq	r0, r0, r0
 298:	00003b3c 	andeq	r3, r0, ip, lsr fp
 29c:	00000028 	andeq	r0, r0, r8, lsr #32
 2a0:	000063c4 	andeq	r6, r0, r4, asr #7
 2a4:	00000434 	andeq	r0, r0, r4, lsr r4
 2a8:	00003be0 	andeq	r3, r0, r0, ror #23
 2ac:	00000064 	andeq	r0, r0, r4, rrx
 2b0:	00003d64 	andeq	r3, r0, r4, ror #26
 2b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2b8:	000067f8 	strdeq	r6, [r0], -r8
 2bc:	00000120 	andeq	r0, r0, r0, lsr #2
 2c0:	000061e8 	andeq	r6, r0, r8, ror #3
 2c4:	00000060 	andeq	r0, r0, r0, rrx
 2c8:	00006248 	andeq	r6, r0, r8, asr #4
 2cc:	0000006c 	andeq	r0, r0, ip, rrx
 2d0:	000062b4 			@ <UNDEFINED> instruction: 0x000062b4
 2d4:	00000018 	andeq	r0, r0, r8, lsl r0
 2d8:	000062cc 	andeq	r6, r0, ip, asr #5
 2dc:	00000060 	andeq	r0, r0, r0, rrx
 2e0:	0000632c 	andeq	r6, r0, ip, lsr #6
 2e4:	0000006c 	andeq	r0, r0, ip, rrx
 2e8:	00006398 	muleq	r0, r8, r3
 2ec:	00000018 	andeq	r0, r0, r8, lsl r0
 2f0:	00006918 	andeq	r6, r0, r8, lsl r9
 2f4:	00000014 	andeq	r0, r0, r4, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000000 	andeq	r0, r0, r0
 300:	00000014 	andeq	r0, r0, r4, lsl r0
 304:	47270002 	strmi	r0, [r7, -r2]!
 308:	00040007 	andeq	r0, r4, r7
 30c:	00000000 	andeq	r0, r0, r0
 310:	00000000 	andeq	r0, r0, r0
 314:	00000000 	andeq	r0, r0, r0

