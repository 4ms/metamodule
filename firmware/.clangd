Diagnostics:

    UnusedIncludes: None #too many false positives in clangd 17.0.5
      #MissingIncludes: Strict

    ClangTidy:
        Add: [modernize*, cppcoreguidelines-prefer-member-initializer, readability-suspicious-call-argument, 
              cppcoreguidelines-init-variables, cppcoreguidelines-pro-type-member-init
              ]
        Remove: [modernize-use-std-print, modernize-use-trailing-return-type, modernize-avoid-c-arrays, modernize-use-nodiscard]
        CheckOptions:
            readability-identifier-naming.VariableCase: CamelCase

CompileFlags:
	Remove: [
		"-DCORE_CM4",
		"-D__FPU_PRESENT=1",
		"-flto=*",
		"-mvectorize-with-neon-*",
		"-mthumb-interwork",
		"-ffold-simple-inlines",
        "-std=gnu++23",
        "-DSIMULATOR",
	]
	Add: [
		# "--target=arm-none-eabi", 
        "-std=c++23",
        "-I../src/console", #Needed because clangd16 infers compilation of some headers with a file from a different cmake target
        "-I../src/medium",
        "-I../lib/lvgl/lvgl",
        "-I../lib/cmsis/Core_A/Include",
        "-DSTM32MP1",
        "-DCORE_CA7",
        "-D__cpp_concepts=202002",
        "-Wno-builtin-macro-redefined",
        "-Wno-macro-redefined",
        ]
---

If:
	PathMatch: [".*tests/.*"]
CompileFlags:
	Remove: [
		"--target=arm-none-eabi", 
	]
---
If:
	PathMatch: [".*/metamodule-rack-interface/dsp/.*", ".*/metamodule-rack-interface/simd/.*"]
CompileFlags:
	Add: [
        "--include /opt/homebrew/opt/llvm/lib/clang/17/include/arm_neon.h"
	]

---
If:
	PathMatch: [".*core_m4.*"]
CompileFlags:
	Add: [
		"-DCORE_CM4",
		"-Isrc/core_m4",
		"-Ilib/mdrivlib/target/stm32mp1_cm4",
		"-Ilib/mdrivlib/target/stm32mp1_cm4/drivers",
	]
	Remove: [
		"-DCORE_CA7",
		"-Isrc/core_a7",
		"-Ilib/mdrivlib/target/stm32mp1_ca7",
		"-Ilib/mdrivlib/target/stm32mp1_ca7/drivers",
	]
---
If:
	PathMatch: .*\.c
CompileFlags:
	Remove: [
		"-std=gnu++2b", 
	]
